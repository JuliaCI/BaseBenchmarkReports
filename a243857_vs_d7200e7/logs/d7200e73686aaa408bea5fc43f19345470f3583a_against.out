cset: moving following pidspec: 27815
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.174761958 seconds)
loading group "string"... done (took 0.642391955 seconds)
loading group "linalg"... done (took 9.699767059 seconds)
loading group "parallel"... done (took 0.172130967 seconds)
loading group "find"... done (took 2.456986325 seconds)
loading group "tuple"... done (took 2.353317555 seconds)
loading group "dates"... done (took 1.429350897 seconds)
loading group "micro"... done (took 0.64609899 seconds)
loading group "io"... done (took 0.691442187 seconds)
loading group "scalar"... done (took 54.866275175 seconds)
loading group "sparse"... done (took 14.4386965 seconds)
loading group "broadcast"... done (took 1.440904461 seconds)
loading group "union"... done (took 2.790824099 seconds)
loading group "simd"... done (took 3.7737192 seconds)
loading group "random"... done (took 14.354480203 seconds)
loading group "problem"... done (took 2.285307999 seconds)
loading group "array"... done (took 23.585899087 seconds)
loading group "misc"... done (took 1.549100902 seconds)
loading group "sort"... done (took 3.722921679 seconds)
loading group "collection"... done (took 20.462492751 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.914791609 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.182450786 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.246230613 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.583501645 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.315503948 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.20665994 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.208471064 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.195709943 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.694596219 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231928865 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.198206839 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414417574 seconds)
done (took 7.198284153 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.313907795 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.094255003 seconds)
    (2/2) benchmarking "String"...
    done (took 0.254546476 seconds)
  done (took 1.011798079 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096842902 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147079667 seconds)
  done (took 0.903877092 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.137269202 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.209045019 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.152498163 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.152459192 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137791195 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.151846265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.136418255 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.152313643 seconds)
  done (took 1.751716891 seconds)
done (took 4.77917541 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.533854131 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.927469757 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.55095854 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.214034131 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.351962355 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.370155171 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320104184 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.278330785 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133184813 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114798328 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.245749477 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.551883518 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.45142626 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.063864685 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096479657 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.15681226 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.207539451 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.879858325 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.187871935 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.154727706 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.547986584 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.260429207 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.162671105 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.152876493 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.231740712 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.173051824 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17212091 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148273953 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.733077649 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.177620772 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.242651457 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.128039327 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171065468 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.209214174 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.285968139 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15723005 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.803786222 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.244214575 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127567479 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.146002226 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.844153296 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.159695098 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.25314965 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.150890627 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114735819 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197754058 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142068275 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.139075507 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.138873316 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.145256181 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.218644493 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.556697258 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149845871 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.244724975 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.151989998 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.760855273 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.139066218 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.323154921 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.182289242 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.152615288 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120144119 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.14945909 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.199928496 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137209697 seconds)
  done (took 23.526919521 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.25523525 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.253653834 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.123852203 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.208319996 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.185123681 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.122437427 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.150736766 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.124049573 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.176054371 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244126645 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.167290058 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.257546927 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.139128726 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.135898915 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.234244243 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.297864065 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.172841603 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1528033 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.152661452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.140307786 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.195006223 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.137055417 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.154294272 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.152982583 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211644372 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.24800961 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.155031027 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.168794649 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.149259623 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.142144961 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189420875 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209479432 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119542715 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.147462956 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.238938415 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.149197324 seconds)
  done (took 7.150153452 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.284718609 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.148749013 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.308677172 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.257225936 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.23248096 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.188496596 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.221099345 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.220511351 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.327989544 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351719028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22314339 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171055901 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128617472 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.155958659 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122513065 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.139427367 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.122994551 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.892975078 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.218748627 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.185525966 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.234781113 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162724813 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.14622879 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.417982064 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.132958528 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.148830378 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141585742 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112243882 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.272495755 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140566548 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.529668542 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.14386166 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160362083 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.160815632 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.257441326 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.13027313 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.18647057 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.186563878 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141399825 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.150609376 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.258173892 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.145321902 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.146529946 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.124620596 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.143721 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178015375 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.165474884 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.156484215 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169090777 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180234442 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.135921964 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174019685 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.208533571 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.242577006 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.233052891 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.133263525 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326205029 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.172470466 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.147899743 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.155634666 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.906844718 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167765468 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.145871553 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.126037605 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159203136 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.145130466 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.514807924 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167427087 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.197268801 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.128933715 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.207313374 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158775708 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.163328382 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133220223 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.149624823 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.155349155 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.150072157 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12668287 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.151242696 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.127183073 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.153470494 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.14785721 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150770011 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.126497301 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.210645223 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.144104848 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.169096922 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173128441 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.13761296 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.14881201 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175393463 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13126788 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.152442709 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.253683238 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143154447 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.166704299 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162622286 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.190173904 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.134876998 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.377098513 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129874407 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.187275211 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.143234764 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158331028 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.161098349 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130781575 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151319592 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.144294746 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129739893 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.207521432 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.134422889 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.145126206 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.136942275 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.158434114 seconds)
  done (took 32.992492273 seconds)
done (took 64.331036721 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.502236423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110655342 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.133561608 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112186054 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.131574134 seconds)
  done (took 1.733822646 seconds)
done (took 2.458129068 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.244837979 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.332942757 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.247328937 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.149854461 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.221545281 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215660944 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20584978 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216298875 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.231888357 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.237804961 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.131361327 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.24525961 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.233332186 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.218925885 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.130724654 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.259704533 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.222450914 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.204034047 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.257382799 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.15246848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.162982877 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.152176125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168744433 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134553842 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169135753 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.151827617 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.171406363 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.151323852 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.160933244 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134733055 seconds)
  done (took 2.44387998 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.194933518 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149515522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.161799835 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.143662263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165333106 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135722008 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.147895762 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168271468 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.172416478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148655286 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161510342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135345983 seconds)
  done (took 2.421572744 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.125247631 seconds)
done (took 10.147091191 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265223951 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.995814342 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.206498186 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.321783308 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.396092548 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.328925348 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.690481869 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.260846928 seconds)
  done (took 16.319642115 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.278951883 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145766931 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.160115123 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.146802746 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.162186337 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.145399635 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.164136236 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.141653139 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.158162711 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.146696518 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.158959041 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.141625273 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.158316502 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.142644885 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.162634578 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.146456962 seconds)
  done (took 3.359352331 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.186920348 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.188251733 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.147916086 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.169711037 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.144702619 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.167863036 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.153026233 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.168157347 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.144351597 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.163044267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.153042925 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.16710002 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.164965601 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.145163432 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.166065671 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.17238016 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.161860667 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.148673026 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.18421777 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.149737058 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.166820794 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.146440619 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.164219277 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.149294125 seconds)
  done (took 4.680522782 seconds)
done (took 25.096698401 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.203558218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153094259 seconds)
  done (took 1.099169804 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.219644761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.234924986 seconds)
  done (took 1.204435843 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.163519257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.158130723 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.172620904 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.171213672 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141821875 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.159633917 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.183595414 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.143786231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.159302241 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.142822421 seconds)
  done (took 2.3514412 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.14703462 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.162902419 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.158848063 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.231449195 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.169075411 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.146455355 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.165291969 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.146302683 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.165188673 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.143406924 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.164041321 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.16269967 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.164851201 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.161131244 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.164175696 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.147538384 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.170700548 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.163355829 seconds)
  done (took 3.689318104 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.144090111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.143468244 seconds)
  done (took 1.041679881 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145622359 seconds)
    (2/7) benchmarking "second"...
    done (took 0.158798266 seconds)
    (3/7) benchmarking "month"...
    done (took 0.146141838 seconds)
    (4/7) benchmarking "year"...
    done (took 0.16080292 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.143198656 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.158329422 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.142697196 seconds)
  done (took 1.813792034 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.605324741 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.28250876 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.416217593 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108239532 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.161300609 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.388323962 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.160785879 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109597666 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108822567 seconds)
  done (took 3.129322661 seconds)
done (took 15.082053172 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.14334246 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.342239401 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.668161852 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.182666036 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.141663196 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.221715834 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.401836504 seconds)
done (took 2.866538057 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.363928681 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.217101281 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.125171992 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.145819591 seconds)
  done (took 1.611461346 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.133686484 seconds)
    (2/2) benchmarking "read"...
    done (took 0.166116306 seconds)
  done (took 1.067942229 seconds)
done (took 3.444732462 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.16308701 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.161048063 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.145935388 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.163318255 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.145974359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.161747943 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.146604257 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.160267308 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.146109921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.161230349 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145796543 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.163752877 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.143542206 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.163921334 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143323394 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.16541901 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.145424498 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.162230686 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142663114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.164023512 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.145410949 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161898661 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.145753032 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163503893 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.1456086 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.163758604 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.142710955 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.163494533 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.162313448 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.147886683 seconds)
  done (took 5.400515457 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.271004783 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.137553804 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.162574026 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.149136633 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.158168717 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.141550473 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.158059415 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.141490898 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.161587378 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.141657469 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.162809041 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.14129625 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.160982343 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.143072034 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.161070901 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.145545254 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.168243462 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.142637412 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.159228698 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.144375482 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.162899276 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.142597393 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.161411937 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.14277891 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.159948692 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.141294783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.141288289 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.161192705 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.141970428 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.160677834 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.143975641 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.163571778 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.141562974 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.170261037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.145584435 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.160418724 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.1464886 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.158461911 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.14298166 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.159225974 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.139627393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.160840426 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.142490955 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.165911531 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.143005965 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.160719809 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.143372561 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.162138985 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.143539622 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.164330394 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.140167335 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.160401123 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.145578777 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.163602299 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.147026238 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.15699692 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.143499393 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.138490656 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.163705035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.142130713 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.158956597 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.140168872 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.166869195 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.143640682 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.176348473 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.148339813 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.162166571 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.144730835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.163396197 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.147937807 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.165410978 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.151078011 seconds)
  done (took 11.87249936 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.144706111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141980485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.162869734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.143077552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162645334 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.145680746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.163163905 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142991438 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.163876077 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.143564486 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161714558 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.143243145 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.162456902 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.144017755 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162274616 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.143941349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.161160089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.145570676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.161679498 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.143198307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142214803 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.164745601 seconds)
  done (took 4.133500356 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.291397112 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.149659045 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.213698404 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.175572257 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.162333911 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.174848282 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.147946607 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.168649868 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147662423 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.172982612 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152648532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16849517 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.181680785 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153442767 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.175411203 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.154175332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.17022444 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.154260329 seconds)
  done (took 3.899060209 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.144956352 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.143928429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.164337449 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.143204453 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.165204249 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.14446928 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.164425518 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.144027463 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.163692394 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.143899165 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.162606781 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.146228022 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.163351638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.144619228 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162313657 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.144592689 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.162951727 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14676112 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.144578372 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.165072108 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.144447978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.164613671 seconds)
  done (took 4.162420305 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160291752 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.165667366 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.166842655 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.168947182 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.146293953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.165786864 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.152839548 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.166226864 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.153833319 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.165316274 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.147052708 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.16557322 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.161935257 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.167384624 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.152615008 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168083106 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.14639627 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.167314433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.147286816 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.164276477 seconds)
  done (took 3.990276138 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.263353252 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163708039 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.184445103 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17120145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185873567 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161381486 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191525194 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.163821252 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.183583611 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193800623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163895283 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181805452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171727145 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189029345 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.162566902 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.191140996 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190292494 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.16959077 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.184485192 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161360673 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.194862768 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184302068 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.171312428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.183756119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.16328487 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.184920024 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.162542736 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189197383 seconds)
  done (took 5.855774746 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.158803435 seconds)
    (2/2) benchmarking "in"...
    done (took 0.175696016 seconds)
  done (took 1.129700921 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.149290213 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.147479788 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.167866529 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.147468194 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.168503062 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.147265095 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.169114103 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.146956747 seconds)
  done (took 2.039390205 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.262507264 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.270224238 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.151516265 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.180532664 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.268789069 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.246749535 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.184105395 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.17500745 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.147211946 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.162933708 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.262218401 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.138275684 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.170787081 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142753837 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.170307341 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172827424 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.147749026 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.176318441 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.153263135 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.169906802 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152451788 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172882599 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149677484 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.178125235 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.142266974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.170741964 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.149691242 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.180904709 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143189717 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.169911761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.145198702 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.169372097 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.151849338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.182894417 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.148153338 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.264330122 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173558244 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141328656 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.171195932 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149437439 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.19526233 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.146056911 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.168603982 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.144870377 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.173661469 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.171617843 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.152619547 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.148169051 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.161847956 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.143720651 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.17151343 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.142318237 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.170261805 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.148401413 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.170143983 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.174576948 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.151038061 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.165711925 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.144327921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.164717595 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.147292683 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.165121835 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150278957 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.172994834 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149378493 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.169962326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.148001781 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.170554649 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.149691242 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.172041989 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.147646848 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.184779713 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.149822195 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.176177641 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15334897 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.171222821 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144452098 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.176209558 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145988747 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.172146193 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.15124982 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.19358167 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149551699 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165720724 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.144209539 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.176970899 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.148237706 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.173663285 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.140598675 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.177833647 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.149698296 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.173081857 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.141533151 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.168601747 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.142939127 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.173579685 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.140375043 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.171094872 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.148214379 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.17498999 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152797922 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.170253354 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.149123992 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.174476308 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15256123 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.168816091 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.220774723 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145807997 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.165809493 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.150387141 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.175471406 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.139555386 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.164870127 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.142812156 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159384235 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.140540428 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.172190752 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144391615 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.169591049 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.150875122 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.170984313 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.150333014 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.17342366 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.148230861 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.167087099 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.155046742 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.177138169 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.149963832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.173097012 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.151915687 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.172880993 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.149215833 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.184762531 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.146859387 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.175444167 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145476739 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.170852662 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.151807433 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.177329952 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.150826652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.167239075 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.146803165 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.172141722 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.147745883 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.175538175 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.149485071 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.168291792 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.141757831 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.171813888 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.145219794 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.172300263 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.157546641 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.167510058 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.150006855 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.168157767 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.157794088 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.169456325 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.154198728 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173992377 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.155173643 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.175172904 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.139745774 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.169049081 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.149505674 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.171991774 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.142665698 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.171038021 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.149805852 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.178675375 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.140283831 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.173312193 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.139798853 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.168839697 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.154719326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.174519399 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.155333929 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.168152738 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.182499953 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.184350398 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.153989275 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.17180851 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.151465909 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.176977464 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.151086322 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.177302016 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155766595 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.17762601 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.147583921 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.171818498 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.15589217 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.169446617 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.151685141 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171965653 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150710786 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.167528916 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.152172074 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.165515182 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.15341923 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.174596714 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.153682602 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.177201654 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.152246036 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.171044656 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159146355 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.16928696 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.156437631 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.164643353 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.154240284 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.18179295 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.154133636 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.177994003 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.168388103 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146427838 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.170841348 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157984056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174755183 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.149581312 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.173133539 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.143040327 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.144942524 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.181327877 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.154694113 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.17132919 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.153148316 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.174149171 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151428824 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.168511722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.14363286 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.175454854 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174767756 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.146307293 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.172996091 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.146031489 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.169984535 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.155437923 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.162628712 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.145370931 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.172603234 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.157125846 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.171744745 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.151008589 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.175100689 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.15895946 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.177443864 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.153704113 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169188693 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.160243701 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.17072611 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.151563128 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.169621081 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.155413828 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.166706465 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.151771046 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.171911107 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.147529445 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.166610643 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.154388907 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178954181 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.156415421 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.17113084 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.156280557 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.179646867 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.159163257 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171441773 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.159165562 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.169324535 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.146153991 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.169663894 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.145871692 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.174662225 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.147921604 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.177281552 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.150777484 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.171465798 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.155229935 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.174961564 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.150085356 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.178829095 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.163277397 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.167771893 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.144812339 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171107443 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.152290106 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.170987317 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.148495978 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.177074961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.154731199 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.179511514 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.156055599 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.171527888 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.153274239 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.182335966 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.149226938 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.180150842 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.160104438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.182295598 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.14956022 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.179011172 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.150159808 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.177936804 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.14708246 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.17335326 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151902696 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.174217964 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.148870328 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.17341025 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.146916169 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.16838475 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.149198721 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.180378524 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.150899985 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.179078289 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.150504125 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.172537374 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.148223249 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.172052047 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.157240386 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.174438244 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.156320088 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.178417102 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.145793609 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.170157252 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.156980996 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.176671768 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.15738845 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.170789386 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.155246278 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.182758087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.157374272 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.177790277 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.162189479 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.184027033 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.158908266 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.18057422 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.14496201 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.172986313 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.153972513 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.175903235 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.15471318 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.177592067 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.147627223 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.178070898 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.154915161 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.176071692 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.149789089 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.169621011 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.152099789 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.182067636 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.155815206 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.179203026 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.155594018 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.177809692 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.148991991 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.180100346 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.159504222 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.177112467 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.159568267 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.176765914 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.156724818 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.174220549 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.158643358 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.176990803 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.148346379 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.1705103 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.151147433 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.181653827 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.149439464 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.180310848 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.160515314 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.172442948 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.153480481 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.180537622 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.151599446 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.180261959 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.159728342 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.175693711 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.162107695 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.177599749 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.150507407 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.181748671 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.157943479 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.170865094 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.152950944 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.17691754 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.159894216 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.176955813 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.157225231 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.17510006 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159341002 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.180933274 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.15769177 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.182925077 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.157408215 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.169145113 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.158448012 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.178612657 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.155204513 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.174859038 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.150016702 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.170500173 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.151789204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.181102569 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.148916283 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.184779992 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.15700139 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.173440282 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.150140042 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.181987248 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.152214398 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.185927274 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.15097234 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.179281737 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.145012295 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.174596085 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.149424867 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.179448448 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.145388181 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.168585824 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15826852 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.179673896 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153952468 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.17418898 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.15539937 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.168189684 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.144961451 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.178991267 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.149351813 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.186051872 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.155698919 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.17501653 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151986855 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.179517661 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.156929174 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.185244646 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.148715629 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.176016447 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.156497904 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.178518931 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.151637649 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.170832338 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.157365892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.176966847 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.154309637 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.176399247 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.150389794 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.175805247 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.185538678 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.153576373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.172931698 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.153693148 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.182515808 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.154073992 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.172881412 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.149472849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.183881275 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.156840965 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.184327839 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.153506253 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.175822498 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.15102549 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.181848823 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.161144794 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.17617373 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.155948043 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.176764377 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160969981 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.176460987 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.143894416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.175281787 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165589773 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.182670994 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.158503257 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.181152296 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.155023625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.184103719 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.162919949 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.182032785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.149832461 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.170979354 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.155263179 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.173095196 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.157431193 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.184879027 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.155119516 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.17767888 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.161124819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.183101567 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.158383968 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.18172709 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.152575687 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.186296875 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.153914195 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.182949941 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.149347553 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.167936789 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.156413535 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.182553312 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.151229915 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.175803222 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.156903892 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.182262562 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.150805909 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.176555412 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.159195454 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.183487858 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.160095359 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.178650302 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.153741338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.184567814 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.167083468 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.18230796 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.154383669 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.185289833 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.162870432 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.178702474 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.154662545 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.175753356 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.160285048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.181783731 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.165430744 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.176439337 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.155281827 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.185639529 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.162791442 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.189295581 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.157719218 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.174677171 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.164822776 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.178891604 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.152049433 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.18402382 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.164491727 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.187754463 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.157785987 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.17434312 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.163611308 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.178984144 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.153621211 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.178869813 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.15241582 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.183115814 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.155994627 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.182441496 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.153033148 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.184201217 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.160564761 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.185864976 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.164861188 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.172924643 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.161533251 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.178676981 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.163655238 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.183642766 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.149686702 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.17734008 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.160492895 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.190056781 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.160282254 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.181649776 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.159494374 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.184471224 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.158358405 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.18306469 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.157982799 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.188572234 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.164845334 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.18376024 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.161442876 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.181948277 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.157840393 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.184519903 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.165772267 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.188238602 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.158234647 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.19159685 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.165297626 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.180774036 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.156224266 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.184845922 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.161842089 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.182730011 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.164792603 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.179265953 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.155063713 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.189250952 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.164943461 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.18145834 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.168540566 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.190629129 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.158811815 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.185328804 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.168074585 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.186931243 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.162189968 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.183046392 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.160000933 seconds)
  done (took 99.584057165 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.21030775 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.193082863 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.162016971 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.185640926 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179329299 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187462736 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.162495664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.188090469 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.164047607 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.195333009 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.162225308 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.185350106 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.177187197 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.205375908 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.199023424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.173854021 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.186284723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.164342616 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.185931185 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.164163753 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.201138706 seconds)
  done (took 4.731526544 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.163842623 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.161845721 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.184878888 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.162938318 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.186017719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.16336435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.186896393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.161390635 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.185856246 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.162801359 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.18741664 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.163235772 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.185281453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.163163347 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.186063954 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162804223 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.18524269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.16493941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.16414734 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.186309865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.163279143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.18774664 seconds)
  done (took 4.717396814 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.187877872 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.165103398 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.182664499 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.163862667 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.188526209 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.160438349 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.190692056 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.161102749 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.197597544 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.15895052 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.179479318 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.157997257 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.186201192 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.163152591 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.183178112 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.163689391 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.197614375 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.166446026 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.196624235 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.16200419 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.176555203 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.162227403 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.184222868 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.15220022 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.191735346 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.169167182 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.190908495 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.167538414 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.178961724 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.165007436 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.186591116 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.159005486 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.178216378 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.154358945 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.154477954 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.190978615 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.166280293 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.189002247 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.164350229 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.180179267 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.165461265 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.193114572 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.156098691 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.19030339 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.163536579 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.184653928 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.16714381 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.189505034 seconds)
  done (took 9.284945243 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.194034521 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.227505118 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.161966826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.220716405 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.198785754 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.170808034 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.191338787 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.197738204 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.189393847 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.163775435 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.203382776 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.199792237 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.165679868 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.193095714 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.166381982 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.191758184 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.171123856 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.191455352 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.17325178 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.191489505 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.172114764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.194258851 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.175709286 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.200926598 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.190479669 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.165401061 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.187732811 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.168940408 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.197219981 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.168919945 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.192476083 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.171314942 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.20081618 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.164094959 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.188494082 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.167360109 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.199793773 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.188061694 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.167040655 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.189556298 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.171450014 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.196243181 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.171242516 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.203753145 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.169843107 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.195469969 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.170026999 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.191213562 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.177296639 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.194735308 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.173618237 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.204091247 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.196223276 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.170209075 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.196043714 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.177152276 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.194913892 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.167476046 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.194719035 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.177632505 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.192104247 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.170423208 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.202878383 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.193545981 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.174914561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.203539919 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.171499602 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.195559086 seconds)
  done (took 13.609710006 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.202139602 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.196253378 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.180378105 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.199510007 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166731258 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.199723582 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.172661971 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.194748368 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.195261982 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.177091863 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.192658717 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.301591285 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.174879571 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.199827856 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.168709303 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.200359836 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170738682 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.197839334 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.171499533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192309721 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.191868533 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.179068093 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.19844856 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.18170495 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.470993134 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.164419232 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.197692458 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.171370884 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.204094879 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.198228909 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182534665 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.199921093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.171409158 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.20473644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.20684425 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.169654675 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.188191529 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172920523 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.195080743 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.170827589 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.192003397 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.179337051 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.192596489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.165039213 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195781949 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.17036517 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.205692498 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.206557691 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.175825851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.198724363 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.169708871 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.201275316 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166692357 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.198125334 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.20309985 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.185034703 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.206356758 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.174907578 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.192844215 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.201829995 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.178570334 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.213624302 seconds)
  done (took 12.967346966 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.169653139 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.168434058 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.191374894 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.168026325 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.192645797 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.167325608 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.193869485 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.169037697 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.193425575 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.168092535 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.193364952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.167629697 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.190136888 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.171365018 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.19401273 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.171182453 seconds)
  done (took 3.796732392 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.186899466 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.207985526 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.276598022 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.17183931 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.193158152 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.174255958 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.193765701 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.170899107 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.192092235 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.177968023 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.192999334 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.16792296 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.210326466 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.171372561 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.190978546 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.170672402 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.191268736 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.171604364 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.191115435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.279649528 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.173173628 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.19777096 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.171386739 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.197808045 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.172034726 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.198565194 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.179676271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.196047696 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.172616923 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.195266312 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.172881342 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.20211851 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.170922155 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.199018883 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.169157405 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.19240247 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.169026872 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.195345233 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.171307958 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.19292586 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.166179232 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.193698305 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.165768077 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.19668793 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.166095912 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.193100114 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.165626089 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.197614725 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.172018383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.193832051 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.167499652 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.197339899 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.171574053 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.199022516 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.173937482 seconds)
  done (took 11.225767886 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184034856 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.196579816 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.182772405 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.194027257 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.172069368 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.197447105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.16971865 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.197687639 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.17303178 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.195213442 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.173055876 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.198383957 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.174497469 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.197230947 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16898783 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.196651823 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.169668293 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.195901168 seconds)
  done (took 4.277840778 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.171886104 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.16795362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.195436026 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.165334433 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.196713493 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.167269246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.191544539 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.165312363 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.195560343 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.168998027 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.192665492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.171783157 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.194978356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.169092941 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.188363758 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163612006 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.193181969 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.170041246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.169127373 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.18874104 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.163269156 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.195716788 seconds)
  done (took 4.883106155 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.184376449 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.297632542 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.202737233 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.311915991 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.165277582 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.191751898 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.201692897 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.172096465 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.204800205 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.170514351 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.192249587 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.169463659 seconds)
  done (took 3.408239344 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199008897 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.230651049 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.168036732 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198642928 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180737788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204105075 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175577355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20117251 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180489083 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.2051587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199467684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184545814 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208976295 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.184050011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20569152 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20342985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178201223 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200753461 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171396935 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.217754646 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175259089 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210306282 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176734416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202306871 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176410561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.208378314 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.210395819 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188960901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202477144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180413865 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206644364 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199663798 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180775363 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.20525138 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165615753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20694126 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175390111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215853986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201991888 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178479331 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.193007854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175391158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200956769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172555462 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202830821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195706661 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176453304 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197620801 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172614549 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.22426951 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18244003 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.209559749 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.209062898 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185985452 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202649303 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.218233967 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183638925 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.208738835 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176874168 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207354091 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19913922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177837559 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202080307 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18044676 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197356522 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201813722 seconds)
  done (took 13.772725289 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208044193 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190526323 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168971417 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20150244 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173218675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191896819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192718711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170203488 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191781301 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164382076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.235578002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169550471 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200066153 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197001238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167776503 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189023339 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167942236 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203193157 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164857207 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.2148841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167300395 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206011114 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206077114 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176207323 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.208675768 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201338802 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.181176042 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202466878 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175559406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201570046 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182665617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201212738 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18390537 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.203602497 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186114868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203369227 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175696295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.209387171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201842777 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179366455 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.211742988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193136152 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205532352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175609762 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.213624931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205172738 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179428124 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200015798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174866091 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197780877 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.185828798 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.209005908 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.20436244 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179349483 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201918973 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169562135 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191663479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172476612 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197874395 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170710256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200785798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192863492 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190999429 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198370338 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16743002 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201302205 seconds)
  done (took 13.563474378 seconds)
done (took 243.070643697 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.329763093 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.354704044 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153491167 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.359680445 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.152703287 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.875106324 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.77954969 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.261853899 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.156678514 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.177573769 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.155454684 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.197173258 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.533318727 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.179497966 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.157428609 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.197454369 seconds)
  done (took 31.975239519 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.365528535 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.407124188 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.206008459 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.163854356 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.190311352 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.165629233 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.192901206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.164919156 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.181317121 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.16827929 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.182613585 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.156340901 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.190892571 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.155623212 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.184132144 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.159860133 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.191221314 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.159263269 seconds)
  done (took 4.555213062 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.184177052 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.248670449 seconds)
  done (took 1.409440544 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193829746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.279619636 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381826418 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.235654059 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.180957509 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.201177608 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.233899087 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172572434 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273463825 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.194766318 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.172452726 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181767947 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.184643801 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.189001967 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.17615194 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.183078867 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.187916424 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198696356 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.174947806 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.185858551 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.206821971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.161406908 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.187408119 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.174164257 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.264226827 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.19574214 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.163081423 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.183506436 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.163042102 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.196524362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.170028605 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.201734452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.169631977 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.243761026 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.191771803 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.239043597 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.163290038 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.186331726 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.173030313 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.185010189 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.161842927 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.188803479 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.193239168 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.159488159 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.182322836 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.165000102 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.182757319 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.161955581 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.192122056 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.16271734 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.192441511 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.167442522 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236005361 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.18887723 seconds)
  done (took 11.503875598 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.001606629 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.209815857 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184951103 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.15264483 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.208876911 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.178301165 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.022395795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.184563275 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.314713275 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.089401732 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.202727036 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.171127418 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.333360129 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.34315914 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.354626451 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.421033569 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.845280744 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.197848204 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.218288582 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.208921679 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195972407 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202367005 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.178474022 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.510098875 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.15983094 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1849129 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.18872351 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.169378104 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243014423 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.186075617 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.167331893 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26456828 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.360843303 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.278181046 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188883656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.161418013 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.18768518 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.255243632 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333951057 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281350023 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.255536476 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181980194 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.164997658 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.192809435 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.174469323 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.18581951 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.246264137 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.257788438 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.2590416 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.164479435 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.196770553 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171250967 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.190971771 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.252169986 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.161046527 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.450414469 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427931723 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.187799999 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170921805 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.201462071 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.338027552 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.189721612 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30985281 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.206657285 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.283817935 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.162065581 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.885639578 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.249925707 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160420609 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.190332514 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166405518 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193688667 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169316084 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.254954768 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.488542293 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170637272 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.191367003 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186116126 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.315223605 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.171505748 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.188180634 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.250100799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.16392734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.195225244 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.17280759 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.200782515 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.262213372 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.340856823 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171040535 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.19453214 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.172686624 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200177271 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.166833925 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.297205881 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.325939842 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.246816093 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.309164734 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171147881 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.260372286 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.266084814 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.20105357 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.261865981 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.167646528 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.204008624 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168407449 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.328534306 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.228362839 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168243392 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197162083 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.172268624 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.237350015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.170447094 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.19459339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.256882876 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554967569 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.259126388 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.184715808 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.174536301 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202304357 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.227052407 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.199415722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.332347571 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199850275 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.262497417 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190862399 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.18807657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167060141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.248213617 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197030153 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167109659 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191270552 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196881531 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.34485349 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290476673 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.174156504 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.342312454 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.239707857 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.19505602 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259633784 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194977238 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.228281683 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.205723787 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.194352647 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165841271 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.878988174 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200822465 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191401853 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169289405 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.271229184 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.162085696 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.191141834 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162170204 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.186221167 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859818696 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.189412285 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.162177327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.166952515 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.196217061 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.196362121 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.172542193 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.197523372 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.247789821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.314617243 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.196143029 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167420592 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.189639758 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.245725032 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.163022128 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.19170713 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163102584 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.18836285 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.169094338 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.192714032 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.168052865 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.257949841 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.254146635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.329265474 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.65672185 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.16820896 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192789669 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309131978 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189120628 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.394944846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.196266019 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.306145775 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.256747034 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188009732 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427745945 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.253225707 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.278237407 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.171031875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.263722223 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.189476329 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.174031209 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.254569942 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.192765225 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.174322447 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.249982138 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.200819601 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.174634148 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.362147658 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164347226 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.320094266 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.187392894 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.255312914 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165102979 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.199384503 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.400418447 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161983378 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200890561 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.248969998 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.194881346 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.171191532 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.959898532 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.189163929 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174145748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.201979316 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.312987287 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.255155282 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.197635607 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.175234993 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.203021767 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.24917163 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.299349799 seconds)
  done (took 62.909055266 seconds)
done (took 113.319317285 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.334061126 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258737371 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.400142224 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237798466 seconds)
  done (took 2.296517176 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.352795003 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.20896994 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.308476308 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.19395113 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.310211375 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.160639702 seconds)
  done (took 2.553319176 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.241541749 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229944535 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230682896 seconds)
  done (took 1.726017464 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.277162969 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271421945 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414127872 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325857918 seconds)
  done (took 2.374447128 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.347045669 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.180015769 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.222144031 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290995454 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.309588461 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271261171 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.21261328 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.217324564 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.229147436 seconds)
  done (took 3.337341571 seconds)
done (took 13.310048017 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.223536108 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.230174731 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.18859591 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.204344561 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.199817728 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.226913213 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191888578 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.222018038 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.19074346 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204676726 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.189523053 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.203824662 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.306032143 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.220849453 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.176225273 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.218493008 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.177829597 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.231885563 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.193817244 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.202543285 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.19900722 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.203857558 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.175098174 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.205386383 seconds)
  done (took 6.002360076 seconds)
done (took 7.027177758 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.317393225 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.15540405 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.176644251 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.200787265 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.293884508 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.187598996 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.225062908 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.179669914 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.215672607 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.176023431 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.193073575 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186511287 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.19954011 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.308462619 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202838503 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.176562187 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.190665447 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.184481281 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.236818592 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.188739434 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.291998235 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201121874 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.187209979 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.194658343 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.293884369 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.170159767 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.200398738 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.17340578 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.21306627 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.174611241 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.198438712 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.164704813 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.213649934 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.187957421 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190613415 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173596307 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.188290145 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.133522566 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199408179 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.177007774 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.210343578 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.175691545 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199689359 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.166022718 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199253969 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175433273 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.19103826 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.182425293 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.194146337 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.176837711 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.198312788 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.19873002 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.209745806 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.163882572 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.192762292 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166521246 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.209068975 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166162331 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.214059833 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166257176 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.191126818 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168127386 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.208611165 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164518686 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.213017801 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.172467812 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.204727082 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.18019568 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.201513823 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168338795 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.200976046 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.182120576 seconds)
done (took 15.171869691 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.177448892 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.231993677 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.310414195 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.317662043 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191085123 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.20814274 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.204069107 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.187952812 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.211694169 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.187037192 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.227617073 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.195103092 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.312219242 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.207843539 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.206884409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.177459369 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.207543082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.173535685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.306162396 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.215787916 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.186802596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.211584099 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.196203791 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.209589781 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.196163703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.192830807 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.202433145 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178361438 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.194789435 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.186473503 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.217181179 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.180017725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.202598319 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.193536134 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.224145054 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.18075441 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.210203337 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178295717 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.196254775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.197248268 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.180321884 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.214836817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.175125691 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.21069048 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.178533038 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.217429744 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.179032264 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.211111552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.170700827 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.205271774 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.171477952 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.224048882 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.183869191 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.21560095 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.182582645 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.211102543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.183385402 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.210510568 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.197055924 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.185193103 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.194005816 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.175257622 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.197064795 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.18996906 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.203723951 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.181487046 seconds)
  done (took 14.476361135 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.195265055 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.226630076 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.179421768 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.206688714 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174710695 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.190663073 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.166911239 seconds)
  done (took 2.401541006 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.175837724 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.331381386 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.323545892 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.318001542 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.307575705 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.351585282 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190415066 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194468793 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201088072 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.205131253 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.324717759 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.409400595 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.180300093 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.20592905 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.3218528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.164410921 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.319404234 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.302578701 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214061299 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.322031873 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.216025446 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.201320014 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.213466112 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.170905952 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.322458533 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.208228644 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.374043515 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.215520982 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.176332828 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.208237514 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.181409871 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.270768301 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.328695848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.215214309 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.178095971 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.320130933 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.317098006 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.211727832 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.395827919 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.173160916 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.309059832 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.206106726 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.185109992 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.213228442 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183656944 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.303788771 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.223219167 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.187748875 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.214678626 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.331554383 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.202775157 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.32682068 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.17973403 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.207461508 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.17789392 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212153236 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189711275 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211109597 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.331028827 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185081218 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.347241573 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.319039872 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.317491212 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.326067092 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.224673333 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.330614669 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.308108524 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.182728613 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.325111594 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.215221712 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.330090091 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.183945388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.21028973 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.311602683 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219030227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.324587435 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.3371618 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.188261859 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.220351415 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.17736173 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.214114379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.173896554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.318166297 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213011026 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185276703 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.220200558 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212294314 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.184339573 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.317204583 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.229798007 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.18730664 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.211902366 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.215709554 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.19567153 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220986202 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.334253189 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.189886647 seconds)
  done (took 25.133250954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.175072543 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.169682262 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.202598529 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.205917456 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.176364467 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.170714167 seconds)
  done (took 2.198778979 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.214880048 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.216500227 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.19646381 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.218029821 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.233254312 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.315505415 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.329102395 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212143178 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.234491131 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.203008706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.329526471 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.326312794 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.324137797 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.223806394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.323075511 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.194476616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.326226889 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.222437783 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.197897861 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.214614023 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.189989174 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.221038723 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.223052596 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.311597725 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.196326432 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.221488641 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.185329712 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.232342325 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194114628 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.207989578 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.195238794 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.218539662 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.174983495 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.204436262 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.321530622 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.204225481 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.18008114 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.216698646 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.187439339 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.212822664 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.321443879 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182362086 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.218134234 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.185662506 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.20875448 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.174246459 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.213522334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.174917914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.348016182 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.188332818 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.21525789 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.185393338 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.21558796 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.18809466 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.204588586 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.180752035 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.216695084 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.324038273 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.187828704 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.205133279 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.184740182 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.216454341 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.204659895 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.192005841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.221073574 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.18825257 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.2029455 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.187063313 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211516073 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.186028055 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.216785179 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.185904157 seconds)
  done (took 17.192713752 seconds)
done (took 62.451995468 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.816811341 seconds)
  done (took 2.911180815 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.266006522 seconds)
  done (took 2.363564808 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.415769073 seconds)
  done (took 19.546455175 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503735706 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.414387472 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.094956279 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.242604734 seconds)
  done (took 3.355730851 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.161964102 seconds)
  done (took 2.278946226 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.484876394 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.352780336 seconds)
  done (took 1.944228313 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.8319273 seconds)
  done (took 1.954566359 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.962762444 seconds)
  done (took 3.071852712 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.380560265 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.292049079 seconds)
  done (took 1.793779153 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.722612561 seconds)
  done (took 1.849347882 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.856931248 seconds)
  done (took 16.98552281 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.324062229 seconds)
  done (took 1.450027479 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.360350642 seconds)
  done (took 1.490678318 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.730865845 seconds)
  done (took 4.86254104 seconds)
done (took 66.973227742 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.191694768 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212803667 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188469777 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212288658 seconds)
  done (took 1.919120372 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.195316806 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.208749171 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.191102863 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208609209 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.189661968 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.209934308 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.182973617 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212652252 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183795858 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211050232 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.186067725 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.21032954 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.18667276 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.208545165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.182779179 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.212759388 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.18747817 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.210588022 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.184819592 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.210427038 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.184751846 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.212562156 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.187242945 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.214621077 seconds)
  done (took 5.89772645 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.18601283 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174634567 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204776808 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.174040009 seconds)
  done (took 1.873171442 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.199680071 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224830266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.196452426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220243789 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200682224 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226328152 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18221563 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.210466149 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.182496251 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.223682006 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199296293 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227943232 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.222595835 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.190203936 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.222309764 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.180396054 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.214054245 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.197351981 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.219670113 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.202076396 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.214676182 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.194330997 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.21465495 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.194303549 seconds)
  done (took 6.097590204 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263429449 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.224458991 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209033426 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.256950063 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.239948949 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.181482645 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.23722933 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.189315345 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.216733986 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.191591053 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.211602257 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.229315474 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.220565409 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.183629497 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.213126893 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.21554815 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.193171841 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.215643274 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.223845016 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.217061751 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.188647522 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.224600419 seconds)
  done (took 5.888381617 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.340064334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.177001838 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.205885469 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.174587146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.219318113 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.177631457 seconds)
  done (took 2.434573978 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.181156417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168629614 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198411823 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168589734 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.201900116 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.16901423 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.197997175 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.16955117 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198134762 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169604319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.197592096 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.168910446 seconds)
  done (took 3.333171767 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279664335 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2206877 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347363097 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.463591005 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261329321 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254520634 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375217547 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225577848 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.272923254 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232024408 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277782251 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227730216 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248976773 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290893835 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208454441 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.243819623 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268464586 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306420111 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209104943 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310820531 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254170381 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274246886 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.28738459 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21774843 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23654663 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256256818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.189199898 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222989111 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232273811 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260701798 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272375349 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248558004 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206519209 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2822141 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327178687 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275172143 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.39573105 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200353411 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.257182914 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.287958126 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.33035905 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207796746 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286150634 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248344988 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224052444 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289057638 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216842589 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.282881364 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.228230909 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213025762 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278490023 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275335572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.263831525 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202695818 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398164669 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230623671 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.236403456 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246472753 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285097707 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30104785 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278113997 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.189738862 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.29493562 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261333442 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313644703 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.239014542 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.260862851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193846019 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260500375 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305661006 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281829903 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255779873 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.286294298 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200035493 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271179177 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260111568 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222132647 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306754232 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274009356 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.18569617 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247557179 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232606744 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196089321 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.288722679 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187493675 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314261052 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229021511 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273514739 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24529027 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250079567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257877137 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257999429 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227523206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245546169 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.153678341 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241325939 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255105485 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224888933 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225952127 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246331744 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207956333 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.222878691 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217830354 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.221093059 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26661477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.192498432 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257958572 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268882726 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.200780002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278417458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244086137 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.231190223 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264848834 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296900325 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227484864 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201600566 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319456895 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270365806 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.233072795 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238710104 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296707772 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.235951653 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202013468 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265034192 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291376997 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241533787 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300013012 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206156453 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233087042 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.19452739 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274921901 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257498038 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.257727607 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195790261 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.265541798 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283858374 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.193655702 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236476789 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280859668 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200569849 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221310056 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204207742 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234538344 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.240630251 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.219019612 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237344428 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249762488 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236012903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265594947 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254298539 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202066128 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270655367 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228359207 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.237633501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246648125 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.215197477 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.240497622 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296899557 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229271893 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277745585 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.226008 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276702365 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271416987 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227283721 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249290081 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227686426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.217362907 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232131753 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269023945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263043296 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288734622 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270345062 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.26201628 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.232680217 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247863293 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268949983 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.282430468 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225864057 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.238414187 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271906574 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238521952 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.222278405 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.190692616 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.227371441 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234380433 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202941799 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236890668 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279298226 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232251112 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271382974 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268437837 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239069856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294859423 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.193574616 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258133594 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.275267825 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209514282 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.289306203 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293655569 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278944899 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208299672 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262440426 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219018215 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195456769 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233489678 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22730195 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239758911 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23421449 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211546874 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.293259918 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268203868 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246319242 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282978792 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262250318 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27266093 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.222292025 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.229611392 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265223951 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268150998 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.259080781 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228795854 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.261547295 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29384428 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210759203 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290800458 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270022186 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280917497 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290605391 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.235717266 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231554725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212456137 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257814489 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238438421 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227091378 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241766848 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229031709 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215704874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.24042373 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237479081 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286254349 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212609579 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274382447 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.252769713 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266219818 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197098319 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241028834 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244597375 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246889077 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.16136207 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267840625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290942026 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248958265 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218979592 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268056573 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229208547 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.386069834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279748982 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271286593 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234033113 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208213489 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273300187 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2563796 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226327594 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.282202856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241344028 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311328626 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270674574 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.208413374 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229814141 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214886753 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249064144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.223709664 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.221288824 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.267140186 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.242683585 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286449345 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206766866 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276041039 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278135998 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.215513299 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.249979624 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209861952 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.363377354 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240219374 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275030505 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.268344738 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262972198 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253078132 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224284247 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194768832 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.233455455 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283337986 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199131817 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279958087 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.261426261 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276524969 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276482226 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229349976 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242172485 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.226691397 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239283641 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249970824 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279215394 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234217703 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.207349901 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286446342 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183864861 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233298312 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260107168 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388813829 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21637598 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269084916 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.163162648 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.38732572 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229234598 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203904212 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259760336 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270779895 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.201172788 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.285678647 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276341775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209483413 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259732959 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234221404 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2740382 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249267872 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268876161 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276086505 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.245498118 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230102725 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258012349 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272017412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214900302 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.247180246 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260473696 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297410655 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.243874588 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.232760535 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272286231 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239730555 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275138619 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275220543 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238141736 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254182672 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230099303 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266508401 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208044194 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225053549 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229392788 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264039792 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231220115 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273883851 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242727794 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232039703 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227601498 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217726081 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268002935 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239631799 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.199673156 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285374069 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.229326159 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252692957 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313135769 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232777017 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267610846 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212872531 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23127976 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209087412 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246396557 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201585062 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.277604226 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2798689 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.199164084 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275961559 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267419551 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264668643 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222300755 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243541025 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.367115958 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.198469931 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298615208 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250347268 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296771538 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220906024 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279612303 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273528149 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21954824 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266755012 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249306005 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.292227594 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266264027 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270232409 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23326891 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214342969 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24094726 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.204006669 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252625142 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272531723 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213044061 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.238776453 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.269099583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215620646 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.248648309 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211119235 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30446693 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254057587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290605391 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.287460717 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208344651 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280534418 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277398125 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199507912 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.266276529 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274175857 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246331394 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224238571 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.23765557 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.207156091 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31952087 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.229666216 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262071664 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247237865 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275031274 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27625168 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.204175824 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28365304 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243475096 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279827483 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198305036 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.252532113 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241535114 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236369374 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.227930661 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244979896 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262983093 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.270014294 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213515559 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.280702036 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300738732 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195182432 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236369234 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387514712 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23138515 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297892351 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.223735994 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212015788 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249523141 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262125163 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.237032097 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276580632 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.231826967 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202244782 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.248621351 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.219472183 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.225196304 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274639114 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254524057 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260259911 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28855073 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.205377374 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.361951335 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244396022 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243371241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.207294447 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.202538465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244672455 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204849164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245165813 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279533801 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32034751 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268561665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.217438335 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239947343 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.19814056 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233804802 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263615715 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223210228 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276234499 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251754919 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.162491962 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245443362 seconds)
  done (took 121.802071761 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246764969 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.229596165 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.245369191 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.299215634 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271907482 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.367431641 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.30616945 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.323492045 seconds)
  done (took 3.54946708 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.194811156 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.238270174 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.247932087 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.219145675 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.184660494 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.5857835 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.244553096 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.225737714 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.234210509 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.230682198 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.213023458 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.644291568 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.226973765 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.220869637 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.223190882 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.183763033 seconds)
  done (took 5.569333084 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.491331195 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.753392174 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.387822781 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.421932914 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.379330151 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.297049856 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.958832894 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.317749764 seconds)
  done (took 14.276567712 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.247384322 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277622245 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.523241259 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.408727744 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.290740185 seconds)
  done (took 3.018941794 seconds)
done (took 176.776504824 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.200241107 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.225692806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.196224324 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.228223854 seconds)
  done (took 2.103852941 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.253694482 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.149254385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.185354437 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.15025975 seconds)
  done (took 2.006593017 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.472375083 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.149346505 seconds)
  done (took 1.921728804 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.220850291 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.237297075 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.207131996 seconds)
  done (took 1.954135578 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.211848797 seconds)
  done (took 1.494645304 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.195331543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190823219 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.380473941 seconds)
  done (took 2.048057089 seconds)
done (took 12.805039175 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219249528 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.035752521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.652042973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.207505996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824965381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.474588564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.542524577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253233668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.306593876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.182960697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.246708258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.763558201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.526335507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.948430802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.510172768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.948780218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.798887764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182720512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220717872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183916963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.524533532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181840652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215779116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183516214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795561922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.488821309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216446449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.962194005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213449629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192123593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.50525161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184198912 seconds)
  done (took 23.957670735 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.189486177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273222803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237988224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218356818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191420152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220612761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195663499 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.228155829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.316879891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186553542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238168136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.182696766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.221392748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.18456949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.239711977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183823795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.217846766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184039325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22342492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187583421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.236827602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183318074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217237052 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.213803166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.184830627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.231786808 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.185365472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.227116311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.184213928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.22469645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.190345923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.216146131 seconds)
  done (took 8.109333317 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.229446705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.283348742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239096117 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257352488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.270751819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.185712653 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.304599838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.252075631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.291839835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.221306913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205494218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.216473268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.255429829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186369859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.239984428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18496563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218414856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184944887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223156451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185748062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237322288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18465784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.2178717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18442436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215687903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.204546681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.22063958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.19630101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215250766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193446876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222681669 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184570328 seconds)
  done (took 8.396997691 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.202081005 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.229882096 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.208589025 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.240912409 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.194046394 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.229686959 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.199016369 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.224876222 seconds)
  done (took 3.028573047 seconds)
done (took 44.768880108 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.210512804 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233092909 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205627616 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.231128344 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.345632918 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.190638558 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.235962688 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.191689321 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.232611353 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.20602599 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.219205878 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.194299778 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.237652567 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.196567246 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.348165713 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.233280992 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.351957536 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.351763866 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.194106457 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.233637323 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194723156 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.350595631 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.231795887 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194636273 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.330181722 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.22450313 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.34121441 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.195291943 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.230847861 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.185446278 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.348635186 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.23123143 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.19362099 seconds)
  done (took 9.377266132 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.302640719 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.230746382 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.192817467 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229455017 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194580051 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226376482 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.336251838 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.710620394 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.228314299 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19293452 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.226586635 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.316461961 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.199289309 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.223258279 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.19723374 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170536421 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.339167851 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.227997988 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.186082951 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.152981885 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.223701562 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.1924948 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.346240188 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.227023283 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.193578108 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.229407525 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.194628032 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.234896001 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.196868401 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.227308166 seconds)
  done (took 8.662739375 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.204052834 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.23975046 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.215660176 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.294773798 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.224796044 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.243021756 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.21314561 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.244685375 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21627003 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.221898888 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.202856033 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.256508457 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204331291 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.232253277 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.189564958 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.238664149 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204078117 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.22421699 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196598185 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240906822 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207475266 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.237040898 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.244232594 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.200659036 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.220123103 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.19679402 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.232753551 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.199498972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.22958548 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.205079292 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.222876806 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.191705593 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.224984057 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.224391384 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.23011788 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.205147037 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.241385723 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.202392008 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.236598383 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.222580399 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.225029524 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.191614241 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.2506677 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.245698284 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.224888444 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.199288121 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.22685301 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.204213329 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.222368501 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.208788143 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.264479722 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.227954407 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.210339527 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.221053878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187565193 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.229747372 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190077174 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.192016876 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.236645875 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.19009645 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.244072728 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.228687042 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20192051 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.223190253 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.202136808 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.187663529 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.22269934 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193043473 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.250726087 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.230184858 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.22768915 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.221571752 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201860796 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.236436841 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.200887976 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.23375242 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.188587809 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232759836 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201059716 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.227026495 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.204625602 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.225144832 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.191992431 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.242048797 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.211967318 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.238292244 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.205851177 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.235856878 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.195072152 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.225253924 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.211151572 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.22547979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.195595473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.24005846 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.194814368 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.229897461 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.204306776 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233160935 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.18968753 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.248400932 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194997213 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.223689898 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216887915 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.226931372 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.195849766 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.23371303 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.233372973 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.229297385 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.199447011 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.234410884 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.190986997 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.230846046 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192205937 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.221619873 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.207573463 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.239909698 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.199389392 seconds)
  done (took 26.923108449 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.449663886 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.440219109 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.29774345 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.522491582 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.204998904 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.397914707 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.439872417 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.442097141 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.225453949 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.22469694 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.281204963 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.440059103 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.193706616 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254831777 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.444911954 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.527369927 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220167663 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266217163 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.26111875 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204288688 seconds)
  done (took 8.077746549 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.205018879 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.258715441 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.21304469 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.241483781 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.203044186 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.241964149 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.194030749 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.249377103 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204020986 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232007785 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196375111 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.232892884 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205102269 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.240474574 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.21032095 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.246829502 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.203010313 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.227427803 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.213822093 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.228747455 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.166763315 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.253536082 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200999862 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.246515635 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.211083128 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235870846 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.189891257 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.228979048 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199228128 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.233717012 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.196292769 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231283951 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.200946853 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.169745329 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.240570956 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.207483508 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231923557 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.196450261 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.233454827 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.196108737 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.239493793 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.205184332 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.235532326 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.164346178 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.248544246 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.175476504 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.209885559 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.238504282 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.170816974 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.248092722 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.204871374 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.239677126 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.200306268 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.247315947 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.200046459 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.243855381 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.202003272 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.240947539 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.19755529 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.224379302 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.191046501 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.229431759 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200125519 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.239392454 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.203640979 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.234835589 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.201904586 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.226763962 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.196849963 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.227166178 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.196350598 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.240132911 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.213134645 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.235015989 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198722128 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.236997596 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200489671 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.159697752 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.236873907 seconds)
  done (took 18.480551613 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.222893567 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.237339399 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211320657 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.265285271 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.206396009 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.232567423 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202514789 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.247219915 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.207250237 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.244311375 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.207556422 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.239304244 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.21541168 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.239441691 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203869291 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.244458391 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205230358 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266720719 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.21014935 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.258080095 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.20870531 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232148166 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205939735 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.240379241 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.219247922 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239391406 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.255687123 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.206394263 seconds)
  done (took 7.734001999 seconds)
done (took 80.543885366 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.52330216 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.772767892 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.453295841 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.46095345 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.4751665 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.482700489 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.452158406 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.466857203 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.067122991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.427758237 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.453303105 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.450694603 seconds)
done (took 31.882070409 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.508195142 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.271777996 seconds)
    (2/2) benchmarking "String"...
    done (took 2.275357572 seconds)
  done (took 5.89655598 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.248000532 seconds)
    (2/2) benchmarking "String"...
    done (took 2.259566109 seconds)
  done (took 5.845609557 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.437686455 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.440789293 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.639675479 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.442977281 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.438233242 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.444100259 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.445984926 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.444959865 seconds)
  done (took 17.636107357 seconds)
done (took 35.663645846 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.462173228 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.690837432 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.694986213 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.422757531 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.461000732 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.446895587 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.440577045 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.493578129 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.450622527 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.422729315 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.970417816 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.710274749 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.441190322 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.828424201 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.422561276 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.470137299 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.453880623 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.764379814 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.443928519 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.485809683 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.434599191 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.425140306 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.448396964 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.45610416 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.456006173 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.440594297 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.447205542 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.454390394 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.748865202 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.469367229 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.496205628 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.444743986 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.448718235 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.446275117 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.452685778 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.446977022 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.750204618 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.452339645 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.426212998 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.446538209 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.736426259 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.456531798 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.450583276 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.452216864 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.426830256 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.468816041 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.431037354 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.627460796 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.485299632 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.4483508 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.470628353 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.860156588 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.445161358 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.44194356 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.456224427 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.779822001 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.472516023 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.554020801 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.483422997 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.456624198 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.453969042 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.444438501 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.473965439 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.446434983 seconds)
  done (took 160.131877249 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.447458508 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.441725795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.441548677 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.454077785 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.443190157 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440684182 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.446938818 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.445870387 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.442534138 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.469017463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.441765395 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.442454169 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.449417625 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.450578527 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.455121632 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.46686272 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448904711 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.461604021 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.452496509 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.450401549 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.475136049 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.442266436 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.444587052 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.441374633 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.447988463 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.532510873 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.466891146 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.455642718 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.451657993 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.446374989 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.457349709 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.453742197 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.221174634 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.406273452 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.467361736 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.444332621 seconds)
  done (took 89.389444359 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.450540533 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.449295822 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.448881663 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.451177556 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.488845125 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.452177962 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.096208603 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.077126009 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.5184044 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.925043891 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.084205959 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.729907554 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.446124749 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.448837383 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.547025498 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.459633239 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.447121174 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550067994 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.473209268 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.448695466 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.451194736 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.098195658 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.467457838 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.839564026 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641832317 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.445448335 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.48884694 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.855283133 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.446550082 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.49220044 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.798307313 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.4874784 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.448684431 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.831713935 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.766391732 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.448721098 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.568355724 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.447290609 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.492245348 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.454212159 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.743806248 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.445965859 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.453460317 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.454576521 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.457671398 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.171692992 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.453359956 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.099638089 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.454642242 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.470918614 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.448341929 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.450514343 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.957870062 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.23401705 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.450076717 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.452938883 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.456022865 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.454388928 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.453247162 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.490787691 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.947951482 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.374864639 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.448538672 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.458292706 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.48984176 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.455946248 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.597329382 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.456349023 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.965829943 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.519118598 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.625340485 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.101923505 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.455391359 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.553728236 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.573796989 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.448279421 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.455837156 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.454742395 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.454988445 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.573141599 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.447734311 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.290499861 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.641084596 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.454316572 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.059881358 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.562913203 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.449225981 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.879543412 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.454213765 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.457642973 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.234732364 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.553388039 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.452342718 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.458121246 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.45649569 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.290228946 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.07736305 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.805323987 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.458627595 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.488025957 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.457216312 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.443022468 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.080226683 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.134465075 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.454920629 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.575575357 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.643112507 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.455771086 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.459171868 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.05920725 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.462339799 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.511259218 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.45335388 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.864444564 seconds)
  done (took 410.803589768 seconds)
done (took 661.665488345 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.441017674 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.443840239 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.443280462 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.436198346 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.438702226 seconds)
  done (took 13.551994357 seconds)
done (took 14.902785613 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.45827811 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.472254328 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.491187602 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.326035734 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.457068808 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.45445353 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.456672039 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.475574513 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.456271569 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.454001448 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.320134844 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.460551932 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.455912166 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.458173557 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.304279127 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.462703323 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.437229343 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.461856986 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.462069234 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.857152435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.469500137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.593939774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.853331349 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.534974804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.862949471 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.884477908 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.470667185 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.712197969 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.508780551 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.507649052 seconds)
  done (took 21.608809473 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.423332604 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841868648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.466851616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.611872641 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.83649066 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.534111984 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.854700168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.895227458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.472786169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.725459851 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.513567053 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.510801059 seconds)
  done (took 21.617955399 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.290426666 seconds)
done (took 95.618576359 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.524869469 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.597147933 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.517805232 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.500034816 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.500316346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.497809952 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.499981178 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.498785705 seconds)
  done (took 13.490892802 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.497403686 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.498006485 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.499079736 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.496642765 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.499883191 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.499532797 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.499323762 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.501308721 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.499292822 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.497723209 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.497812746 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.498798975 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.496394548 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.498333692 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.498740028 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.500068968 seconds)
  done (took 25.331536365 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.501228194 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.500212701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.501003305 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.499494314 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.498019545 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.500211934 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.500703546 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.499897858 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.499339546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.498266295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.501937013 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.498975184 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.500799717 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.499201888 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.502067267 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.501497013 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.498198898 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.501069515 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.502819318 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.500791826 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.498198898 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.501871502 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.498821463 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.501781756 seconds)
  done (took 37.363533381 seconds)
done (took 77.541090178 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.464175507 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.467581876 seconds)
  done (took 6.286799739 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.599620804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.617230375 seconds)
  done (took 4.57415276 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.50404154 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.5003278 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.504806232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.502291876 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.502989381 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.500805096 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.503529884 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.501436041 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.503741851 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.500529083 seconds)
  done (took 16.379681173 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.501011617 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.501107997 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.501413763 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.501821076 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.502787121 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.502661826 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.50121667 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.500345609 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.499621774 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.505567223 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.503424703 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.504228855 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.501096474 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.501346994 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.502296766 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.506148792 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.502749198 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.505275776 seconds)
  done (took 28.399139724 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.522819277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.528256491 seconds)
  done (took 4.407752271 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.68276343 seconds)
    (2/7) benchmarking "second"...
    done (took 1.585774001 seconds)
    (3/7) benchmarking "month"...
    done (took 1.672551726 seconds)
    (4/7) benchmarking "year"...
    done (took 1.657235393 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.584335619 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.534843153 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.589207399 seconds)
  done (took 12.663698016 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.505061573 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.856600131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.033545676 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.713835816 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.497493362 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.525515431 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.455041385 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.527885006 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.528222409 seconds)
  done (took 16.999569499 seconds)
done (took 91.065736853 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.468088715 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.549562692 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.478886666 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.50273041 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.870813809 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.530459914 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.471260347 seconds)
done (took 18.235361843 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.454645175 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.452652744 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.471381382 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.474328544 seconds)
  done (took 11.211504689 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.47128116 seconds)
    (2/2) benchmarking "read"...
    done (took 1.897106259 seconds)
  done (took 5.72712368 seconds)
done (took 18.301870092 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.50717071 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.508539878 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.507452868 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.507951535 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.506632023 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.504931109 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.50856509 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.505442696 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.507685579 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.505878995 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.507313186 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.506583763 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.507554418 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.505924182 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.506183572 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.507453777 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.507976049 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.50787443 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.508363039 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.508219726 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.5082749 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.509680526 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.510190507 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.509223344 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.509241085 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.508831465 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.505709909 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.505999611 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.509165865 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.507405027 seconds)
  done (took 46.590100181 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.511372291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.510443821 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.508880843 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.5088645 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.510518412 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.508660075 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.512134818 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.50827071 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.508593725 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.506384366 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.508515363 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.508297319 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.510856373 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.510730729 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.509514932 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.507729859 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.508946424 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.512003796 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.505603191 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.508090868 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.509173758 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.510962952 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.510806647 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.509971833 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.510379148 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.511119535 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.50934403 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.508827624 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.51106031 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.513345866 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.509776627 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.509508018 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.510867339 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.51198438 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.513296628 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.509715726 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.515039937 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.513859967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.511677358 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.511881993 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.512496596 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.513009651 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.511669046 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.511544031 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.511265365 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.513399016 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.513681105 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.513003016 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.512010641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.510502907 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.509795833 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.510978876 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.51066885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.513498539 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.512503021 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.51146944 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.511814037 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.509922526 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.513315835 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.513947409 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.515926641 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.514020044 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.511811453 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.51378405 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.511248881 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.513492742 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.511973484 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.513034584 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.512876603 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.514601682 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.511934165 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.514162939 seconds)
  done (took 110.171075599 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.514085136 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.514438463 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.512510354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.514230476 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.515565143 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.516095029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.514421491 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.512777568 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.514846755 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.517180292 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.517495556 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.512082437 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.513010628 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.515622762 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.514071867 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.515402762 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.513513765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.51439998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.516865727 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.513694723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.516182331 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.513471022 seconds)
  done (took 34.687889921 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.517152845 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.514908565 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.516333467 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.517120298 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.519718464 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.519066146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.515362812 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.516799797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.516239321 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.514903956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.516745111 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.517564419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.516882838 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.516990673 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.516736311 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.519906267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.516928654 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.518214991 seconds)
  done (took 28.675861994 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.516844216 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.515088336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.515793943 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.517492693 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.514563199 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.514887054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.516486279 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.515493625 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.518063575 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.515169771 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.516434527 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.515475118 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.516963085 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.518771905 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.517057442 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.517990032 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.519774686 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.519855214 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.519246756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.519012089 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.521161036 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.518475778 seconds)
  done (took 34.74907319 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.518433944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.515809028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.521445569 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.515436914 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.517865016 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.519611258 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.520322172 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.51687753 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.519593657 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.518808013 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.520788084 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.519009855 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.521446198 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.520428121 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.518173784 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.51663993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.520052096 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.519750172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.517577828 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.517969289 seconds)
  done (took 31.744644483 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.518713587 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.519136965 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.52077209 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.520570389 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.521547538 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.522015125 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.520457106 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.520563753 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.522129315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.521333893 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.521658515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.521435932 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.522018268 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.519662103 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.524171754 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.519691087 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.522231494 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.519775315 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.517711156 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.521403874 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.523327094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.52215369 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.520962896 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.52344296 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.523199144 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.51933748 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.521445709 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.519854794 seconds)
  done (took 43.962953321 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.547492667 seconds)
    (2/2) benchmarking "in"...
    done (took 1.548003625 seconds)
  done (took 4.46823608 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.521298693 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.520093442 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.52047282 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.520637576 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.520247861 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.519609931 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.522065829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.520639531 seconds)
  done (took 13.537301287 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.514987276 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.522572598 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.520893754 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.521346324 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.522143773 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.514046164 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.530888251 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.523575589 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.517408464 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.517947918 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.520956401 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.518359493 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.519928058 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.519275042 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.517579086 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.526644694 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.524702268 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.52273477 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.523450992 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.525431341 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.523872414 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.520524084 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.524867234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.528674492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.518804172 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.536013693 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.534402664 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.526470929 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.517167093 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.532009413 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.52210962 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.5264263 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.524111341 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.527032662 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.523619938 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.527964415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.536244309 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.524670491 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.534389325 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.529192714 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.524834199 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.525145761 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.524657012 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.529146688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.526280053 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.530195495 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.525962135 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.524885392 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.519384902 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.523763672 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.530582905 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.520026464 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.526006345 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.52985879 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.530361019 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.538939204 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.533677642 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.521505284 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.529611343 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.540458113 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.544609967 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.53282474 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.533230587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.531320429 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.53366933 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.534688664 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.54074523 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.531278594 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.534774359 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.527927538 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.538452899 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.549941721 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.541699821 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.53494135 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.526614942 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.529377444 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.52379503 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.533488372 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.539804119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.537909255 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.534634397 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.529361521 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.537952278 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.529177419 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.525523462 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.531027933 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.530458936 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.529080409 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.524512999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.544391504 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.538154677 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.527837583 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.52122124 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.528670231 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.529630758 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.531345292 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.522933468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.526918612 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.533653267 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.532741629 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.53139453 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.528099767 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.537495794 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.536049312 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.53053185 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.541600646 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.537343331 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.527328161 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.542330069 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.537798207 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.531276568 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.526651119 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.535686487 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.536244797 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.526957932 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.537314277 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.537653356 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.535005045 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.536335382 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.530499793 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.537181299 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.54555925 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.536157007 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.532455629 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.533232124 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.537135204 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.533632384 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.535883788 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.539291903 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.530851374 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.531347457 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.537638271 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.538313356 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.529412295 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.536409344 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.529663025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.537769922 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.532960512 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.53081359 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.539731484 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.536828182 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.533297216 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.544561288 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.543983561 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.537891585 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.537926645 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.55075607 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.533302385 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.541461732 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.539475586 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.538846874 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.533420416 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.530899984 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.537973091 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.528612263 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.538920208 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.530072434 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.53978638 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.535139699 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.53466834 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.53628754 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.526902548 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.534958112 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.540841821 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.544192876 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.538179471 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.538944512 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.537532392 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.534441496 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.528214796 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.537238289 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.528270739 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.533074423 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.540676716 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.537387122 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.534681401 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.542679624 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.542485675 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.537637014 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.534132658 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.534797127 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.541542189 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.541861713 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.547032971 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.54500478 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.536892785 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.535736283 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.534665406 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.535300823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.542991955 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.535910817 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.541803745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.552018731 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.551401822 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.533390594 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.539151522 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.530159107 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.542028006 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.544646564 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.542838304 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.539149986 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.538437185 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.533966226 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.543727174 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.541121465 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.543864412 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.533287508 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.542671802 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.538567929 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.539260335 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.539665833 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.534169883 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.538715014 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.541983307 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.539212633 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.539313415 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.536167274 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.541137948 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.531356187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.536543648 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.543999135 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.539125821 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.549115359 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.546524806 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.542555865 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.54780325 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.541348589 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.5359354 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.541338951 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.545322139 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.5397905 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.554342071 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.543977345 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.538297293 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.55572444 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.542445935 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.534873464 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.548494749 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.548412895 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.541620342 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.53687763 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.543154545 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.542718945 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.540975916 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.54051238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.53521855 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.547877772 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.553595049 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.54915447 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.537191217 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.545375358 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.541811078 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.545916698 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.547228946 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.55024127 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.548024927 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.553659652 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.550444299 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.543265174 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.545975225 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.545985631 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.542456062 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.543778786 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.539001084 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.545667225 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.556035024 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.54313492 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.552252979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.5421753 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.546257454 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.537704411 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.544707466 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.538964138 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.561902669 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.561811666 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.554392636 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.550126521 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.549140013 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.553619982 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.546238666 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.539301122 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.543255955 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.544494031 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.541620551 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.542795491 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.548785498 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.543781231 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.547983372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.548967714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.547105466 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.548947111 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.543679333 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.539294697 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.551260254 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.54605254 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.545166673 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.539648373 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.548793321 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.548427702 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.555492636 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.544065485 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.544341567 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.562242307 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.553655601 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.54594226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.545806348 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.542969605 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.539049204 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.549860845 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.549245543 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.543895911 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.548911003 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.543848139 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.549029803 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.545423199 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.561398625 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.555679392 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.541764424 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.550911537 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.546010076 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.540218766 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.550188052 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.547505727 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.561684346 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.558644434 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.542942018 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.54976167 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.552173988 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.547432184 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.551036623 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.549369861 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.552714211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.547290477 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.56409813 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.552838109 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.547911574 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.557592275 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.556104655 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.547563486 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.547862825 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.540595421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.559006421 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.555432363 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.552163023 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.550159136 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.544698806 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.550959169 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.547406063 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.549137708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.549278509 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.54861299 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.561604517 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.553973659 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.552592547 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.550199366 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.563138092 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.56001905 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.563656244 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.561023717 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.551166109 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.556919355 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.548968204 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.550010724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.547907524 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.549023587 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.55336981 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.54717887 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.556193354 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.550729461 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.556423272 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.561797698 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.557095424 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.549640146 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.558411443 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.561731837 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.545874025 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.55511235 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.550762147 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.545913346 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.555741341 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.553242141 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.543929644 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.547102044 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.551025937 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.554397525 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.547616984 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.557406078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.548096025 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.557268979 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.550246019 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.55214682 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.553301855 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.553907589 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.545649486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.560725285 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.560447386 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.560902752 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.554059423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.558731805 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.549994661 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.569112455 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.564869946 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.555273545 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.559277545 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.553294871 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.551104369 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.556158573 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.560213558 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.553086674 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.557213735 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.54810308 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.553109652 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.55143835 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.562143622 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.556113386 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.55786696 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.547105326 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.549373842 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.556789869 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.554463525 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.555876484 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.56009825 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.561155577 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.549703074 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.550102356 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.556143697 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.554422599 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.561247558 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.552224763 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.553310236 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.556533271 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.558867367 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.554532738 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.555113258 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.545397218 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.551036414 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.570670195 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.561869216 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.554304706 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.554344376 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.559546084 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.552942941 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.555742319 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.55525797 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.5514468 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.554362534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.56081133 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.555382776 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.554339417 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.5541139 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.558255697 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.571290176 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.559810574 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.552187537 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.573380805 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.577188063 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.563014542 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.55176374 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.556106891 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.557183074 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.559855342 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.557723506 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.55386268 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.575555803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.567674842 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.561626796 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.566451921 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.55918305 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.554207417 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.562299438 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.560275227 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.565714327 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.567495769 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.563435546 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.567728131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.559727533 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.558990078 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.552829099 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.555673525 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.557216878 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.555692801 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.560489082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.564062791 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.564423032 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.565160835 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.565478334 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.559424351 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.560463101 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.561369641 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.554903595 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.562714574 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.554648465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.568179096 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.561299101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.555408757 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.565586797 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.558197799 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.559433711 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.560344161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.563409007 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.561539704 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.557825894 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.566308887 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.57203245 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.571565211 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.561732816 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.558268059 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.56265933 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.564859539 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.563887908 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.563166447 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.559238504 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.581004959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.577323206 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.557995608 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.564137451 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.576069066 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.571391027 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.562863057 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.562032714 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.569366677 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.56456481 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.568317312 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.563095209 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.578513232 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.568445121 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.561467908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.567966849 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.5622414 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.561453241 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.572194272 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.571038468 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.563706599 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.564042257 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.582024781 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.573243986 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.5696473 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.58727468 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.574892101 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.571695326 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.569038773 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.555452757 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.564575844 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.569651141 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.569715534 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.565229489 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.565868816 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.565170823 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.557717151 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.573551218 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.580811289 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.573639986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.564238232 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.559277894 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.562098714 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.568493452 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.565812943 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.567923337 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.564276295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.564444892 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.564785718 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.56148446 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.586188789 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.589500173 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.568966906 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.567818855 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.566162429 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.576173828 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.574068742 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.566138543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.571202176 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.566172486 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.566810207 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.573578945 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.577068844 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.566040696 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.562832397 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.564090657 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.565972111 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.57168443 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.586610211 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.586766515 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.579105834 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.571431395 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.571667319 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.568659884 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.564940765 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.573775758 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.568899159 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.572354208 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.567003597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.574032494 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.570517383 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.567649978 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.565558581 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.573732875 seconds)
  done (took 923.964678213 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.569555807 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.569817782 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.567930252 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.567475655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570484976 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.567871306 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.57005608 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.567903153 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.569096182 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.568069305 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.5701841 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.571732131 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.569318207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.568069026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.568109464 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.569847045 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.569243826 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.568344061 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.572477338 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.569922963 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.568282601 seconds)
  done (took 34.366757045 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.56818608 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.570852132 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.568424448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.571946265 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.569317928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.570679135 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.570281179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.569881128 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.570583731 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.57045662 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.571272646 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.571205389 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.570444328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.572719897 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.571328868 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.571424062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.573907548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.569589471 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.569071877 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.571096087 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.572024976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.57187817 seconds)
  done (took 35.970508891 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.57007389 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.573464196 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.567781559 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.575915415 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.573048919 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.570850175 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.572820399 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.571069617 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.571495649 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.56774636 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.566675971 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.567745871 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.574114417 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.58057348 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.576846958 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.580257518 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.572061573 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.572641534 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.572671358 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.574253542 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.584993524 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.582448788 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.573575592 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.567247902 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.575963465 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.575002869 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.576352831 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.575126139 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.568912779 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.576029256 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.573007433 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.570332163 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.586398033 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.577122622 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.569900474 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.576524431 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.5754597 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.575863872 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.575810723 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.583039924 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.584845881 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.576697148 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.586277138 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.585147874 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.576259453 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.575561459 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.579219536 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.576984825 seconds)
  done (took 77.028094286 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.576209377 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.576085897 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.577126044 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.576130596 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.578213472 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.577510939 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.578477124 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.575951104 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.578193009 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.577578755 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.578135879 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.576633034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.57570624 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.57794137 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.575566907 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.575211555 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.576918755 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.574653174 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.575483726 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.575359059 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.577202939 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.583916851 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.575900609 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.578476075 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.578367542 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.577976083 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.577732196 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.579035505 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.579711848 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.577482933 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.579926959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.579255504 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.58071847 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.577008501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.579740832 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.57882214 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.578426838 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.580469905 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.57827214 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.578512393 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.57861925 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.57835078 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.578493536 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.579360546 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.578979491 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.578134971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.578643276 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.577473923 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.580044431 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.578595854 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.580729086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.578365238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.579660095 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.578959307 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.579602756 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.579362292 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.578230165 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.581385524 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.580470324 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.58090767 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.578252304 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.579478228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.579543949 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.580918844 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.57932346 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.58073139 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.579869829 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.581319804 seconds)
  done (took 108.754643941 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.582894654 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.581716572 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.582206927 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.580980514 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.580383162 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.580808775 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.580640248 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.582989359 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.582408769 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.581865403 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.581754495 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.581877696 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.582579182 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.583281366 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.581422959 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.583630223 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.583995144 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.583099429 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.583490401 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.583476921 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.58432242 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.588139665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.583694127 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.581983226 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.584335969 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.583045162 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.582671861 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.584213188 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.583616464 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.584351963 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.585869544 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.584594871 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.584360623 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.583237576 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.583968325 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.585031658 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.584209696 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.584641036 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.582331734 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.584398128 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.586731106 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.58231106 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.585804103 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.587022065 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.585135093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.585473893 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.583552978 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.586843341 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.584636705 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.584426064 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.584148864 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.585550649 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.585315354 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.582842693 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.587788642 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.587370293 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.586633957 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.58463908 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.586299138 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.586392446 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.586300814 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.586446433 seconds)
  done (took 99.634807194 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.585653315 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.585301735 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.586964725 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.585878693 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.585447283 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.586143042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.586098973 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.586638776 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.585967252 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.586131309 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.588399614 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.586378757 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.588108027 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.586288871 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.586004617 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.587766363 seconds)
  done (took 26.808219328 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.590118478 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.587986084 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.58781169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.587989716 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.587003976 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.589401138 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.588258326 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.58652675 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.588755456 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.588891926 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.586988122 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.586286217 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.589089786 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.589226185 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.589236732 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.588152935 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.591199342 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.590287704 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.588417703 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.589148871 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.590764091 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.589611221 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.589254122 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.587731303 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.589090694 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.588676326 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.591216663 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.589824097 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.590696135 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.590531031 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.588415887 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.59070724 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.589234985 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.590633208 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.587395716 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.58753477 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.589600116 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.587502294 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.591594504 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.592352211 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.588435583 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.590284142 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.588556827 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.592567184 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.590728123 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.591122586 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.592101272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.591942104 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.591364656 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.58932564 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.593332295 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.59296053 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.592735292 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.590479418 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.590481304 seconds)
  done (took 88.859112463 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.592113634 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.589427748 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.591279799 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.591749761 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.592328676 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.592536523 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.593093228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.593099584 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.590384433 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.594131349 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.593168657 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.593958981 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.598910308 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.592627247 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.592530237 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.592584504 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.591447558 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.593528409 seconds)
  done (took 30.098702426 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.592904936 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.593569336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.592173907 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.591791595 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.595146492 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.594328301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.594068422 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.593779139 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.594165851 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.594030497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.595334505 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.595910555 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.59296011 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.595756206 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.593646511 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.596018181 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.593679616 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.595620993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.628189241 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.595530618 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.594295755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.592941672 seconds)
  done (took 36.538203148 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.586053436 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.585451893 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.587812459 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.607029636 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.592920092 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.585817862 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.586564046 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.582572128 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.611431594 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.619430795 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.611852457 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.596003445 seconds)
  done (took 20.583180865 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592506351 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595720867 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.595322422 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595440104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59325093 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593918123 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594262301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595868162 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593910022 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592590301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595146072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594999756 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597789845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595597387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595049063 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597369749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596000441 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596479482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598704276 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595814314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59547286 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595233584 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597710155 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595966568 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596716385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.596235946 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597434353 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597709806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597981629 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597178105 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598879229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596338613 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597437705 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599469248 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597694232 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596636765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596798797 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597794454 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597632702 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598603426 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.598318473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597254092 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598726626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.598490143 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596945743 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597812893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59927495 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.598327832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598947464 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600853293 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597230975 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599898423 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599634702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599612074 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597934975 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597698143 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.599903172 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603920442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598831179 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597100721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.600250912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598712518 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5999749 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.598781731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601920607 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601141947 seconds)
  done (took 106.862836332 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.598151273 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.60005361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601521814 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601225198 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598913591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602210309 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600748112 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601878144 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601264449 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600175343 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601353077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602111484 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601503306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601289451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601444988 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600610944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.60187549 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.600656759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602521941 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60107029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600997724 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604044062 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602730068 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.599940188 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600816696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601130842 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.602374157 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601661287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.602546875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601908734 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600995769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60197697 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601961325 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.601490316 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602394481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601722398 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602449515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601298322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.60231549 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603342017 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601994639 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601753477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.603869599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603463611 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.604119979 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601023287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603644709 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.60320017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605886195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604382653 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604188354 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.60387323 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605079459 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603704354 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603353262 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604637224 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603438957 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605142037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604202113 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603492664 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.605542786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608104983 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.606045922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603911992 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604303942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605529865 seconds)
  done (took 107.206251091 seconds)
done (took 2046.626497878 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.570065859 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.570735217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.600198251 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.902711791 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.587994954 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.248924532 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.149057083 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.589321729 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.597909762 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.597445178 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.597183134 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.572126455 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.928158951 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.589459106 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.598650848 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.572855319 seconds)
  done (took 59.713765627 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.638005294 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.614522839 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.757062752 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.603081439 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.638484405 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.865551269 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.675530457 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.603493014 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.81975613 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.600187286 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.58598988 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.627900168 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.596806899 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.583624426 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.619058541 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.865732088 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.959348811 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.587654478 seconds)
  done (took 34.684507437 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.204234771 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.595384441 seconds)
  done (took 6.24266773 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.629014416 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.605264049 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.611071701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.605821872 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.576363377 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.565041057 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.602648703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.57813965 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.578273746 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.765312824 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.608684386 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.626597558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.604432798 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.607042068 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.609299549 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.66460763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.798993294 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.613491841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.610676748 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.620337894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.604654893 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.864024049 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.664667693 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.614992521 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.764867795 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.591240828 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.619355226 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.62695298 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.818314047 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.614009226 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.604659015 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.606197269 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.60763963 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.577439352 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.247571357 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.578268786 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.654209031 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.619780699 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.611208311 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.819618472 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.607697599 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.620900326 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.578435429 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.242006752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.789225571 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904310807 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.584476839 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.600543966 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.608471022 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.820009723 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.611812857 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.607597028 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.713129023 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.576128221 seconds)
  done (took 101.509233194 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.602233776 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.577714597 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.846957145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.605532589 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.568369414 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.568464397 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.574070488 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981158847 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.621345215 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.579532914 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986553946 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.365116612 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.581020184 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.634419224 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.625415565 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.621272789 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.580693047 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.579589904 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.577922443 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.572952818 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.281325928 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.580956419 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.569581579 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.752133633 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.648543995 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.295161556 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.578653403 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.569862481 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.583179467 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.575457885 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.341850804 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.590556942 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.649526661 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.57118276 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980155228 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.114195248 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074714459 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.572796722 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.6195783 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.577623453 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.571191142 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29083 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.107104681 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.569724614 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.585995258 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.283904818 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.580509295 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.588286611 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.590429342 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.944996218 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.581217067 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.582703359 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.580620902 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.570872456 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.580719937 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.648973867 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.626040225 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.295404813 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582537556 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.572318798 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.599453674 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.584333665 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.584344001 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.584482496 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.581538895 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.109686365 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.765629833 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.58256689 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.11752975 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.337465889 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.581241162 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.396868136 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.581432038 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.609231314 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.662123096 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.581263232 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.581285232 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289305435 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.631505934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.572183166 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.096472044 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.587751487 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.996097269 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.5921063 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.574652894 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.287774095 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.586004617 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.678520013 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.58441021 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.575528075 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.576201554 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.597671953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.979788701 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.655971265 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.581767626 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.583350648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.593826213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.575883707 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.578190704 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593155457 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.412841745 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.5890395 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.584225061 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581610692 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.601495693 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.575095758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.587179138 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.586939722 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962503751 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.585796979 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.585570274 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.587835855 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.576604679 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.582435099 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.752440866 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.594721089 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.052980131 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.588706846 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.581068095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.601118759 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.585807246 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.590757805 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.577342971 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.602330786 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.579144946 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.982566079 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.600682392 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.595552549 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.588491805 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.589595018 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.576386704 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.58328367 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.633079667 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.590492618 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.547380012 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.611036152 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.606087059 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.586169093 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.60067415 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.596345876 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.593163838 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.58782084 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016265686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987476131 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.835713047 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.587356674 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.579752704 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.543139529 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.582297442 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.84880738 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.608465644 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.580745638 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980307133 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.776376382 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.590859494 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.582847582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.588946541 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964460495 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.592155888 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.019926417 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.359285284 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.592011246 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.599928594 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.543721795 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.440412011 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.593263781 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.592549304 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.000845918 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.611980336 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.589639856 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.590005615 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.592750516 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.593332644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.597410537 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.599787725 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.591421996 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.590700257 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.697876105 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.877602452 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.607838469 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.595754111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284598621 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.599554315 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.581500902 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.621348218 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.585420744 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.592782993 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.630424302 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.594397584 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.598608874 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.592912549 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.599044613 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.321052559 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.582083937 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.596387292 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.875349931 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.498901641 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.589925366 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.591130758 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.591167144 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.638462475 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.320530425 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.645001505 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.059896024 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.603913249 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.666893325 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.595658289 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.629024892 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.320143504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.599568213 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.589925646 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.489592776 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.59426726 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.292157334 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.587408218 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.593566402 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.41316965 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.594696924 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.599058791 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.582486433 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.585378979 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991432011 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.59571074 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.627099228 seconds)
  done (took 561.817726905 seconds)
done (took 765.410227116 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.593745895 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.596036689 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.595974391 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.596192505 seconds)
  done (took 11.843413817 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.631738924 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.624293215 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.63242742 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.621692675 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.629270035 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.624329253 seconds)
  done (took 11.225452832 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.59351472 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.595288898 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.596931146 seconds)
  done (took 9.246546297 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.918408409 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.596540943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.100709664 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.597233419 seconds)
  done (took 10.675417663 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.634074068 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.63359363 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.634059681 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.631693458 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.633075827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.633163058 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.63178474 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.632777814 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.634578113 seconds)
  done (took 16.160212134 seconds)
done (took 60.612489691 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.747721341 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.75783834 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.617552134 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.669102894 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.810613836 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.75655738 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.76243634 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.769002748 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.763942259 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.662340721 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.754237114 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.656509183 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.75595053 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.87668411 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.669481503 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.758165057 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.656491095 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.850682548 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.760113769 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.66764328 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.784665983 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.668169884 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.669861091 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.600259991 seconds)
  done (took 44.908273952 seconds)
done (took 46.372755014 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.669010424 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.782358497 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.631759946 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.629194117 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.640872907 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.61654181 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.649657474 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.631237533 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.652520129 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.653080046 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.615100845 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.627188346 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.655056415 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.64022059 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.672476926 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.635983458 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.632534766 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.641877644 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.65535296 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.654952281 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.635697598 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.642985327 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.665995096 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.634009604 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.649364979 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.651922078 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.645689232 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.61083906 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.627858892 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.654830129 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.599596778 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.655512409 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.658097165 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.643812247 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.634824302 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.643659853 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.643157346 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.786086764 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.663212899 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.644178775 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.641134393 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.658419342 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.650737081 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.64765722 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.644277391 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.669740405 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.651683779 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.654920923 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.620498947 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.597464175 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.656435291 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.654701621 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.642183898 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.610559485 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.607293986 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.647642553 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.642105536 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.663620074 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.642325117 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.64309414 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.678627639 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.664560696 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.653866948 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.651950643 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.641367313 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.660674727 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.64476174 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.659116219 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.643660064 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.648916249 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.646991213 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.641798653 seconds)
done (took 128.141680241 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.816927977 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.605427199 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.852309362 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.639386475 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.86746513 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.80769887 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.645396807 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.641192012 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.640520278 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.501460276 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.641968927 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.644870483 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.608705898 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.648961226 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.816350599 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.643819511 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.641263948 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.407214213 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.642959695 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.820176923 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.611562336 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.641430799 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.642799479 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.497114473 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.606715282 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.614195982 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.823423216 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.64002657 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.399005628 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.613367035 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.606809008 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.396599735 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.8243938 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.661455343 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.653547214 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.652419208 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.857441857 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.646958528 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.817411488 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.818235894 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.856750149 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.683287518 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.613829105 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.611206425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.644612838 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.646260045 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.642977993 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.672000119 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.607673574 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.643722501 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.406384569 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.654256523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.653815056 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.64539485 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.64426894 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.666464779 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.645906019 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.646186851 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.829115421 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.648058318 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.818191545 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.501204029 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.508362062 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.64668894 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.611667168 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.644703841 seconds)
  done (took 129.822095537 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.762979287 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.769263047 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.818045857 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.64026424 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.732739268 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.821307724 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.641303409 seconds)
  done (took 13.657814377 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.652742782 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.646879816 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.73313443 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.731676493 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.648592953 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.872714121 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.646223658 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.658691932 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.6453028 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.733801275 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.644461492 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.646973962 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.65457032 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.614003428 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.729158994 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.658186142 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.809009302 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.644355613 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.646868502 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.851740993 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.646677556 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.655939278 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.731920169 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.659475831 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.645756978 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.65356216 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.460324529 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.647345518 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.648106857 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.647826236 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.6473532 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.762852386 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.64772776 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.616339899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.646186781 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813157176 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.650353721 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.645824165 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.648653855 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.619127195 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.649769569 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.649127099 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.647528781 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.646740343 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.649200432 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.67283598 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.650136306 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.648945861 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.647064407 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.648006217 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.733921192 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.649951226 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.646172673 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.6517935 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.73797464 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.659615584 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.650489493 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.65152056 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.650027633 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.650570858 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.854962213 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.73237323 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.649713277 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.733050272 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.651818293 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.650898344 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.650227309 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.649515976 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.792470048 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.651217449 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.735014487 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.653243684 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.887051629 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.677925873 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.649837455 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.649243944 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.649710274 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.650286674 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.61340887 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.657631532 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.650599563 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.648159728 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.658184466 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.651134896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.650648033 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.863444856 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.815153659 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.651836242 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.67025297 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.66020239 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.650315588 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.738986291 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.650804896 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.652373602 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.734372646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.81767905 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.737785301 seconds)
  done (took 169.37281557 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.663821007 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.666142042 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.651586071 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.683640567 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.648921905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.645750483 seconds)
  done (took 11.437534899 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.650148528 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.657466847 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.65389251 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.653792078 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.654186891 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.652280224 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.654347037 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.646407131 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.655775779 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.652972072 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.654522827 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.654023741 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.654497475 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.6544335 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.655251831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.654729837 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.655977552 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.655590491 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.655996828 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.655202313 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.620257995 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.654877272 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.654856948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.649787588 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.658414732 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.654224605 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.679680146 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.655920491 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.65509364 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.663553096 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.658528086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.656196015 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.650788483 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.652824776 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.662571825 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.652045697 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.657142574 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.65606171 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.653404459 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.657625945 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.656973419 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.657643057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.655990751 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.656301405 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.652067068 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.656180371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.658445533 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.683645036 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.657877444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.658812618 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.656829894 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.656963919 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.656880739 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.658142282 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.658606866 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.655566745 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.661971609 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.658718542 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.658290276 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.653796688 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.666442151 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.657449456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.654879367 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.659303323 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.659826295 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.658127895 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.653438471 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.663693686 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.660477914 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.659685844 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.661963858 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.659552936 seconds)
  done (took 121.753026907 seconds)
done (took 447.512682316 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.263608661 seconds)
  done (took 4.747056312 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.763363973 seconds)
  done (took 4.250318564 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.986494583 seconds)
  done (took 25.478076787 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.660768803 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.617944921 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.659876721 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.619361582 seconds)
  done (took 12.04323825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.269845907 seconds)
  done (took 4.756022536 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.63780876 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.622101596 seconds)
  done (took 6.748043658 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.01853469 seconds)
  done (took 4.505109135 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.451276591 seconds)
  done (took 4.94294484 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.648570185 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.636799764 seconds)
  done (took 6.78374338 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.608794596 seconds)
  done (took 4.09408005 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.929486844 seconds)
  done (took 19.418025715 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.650388224 seconds)
  done (took 4.142244137 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.674406431 seconds)
  done (took 4.161602324 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.705377549 seconds)
  done (took 7.192702788 seconds)
done (took 114.748269179 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.623933672 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.629057718 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.629516505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.626937616 seconds)
  done (took 11.994054831 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.785118066 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.779491302 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.782149183 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.767889479 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.769433739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.783825932 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.697085293 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.6947894 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.759420315 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.758328486 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.785463012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.766238849 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.781218687 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.693942296 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.75538286 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.785074275 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.756362175 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.783534345 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.709757784 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.768926482 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.664454956 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.759409699 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.757533133 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.66677236 seconds)
  done (took 43.502823161 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.216910964 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.788689679 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.864642075 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.750893951 seconds)
  done (took 9.107265665 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.830909014 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.834472875 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.840437042 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.885640625 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.93558706 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.840197416 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.697121121 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.693032054 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.67898767 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.826197312 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.902844 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.817878447 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.047596067 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.664421293 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.043125876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.663784689 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.662796575 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.831339866 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.877207221 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.906534623 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.664678239 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.827099382 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.836710939 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.826666785 seconds)
  done (took 45.122062591 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.679734274 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.688298561 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.665254779 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.685491081 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.666886201 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.666033858 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.667980404 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.680106458 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.666733877 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.665361915 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.668739091 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.68397343 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.660612568 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.666289267 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.680975423 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.663785458 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.667351414 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.679135245 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.681580248 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.665203724 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.665703159 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.682184516 seconds)
  done (took 38.287797703 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.63261648 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.6266014 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.063548934 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.968324324 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.63248469 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.619061125 seconds)
  done (took 16.033326096 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.757570848 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.958825491 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.653969266 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.107216357 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.221702354 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.649476165 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.663193552 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.000810578 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.3521056 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.340218404 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.714488554 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.749810852 seconds)
  done (took 24.662970899 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794896334 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640670018 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.65431484 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679131055 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642247733 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630216106 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712348757 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245096391 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.660125355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00160642 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657760669 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788572276 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979202873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646739575 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645003321 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.614135149 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964148025 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343803915 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641617485 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655905335 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693011101 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653567469 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.658616155 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91483065 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642915486 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644327188 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.011122504 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.6443084 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061179289 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001882991 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015666518 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640963212 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006631151 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216596119 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820376949 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925324024 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64218718 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.630946924 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.644011086 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.645798604 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650113188 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.6334705 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009062605 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633886893 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.641111206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643323288 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283146202 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.678031822 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.644727797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.646637048 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02240648 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804241308 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.671932933 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.645890026 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654730815 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645600743 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.673505688 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847090122 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364736675 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654687373 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647812826 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.646233296 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.641074329 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650270262 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456462864 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.665846893 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.67236979 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671605098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645248883 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637896411 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696842804 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645473632 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.685866688 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646504419 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632975744 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65004237 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638123396 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374405851 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641456641 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.64838294 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962797155 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642113009 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645687556 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.64646887 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645961823 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641955168 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677687924 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.622537196 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712644115 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254732812 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918807203 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698394887 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706365733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.952613457 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.61521287 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642804927 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.644476787 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637942856 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687842358 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281454227 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643432241 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.663999172 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986797832 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.945407303 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661109559 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.621814618 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28781181 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650045443 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.700137706 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65188576 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924446048 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.461847348 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022339922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665779147 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714980027 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647069086 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.667293306 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651211652 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.673677079 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.660275025 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029623041 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.613050514 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649220198 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795847363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656087482 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649951436 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648941741 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650735265 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648423309 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.932632704 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651048852 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022267915 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.653354313 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648479252 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.640076996 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637929377 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.66260535 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96201151 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651079792 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001487898 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65016494 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648867988 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637264208 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.948014758 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.663694943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.680298242 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078133818 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657134472 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662861737 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024192881 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718826325 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849127533 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717669126 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.663734054 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991093211 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.678231778 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.678170527 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653807163 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.639605637 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659336359 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.677946476 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646759131 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483743009 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642473599 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649686947 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653170141 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.695205794 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80327191 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678122686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937261715 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.667174855 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637023255 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.669806126 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.656130085 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947211024 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025363281 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.656586148 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901857981 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.288791472 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457043385 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688709926 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.652903208 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.653361926 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.653732434 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652527182 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65264696 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653537507 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934172705 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037111493 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655078415 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460259925 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643816368 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663708911 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.683893462 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027650653 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.689128834 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65450837 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.664889649 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65643599 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67924713 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025388354 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949495813 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.70305379 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65397597 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.263099519 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685504211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652887494 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656558701 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713184058 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663181401 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345758493 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073246256 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650853506 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017291864 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653013278 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.702062882 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.656935425 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662975998 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647562096 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.675377504 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685303277 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.944975475 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652670776 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650797563 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369428193 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626663209 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387027288 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662760467 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.644842337 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662180086 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295930439 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658393361 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657040606 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029736044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286300095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659348162 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28522412 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.673925294 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.63245815 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022111331 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974594046 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670435605 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.654992999 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021547153 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963315656 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717650408 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.665599655 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66083606 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.62499072 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353292483 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647893422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902670026 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272447425 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65603517 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648671454 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.725753813 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.666924893 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213920709 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662135388 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661146435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660201134 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673018335 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344084748 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.65685825 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660890956 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477508837 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.662298886 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.30461171 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660903667 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945651888 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022294665 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.020892322 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.672512196 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.650299036 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.981526701 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037549048 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662354479 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.670553287 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396337202 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.598248982 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.690518466 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661289051 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.67325 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673264247 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073903951 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.667151528 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.659233063 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660081286 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.661675273 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659861704 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.658210028 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.673956654 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659572352 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337105437 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.678082597 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658890562 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666606208 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663605267 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001840178 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.706772838 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467608904 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971017265 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679500585 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715924979 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.685842941 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673926342 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.627249527 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662273603 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.66238067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691041926 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969773391 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.657330098 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.635501694 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.733563186 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965558399 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662677077 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.672278926 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978782218 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.657635304 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.668493528 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625331406 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712592781 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671016755 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653780135 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647199619 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721275171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814469913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948517476 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.039697576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035896464 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208945635 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678076381 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657593818 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.70823699 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824073299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664550639 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.656599628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.655812516 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480366183 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66136839 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478250133 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036445207 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661564575 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667236525 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665015712 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983491266 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662589007 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016768543 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665083668 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.656243228 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711989492 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665652385 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661969515 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964227714 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019347083 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668665896 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680636902 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666509477 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.665213503 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050781946 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.956661179 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.370303095 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416579651 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657274085 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.665339915 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307751146 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021485414 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666999763 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667734633 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666611794 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.673768361 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668918303 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.698057344 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667201116 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984392778 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035388299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25165791 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034886769 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.683849462 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.621301843 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670254646 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007235837 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.585566992 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.954924226 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483131899 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.597339299 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006339493 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819454835 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95713596 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.669093466 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992161992 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.679052343 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658722034 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666985655 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668897351 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.665758753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039611671 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473723788 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999950483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.695856226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.677759581 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718638662 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.957151465 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971994693 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.666911135 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978953748 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055702265 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.681445874 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668812354 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482467778 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043026212 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662980118 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.686631799 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997414336 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668932132 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737000145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.630378416 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.667026443 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409192259 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.961216786 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721589527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676278597 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.606334088 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473397979 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.664394334 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355897702 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66992311 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671891097 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037234763 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.702295383 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.684432218 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044931622 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.699306106 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682216852 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961853808 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.479440507 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.669735795 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.680627334 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673550666 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.665311141 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67531751 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751982707 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674633765 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666961211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.22134812 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674542133 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671483504 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706056336 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.686832732 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669120354 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.674408946 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671950742 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.693239831 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.649611588 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.650258738 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.694379153 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877556985 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372070918 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669986525 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.374777617 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.093884984 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.011635488 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.680546668 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.649586375 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.701886601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675619993 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67376927 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665337611 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.666170607 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417102063 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.673770107 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.045556981 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704275872 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.97642703 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977618453 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685030128 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95605789 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690266339 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72841267 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.651271646 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678882699 seconds)
  done (took 1137.032635045 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.723827381 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.716836199 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.690175475 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.695980613 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.677111314 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.735940164 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.719416904 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.704972189 seconds)
  done (took 23.190311772 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.678973842 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.69384773 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.674414184 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.691583266 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.678522528 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.318016069 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.667285554 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.692434841 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.727357787 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.678150203 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.665643235 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.482751193 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.702636837 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.683113125 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.666299255 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.693458854 seconds)
  done (took 37.927121809 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.198451982 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.132255227 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.336319444 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.706812507 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.664070689 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.672589091 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.196744642 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.661630016 seconds)
  done (took 31.096583931 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.712129245 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.717681069 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.716737094 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.717853646 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.719576351 seconds)
  done (took 10.110910263 seconds)
done (took 1429.554754381 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.707090336 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.705969314 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.708208425 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.708664559 seconds)
  done (took 8.360518821 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.65447764 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.645489765 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.646937365 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.696170023 seconds)
  done (took 11.170778281 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.198352667 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.397371901 seconds)
  done (took 6.12439459 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.680201023 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.526321399 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.513743542 seconds)
  done (took 9.249103046 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.072725939 seconds)
  done (took 3.599533782 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.195914648 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.282523986 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.676228381 seconds)
  done (took 8.684701037 seconds)
done (took 48.721246467 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.673996952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.434219044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.833948227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.672798196 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.828274951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.834162431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.966307447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675240686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.662011559 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.679602622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.664056721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.830833935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.940397868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.442501034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.95389721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.444209002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.83880094 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.681679424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.684101379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.666731992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.955489382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.675637943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.680287976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.682550833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.83264478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.82238286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.673750621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.4378334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.692816873 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.665259738 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.814556237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.674028729 seconds)
  done (took 92.542916737 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.676039809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.6670717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.684128617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.666896817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.663701927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.663635648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.667670449 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.667116118 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.666836753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.668468385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.6665877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.666266849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.666309033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.666558226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.667971605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.666113966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.681277836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.667544385 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.666328239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.667008633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.669845097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.667756144 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.665054544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.678986553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.67966548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.668294691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.678780032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.66830824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.667515891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.681695836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.669709116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.667592716 seconds)
  done (took 86.969318656 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.696527959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.666796386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.670326024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.679843645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.684869983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669796906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.667280386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.667777585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.668907897 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.667489979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.699661528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.685401684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.669989809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.66868643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.669831548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.670455021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.682112579 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.687048262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.666383204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.669503643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.669280989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.685333658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.668820804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.666747566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.672625478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.669993091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.683155169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.670107281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.689238555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.669564614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.670719301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.669564055 seconds)
  done (took 87.128819805 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.004328902 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.712705435 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.717733798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.685420262 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.716823837 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.713819404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.686886091 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.042211374 seconds)
  done (took 17.814682021 seconds)
done (took 285.987356431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.687076198 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.679364883 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.746926198 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.687323157 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.731587794 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.750319925 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.005218401 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.743702045 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.998928984 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.691321362 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.72583853 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.690801812 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.681208693 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.916613279 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.69189853 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.681627811 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.70756805 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.700406805 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.683723957 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.058459598 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.749744154 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.682705601 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.691107717 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.710529042 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.682042528 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.796831077 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.791855864 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.934976089 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.899783066 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.79370114 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.70269278 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.690592288 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.681992801 seconds)
  done (took 77.604387543 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.709054971 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.720448878 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.718954415 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.719824079 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.7196251 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.718818014 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.7112908 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.719391063 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.71958585 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.718427602 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.719155488 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.72295667 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.722427761 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.720593589 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.721859044 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.704633949 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.709914858 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.718780231 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.710224743 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.70169817 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.718910414 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.719182097 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.721736402 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.716158039 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.722835704 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.7201047 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.717941856 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.721441882 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.720932041 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.722300091 seconds)
  done (took 53.066436243 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.719273519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.694381597 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.694819851 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.717935639 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.715181589 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.718673234 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.112209172 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.712317327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.717978453 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.717037061 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.68781931 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.723526155 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.786942599 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.685160872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.710111041 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.72591375 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.721854853 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.716394871 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.68735298 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.740449327 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.134178724 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.721303246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.115058277 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.731570614 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.717364827 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.718251602 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.729746779 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.68594023 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.711590489 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.709106933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.681337759 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.103190916 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.678121009 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.678268165 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.684937589 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.726083464 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.726454182 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.690504568 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.712305105 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.720376523 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.113433209 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.710072279 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.691645774 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.681993569 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.722469247 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.729293439 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.688333063 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.691352301 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.019723528 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.723516308 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.688916657 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.723327945 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.724176168 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.721733608 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.036557373 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.724873813 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.720134243 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.69424366 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.722194771 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.117729636 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.724693971 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.720581298 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.691438974 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.718496186 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.707975295 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.715611113 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.740011491 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.720593031 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.6916918 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.716259868 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.68768724 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.719605615 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.727930626 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.692470949 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.695751185 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.713590604 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.714354877 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.692670835 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.692617825 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.125948768 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.729852658 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.691882327 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.14136232 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.71907978 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.730003585 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.730451687 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.729896868 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.85058952 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.113707826 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.682192687 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.685721138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.695237292 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.124192888 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.72905975 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.722321253 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.693513051 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.730949026 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.725681946 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.704156583 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.692529476 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.727550898 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.744761677 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.693575489 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.72847888 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.126064495 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.729005972 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.694245965 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.723970486 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.850015425 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.730176791 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.744332153 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.726843546 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.134450058 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.719203119 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.729532087 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.695212709 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.69684895 seconds)
  done (took 245.699210849 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.696037464 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.687300739 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.698034575 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.685747678 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.695728696 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.725931139 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.698614538 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.702277085 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.724508612 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.697739775 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.697760169 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.727679686 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.727852962 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.697156531 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.709053504 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.687555869 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.698095896 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.708362984 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.689179539 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.699081357 seconds)
  done (took 51.601014488 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.735021192 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.494408682 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.438920061 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.732469052 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.733852748 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.726299692 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.803803333 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.724819546 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.730570836 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.141624505 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.945618294 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.724985209 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.731268061 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.732650151 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.44769492 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.712774369 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.159209911 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.503345223 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.767810418 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.503974632 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.711449689 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.734092932 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.726416257 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.502690321 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.162315194 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.123409199 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.80813007 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.496377996 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.734206075 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.732299408 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.504588258 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.735634329 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.727925737 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.493253507 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.736502316 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.755923291 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.732866239 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.80840266 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.801807898 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.153773046 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.508174747 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.13277687 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.75400545 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.993288812 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.738896057 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.714087455 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.516484674 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.738829288 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.714356763 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.736855504 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.748584369 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.464509559 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.73191556 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.464252822 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.740560654 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.735953503 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.508286285 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.464458574 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.4591887 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.957622963 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.720808491 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.124979999 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.740807543 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.517320464 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.737269104 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.733607186 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.736695148 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.959434297 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.500829679 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.127117003 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.166169804 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.165974319 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.733748963 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.817851139 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.731205414 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.162980502 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.816351227 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.229922674 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.159504222 seconds)
  done (took 158.930457361 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.106598402 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.845681843 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.285376653 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.498369241 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.420956604 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.934560673 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.868589644 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.046861546 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.709378266 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.895790659 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.632118023 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.845225081 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.634893445 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.823032664 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.857601306 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.918767743 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.3085326 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.698073826 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.564041628 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.591608821 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.711136172 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.891197407 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.612727358 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.207154904 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.700424404 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.59917773 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.715065722 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.426651392 seconds)
  done (took 65.905081856 seconds)
done (took 654.342685005 seconds)
SAVING RESULT...
DONE!
