cset: moving following pidspec: 24423
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.148835058 seconds)
loading group "string"... done (took 0.630056448 seconds)
loading group "linalg"... done (took 9.662647394 seconds)
loading group "parallel"... done (took 0.166947138 seconds)
loading group "find"... done (took 1.521848205 seconds)
loading group "tuple"... done (took 2.239304593 seconds)
loading group "dates"... done (took 1.40064634 seconds)
loading group "micro"... done (took 0.648678439 seconds)
loading group "io"... done (took 0.659329025 seconds)
loading group "scalar"... done (took 53.58385211 seconds)
loading group "sparse"... done (took 13.497917508 seconds)
loading group "broadcast"... done (took 1.328782522 seconds)
loading group "union"... done (took 2.447383079 seconds)
loading group "simd"... done (took 3.555291145 seconds)
loading group "random"... done (took 13.327483753 seconds)
loading group "problem"... done (took 2.181443464 seconds)
loading group "array"... done (took 23.059171771 seconds)
loading group "misc"... done (took 1.518466001 seconds)
loading group "sort"... done (took 3.672016742 seconds)
loading group "collection"... done (took 20.180992919 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.908072388 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.174740797 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.23793326 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.562159406 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.305581177 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.201243887 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200006649 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.186810138 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.573292386 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.226331574 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.189342443 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.643382165 seconds)
done (took 7.193391771 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.302084224 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091504164 seconds)
    (2/2) benchmarking "String"...
    done (took 0.231407081 seconds)
  done (took 0.969965524 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.105388472 seconds)
    (2/2) benchmarking "String"...
    done (took 0.141859589 seconds)
  done (took 0.894511237 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.131213404 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.20256277 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.144933724 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.129511162 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.146745058 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.146272931 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.129972184 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.145294664 seconds)
  done (took 1.691213457 seconds)
done (took 4.6359873 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.513578089 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.925755643 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.552224204 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.213979096 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.355992337 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.345063293 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313200652 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.264698325 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.14573208 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097791556 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.234019005 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.481151409 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.442356322 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.97080795 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096216076 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.14899695 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.197152445 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.827300804 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.11838803 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.15220504 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.599651884 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.24316521 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.15652591 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134954452 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.241793666 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.166573417 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170027697 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.142213476 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.724683844 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.173898022 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237008491 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122275675 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170269418 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199811372 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.275137152 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.149169877 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.796268157 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24067006 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115116594 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.138726021 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.790465464 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.164469239 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.245091572 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144490162 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117879375 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188800196 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.133491068 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116462645 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.148170309 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.139096808 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205678949 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.549502769 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.144949648 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235027722 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.148007788 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.806279695 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.136321456 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.3235468 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.163546495 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147721368 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.129968482 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.128095479 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.21799043 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134825664 seconds)
  done (took 22.924468328 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.244950702 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.245749198 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.116836855 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201374979 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.181772416 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.118991807 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.142973419 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.11754728 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.1681871 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220458691 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.179608594 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.253180519 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.13170816 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.129816718 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.227304604 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.290722933 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.146263152 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.161668044 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.128202755 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.151216785 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.182110449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.134426033 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.149114283 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.134410668 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211843699 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247353173 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.161031581 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.163606978 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.143109749 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.137527335 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.182177217 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.203023653 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.116148639 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.14299465 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.21601902 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.162301505 seconds)
  done (took 6.918350721 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.281600824 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.141677373 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.30138644 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.210847623 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.205447215 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.218478271 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.22131697 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.329759601 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.368136129 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.201719995 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167605951 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.161734953 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118951718 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.13651743 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118088341 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.888540226 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.214225776 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.182973966 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.227419981 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143850625 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.138812764 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.599073178 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140779285 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.133594921 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123635764 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09407118 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.305372073 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123229777 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.649479518 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.125569669 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.138759056 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125797561 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.145885032 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17106952 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.178202619 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.160590883 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142515399 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.125949047 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.270382498 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.144114975 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.118680037 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135284871 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171112541 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.156073199 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.137228624 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145692549 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161456914 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.141773266 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15095097 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.292096991 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.237363215 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.221020703 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.119530005 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324700718 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.145010619 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.125327739 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.134659582 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.936913416 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.175582663 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.136956313 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.118948366 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.139676491 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.118993903 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.915801654 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124343466 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.50134427 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.122738443 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.199793354 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137631957 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128085981 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140888865 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126015326 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.143000028 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.12584212 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136462884 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.125682253 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.135717119 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.130855747 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.233138097 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.159030069 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124763072 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.138307672 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186600475 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.153337725 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125298266 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.165653537 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.136521621 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.124268526 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168279709 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.139107634 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121198583 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.145992029 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.242321876 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121668126 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.159672818 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140213221 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.168894173 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143055762 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.371124568 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.123025142 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.177866194 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.138436668 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152567935 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154148513 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119348138 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143554987 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.135561583 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122312691 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.187582233 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.143279813 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120676658 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.138129506 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.123401028 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.151393205 seconds)
  done (took 33.00112214 seconds)
done (took 63.490589063 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.481771809 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107499564 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.127516425 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108157748 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.130303372 seconds)
  done (took 1.686102262 seconds)
done (took 2.400432764 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.172552809 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.338661851 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.239480524 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.118786055 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.209126663 seconds)
  (6/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "10-90")...
  done (took 0.190477225 seconds)
  (7/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.227566089 seconds)
  (8/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.136313703 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.19600167 seconds)
  (10/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.235774256 seconds)
  (11/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.224329365 seconds)
  (12/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.205369901 seconds)
  (13/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.186161731 seconds)
  (14/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.242872784 seconds)
  (15/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.212571794 seconds)
  (16/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.238204104 seconds)
  (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.213504385 seconds)
  (18/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143847762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138597443 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.162199607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142567012 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144093673 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141660263 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160626711 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14708281 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16031012 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136507373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146706715 seconds)
  done (took 2.345129083 seconds)
  (19/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.172804168 seconds)
  (20/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "90-10")...
  done (took 0.141728428 seconds)
  (21/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14269978 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137526078 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.151222513 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.139476954 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144490371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.138777424 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158173257 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146393406 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158080089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137130357 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14525639 seconds)
  done (took 2.324409969 seconds)
  (22/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.207129342 seconds)
  (23/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "50-50")...
  done (took 0.182973826 seconds)
done (took 9.704040158 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.38199704 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.569738302 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.195389651 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.304345266 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.370039793 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.314173611 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.657291615 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.24592415 seconds)
  done (took 15.877018579 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.159775066 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.240601825 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.156547561 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.136391506 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.153860278 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.132253829 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.151802893 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.133016915 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.148541235 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.13311155 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.146913724 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.135998439 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.131357137 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.149594722 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.135813569 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.154122741 seconds)
  done (took 3.186369649 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.176147888 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176088664 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.142348479 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.157824399 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.135370637 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157698685 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143352098 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.157214336 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.135933557 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.152707827 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.143193348 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.154906291 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.138467957 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.15201996 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.139049456 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.174673749 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.134816306 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.155657085 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.156973453 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.156251784 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.157026812 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.138658065 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.154119808 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.140943132 seconds)
  done (took 4.429333716 seconds)
done (took 24.221252437 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195249829 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.142653965 seconds)
  done (took 1.074750707 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.20616267 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.22242598 seconds)
  done (took 1.173679698 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.154307402 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.148930042 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162386991 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.16045965 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.133422903 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.148444226 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157364494 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.149897484 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.132510077 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.150489808 seconds)
  done (took 2.246486582 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.136695176 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.151542525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.147363083 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.216146061 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.156465497 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.134362687 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.15318582 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137403995 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.153576024 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.132693061 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.152673605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.151384545 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.153221579 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.151955776 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.1537713 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.137940516 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.159338 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.137129659 seconds)
  done (took 3.464849197 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.134385734 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134524579 seconds)
  done (took 1.015696689 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.13581343 seconds)
    (2/7) benchmarking "second"...
    done (took 0.131785474 seconds)
    (3/7) benchmarking "month"...
    done (took 0.151879858 seconds)
    (4/7) benchmarking "year"...
    done (took 0.14982408 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.132651715 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.131451144 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.148910975 seconds)
  done (took 1.73074034 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.578004158 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.268703793 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.397682345 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103930185 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153093072 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.374100436 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.15411904 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105898312 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10383178 seconds)
  done (took 3.015965857 seconds)
done (took 14.4669642 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.135008579 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.326694477 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.70860233 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.155727275 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.149938061 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.193219892 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.386929511 seconds)
done (took 2.81523712 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352557892 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.207406682 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118333275 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.135802116 seconds)
  done (took 1.565321889 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.125291422 seconds)
    (2/2) benchmarking "read"...
    done (took 0.140635901 seconds)
  done (took 1.027465294 seconds)
done (took 3.35224165 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.153663675 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.149509585 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.137050249 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.152525262 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.136606477 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.152971547 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136736592 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.1505813 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136711379 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.150339579 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137579297 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.152238145 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.13507877 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.153187846 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135128357 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.152476652 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.137578878 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151326855 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134401658 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.153847566 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.13672856 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150624671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.137726243 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153827732 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.137580763 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152155522 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.134837677 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.270807552 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137351544 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.153948487 seconds)
  done (took 5.219794081 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.139926034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128022495 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.149460697 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.140635133 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.14624674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.132762693 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.147024702 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.132115683 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.149887985 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.131948413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.151097776 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.131785125 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.149393858 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.133306197 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.149624055 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.137504707 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.157687999 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.132271499 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.131283804 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.1509817 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.135174313 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.148957769 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.132064839 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.14952041 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.133145074 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.146967432 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135691277 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.149694176 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.1348939 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.149231337 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.13510964 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152289477 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.132514128 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.160710939 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.136567297 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.148790848 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.139823507 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.129266927 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.151944392 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.129575486 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.146721311 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132234972 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.15298391 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.137774504 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.15193182 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133971576 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152734227 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.13399155 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.149706328 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.135490903 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.146286131 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134085138 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.152431954 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.134734591 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.152249598 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.131755651 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133417035 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149668962 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.134809182 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.151576398 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.130546699 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.148133572 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.139120555 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.152155033 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.148258518 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.157313091 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.133178807 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.152958208 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.13593202 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.157739682 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.136436344 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.160373815 seconds)
  done (took 11.022171815 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13508743 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132996103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.152061585 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133757652 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.151574722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134807575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.15194083 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133814433 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150085566 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134839633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.149905585 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.134577309 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149710728 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134961017 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134081506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.152617802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.134463048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151854088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.13444957 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151834182 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.134693316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.151997961 seconds)
  done (took 3.90072739 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.281077572 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.141565419 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202242059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.147714385 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172057215 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.164746299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139123976 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159529364 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139219379 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163036584 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.144079285 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15860313 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.15152716 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163270274 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16155574 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.144581794 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156466056 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.144897127 seconds)
  done (took 3.709865549 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.134524229 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.132837773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153966996 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133784121 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.152585884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.133011746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.150758766 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134283347 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.15129836 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.135484058 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.150918005 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135116623 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.133123423 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153294773 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135396617 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.153376278 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134433576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154639637 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134928751 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151816093 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134680674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153164589 seconds)
  done (took 3.91932787 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149761293 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.154426062 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155015872 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158213345 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135453818 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.153028677 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.141070732 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.155708977 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.143004568 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.152779903 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.137768218 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153284437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.151975402 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.154201732 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142696707 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.154958812 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.136723602 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156509358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137703545 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.133561887 seconds)
  done (took 3.740168844 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.226613664 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171662192 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170293932 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161214985 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170349875 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.152643364 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.178182715 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.152324398 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.17201957 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.18025274 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.156453276 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.171995615 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160795168 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.176172962 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151604195 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179967928 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.178283984 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.16017407 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.170603049 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153017154 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18145876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152801694 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180045032 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151020462 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.17085776 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169835913 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152628907 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.175134352 seconds)
  done (took 5.516352464 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.147622474 seconds)
    (2/2) benchmarking "in"...
    done (took 0.165059188 seconds)
  done (took 1.100608883 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.139249202 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137172262 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.156300463 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.137035024 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.15624892 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136848688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.156474018 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137515602 seconds)
  done (took 1.945570592 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.247566258 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.252774113 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.141808886 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.167020261 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.24987982 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.231005074 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17271931 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.161487156 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.134544903 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.149515801 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.245198919 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.127710794 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157096513 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135203646 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.157825796 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141380479 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.156182779 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.144748575 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.161403137 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.137683849 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160986743 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.141238282 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157123053 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.14626441 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.151705046 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.138148154 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.159435498 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.146403464 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.153099985 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.137602135 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.155262132 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.136337798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.159530622 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.142782962 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.157286552 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.253374329 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142423628 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.154854678 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.135856662 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.164506255 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.180618289 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.139502027 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.156564183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.135583094 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161081587 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.142505342 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.161054419 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.139307798 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.129417156 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.161938331 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.138813532 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.153564431 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.137954484 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157352691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.136079176 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162962971 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.140192339 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.153786246 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.13293576 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.153026304 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.13571223 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.153825008 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.139517393 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.160546673 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137015468 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.15805271 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.15488492 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.139709596 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.138049329 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.159646489 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.13742802 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171578453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.158882984 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.145775032 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142282339 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.15995833 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134364992 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.162887683 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.135347379 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.157984266 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.141923844 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.180756994 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.157788989 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135189957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.133244527 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.164964622 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.138621189 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.161579136 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.130795544 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.166157093 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.139792078 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.15983045 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.13216988 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.155925415 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.133516839 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.161555321 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.131131969 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.158850019 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.137495069 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.16235214 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.143340644 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.157604608 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.138847405 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162348927 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.143787559 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.157548596 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.207638555 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.135693303 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.153427402 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.140787736 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.162343898 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.134361569 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.155900901 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.138608129 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.134560687 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.154494436 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.143679235 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.159147472 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.138917665 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.163442921 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.139190116 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.159905041 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.139754014 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.158675066 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.134015855 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.163225924 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146853312 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.161501962 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.140352415 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.159133854 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.139632561 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.159665555 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.143220587 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.155208563 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.143921653 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156348374 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.138309976 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.160143479 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.1447154 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.159898336 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.133696192 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.1577056 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.139275532 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.159253771 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.14107597 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.159988222 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.135594059 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.153713611 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139039329 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.155348456 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.140117888 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169433837 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.134059995 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.173325672 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.135651328 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.16692856 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.135745195 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.165167721 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.142769063 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.16483374 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.145379939 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.151149179 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137202643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.161108685 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.141562835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.156044354 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.141756783 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.158502139 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.146710346 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.151955985 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.144285457 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.151530652 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.137286662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.164518197 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.143281837 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.141881869 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.156603364 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.191788146 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154464475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.166571951 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.139011951 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.158871739 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.145070683 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.158839123 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.144929603 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.14472846 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.167077322 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.13548329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.158111656 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.143935483 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.157954514 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.139887761 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.160045212 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.141306447 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.153857065 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.141882498 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.153200557 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.144275818 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.162239765 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.143473133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.16524329 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142567431 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.159181764 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148071693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.156760857 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.144658898 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.15334471 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.143846994 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.17105164 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.146878664 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166886515 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.142613527 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.158635536 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.141567094 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.168868331 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143005685 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.160184266 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.141698327 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.155036545 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.134954103 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.165262496 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.1443106 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.156385459 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.14064051 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162308839 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142841908 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.157269231 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.134660281 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.164689239 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.143937648 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.157508786 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141434257 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.156819872 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.138984503 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166416693 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.13533781 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.157184095 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.142332555 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.16625096 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.141576663 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.161297467 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.143869273 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.165997645 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.14281872 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.162516616 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.138881418 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.16827028 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.139591006 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.13864717 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157338863 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.142294701 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.154890716 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.141902403 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.161925759 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.137877729 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.157442019 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143529425 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168116699 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.144377019 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159598089 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.143972428 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.167128585 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.145832721 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.158692107 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.146593711 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.158274386 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.133178039 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.157990132 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.133602743 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.163270832 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.136545087 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.165879055 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.13874404 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160834699 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.144987781 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163754483 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.138467608 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.166329741 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15187504 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.155023065 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.134232782 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158900025 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140301221 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.159710952 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.137390725 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.164210617 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142130923 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.165940236 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143490803 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.158311822 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.141972663 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.168358769 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.137654725 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.168247163 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.147794213 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.166541081 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.138147386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.169050198 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.139711342 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16511981 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.13569037 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.160614 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141408484 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.160872203 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.138060783 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.159668279 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138335189 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.155484018 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.138372554 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.166586058 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.139479608 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.165752363 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.141600758 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.160595911 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.139241729 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.157313999 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.148578531 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.160014761 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.148575528 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.16275722 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.137091595 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.134952986 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.167385113 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140483088 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.169115151 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.135787589 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.167007899 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147884448 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.16583268 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.141961489 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.172672447 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149803966 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.168654198 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14605286 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.156401104 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.140071583 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167486592 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.14202253 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.166769182 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.144492746 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.157083733 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143070987 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.169546979 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143284352 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.160971029 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.135272789 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.163587492 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.148877591 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.165538649 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.144835876 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.165395474 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145626689 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.157957238 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.146760213 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.169268383 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.143480327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.169642593 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143156891 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.168084712 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.139549379 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.168134509 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.143307819 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.156337268 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.137599411 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.160342178 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.15007083 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.134965137 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.169002078 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.146808893 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.160689429 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.13997576 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.169086585 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.138848174 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165710179 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.146562073 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.16250635 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.151030449 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.165191956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.141160479 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.168614388 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.149320106 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.157693796 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.141066612 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163255258 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150089407 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.161940355 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.147689102 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163846324 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147570931 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.167101767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.148387725 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.169081767 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.148452886 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.157480152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.150215121 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.166785525 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.147062835 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.160334984 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142900784 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.158294291 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.142643838 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.169787442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.141196447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172306409 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.148465387 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.161406698 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141659565 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.170266205 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143108072 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.16989423 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.141849393 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.163995925 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.138727068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.165548147 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.143987165 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.170238897 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.141296949 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.15866431 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.148960004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.16809861 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.14859641 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.165212001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.151112303 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.156805904 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.138748999 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.144262898 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.162175232 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151482811 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.16838538 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.140981476 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164488236 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.144708416 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.166771067 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.149550931 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.160638514 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.140471424 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.165124769 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144347895 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.163880826 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138052472 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.169504027 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.14276201 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167480934 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.142005418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.159361816 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.141680935 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.173138357 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.140568573 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.160696273 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.141922307 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172876383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.143076225 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.162444959 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139092129 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170473145 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.146086524 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.172502941 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.141218307 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.164870617 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.141191209 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.168374344 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.15138196 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.163095042 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144680828 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.163070108 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150261286 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170357697 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.137130008 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.16233014 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.155098285 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.169908129 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.146039661 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.168479804 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.14321025 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172006859 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152206017 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.167527937 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.139140739 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.159772622 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.14268232 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.159793435 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.148097883 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.168791017 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.144286155 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.16238287 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.149434994 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.167924986 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.148221222 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.145720346 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.160986114 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.150118461 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.164038598 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.145461165 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.161991689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.137584675 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.167786421 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.148911045 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.164517848 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.144745083 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.167759391 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.146724384 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.160951123 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.142478873 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.168575766 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.148278073 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.17046211 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144540657 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.163457029 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.148042918 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176544657 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146090505 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.164365385 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15287768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.172935749 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145655184 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.165705499 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147872296 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.172586263 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.147702582 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.171760739 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143565463 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.164402191 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.151834741 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.173126415 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.153016805 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.165406299 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.139609024 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.16997804 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.14329825 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.158601732 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.148497096 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173078783 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.151966671 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.165637753 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.142130783 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.174581209 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150492531 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167056928 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.143636142 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.163679683 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.150096601 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164471963 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.149508677 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.162689752 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.153328785 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.173916041 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151619071 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.173996148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.140418275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171352586 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.148452817 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.174518422 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.147143571 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.160075244 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.140446351 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.147704468 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.174549152 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.1515449 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.170723386 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.149486398 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.171128396 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.146486017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167903894 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.142542079 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.174443413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.150971572 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.169497113 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.146377343 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.167156313 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146149311 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.169048871 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.151292982 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.174089386 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.147313216 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177188733 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.150293274 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.165359506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.14358453 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.168022135 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.149315077 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.169391373 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153944367 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.163657753 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.141417565 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.173535336 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.153545992 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.16617162 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153178418 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173671316 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.145791444 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.169061024 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154520697 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.171205709 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.148114715 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.167324769 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.149836791 seconds)
  done (took 92.589155649 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195646597 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176762352 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148277375 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169244217 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166335677 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173076688 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148475655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.170288834 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151168944 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179895782 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149233293 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169924541 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163118997 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191678145 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188285884 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.157651961 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170379068 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.150140531 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.169655513 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.149833858 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.183734049 seconds)
  done (took 4.409419033 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.148931369 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.147241 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170101519 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.148166467 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.170472027 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.148420759 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.170283875 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147577426 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.170604795 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.148738537 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.169366231 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.149338334 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.147039718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.170480758 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14716606 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.173376797 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.148084474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171048986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149146061 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.170073932 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.148803769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.170917754 seconds)
  done (took 4.368661965 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.171902795 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.151322246 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170052211 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.148316696 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.17502044 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149189084 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.176262917 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.149721134 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.179975051 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.143987444 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.162996426 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145957667 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.168277754 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.148987172 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.164340242 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.14968356 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.179431407 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.152695186 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.17526293 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.149942462 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.161362768 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.151149808 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.148848886 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.163190235 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.152559344 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.177000162 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.152771662 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.175254409 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.139372263 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.17523611 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.149786366 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.164734146 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.140843818 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.161902083 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.140472402 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.174078142 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.153633434 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.170742034 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.152014233 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.140444606 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.173277552 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.152931808 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.16416941 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.149084042 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.172762263 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144211215 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.175114587 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.149075382 seconds)
  done (took 8.527379005 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.179793534 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.208927127 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.1534105 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.202521563 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.188029777 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.160023631 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.175979292 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.178895794 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.175099851 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.152580088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.188146342 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.16357136 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.177469286 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.157500545 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.17820674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.153025744 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.178012162 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.15223137 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.182052899 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.174310574 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.158612698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.176887019 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.164682185 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.18530464 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.157112158 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.174541399 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.153525808 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.178669648 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.161603092 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.181821655 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.156455999 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.180992779 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.184915204 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.157085338 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.174318256 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.156890621 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.187206418 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.155384843 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.176170936 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.152171725 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.176426345 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157679548 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.178990987 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.166041576 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.178004201 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.155837066 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.177505324 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.152512411 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.185971554 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.15465158 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.183185935 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.163932159 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.179746531 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.175858606 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159358882 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.186426361 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.154360482 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.176285965 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.156694716 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.185349967 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.153112697 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.177704581 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165140274 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178826302 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.159562888 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187795249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.156037859 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178901241 seconds)
  done (took 12.598961432 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18620664 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.180497743 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164943252 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189066012 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.157832431 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182752359 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158081275 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.180524423 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158008222 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.185677731 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.180907223 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.2891668 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.160666591 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.185125427 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159739866 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.182985839 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158287866 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181769483 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.158664311 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181725134 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.158124927 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.439872696 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156967866 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.188960621 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191189815 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.156285586 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180854353 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159049206 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.190322107 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.158419168 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.194957893 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.158176609 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.181802938 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.188474246 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.16985009 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.181463369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.154280164 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180781159 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.158995847 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.180866435 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.155775466 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190067815 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160563505 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.17754248 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158881587 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.181783871 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.188823872 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.169502211 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.186626455 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.164070236 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.183080893 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166194389 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18390516 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.16013419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.189211561 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.195067194 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16722783 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189927225 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159359371 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190024653 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.18814718 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.174854707 seconds)
  done (took 12.102917417 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.155694938 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154021332 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.176751248 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.153391713 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.177825337 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154111357 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.177095426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153286951 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176475304 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153771021 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.177444632 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.153584056 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175512892 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15500777 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.175254339 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.154948615 seconds)
  done (took 3.543137364 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.172827565 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.193354266 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.254540888 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.157224672 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.176600321 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.163426578 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.178631725 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.157190869 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.15185283 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.184492874 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.15690466 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181733446 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.194798305 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.15718584 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.176077 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.15743678 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.175004307 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.159924317 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.153439345 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.256353269 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.183654011 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.155139491 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.17943001 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.157161117 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.181948068 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.158349536 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.184080392 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.153796024 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.181189103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.155549948 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.180124442 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.161736978 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.181161236 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.158898349 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.179517451 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.155257103 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.178005318 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.155176367 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.18189848 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.154869554 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.180382017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.157752672 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.178086892 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.156842012 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.176414333 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.156245917 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.178026549 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.160438209 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.18027921 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157204977 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.17898114 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.159398762 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.182944143 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.163252115 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.18553777 seconds)
  done (took 10.411216958 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.167264566 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179836906 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.167732503 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.17656973 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158038183 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.181002137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.158377543 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157265599 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.182009668 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.152539509 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.181367477 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.156537853 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.181318867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156762951 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182477046 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156552938 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.178365769 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.155840906 seconds)
  done (took 3.958026156 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156877492 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.153096913 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.178148562 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.152812379 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.178046035 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.153955751 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.176566587 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.154187344 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.178448809 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.155098214 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17562771 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.155692703 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153683859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.178560556 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.153191058 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178437845 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154247478 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.178688785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.154435211 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.177411457 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154390234 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1774102 seconds)
  done (took 4.562290009 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.167149956 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.280234379 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.186878164 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.290458095 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.152852328 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.17686425 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.159842533 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.17792507 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.191556412 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.153433897 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.172603373 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.154987377 seconds)
  done (took 3.19759077 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184127185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.214048239 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157377066 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180370912 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165239728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184059999 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160670571 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183765896 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168623957 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194791181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183604493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171019513 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191407022 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168654478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189156596 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165453721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184749611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161560698 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182451204 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198687906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162683118 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191475606 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161644019 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184677674 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.160809137 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194210591 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168982732 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194068603 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185228303 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169630091 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1890364 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162843613 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194037524 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170776256 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182082721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191947802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164238692 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19998423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165695372 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193542558 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.158237581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190147364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170076167 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189939936 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192890869 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162712032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18964772 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162248984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185083173 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182068823 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191267269 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192456457 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167241029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19281614 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169456396 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207333768 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19465513 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169359037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191101886 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172846491 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195020051 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188404475 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1700879 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196110902 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165827932 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194118121 seconds)
  done (took 12.86102716 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196206445 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18265968 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163798833 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19876955 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168296122 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187384094 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161053861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186091751 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16148534 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183945459 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.229198349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162407524 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194879181 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170011354 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186392068 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160934921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.18701603 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19318588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.159283872 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206324422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163213283 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194504623 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17058496 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193547098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19594908 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166895385 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185781027 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161651632 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186845338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162241511 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192187289 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161694165 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194671823 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.156917441 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193917606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185670539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165051575 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190953263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162889149 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19079214 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170143005 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20192924 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161621531 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188250336 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196721385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164676039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185581281 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160556032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185747084 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160463003 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198964617 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173430993 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198355741 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194911657 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163157968 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185375389 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162014807 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187325358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162912058 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192272914 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170580979 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190034431 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208625413 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164639652 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186348208 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171323462 seconds)
  done (took 12.850745895 seconds)
done (took 226.817348497 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.316982418 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.34883591 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148148938 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.554153639 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.147881794 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.863923268 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.864313332 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.254470698 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.149763807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.147487959 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.174714676 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.167110217 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.539116462 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.170601583 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.15116175 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.189389167 seconds)
  done (took 32.135930764 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.349817669 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.3974687 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.164526718 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.179545457 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.154281072 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.180619616 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.151488048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.180470855 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.152764818 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.183363122 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.153681624 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.175813 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.180834169 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.152628487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.154082582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.178557344 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.182178613 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.15535572 seconds)
  done (took 4.385467314 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.174662993 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.227242514 seconds)
  done (took 1.368657844 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.184075223 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.273267711 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.376865452 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.227002331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.174752739 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.197354007 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.227294546 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.16831889 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.267216732 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.165975366 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.192024279 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.175569742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.179539661 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.183134042 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.171639145 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.176565749 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.182070988 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.193554641 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.167838731 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.180175426 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.179154276 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.179571438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.159166329 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.19337445 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.259453106 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167102394 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1820705 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.156244101 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.181726182 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.167679773 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.185440481 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.169262516 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.190658952 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238890154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.157558583 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.230225226 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.18473257 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.153899528 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.19272835 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.154135243 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.182245452 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.180883826 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.167601341 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.175369996 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.155080265 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.181824727 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.154615332 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.178367654 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164206915 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.181998912 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.162393486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.187830729 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.232321233 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.157527853 seconds)
  done (took 11.171513291 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.997761168 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.201279646 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.180356803 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.141879774 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.201892783 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167964515 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.014925501 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.179915547 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.309298689 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.085477211 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196760077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.164909239 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.324018578 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.316716323 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.362634382 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.417748095 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.844256522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.193104584 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186258671 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.224753581 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187716538 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172566078 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197384458 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516005772 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.156363599 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180907572 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159786939 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.188733428 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.235848847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.155253193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.185805891 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26096489 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.3549964 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.269892352 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155446793 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180299464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.153483415 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.244812486 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.351784958 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279197026 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.248755865 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152880195 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.178916467 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.160249918 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.196242553 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.152651814 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242461001 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.251686755 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.253677719 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.185847586 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.163794642 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.188871923 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.158645384 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.237683228 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.180210975 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422611423 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.456810046 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1557293 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187567357 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.169164389 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.349607866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.158446895 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.294457626 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202934675 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.273030042 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180716906 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.87259127 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.248595929 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.155216456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.186148253 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.185006068 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163325238 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.183323103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.217291249 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.492745271 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187020849 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.160372908 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181011357 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.288048152 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.156963954 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181011705 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.239620346 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.157746596 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187367751 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164312864 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188232387 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.252328735 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.335014878 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.162641702 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188710241 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.161556368 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.191436216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.181249934 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.265975373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316402317 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.238657024 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291056355 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1618724 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.24199013 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.246109649 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.18599097 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.251226291 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.161145493 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193405739 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160180146 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.31156448 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.218777053 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160524603 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.183879388 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163957652 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.222381212 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.159816343 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.187182881 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.251410253 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553330769 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.247249039 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.153990392 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.186801129 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163026457 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.239701921 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190654482 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326078687 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186878932 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.247951502 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164314051 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.177547159 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165342534 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.245685153 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.188950774 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164576515 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.184738925 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167446433 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.341293401 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.281047541 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.211527248 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.304919362 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.255174278 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.186479021 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.254791269 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164254547 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.246936569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192545575 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161798717 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.183481153 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.87384087 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167442312 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.188154863 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.186730031 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.241583864 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184531707 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.159699638 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182084957 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.155071885 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.864935687 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.186324671 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.155089135 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186283395 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.161811639 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189826653 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162410877 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189148634 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243964124 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309314194 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.191761187 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186688545 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.158446126 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242577635 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.157238919 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.183584239 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.156226151 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.182848531 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.163795969 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.18821346 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.159264945 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248798677 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.237255869 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.318039885 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.624185939 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.156306259 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184248291 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302870009 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184386087 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.385382247 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190416463 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.29689816 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24535641 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178992454 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427521823 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248901135 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.268319805 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.161228184 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.25237951 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.181169128 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164562267 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.242300225 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.183654849 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.165180084 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.240307164 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.191981117 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16546308 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.351316393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160441981 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.309448848 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.154251599 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.251731663 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186147973 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163419664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.41617925 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.157545802 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.195811702 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.243448416 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.162381403 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185379719 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.032005327 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.158399473 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.193131753 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.18689297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.30178237 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.24514053 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163831937 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.191772222 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190018787 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.24414194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.265825423 seconds)
  done (took 61.184448736 seconds)
done (took 111.205465307 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.392935932 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.341418556 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.39005421 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.309473502 seconds)
  done (took 2.495107444 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.307137172 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.239925203 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.303064377 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.155101916 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.309157471 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.181229331 seconds)
  done (took 2.515482521 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.755522892 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.541555668 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.497134029 seconds)
  done (took 2.807738121 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.428159475 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.401183279 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469496365 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.504921262 seconds)
  done (took 2.898996933 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.358751277 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.212945725 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.19771369 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28258377 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.320824457 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.332818999 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.197813563 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.266040884 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214309166 seconds)
  done (took 3.446074881 seconds)
done (took 15.181357979 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.238622733 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.235383075 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.176980537 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.198918801 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.232919423 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.210974454 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.210885128 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.205125946 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.212394747 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.172076072 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.211305362 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.168968275 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.299171703 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.233909633 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.193375359 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.186117872 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.195091359 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.197240795 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.235610408 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.17014964 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.235173202 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.168784034 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.196146451 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.174891514 seconds)
  done (took 5.985801826 seconds)
done (took 7.022171186 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.343787293 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150592963 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.194743829 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.16924743 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.285226913 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.202465411 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.185083522 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.196441042 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.179543572 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.193306635 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.158239815 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.205899437 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.169124649 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.296399702 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.198950439 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.160219257 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.186423078 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.180294785 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.210563718 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.184070544 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.284402576 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.186587066 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.177984226 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.187220107 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.284794246 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161967035 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.193274019 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.170367335 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.208068987 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.169787722 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.214741274 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.159814457 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.210100461 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.185745478 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.183838532 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.170573297 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.184059788 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.13367042 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.167705125 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.198251817 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.180805813 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.196459969 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.168271748 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.188528862 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.168697011 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.195381759 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.159335555 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.199092496 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.157528203 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.197646013 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.160483397 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.210988841 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.167926033 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.184551541 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.158499276 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.187256564 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.179169153 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.186406456 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.182335268 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.186219211 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.160154025 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.186808043 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.171316827 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.185657757 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.168960243 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.186919231 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.169635189 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.196573112 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.168593087 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.187353504 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160152349 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.193252229 seconds)
done (took 14.682253937 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.166685931 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.229420166 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.300918084 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.30535566 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.188174139 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.204439405 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.200453005 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.184804856 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.197907778 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179889147 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.22203452 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.192997098 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.306461597 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.203769628 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.175807133 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.200684389 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.169565139 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.19428546 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.303215164 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.211441553 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.184188645 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.204233444 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.185887814 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.206068384 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.163722146 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.215764937 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.167106724 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.199387995 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.164265721 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.20919867 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.185509484 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.192678203 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.166468795 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.211094721 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.207012359 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.176444435 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.202376852 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.173357799 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.190244863 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.165521328 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.195748636 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.181703064 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.191040145 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.176809006 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.200496935 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.179276429 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.19835574 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.176370054 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.192649079 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.171746841 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.191664178 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.188693688 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.204846091 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.323850471 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.212301788 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.178236213 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.205332955 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.178256466 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.196626331 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.177589343 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.192433339 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.163843461 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.193712273 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.185044132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.195752966 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.202857221 seconds)
  done (took 14.207854295 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.186289472 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.222588431 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.175446193 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.20442858 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.170364611 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.187229116 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.15924113 seconds)
  done (took 2.374376448 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.162579193 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.318360317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.307719438 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.307970169 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.297749106 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.347611313 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185061452 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.189019149 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.196759169 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.201205056 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.320627574 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.373085851 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.202221944 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.175199095 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.34007907 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.162241791 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.313337401 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.292415607 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.205643609 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.312539045 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.176927038 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.222347129 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.201636326 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.163533436 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.313047629 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.190955079 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.363351792 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.177427311 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.200940427 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.174913584 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.205138587 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.265548293 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.316010577 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.17596679 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.20063529 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.311513566 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.304818231 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.204913068 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.361370604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.194292863 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.302173551 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.17667547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.205123781 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.177779939 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.204101164 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.298902745 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.180686665 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.206294529 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.174436917 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.320535663 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.202834452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.316542069 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.201553564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.177805013 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.201543087 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180168931 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211197108 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.177511469 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.321282825 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211139769 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.314656983 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.312951808 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.306016848 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.311436252 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216189922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.317814577 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.297086871 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.176240638 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.33947606 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.179361845 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.314692043 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.204652282 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.174368054 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.30392964 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209569247 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.317099542 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.318377777 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.201271824 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.178630886 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.193607023 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.177017203 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.189398107 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.30493298 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.176646835 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.202157062 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182733922 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.204816269 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.176542352 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.30632401 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.217113084 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.176218498 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.205980243 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.209251888 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.179981826 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.205213386 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.320860076 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.173859259 seconds)
  done (took 24.255910966 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.165910624 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.163119487 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.196039734 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167530522 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.192141612 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.16355348 seconds)
  done (took 2.155136208 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.2021579 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.20538324 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.187882411 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.20573985 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.225885918 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.307021864 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.312672233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.203597748 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.224391105 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.191969733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.309375934 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.311323179 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.310299375 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.210582785 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.313128576 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.180132962 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.31721499 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.20495225 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.186668989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205525577 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.178288175 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.212445382 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.175709774 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.295794598 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.21131493 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.179645121 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.201413462 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.189942799 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.21566255 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.198559258 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.185254144 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.207224536 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.171789373 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.199725188 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.315077218 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.170690491 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.202811614 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.18147168 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.211097444 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.17845733 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.310738747 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206623203 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.184193046 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.212973871 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.171132237 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.201052522 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.182051642 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.201492522 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.315424468 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.209391921 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.183305503 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.209210962 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.18121648 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.208614518 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.172125171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.199885475 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.18262036 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.314964563 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.212078017 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.170559818 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.210776105 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.179563337 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.203456879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.183127058 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.207483787 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.179920714 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.200630471 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.179846404 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20582345 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.17928453 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.210576569 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.206231393 seconds)
  done (took 16.581819867 seconds)
done (took 60.625625299 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.652643258 seconds)
  done (took 2.757490181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.325772153 seconds)
  done (took 2.437658029 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.940611024 seconds)
  done (took 20.081869699 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.660675215 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.668991637 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.152674931 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.238638587 seconds)
  done (took 3.833744012 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.159577206 seconds)
  done (took 2.292907779 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.491846763 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.361114496 seconds)
  done (took 1.971730553 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.816687513 seconds)
  done (took 1.950106993 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.958465389 seconds)
  done (took 3.077990854 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.601748798 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241134715 seconds)
  done (took 1.98550102 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.711467568 seconds)
  done (took 1.851191412 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.136412947 seconds)
  done (took 17.280177598 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.314768729 seconds)
  done (took 1.460767322 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.35170939 seconds)
  done (took 1.498750993 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.00122362 seconds)
  done (took 5.146775019 seconds)
done (took 68.739453391 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.181165356 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.209955889 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.184291731 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.20805006 seconds)
  done (took 1.915417247 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.186683446 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.205538428 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.187136926 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.205102688 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.186607389 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.206198218 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.178852633 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.209956168 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.179333279 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.179966321 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.208877818 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.178035629 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.210579152 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.177975635 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.207222162 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.179501248 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.211389241 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.178537159 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.209983825 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.179218879 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.209001927 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.180884803 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.212559711 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.180945496 seconds)
  done (took 5.789426784 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.17587844 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.17613399 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.200740541 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.168300801 seconds)
  done (took 1.876028509 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.191754902 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.220165427 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.191752526 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.215445205 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.194899784 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.219018494 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.17884474 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.203594744 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.179114048 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.218046652 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.195431486 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.222027326 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.191004177 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.212337406 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.190640724 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.20242651 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.183272189 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.220749301 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.187341491 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.218075008 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.180691623 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.217815827 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.17741425 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.219491319 seconds)
  done (took 5.985883611 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.255949936 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.220049212 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.205650383 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.254815085 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.235906396 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.178298302 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.234338598 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.186368741 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.213531902 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.188684818 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.209130993 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.226749365 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.213453191 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.181335699 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.208988099 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.18548036 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.218233758 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.183901947 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.252779561 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.213728715 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.186113192 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.220500176 seconds)
  done (took 5.830271992 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.329133614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.171745513 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.199733011 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.169179265 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.213596575 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.174525686 seconds)
  done (took 2.411399802 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.171220098 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.163627721 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.195369816 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.164417137 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.197574985 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.16500548 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.193087822 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.165663315 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.193508057 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.166262064 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.193523492 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.164377747 seconds)
  done (took 3.293806077 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265813691 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213302334 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.34653883 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.474152894 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254551015 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25220784 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.372775267 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222000577 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.269848003 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230133385 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274748136 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22431414 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24804495 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280306665 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206036885 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.254324939 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264518623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302236827 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205811577 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306737191 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251910246 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266614351 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255487028 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239993088 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231982293 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224317213 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.211629356 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189196056 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25936748 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256824209 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268611113 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242835419 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205193342 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279652322 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31990346 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271280447 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.358333696 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226573994 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.25405158 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.25764652 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.352362686 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205390295 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28314683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244890708 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192048235 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285232501 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242488099 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.276824518 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.195960953 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235018713 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273069083 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241198829 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.261692496 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229080318 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392286826 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196123963 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.234148002 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279285585 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280946341 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294890363 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24131672 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.217382182 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261598768 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284651002 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307473877 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.203797005 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.255727491 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217643109 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22521614 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298941646 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275679749 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252905974 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.284108475 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191750851 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266139012 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258956813 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245540162 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301110777 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235512142 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.212624734 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211287274 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226653264 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216936525 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.252912189 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213837877 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312885249 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193715276 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.267251792 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269356738 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214108442 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253668082 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254731066 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252723967 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209983127 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.182402804 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206972828 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.250912494 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248238061 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192074286 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244421654 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200874287 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.220020437 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241311483 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.185765732 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268586319 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.187823116 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252421205 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263404166 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.194753327 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273419127 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239397971 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.226713956 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261783778 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291136184 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223289289 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195347397 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316714088 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265112344 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.197448013 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26327035 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.292405759 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.235893475 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198077144 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261057429 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287625543 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20448585 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294536337 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23401684 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228033257 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192049911 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268000351 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251356545 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.33991166 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187897358 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.260774432 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281852811 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.218105948 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203469869 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278413826 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223530031 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189289294 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228610915 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200366122 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.236598593 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.212723 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.233300058 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246633179 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231119823 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260421245 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249248386 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195974013 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266700675 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227325835 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.261597861 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21113439 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.210517552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.235907863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293012191 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224919453 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27230872 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.221848533 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27469841 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268296828 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222071117 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244739781 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223410394 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.182483052 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256184114 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265347989 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256321072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.28514464 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268377005 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.225828089 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.262639055 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243672747 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261724623 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.24833982 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250887142 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.233842725 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235406053 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263976935 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.214674995 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.185612919 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.222315142 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200863322 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225392489 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199292732 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274555724 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25857513 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268587926 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264118433 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200076071 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28811506 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.219503961 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22061744 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.270093215 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234683684 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.285501111 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254697333 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276067578 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234056579 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25790179 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.183707439 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219185764 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.195824204 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.254641251 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22967802 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200594433 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237227863 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.289666793 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233089208 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243855451 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280502849 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261302013 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.299247551 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.183753535 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.257595885 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259642864 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232808865 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.283755916 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198279614 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.25360271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289824356 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234757716 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256180133 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264284236 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276813762 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289694381 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.257978337 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194654851 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238568746 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221825136 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235374275 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.253847085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205785527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228210724 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210156264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.233846916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235621722 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281405617 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208224174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268626758 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.249417331 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261675665 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189398317 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237088879 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268012504 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210441007 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.157221459 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261701994 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286694209 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244611623 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213853032 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265345894 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223439726 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.389864311 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274747438 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266606109 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230561512 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20350863 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26969533 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253707821 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22136991 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.28050208 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236800713 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30879681 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234510268 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.235657691 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224779352 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211081381 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244692569 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.191728431 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.248020646 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.26023002 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.206274345 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28238563 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233966763 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266870459 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242440815 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.241134993 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.242825222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203877742 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326957848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270619818 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268961087 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.230185626 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.259514146 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27891361 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186384176 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222493936 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.225761949 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24925104 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227551073 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273233 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.257767416 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272482904 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241568359 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258362324 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234446643 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.192124013 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264231227 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212014111 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277381572 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230617315 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.232337506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249711713 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.215055909 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194069511 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255718133 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385208412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242691826 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232633004 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.19151374 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.377346658 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19527162 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227291544 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222891332 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264803646 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.228113366 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.250885605 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272668892 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23495411 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224075911 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231792395 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269468415 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277863686 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233408942 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271960002 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.243798042 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257415207 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222385333 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268412275 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24095194 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.21076493 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256002178 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294532566 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.238112961 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.230122629 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26825611 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234301304 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27053538 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26830465 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235188986 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24900883 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224826565 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262311709 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202628491 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219639453 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223069009 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.260916699 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228021245 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269925247 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234950897 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228167423 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189971016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243326753 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265033563 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203654459 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.227267518 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28456845 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.193808444 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280426512 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308999629 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225301974 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233558122 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239718543 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224939219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204142231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241281032 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195238933 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.274677318 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241891095 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.227151931 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272162263 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261904744 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227193277 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249833236 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23776613 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.445523624 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.191910508 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289479689 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246788157 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292951918 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212997616 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274885655 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268881469 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213483153 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262237817 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244176651 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.285175301 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263762313 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.266160103 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225552914 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209705438 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234551824 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.199537456 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24906603 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267355228 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207143031 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.233384636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.232786446 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243140486 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.243465178 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206155965 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300482485 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2495501 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285659091 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.282236379 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204149355 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274895362 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271246155 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193663593 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.261223931 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270881444 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206607697 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250688164 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.230934115 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.202350033 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315595789 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.220801961 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226748038 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273090594 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267781399 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237900853 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.232657938 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275843876 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206092339 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276239807 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223185714 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.216005262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268540434 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23035981 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.194651498 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270735057 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255761155 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.232543818 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243324168 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.244249146 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293007791 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.22080706 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200072719 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386162933 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25937174 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290712178 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.188497084 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235290954 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211533464 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256985193 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.263267417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238819965 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.227980388 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193680286 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.243325495 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.244186289 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.193393867 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268370929 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280192404 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223544418 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284007414 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.232807748 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.320914063 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240786485 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271163951 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.17397338 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.226331365 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208621152 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233167081 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208835076 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274862606 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316000729 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.263909328 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.244716315 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202871957 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.225084 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197489709 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258818038 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216000024 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270065977 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24648309 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.159168844 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239331762 seconds)
  done (took 119.622157821 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238665475 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.226177086 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.240223984 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.294003588 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267400554 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.363315824 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.301477583 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.317629986 seconds)
  done (took 3.529859349 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.186273129 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.23407411 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.242320759 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.184765395 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.208907292 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.579188387 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.236251482 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.220046278 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.227045213 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.221124768 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.20941015 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.6396701 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.215215985 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.215262709 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.217334272 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.176325635 seconds)
  done (took 5.482424057 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.679660451 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.76729897 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.521970357 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.421130998 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.379942658 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.294052477 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.977027945 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.288063237 seconds)
  done (took 14.609438742 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.238336663 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.269736396 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.517601854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.405654448 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.28268504 seconds)
  done (took 3.000184032 seconds)
done (took 174.482724099 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.191190165 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.190500971 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.224992647 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.191663828 seconds)
  done (took 2.069375372 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.24676001 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.147219978 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.184870437 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.147532029 seconds)
  done (took 2.016290968 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467435838 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.148417338 seconds)
  done (took 1.930652704 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.211578721 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.232414331 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.20252345 seconds)
  done (took 1.950843819 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.202946967 seconds)
  done (took 1.500298187 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.18794471 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.184882379 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.373354251 seconds)
  done (took 2.044512574 seconds)
done (took 12.797535847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.20880274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.029143231 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.651721214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.199452737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.838499016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.465268383 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.527859514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.247398849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.268320504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.209350366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.210550518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.811066268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.511025879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.946361685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.4922839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.948503228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.793418073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.178176988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.215414125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.179219508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.507835808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.177042415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.210467616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.178944403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.791922912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.484778825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.209699013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.957164246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.208800365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.18757979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.500130778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.178541559 seconds)
  done (took 23.811984821 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.180891369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.267360186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.233094655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.214506048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18601772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.212299692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.188312215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.224360444 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.311840633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.178771756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.232709621 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.177729025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.216035991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.17994048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.233685233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.177836231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.212046728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.179116841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218086392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.181866562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.232186928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.177961876 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21241507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.179906327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.210509242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.195560762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.210754245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.19109518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21009599 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.189526755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.215941776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.179928746 seconds)
  done (took 7.918864333 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.223261282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.278373808 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.2344919 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.251192767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.264353938 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.183025858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.301151145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248471611 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.285232361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.212398099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.200571385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.212130746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.218299617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.212635559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.20246583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.21265735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.180119273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.212176423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.216694945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.182755363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.232324515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180197286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.212119502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.180512201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.21045232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1991879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.210281349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.192821587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.212061674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.188605898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.217610982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.179879299 seconds)
  done (took 8.263681507 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.194797677 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.191972247 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.236223615 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.233093119 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.190157631 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.191055999 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.226721848 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.187690488 seconds)
  done (took 2.967970717 seconds)
done (took 44.260798598 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.2017047 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.228030184 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.202375107 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.193294413 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.371020575 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.186671573 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.228616502 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.187039358 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.192685326 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.235417716 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.178372613 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.221629301 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.197850648 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.224118234 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.343279687 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.194287836 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.379437916 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.341491261 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.186977339 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.227709543 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.188621263 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.34428135 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.227378845 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.187479078 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.324804851 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.216045351 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.333471037 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.192935009 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.743595397 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.179961641 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.342962817 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.22311706 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.188412297 seconds)
  done (took 9.715246122 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.286683593 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.223982463 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.18777744 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.22263278 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.189496863 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.221209694 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.324055455 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.187617852 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.221377663 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.188519434 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.220866494 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.275423641 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.228814991 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.183440157 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.224905136 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.168321963 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.326865867 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.22299407 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.180522886 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.150830284 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.219293808 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.188144037 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.337414206 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.217071109 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.188380101 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.223014254 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.189648419 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.193017492 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.223860171 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.189787403 seconds)
  done (took 7.936226318 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.196624864 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.199226661 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.24105754 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.289180489 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.217835033 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.234544351 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.205478643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.234687666 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21033806 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.216098709 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.197678699 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.252502571 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.199341061 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.2275128 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.181982848 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.231677925 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.19768701 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.216970329 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.19190946 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.234825532 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.202006344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.232842039 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.204343025 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.226134622 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.181731979 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.225021282 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.192693289 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.228544915 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.190437974 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.232934859 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.184538062 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.218449288 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.184876023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.250637948 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.183037103 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.230434401 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.203798961 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.230727665 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.195614749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.249110799 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.184217141 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.219160202 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.209131971 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.272882676 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.183610779 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.228879595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.184242842 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.232219055 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.182076785 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236165717 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.223683892 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.216961528 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.237215431 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.182419356 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.180255534 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.226590127 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.183452519 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.221407206 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.19718562 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.218850666 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.204196358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.226079447 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.194901461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.219295624 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.195101486 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.217320792 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.183301103 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.22210478 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.210007571 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.226005835 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.220289676 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.218992373 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.195114756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.231708794 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.19598449 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.230888858 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.183973046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.229839144 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.195300114 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.222952584 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.19637183 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.221011205 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.185514862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.234821901 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.205070561 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.23276689 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.194666654 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.228249347 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.186447802 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.220089161 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202889907 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.220570018 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.187119675 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.230692464 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.184141293 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.221955041 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.194839022 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.226824585 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.182178544 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.242987883 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.188537104 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.217395731 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.210585648 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.220671776 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.188297548 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.227003029 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.226111155 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.21839118 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.193847346 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.227465448 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.185449979 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.22595541 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.186282767 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.182538366 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.234234535 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.1988799 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.226494095 seconds)
  done (took 26.165860827 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.438127991 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.427410567 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.289495892 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.516709352 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.198224789 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.386253517 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.430225938 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.433533691 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.221263263 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.218834393 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.277954201 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.395886585 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.22324019 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.212158753 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.47445335 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.515178083 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.214660328 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.260045988 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.256270228 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.198268089 seconds)
  done (took 7.940338712 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.196678711 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.251997967 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.208671019 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.23676684 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.196152458 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.23495383 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.185821256 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.239611964 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.196303524 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.226194616 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.188660025 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.227818287 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.198349525 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.199377588 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.234675303 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.207095469 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.228385606 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.18836753 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.242461139 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.188827574 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.197750007 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.210121203 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.230167188 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.20500938 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.237322707 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.194343499 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.218295986 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.190225656 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.225788838 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.193800343 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.223646038 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.192816628 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.226142863 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.166501062 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.230516674 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.200123773 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.224935238 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.189773435 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.189750457 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.222657574 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.199396097 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.232640059 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.192698946 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.194500293 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.204890161 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.170502129 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.234959906 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.197566953 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.202119348 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.2046703 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.233692008 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.198957982 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.227570419 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.206295647 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.225998013 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.203535589 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.231432712 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.199380871 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.224616413 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.18338149 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.217286569 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.189064825 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.227754451 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.200293417 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.231280947 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.194113721 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.227267378 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.187386538 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.223108539 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.18897878 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.188558685 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.233398186 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.241315603 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.196118933 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.191486082 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.230991804 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.19380614 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.191115364 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.195332661 seconds)
  done (took 17.93686788 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.214992004 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.230618852 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.202953951 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.252622488 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.199586972 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.225432788 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.196320496 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.204232745 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.234989589 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.20460039 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.235300033 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.232629093 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.208048802 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.231727932 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.19597974 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.235168174 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.19828981 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.258505777 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.198211379 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.247275579 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.200694166 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.225874185 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.198807334 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.232392611 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.214874112 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.23300058 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.21276735 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.234623411 seconds)
  done (took 7.541275047 seconds)
done (took 78.551889457 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.571439985 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.794764963 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.469822384 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.46893526 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.481691352 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.507631662 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.468911515 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.470186258 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.04334357 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.443174303 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.469240607 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.469905147 seconds)
done (took 32.078497623 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.55585602 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.26936505 seconds)
    (2/2) benchmarking "String"...
    done (took 2.283100247 seconds)
  done (took 5.926101916 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.249208996 seconds)
    (2/2) benchmarking "String"...
    done (took 2.26761357 seconds)
  done (took 5.877405709 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.459480916 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.458547767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.654601538 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.459918122 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.455598439 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.456419144 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.460418466 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.463612307 seconds)
  done (took 17.772041962 seconds)
done (took 35.952560868 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.508678164 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.765433649 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.724068333 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.441216373 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.468623489 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.47425591 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.45950075 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.521566046 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.462335678 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.445197116 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.000323714 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.739850856 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.471222632 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.873930407 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.441337477 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.463919958 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.459482103 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.813362509 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.458434344 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.504536645 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.441992868 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.462437787 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.478272622 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.471640424 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.478518533 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.469975267 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.450274089 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.472679452 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.776950267 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.465312733 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.505882418 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.460987252 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.448575618 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.461294764 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.464597 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.462602262 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.776286775 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.47545683 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.474492461 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.476577992 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.78967032 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.472361255 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.460572605 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.473633204 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.449584336 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.530761349 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.444290088 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.653934624 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.48287558 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.470449629 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.554275722 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.892923255 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.461824859 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.478300627 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.467981439 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.796784773 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.469561737 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.591857107 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.490102687 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.461961608 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.4596815 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.459096161 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.509802399 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.480280349 seconds)
  done (took 161.637525907 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.464144218 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.462860605 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.462343641 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.470308549 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.465587629 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.464012009 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.464067044 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.462659533 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.46611074 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.465018142 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.461210046 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.463994269 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.464094212 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.472841903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.474489738 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.490613506 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.466182955 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.464949279 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.47517537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.463491063 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.488023093 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.461794409 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.464569831 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.463686898 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.47347264 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.565773553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.491417449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.479093675 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.472576017 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.467298041 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.482103834 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.466720943 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.269667742 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.423967322 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.47979558 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.477222557 seconds)
  done (took 90.138205216 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.46537992 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.46547686 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.465874746 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.50664229 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.467944632 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.148661572 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.1472674 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.540343643 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.959440094 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.068287106 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.787530384 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.465244498 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.564149044 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.478308799 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.463278535 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.568270029 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.490846218 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.468471933 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.465825368 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.150819528 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.482702305 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.516639233 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.658169869 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.468333578 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.507376112 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.871813099 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.467270594 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.508753942 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.801728209 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.814416833 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.506445897 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.465269361 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.467494015 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87359454 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.583742807 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.468179298 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.507658411 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.466802587 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.761985515 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.466366079 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.469673274 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.471217674 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.171869971 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.466798327 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.152228436 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.469964512 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.531904022 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.468152619 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.468518727 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.118453052 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.299664853 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.466787711 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.467585648 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.471628131 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.469910943 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.469836912 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.509727529 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.086773047 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.438426493 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.46734679 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.474458519 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.509375668 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.471564715 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.516715639 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.469429877 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.692975344 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.530932251 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.678792813 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.152799459 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.471915807 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.569710017 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.592202542 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.469108187 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.469345717 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.47180022 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.47048434 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.587790459 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.469250804 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.471439629 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.33659867 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.66152693 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.469829438 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.092576786 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.571131566 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.468601978 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.887488975 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.470996067 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.470374271 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.296407316 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.468392943 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.572183446 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.469867153 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.470436918 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.470617457 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.336760143 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.158776266 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.838581219 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.471243584 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.604360653 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.471459045 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.477421465 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.161104704 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.176395407 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.473011686 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.593835082 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.664789915 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.473092354 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.472143141 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.089535198 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.470895775 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.533135464 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.471722766 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.471265654 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.879122268 seconds)
  done (took 413.120433762 seconds)
done (took 666.259317071 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.455033144 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.455833804 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.45748171 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.456016229 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.457021455 seconds)
  done (took 13.654551253 seconds)
done (took 15.027932743 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.272879673 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.482092521 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.483078469 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.322196768 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 2.477664094 seconds)
  (6/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "10-90")...
  done (took 2.336074161 seconds)
  (7/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.483854476 seconds)
  (8/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.304446327 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 2.492817697 seconds)
  (10/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.488515823 seconds)
  (11/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.476607884 seconds)
  (12/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 2.492456478 seconds)
  (13/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 2.474214633 seconds)
  (14/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.49589686 seconds)
  (15/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 2.477225282 seconds)
  (16/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.493274109 seconds)
  (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 2.494907348 seconds)
  (18/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.853495407 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.484400007 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.605732615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.837816388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.548755258 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.866981269 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907764737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.484900559 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.728810696 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.528070015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.529966206 seconds)
  done (took 21.752458536 seconds)
  (19/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.425411081 seconds)
  (20/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "90-10")...
  done (took 2.480744513 seconds)
  (21/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.863415383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.485869677 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.608689904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.890745255 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.550886604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.871285448 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.902435009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.483286039 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.727515629 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.527882282 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.528266269 seconds)
  done (took 21.817944517 seconds)
  (22/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 2.476924825 seconds)
  (23/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "50-50")...
  done (took 2.449272914 seconds)
done (took 96.325543356 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.5418541 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.61908536 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.534944702 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.518775397 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.517451556 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.518861582 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.522111296 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.517553594 seconds)
  done (took 13.666620875 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.518015315 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.51758167 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.518077962 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.518201023 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.517318788 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.515992571 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.517513575 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.518162121 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.516694058 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.517052832 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.518457969 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.518275124 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.518403144 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.517796013 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.518060851 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.519031785 seconds)
  done (took 25.661270055 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.520158115 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.518398464 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.518612667 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.517610235 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.517846019 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.516137003 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.518477036 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.516724787 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.51830788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.515874889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.517241054 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.519400128 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.518300616 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.518991137 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.518212826 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.519379385 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.51941689 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.52077607 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.521969239 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.519387696 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.518990368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.519497486 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.522538027 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.516185054 seconds)
  done (took 37.827563268 seconds)
done (took 78.533207472 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.500830099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.483342121 seconds)
  done (took 6.363321761 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.615533302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.634393452 seconds)
  done (took 4.630328549 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.521528751 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.52073689 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.519039327 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.518665188 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.519272038 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.51961028 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.52264663 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.520361772 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.518679785 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.519707848 seconds)
  done (took 16.578303219 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.520612084 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.519727335 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.520721804 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.520925531 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.519061886 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.519864363 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.521472598 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.521182547 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.521125556 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.520060407 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.519786699 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.520224395 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.525373303 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.519929036 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.519545468 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.521409811 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.520650706 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.520075354 seconds)
  done (took 28.75207399 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.539676449 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.547672368 seconds)
  done (took 4.466057102 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.699478264 seconds)
    (2/7) benchmarking "second"...
    done (took 1.602835249 seconds)
    (3/7) benchmarking "month"...
    done (took 1.687992167 seconds)
    (4/7) benchmarking "year"...
    done (took 1.674740272 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.602024601 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.550559956 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.601548004 seconds)
  done (took 12.800050342 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.519412979 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.879783176 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.056382868 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.740490813 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.514184102 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.543040983 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.468731114 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.5404065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.550251397 seconds)
  done (took 17.193285474 seconds)
done (took 92.164261393 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.484202496 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.565213076 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.50539283 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.505102988 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.879927678 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.492438948 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.4851508 seconds)
done (took 18.30151893 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.477312094 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.468416829 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.481353041 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.505565477 seconds)
  done (took 11.313737732 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.499859864 seconds)
    (2/2) benchmarking "read"...
    done (took 1.89777457 seconds)
  done (took 5.78101517 seconds)
done (took 18.479005536 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.524096814 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.525800802 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.527446262 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.52500042 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.525063488 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.525988605 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.526727456 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.52448157 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.524537233 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.525966675 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.527224726 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.525741577 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.525944815 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.528195171 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.52612731 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.526313996 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.526474142 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.525372535 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.52747399 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.525631507 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.527110256 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.525940555 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.526019964 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.529255641 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.526609285 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.527155304 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.524433659 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.526355691 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.52850806 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.525482675 seconds)
  done (took 47.170477057 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.533998632 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.531680041 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.527476155 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.527136098 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.524517678 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.526911278 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.527010733 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.52487352 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.526663062 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.523890922 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.527584898 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.527446542 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.527188618 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.527957361 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.525616002 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.525586739 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.527219907 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.528994713 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.525742205 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.526710974 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.527203564 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.526483641 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.526870561 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.52883366 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.526702453 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.526993063 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.529574885 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.525765952 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.527608504 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.527756148 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.528405323 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.526959468 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.528318859 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.527975031 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.527985018 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.529356003 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.53516156 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.533738403 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.527176605 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.527609691 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.527823754 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.528950714 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.527828853 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.529214364 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.527354281 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.528583488 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.526684574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.527791139 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.528818644 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.529756333 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.528237355 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.528286662 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.528423971 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.529286092 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.527797355 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.527976009 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.528806701 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.529010777 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.530938607 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.530036118 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.529496733 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.528495977 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.530092269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.528620713 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.529409431 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.533081826 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.531413457 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.530383019 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.531760359 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.531449495 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.531723203 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.530075089 seconds)
  done (took 111.436978267 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.529346644 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.530922822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.532889483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.530098975 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.528838689 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.531300384 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.529589133 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.530979045 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.532322162 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.531184168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.531476664 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.531731724 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.53305347 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.530983165 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.529866542 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.53293006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.530301025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.530829235 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.530742352 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.531393901 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.533251959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.531902206 seconds)
  done (took 35.076160733 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.532262168 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.531488746 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.532726124 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.532950315 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.534721909 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.53376634 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.532184505 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.533400162 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.53332201 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.530647508 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.532370142 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.529965508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.535716867 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.532953597 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.532991591 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.535187889 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.531676549 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.535502385 seconds)
  done (took 28.984976861 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.531021718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.533845959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.534582715 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.53454493 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.534335547 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.534676581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.532374962 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.535930232 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.538615979 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.534098366 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.535829661 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.53293893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.534138594 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.535454264 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.533758029 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.53533309 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.534657445 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.533955819 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.533917755 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.535454614 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.535954538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.533643909 seconds)
  done (took 35.151121592 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.533970765 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.532665362 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.533662626 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.535123915 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.534534664 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.535256334 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.534497508 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.53423288 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.536389928 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.536245636 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.537175433 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.53655196 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.537992227 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.53785457 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.536795287 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.537303591 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.535890981 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.538303928 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.536613071 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.535624956 seconds)
  done (took 32.111745287 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.538671294 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.536359477 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.53751556 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.538638119 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.53497229 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.536971496 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.537070462 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.537990201 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.537276772 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.537138906 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.539273465 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.541338812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.538878093 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.538051941 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.538382011 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.539560024 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.536672505 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.535641229 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.53850556 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.53972436 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.538219699 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.539682106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.538170532 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.539794831 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.541531224 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.538995707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.540069306 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.539931928 seconds)
  done (took 44.471995008 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.565123609 seconds)
    (2/2) benchmarking "in"...
    done (took 1.568060645 seconds)
  done (took 4.529320943 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.538674436 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.5385893 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.541269668 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.540517548 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.539402392 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.539073649 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.54005024 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.539928158 seconds)
  done (took 13.715256668 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.531871406 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.541532062 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.543157199 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.541122583 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.53898062 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.531533304 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.546526761 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.545450648 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.534057997 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.533624912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.538406385 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.535238314 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.536784461 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.535421369 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.533568409 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.536587159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.54441539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.539511553 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.539916284 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.541831052 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.540143059 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.537358626 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.538438164 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.543091618 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.535524315 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.553024375 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.549010458 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.546135092 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.533713051 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.545821364 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.537384748 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.543620806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.544184285 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.540795307 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.541598691 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.544883746 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.552401392 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.541913047 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.548671936 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.546947764 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.541603231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.543833682 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.539981655 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.543703847 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.541107008 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.544916501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.544073237 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.542982666 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.53389408 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.542141148 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.549995289 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.533298124 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.544124501 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.545729873 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.544635949 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.553546858 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.552658547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.54110184 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.540876951 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.553291379 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.563911724 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.551245029 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.549637422 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.549157194 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.551083766 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.553590579 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.557288605 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.553163639 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.548095397 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.547507123 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.553095404 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.565099025 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.563435826 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.549013391 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.542084996 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.546831549 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.542860653 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.549243727 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.555715849 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.55367781 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.549766349 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.544859511 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.549492152 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.547295924 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.53833403 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.549045936 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.545670089 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.546658133 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.536196119 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.55882232 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.554504312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.547287334 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.536909547 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.542682069 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.542067256 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.549760622 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.536190251 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.543014932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.549101181 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.546529835 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.546239086 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.544805383 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.55302228 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.552356413 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.543941656 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.556270249 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.554822928 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.540690125 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.558515088 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.555300363 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.547311777 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.54120283 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.552593455 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.551212972 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.544282762 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.550148032 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.552281474 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.546952235 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.550124077 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.545438145 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.552717423 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.559942504 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.555249798 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.559392365 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.548642464 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.556777506 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.549118502 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.550605004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.556193634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.548684019 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.548469118 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.550619601 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.554880687 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.543970361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.552767639 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.547302699 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.55568023 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.550124845 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.547691016 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.550884229 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.550478172 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.546512304 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.553978059 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.559133393 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.554309455 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.551945118 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.562784415 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.550182115 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.55644171 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.555894503 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.55606729 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.550551505 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.545127352 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.554942637 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.541995739 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.551977944 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.542214831 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.552110433 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.547475905 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.551316826 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.549828578 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.543421409 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.549033644 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.55587383 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.556573221 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.551368928 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.5560015 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.555263138 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.552871632 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.543884945 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.553126344 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.542361567 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.549576311 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.557761361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.552478426 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.550528947 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.556584675 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.557305996 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.550181765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.552879874 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.54908372 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.557548694 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.557953075 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.56231138 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.561882625 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.552324776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.55512981 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.549280324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.549577149 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.55657776 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.547790539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.561503945 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.567237077 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.566536429 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.551030826 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.558686269 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.545763256 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.558120205 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.559343475 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.559887469 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.555052916 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.556955602 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.54856927 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.560644269 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.552236287 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.558479888 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.543977275 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.560100695 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.556403576 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.553980922 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.560028409 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.550048369 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.557405938 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.55916105 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.556632097 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.554353525 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.547119156 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.558352986 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.546443371 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.551560991 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.558943704 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.556194122 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.564125089 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.562881285 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.555972516 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.564475203 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.557136141 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.552231677 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.558803183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.559629615 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.554746033 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.56993295 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.559179627 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.552118534 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.569582906 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.557994211 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.5499508 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.562118199 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.565044131 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.556987868 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.550871029 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.565128638 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.559108808 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.55732625 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.555235202 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.548931048 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.562198168 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.565126892 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.564776149 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.551141455 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.563516911 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.55587858 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.559623259 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.561602561 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.564522626 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.565705108 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.56621488 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.56705975 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.558301444 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.555328719 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.561659482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.557619234 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.555982154 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.551906705 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.563879876 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.564898022 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.557473964 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.559802123 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.55523555 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.561123101 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.550124845 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.559888028 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.549062628 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.578493257 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.579551213 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.567629515 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.567564073 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.561878435 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.568305299 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.559775024 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.555468262 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.556169747 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.558295018 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.555359449 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.554515138 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.565197851 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.554503474 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.566607527 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.562586974 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.559548599 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.563885394 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.560752384 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.552467461 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.564391464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.559114955 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.559571926 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.552467601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.56195973 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.561181278 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.56803236 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.55957493 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.554360229 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.576780609 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.566080575 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.561515958 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.560892974 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.557503158 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.553942997 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.563126428 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.565615781 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.555824592 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.567978651 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.558008878 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.564723978 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.55867691 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.572838348 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.570549858 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.558852282 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.567040683 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.561172269 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.554125354 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.556355107 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.566198398 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.572506043 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.572978449 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.556912998 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.571721795 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.561995418 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.560976225 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.561491863 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.563750949 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.561637273 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.563928346 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.57299137 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.566719274 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.558765259 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.570280201 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.57155669 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.564706238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.56463046 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.558027107 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.571576246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.57072502 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.564082136 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.563573342 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.559214129 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.569200176 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.562816822 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.562283025 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.564646105 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.567889743 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.576146729 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.568814163 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.567548359 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.563890981 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.575607206 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.576776558 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.575932526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.576131644 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.56217938 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.570343338 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.563894613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.561499964 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.557553513 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.562777432 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.570221744 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.554198687 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.571745751 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.565595876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.568885611 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.573983396 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.57493603 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.555337379 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.573622246 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.574633129 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.557355932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.572310277 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.568736639 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.560030923 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.577191974 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.565996137 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.556801043 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.562489406 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.566849667 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.574485624 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.560460796 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.569812893 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.557458669 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.570596373 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.568729306 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.569856893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.565971343 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.566564645 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.560386066 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.569764424 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.572168361 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.577756222 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.567227019 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.57039076 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.562387228 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.578917752 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.578550247 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.565912816 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.574519637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.567077769 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.56307719 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.572037477 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.573473763 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.559293539 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.5711125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.557129157 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.566378518 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.562440028 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.576017453 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.569725661 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.569600576 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.558346002 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.559527577 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.568867661 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.56613533 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.564627528 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.572355535 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.577565555 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.557024675 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.562330656 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.570951166 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.566173324 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.57700452 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.562822549 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.571792475 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.568205287 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.573313408 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.572248398 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.571179477 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.559307018 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.563474308 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.581332724 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.575752755 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.568785458 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.568404474 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.573982069 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.564440003 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.570168665 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.570707351 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.563585146 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.567449464 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.576541891 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.56577921 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.566109 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.56828728 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.574937078 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.580765543 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.573594868 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.56454253 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.584888833 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.586839011 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.582176756 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.563045762 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.568724278 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.567035306 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.574170431 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.574658411 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.565760073 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.586880007 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.583180864 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.578317326 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.575861428 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.57274511 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.566538105 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.578032444 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.573619103 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.577426361 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.582397664 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.577898558 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.580610216 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.574143542 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.573051154 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.565047552 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.567929762 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.569328823 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.570049585 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.577537549 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.579588997 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.578269555 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.574830571 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.578557651 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.574845376 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.577272012 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.577141199 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.566451013 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.576069834 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.567925782 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.582200432 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.575140805 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.568716245 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.579780851 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.574839929 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.570733611 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.575329237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.583399049 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.576658666 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.569186905 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.577912875 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.584782814 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.580045828 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.576225231 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.569674817 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.577974057 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.57872066 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.57416603 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.57512998 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.571315109 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.594927889 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.588611304 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.572857135 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.575628717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.584653118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.59040385 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.576697289 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.576176342 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.576325872 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.575784533 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.582822997 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.574758145 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.585506858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.582004318 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.572562056 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.581022908 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.575029898 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.577230945 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.58557188 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.584726312 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.575588837 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.5752881 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.592945234 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.588142948 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.583114515 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.599937743 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.588408065 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.583469239 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.581492312 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.568865426 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.580114762 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.580022781 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.584070293 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.578008698 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.579220653 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.578613174 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.570265954 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.585530604 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.593408003 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.588552218 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.581108673 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.568829458 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.574831898 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.582973715 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.578329619 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.581387758 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.578841695 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.578534324 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.578228279 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.573996526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.600595928 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.602181045 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.587827614 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.581497061 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.578717727 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.588522535 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.580782654 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.584826813 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.585239436 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.580912489 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.578891981 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.584644248 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.590373399 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.579892317 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.574294678 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.574983384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.577170743 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.585961106 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.594818098 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.599342277 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.590782808 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.584872559 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.584522934 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.582693652 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.578329479 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.586806465 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.579947772 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.579443587 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.579273523 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.585371645 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.582349892 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.582296394 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.580701428 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.591220434 seconds)
  done (took 932.619189448 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.580888743 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.584432909 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.583186242 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.583632737 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.585137886 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.584743423 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.582958838 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.584098438 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.584386046 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.586451532 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.585217017 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.583561149 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.582042102 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.583627918 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.586274553 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.585286719 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.584497163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.586035557 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.585719455 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.585339728 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.584496814 seconds)
  done (took 34.706275219 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.584935487 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.584624902 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.58336294 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.584847067 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.581293613 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.586811354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.583958407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.58389101 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.586005734 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.586159665 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.582720959 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.584144324 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.586119576 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.584807537 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.588283119 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.587632757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.587061316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.587645468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.585703601 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.586184459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.588008853 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.585816674 seconds)
  done (took 36.316053669 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.58483701 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.584849233 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.577760761 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.59327698 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.586700096 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.588310008 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.587446979 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.584646762 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.587597906 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.58035341 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.582284102 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.580736838 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.58764002 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.594877673 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.591281196 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.595289038 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.585922832 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.586299976 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.58356555 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.585891614 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.59401234 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.59809994 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.589702993 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.57941139 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.58971277 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.58693169 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.588454439 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.588491875 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.57634403 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.593323425 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.589363843 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.5816248 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.598156022 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.588025474 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.58232035 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.593773691 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.588933342 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.587462484 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.587842421 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.595277584 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.59993069 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.588601106 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.596653108 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.6008549 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.590946586 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.587989856 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.596019019 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.589608637 seconds)
  done (took 77.696314107 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.59058858 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.593247996 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.59149973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.590006662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.592131443 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.592866313 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.591484364 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.591304104 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.592461513 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.593017729 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.592670199 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.593615291 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.591840205 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.591060078 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.594061018 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.592397399 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.591909069 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.590105627 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.591836644 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.592006986 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.593556415 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.593777253 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.592744091 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.592450199 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.593659222 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.592577659 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.592519342 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.593600136 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.592400263 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.589793716 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.593637781 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.591560281 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.59263472 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.591767291 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.594583641 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.594417349 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.594142873 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.592336987 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.591990992 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.595136714 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.591695913 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.593095882 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.593536091 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.593533577 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.594370485 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.594576866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.594497806 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.595277724 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.592737596 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.594318244 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.59428039 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.593191006 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.594561012 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.593284384 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.592870713 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.595090759 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.593811196 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.595608772 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.595165838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.595462594 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.594252314 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.595523564 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.594976568 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.595336809 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.594493616 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.594136936 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.594512053 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.597235445 seconds)
  done (took 109.784585528 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.591299355 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.588777036 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.59447406 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.59195293 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.593437755 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.59167971 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.593081145 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.593147005 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.591761914 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.590826878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.592945653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.592010897 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.59455745 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.595391495 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.59668321 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.592142409 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.594195253 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.592849272 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.594367971 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.593958002 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.594637419 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.592403126 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.594655787 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.593485875 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.596663095 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.59307507 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.593784657 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.592849761 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.593491602 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.593304009 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.594240371 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.590564415 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.591714771 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.592712663 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.596033406 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.593788289 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.592699602 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.596894759 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.59266538 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.592125158 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.593295978 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.594202448 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.592835094 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.594410015 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.594910009 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.594005425 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.594229406 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.594176187 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.598884886 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.594693711 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.593300238 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.595132523 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.595545146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.594416022 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.593521076 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.594542155 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.598672219 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.596013991 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.595975996 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.595978441 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.595070016 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.595222549 seconds)
  done (took 100.26873257 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.598705533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.597292505 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.600941433 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.597081235 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.598179419 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.597351591 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.595788612 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.595744682 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.598591414 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.596528301 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.60049382 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.598251566 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.600817744 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.599446131 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.600496334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.597039609 seconds)
  done (took 27.020959719 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.598472264 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.597267083 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.598015222 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.595531737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.597262264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.595767591 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.59952121 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.601458538 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.601265776 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.599095737 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.600353439 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.599082607 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.598910309 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.59923486 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.597927712 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.601762766 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.598651197 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.59613775 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.597881476 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.5992306 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.598868333 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.598796328 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.597704429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.600297077 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.600772137 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.601274506 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.601159267 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.600501083 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.599804765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.600614995 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.601814728 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.601695788 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.599620664 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.599897096 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.600192734 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.597666365 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.600685325 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.602124614 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.604971484 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.602929256 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.602144728 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.602807592 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.603685636 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.60209109 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.602522151 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.600059477 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.603046728 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.604761891 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.603538272 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.60215283 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.602011541 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.602526411 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.601229248 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.605657744 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.601511408 seconds)
  done (took 89.474797461 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.600760823 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.605719834 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.604584074 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.60124203 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.602931141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.601135103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.602670983 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.608243828 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.60220528 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.604456754 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.603587789 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.604158532 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.602749274 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.6043705 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.60106994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.601493668 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.603696532 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.603623478 seconds)
  done (took 30.312410469 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.601981928 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.6087397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.603681935 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.601548354 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.602859903 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.60284384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.603037649 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.605006055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.602893636 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.60701518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.607106252 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.60453756 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.605851554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.603658049 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.60347269 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.60495996 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.60816344 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.640873256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.604377763 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.604928951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.605267193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.605121713 seconds)
  done (took 36.789785141 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.593474282 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.593306174 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.596355025 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.615792972 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.60605151 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.59519552 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.596034105 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.597257654 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.621144071 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.627385159 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.624612041 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.602593598 seconds)
  done (took 20.721929654 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605318106 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.608609796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.607877859 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606037052 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603631999 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.60635078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.607627409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.608129219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.60547043 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605998012 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.604955351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608047574 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606488786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605564297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.606496888 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604981052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.604957866 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60698445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605093147 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605088119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60665857 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.607933104 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608501262 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.608908437 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.608758279 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606022666 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606925434 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608603929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.608605676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607237974 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608526895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.608483663 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607342735 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605828786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.607946932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604826843 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.606188608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606977675 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608079281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605792678 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.608582209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.608403346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606915656 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.606647046 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.609125923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.607905377 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.608698355 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61060139 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608113014 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.609343758 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.611277663 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.611319358 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.609547625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608230069 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.609740596 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.60869151 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.607293008 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.608546939 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610477771 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609513332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.609433015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605514221 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.608443574 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.611320755 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.609213364 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.612932902 seconds)
  done (took 107.565920572 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.609078641 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.608767009 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.611436902 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.610779555 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.60853304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.608861923 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.609969117 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.610251625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610658869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60859499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.611108228 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.610501447 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.611268444 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.611039225 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.610784933 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.610215796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.609015155 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.611178349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.611433968 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.610829282 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612110381 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.613755282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.611564851 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.610937816 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.613320032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612071758 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.611560381 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.611536844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.612355593 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.613546876 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612527054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612608629 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.61276612 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.611014571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613222813 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.610686247 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.610714743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.611208381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612808025 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612325352 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.611848476 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612105701 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.610125841 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.611395905 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.612120368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.612488362 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.611902045 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612624413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.613420464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.611816209 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.612220102 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.613327994 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.610617244 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.615991042 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.614392305 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.611831924 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.614006432 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.613051213 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.612510152 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613703391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610418755 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.61530981 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.61581155 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613142915 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.614743397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.61625176 seconds)
  done (took 107.847183364 seconds)
done (took 2065.156696516 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.577623523 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.577324673 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.602502524 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 12.073063621 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.602696893 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.250522221 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.249851814 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.601504214 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.60616577 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.603338176 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.601094595 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.575544348 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.927017885 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.60234636 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.604511788 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.579814933 seconds)
  done (took 60.09863985 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.644745327 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.623770034 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.765033738 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.60846725 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.643135136 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.88272098 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.687644777 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.615555931 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.834104113 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.616986071 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.594841844 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.646107371 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.609382031 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.579937155 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.642286774 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.884347513 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.998266469 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.600764804 seconds)
  done (took 34.941000809 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.237277171 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.591166307 seconds)
  done (took 6.292131982 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.6365681 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.611750698 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.616483353 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.610568844 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.59261705 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.578995066 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.609525415 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.579920464 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.584955252 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.775770089 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.615102521 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.630671609 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.610128704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.612623296 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.617257055 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.669959636 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.803902647 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.62062103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.621457519 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.623899659 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.609857161 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.858789585 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.672468196 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.623095158 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.775196623 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.592796472 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.627256301 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.633927331 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.824595781 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.62218352 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.613185517 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.611221999 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.61334301 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.588294923 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.267219596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.586580039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.649852191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.627457654 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.623498351 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.826997833 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.612539485 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.626094841 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.590193627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.259999823 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.80602652 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904770572 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.582347937 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.615321962 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.616861055 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.818920409 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.613742712 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.6159652 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.712802165 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.60198563 seconds)
  done (took 101.922654133 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.622285907 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.580773714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.851420282 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.605613675 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.586815195 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.585351042 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.586565862 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012390403 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.58949689 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.583530769 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.013665216 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.417769955 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.58947056 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.653563278 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.63414789 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.661309933 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.585747321 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.581930425 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.607034387 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.588939907 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.307625502 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.588002567 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.587982382 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.784604034 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.663956639 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.292998781 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.586558319 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.584477188 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.584194331 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.584552687 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.365337939 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.60189714 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.654153367 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.585755074 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986456309 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.161501194 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.097057174 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.586978973 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.625527171 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.58811585 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.601158988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294407061 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.111469413 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.586867995 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.587734237 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.315346456 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.586954878 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.588586509 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.59508119 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946421748 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.588838706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.588805252 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.599950803 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.587843469 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.584639011 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.670642615 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.694871254 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.295769944 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.586585207 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.602655687 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.636301237 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.588566255 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.599009204 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.594102016 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.58637282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.119683027 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.829278569 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.592941044 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.118259731 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.340605534 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.590693621 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.431608936 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.594951704 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.6128808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.707794196 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.589238339 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.587687862 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308702943 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.612913276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.589491862 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.124424621 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.590458186 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.027624742 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.612004362 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.591603164 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.334334345 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.599756785 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.659744022 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.587538192 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.58794816 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.589726459 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.59353686 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.001492299 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.624672244 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.589354415 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.589887304 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.628908397 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.590087189 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.592846548 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.598634226 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.442978957 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.602646817 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.593157552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.591201157 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.59370825 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.616631835 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.594186313 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.592562365 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975688179 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.593081984 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.593512765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.59174166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.589946179 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.601041026 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.792342099 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.591615107 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.057750151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.591564262 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.592461304 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.601379338 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.591717284 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.653140389 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.598092677 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.598390969 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.595081749 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.002385918 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.612867531 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.594621774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.592015437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.593707482 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.612379759 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.596072447 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.632515629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.594729539 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.609384965 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.632610054 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.591421646 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.591633056 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.601002124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.594023584 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.623307196 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.594243654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.015092282 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002145454 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.808940369 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.595220873 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.594022117 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.595229742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.633004728 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.860630671 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.612644247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.593897311 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990910925 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.815288802 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.594542155 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.606903853 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.596641584 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974690077 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.599042379 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024132678 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.380141636 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.594893806 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.60318704 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.606352805 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.446085567 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.599044054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.59742653 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.01099672 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.614058743 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.596534517 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.595156898 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.597290619 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.594496269 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.601614144 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.6024829 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.595980117 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.594693013 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.65105863 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.88043745 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.615006908 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.596247121 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296066281 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.606553668 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.597924848 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.621161602 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.603625433 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.59634441 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.672933688 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.596149064 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.626872314 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.593619761 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.598581286 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.336267971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.596827641 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.621441456 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.879516732 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.588565138 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.600911261 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.599344232 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.598353813 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.646045981 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.327290782 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.602387915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.058430195 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.610324679 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.673388355 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.597987077 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.655206224 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.325353035 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.604780538 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.599958766 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.505535655 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.600819909 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.382602844 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.59835067 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.60114935 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.43842761 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.600975725 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.603108399 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.600180652 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.599763838 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.021026627 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.605103694 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.641658621 seconds)
  done (took 564.716844315 seconds)
done (took 769.433959324 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.600508067 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.597869184 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.587879576 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.604457662 seconds)
  done (took 11.873796032 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.632840181 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.652046046 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.624240345 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.648087582 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.630388892 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.653052948 seconds)
  done (took 11.32165522 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.601986467 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.60091615 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.608201225 seconds)
  done (took 9.295924573 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.95300394 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.635338405 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.127257594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.61636141 seconds)
  done (took 10.819103952 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.640924799 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.642395377 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.646739156 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.641634805 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.640253205 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.643406818 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.64297059 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.642540648 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.642006152 seconds)
  done (took 16.265313697 seconds)
done (took 61.05698553 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.758353698 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.764507274 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.616235975 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.677949619 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.820309552 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.761297369 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.771133536 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.765956201 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.767085186 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.675556997 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.762398697 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.664266245 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.758306276 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.904757511 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.675042336 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.768311878 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.667816836 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.861012354 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.764681738 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.674542971 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.794140791 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.675522704 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.677407022 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.620236204 seconds)
  done (took 45.130541322 seconds)
done (took 46.614706592 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.664606302 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.792905369 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.639021135 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.639504158 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.648144991 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.62239011 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.666051667 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.637527021 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.661486143 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.661087768 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.623421736 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.647303683 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.660769641 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.646612045 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.681711551 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.639104526 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.640649275 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.647132781 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.662179806 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.662059679 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.642312825 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.647288178 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.675668393 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.638224735 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.656785685 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.65567912 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.653080465 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.616017023 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.643865048 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.662382416 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.626986784 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.652606103 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.663732448 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.648300248 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.643206863 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.650615068 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.649524357 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.792022017 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.670135497 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.651258097 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.646481371 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.662348613 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.65053517 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.653228389 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.6521587 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.67460932 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.656974954 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.663566995 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.609797727 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.61428021 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.669043179 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.660989152 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.649971759 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.614295785 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.621126961 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.660376504 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.653349843 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.670584996 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.64994543 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.649981049 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.68318562 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.666632538 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.660983286 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.658795368 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.648089677 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.665458086 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.651229461 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.665360029 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.648539734 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.652652199 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.650628757 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.650751328 seconds)
done (took 128.660410451 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.815151634 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.611162145 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.855291654 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.648023328 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.865650793 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.816757075 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.651864249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.648902769 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.650070515 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.511469161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.651058281 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.650762014 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.613942388 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.648916458 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.817403177 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.653550567 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.649004598 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.411382481 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.652952027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.82835855 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.617473493 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.649579461 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.651132801 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.510823758 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.610748057 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.621532948 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.830338201 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.650498014 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.413551891 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.62011957 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.610510946 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.407527242 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.831719662 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.669356697 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.663099336 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.659759876 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.869969149 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.652908865 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.81865585 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.821356892 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.857575115 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.688608307 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.617911468 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.617776954 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.65420058 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.653206948 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.653162389 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.683390185 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.614278883 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.652780566 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.415583015 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.666227808 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.662276816 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.65419136 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.65250183 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.670494202 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.652833157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.651336458 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.833029256 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.650615976 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.82210587 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.51539927 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.515825162 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.651386534 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.616719906 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.653750453 seconds)
  done (took 130.302601892 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.771014247 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.775490165 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.818901621 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.644017092 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.735807256 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.823831159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.640851327 seconds)
  done (took 13.706639581 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.659285723 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.65734707 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.73826057 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.73511883 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.654853386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.875220446 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.650313423 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.663371229 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.656376415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.735267871 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.652133837 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.654405005 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.663087115 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.617261734 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.734856437 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.665309743 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.817733037 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.647215124 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.651807398 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.855255266 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.656270815 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.66454561 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.7425952 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.666057464 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.656802516 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.659901653 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.471707401 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.652135024 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.654892847 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.653421081 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.655430694 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.768939682 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.658021107 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.619981563 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.656060872 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819237768 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.655512479 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.653272319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.655715995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.62286971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.657188599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.657490663 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.656432497 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.660012492 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.657659958 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.679368515 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.657389533 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.65713119 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.658466974 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.657116034 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.738843606 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.660642739 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.65803305 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.656994092 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.743987137 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.668434373 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.656795113 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.655364066 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.660874333 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.656840929 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.857651871 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.737608393 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.657607437 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.736264088 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.657824923 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.659673692 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.655893044 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.65767197 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.797704583 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.658649748 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.740035866 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.65443811 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.89155255 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.681771335 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.660234098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.655713551 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.655223754 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.658104637 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.618498414 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.663694384 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.658326523 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.65297263 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.667222697 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.657703539 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.656984592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.865868068 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.818684275 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.659475971 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.67228193 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.66417615 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.661722485 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.744683944 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.662391146 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.660373362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.742503429 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.824775274 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.744785912 seconds)
  done (took 170.054657723 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.669645281 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.670590304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.652843145 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.684732815 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.650403378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.650093843 seconds)
  done (took 11.481357371 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.654030376 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.663889032 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.66374062 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.661228289 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.661620867 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.662641667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.663052124 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.651430605 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.666310289 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.662034187 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.663456785 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.661997661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.661381381 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.660892003 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.662463571 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.661762784 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.663640258 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.659993704 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.661105996 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.660596015 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.622076174 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.662075394 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.659516898 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.652779939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.669837973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.662267108 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.686329036 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.662676518 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.659488333 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.671083383 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.662811102 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.66516594 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.653797386 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.660150359 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.66589236 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.655906173 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.667230449 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.664251369 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.660767685 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.664356131 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.667273261 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.663249565 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.664032276 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.668220798 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.655311615 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.659921838 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.669273097 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.685888688 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.665081852 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.665063903 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.664559229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.663680836 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.666041331 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.665961363 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.659917089 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.659749749 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.669097935 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.666933064 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.663450918 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.657934993 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.668060652 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.66759537 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.658267577 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.66793857 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.663877509 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.665779916 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.658372828 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.671453123 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.666953248 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.664453769 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.666466804 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.665028982 seconds)
  done (took 122.245487505 seconds)
done (took 449.280487007 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.143964118 seconds)
  done (took 4.648740877 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.767162221 seconds)
  done (took 4.274630245 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.091971124 seconds)
  done (took 26.605198399 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.714179296 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.647341607 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.641824355 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.632978398 seconds)
  done (took 12.143656746 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.320633092 seconds)
  done (took 4.827318334 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.638484474 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.63560869 seconds)
  done (took 6.785839247 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.044033602 seconds)
  done (took 4.552016705 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.466262086 seconds)
  done (took 4.978905208 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.646707727 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.641109529 seconds)
  done (took 6.80364179 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.610892488 seconds)
  done (took 4.118194499 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.372649344 seconds)
  done (took 19.884048454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.641796978 seconds)
  done (took 4.152256373 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.664904036 seconds)
  done (took 4.173688498 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.84323656 seconds)
  done (took 7.34987899 seconds)
done (took 116.806338993 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.626517869 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.627369095 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.627480841 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.625929456 seconds)
  done (took 12.015797889 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.785518745 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.785409094 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.787665107 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.764136348 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.772807562 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.789223406 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.699751344 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.69966495 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.761988448 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.761966169 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.791626435 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.776539042 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.786169596 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.700106207 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.757320327 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.789706917 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.763749775 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.788267349 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.698882728 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.774333245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.668831071 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.765064608 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.762144684 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.674111142 seconds)
  done (took 43.613871499 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.221608697 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.785988987 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.86374671 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.75070084 seconds)
  done (took 9.130847715 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.833809663 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.835479289 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.846214452 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.88156392 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.939478407 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.84203047 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.703714628 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.698420728 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.682716636 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.835111225 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.909644795 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.829575675 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.056819725 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.670113706 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.051011376 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.667377255 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.669397414 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.83455899 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.885564568 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.912641405 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.669888748 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.831558957 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.840531746 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.825994353 seconds)
  done (took 45.263374135 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.684626586 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.694766771 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.669818977 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.692939793 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.669811922 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.670016278 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.672120456 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.684582446 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.671103288 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.66959262 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.670749751 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.692457121 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.670260164 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.670581573 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.686837132 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.672697834 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.673969085 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.686721195 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.686409285 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.672659701 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.671292976 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.685849018 seconds)
  done (took 38.431804981 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.632927134 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.63192582 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.070765353 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.977612447 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.63327648 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.633374258 seconds)
  done (took 16.096983702 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.763725681 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.956718589 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.659423451 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.135318465 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.268513685 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.664648627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.663994143 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.007494109 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.389890153 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.382720806 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.731942589 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.762186588 seconds)
  done (took 24.898520964 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803465092 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644036787 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.653751919 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724565394 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647291461 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644192044 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.706532654 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31190754 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.677800509 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006831455 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653748497 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808158146 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981937577 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645685181 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649433214 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.639592368 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964711295 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.380292145 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652060293 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660531552 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710689537 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654527716 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650152719 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.954933515 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.651341278 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645945829 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.992653465 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646959296 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072536948 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027507059 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035539296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651315645 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006563475 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252569688 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827155744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948258574 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646154375 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646200959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.649035956 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.651489621 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668891903 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655238142 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025395059 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651187277 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64675487 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645230305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319938869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.683599499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.647900965 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648402356 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0406199 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813233512 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.676433015 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.64899908 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638134082 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652234268 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.67529104 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844703017 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377074906 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647891537 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654663628 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.652481856 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656642719 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664562023 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485349709 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.679821924 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.678282343 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676960807 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649899823 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651228973 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703802418 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649103842 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.698906125 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648049588 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651173798 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667784919 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654337678 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43905241 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654141005 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.654613341 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964369142 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649189747 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650833462 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.649659081 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.650355886 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.650107392 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684602351 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.625525704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714962287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31317516 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958756208 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705161599 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70888379 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956589941 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.62432618 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649000966 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.672411345 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657332892 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702595281 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320394794 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655550333 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.678447728 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988820646 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.951981044 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652433037 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.647277702 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32511355 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655860009 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.708213175 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667273681 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959739224 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.497861355 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054563433 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662577204 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721577723 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.652976751 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.653440288 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658830289 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.68545595 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.665886912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053338626 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.637020881 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660974904 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804157777 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656403234 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656162561 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674861238 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660926086 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.656131831 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.958278493 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658287971 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061981136 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.660813711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653285659 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.658113438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672776824 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.660248835 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9588653 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655915044 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010296211 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654623189 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655568421 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654286135 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.962289967 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.65455237 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.683587138 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085292411 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673445625 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.67919873 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049132086 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724162689 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853142079 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719472917 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.674541644 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99945405 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.685032992 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.687119919 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662421598 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.686024249 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664378549 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.686038358 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655092732 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527011431 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66377093 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.668308519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657674904 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.701141674 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80843842 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690482288 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960395662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.672618495 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660039101 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.68586962 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.66059888 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966360876 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043073425 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.665097985 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909237969 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.32469569 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485550572 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703560488 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.658037869 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.658299774 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.659078784 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660517095 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658636688 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660258962 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963672476 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058354138 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656760682 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504946474 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666087496 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662998207 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.690937933 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04609832 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.694948079 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658109456 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.67677454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669593878 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681878331 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.048630207 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967391663 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.70537678 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.66037434 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.308393547 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689015691 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660550968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.659373445 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712793366 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.664258213 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425761894 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089804716 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659905564 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046829559 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.664770709 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.711834026 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.662520004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675102819 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683580294 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.671006977 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690826886 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.968386972 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666405554 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667558284 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387560736 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682507112 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.440292233 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665933636 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.678336889 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665787458 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33768568 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66678116 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662931578 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036967829 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333424872 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664243267 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333609463 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.667265718 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.674343365 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055540932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979292269 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686275888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.68218256 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060528717 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962595244 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719070212 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.671241783 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668228481 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.639377885 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426769773 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668102068 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922987484 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339740759 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684113462 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.670953269 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.731035839 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668598151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250865491 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66835671 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664354455 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.670105186 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.685763671 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435271622 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.679549892 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664913604 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514176349 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.673273676 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.346149744 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66834763 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970672038 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.060338539 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.04847893 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.669634735 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.676051263 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.004475709 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052061648 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666573451 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.677334108 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.447684653 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.612048222 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.694355686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666822576 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.688948993 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672865732 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101012426 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.681017538 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.670039815 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669969204 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.666575897 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666779275 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.666012906 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668956507 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665585826 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388582794 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.663956848 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669966481 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714109525 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670368418 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005593937 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.711832908 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514472965 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99288024 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674328 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732150995 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.697202067 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666421128 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.646594794 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.669934424 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.665965205 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685195024 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978885792 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.687756173 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.648032826 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670522697 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970733709 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671132132 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.688381532 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022057972 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.674181263 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.681499931 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665501109 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730822404 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668922214 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695653267 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.67110671 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728202029 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818684555 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977322954 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.067289073 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06402993 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259241277 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675868838 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674549745 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.717259157 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829932842 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679314248 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.685634465 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.668886037 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505699922 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688275932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530659101 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072300954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.678265861 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672602361 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671161605 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997885625 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670753941 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030939479 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671684087 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.663746137 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720116922 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670758481 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681419125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973179551 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027477865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671263783 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678136794 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6769812 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.67466219 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073999564 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.97174075 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41145749 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469997128 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676657346 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674104368 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362159601 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031579505 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673233097 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674635721 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672654043 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.693591064 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.68072567 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.704668729 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672397796 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986595572 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057113059 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299466922 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062469396 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.703545332 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.629639775 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671213008 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014127635 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599660474 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983170346 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505433896 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.620769024 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012382161 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825439325 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983940415 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.677987334 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001711321 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.677220686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674537733 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674806272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675033397 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.673683504 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058958266 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516269562 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017222022 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.70164055 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.679194331 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736554627 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.983468917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987328067 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.68961905 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985582175 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076859565 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.691738383 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674853066 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521703423 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079600136 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679596127 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.704695758 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021597928 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.681197588 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73902219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.630994836 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.677014654 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477001021 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.97902317 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729047039 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680051632 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.631231528 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527257621 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.700929148 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415285282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683774103 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689952263 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039952916 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.705279492 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.687686332 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053844906 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.705225574 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.687606434 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991446468 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.503364849 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.680802007 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.702287212 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680561753 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.686185024 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679453372 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733289477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681510686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682175017 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.25752374 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.684938357 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67973106 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721419812 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.694209578 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69096573 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.683156078 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680938268 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.707933111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.698664335 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.661882423 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.690691184 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878174802 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451768343 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689892269 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.3787805 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.101246255 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017378955 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.684182884 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.656040548 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.706454989 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680221487 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678861816 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679341067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672577637 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473611204 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.688064592 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.07068308 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71221927 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.981524815 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978668307 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.681840337 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995354019 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689716618 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734182189 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.654537285 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682970509 seconds)
  done (took 1144.127925096 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.68754232 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.692433654 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.718588097 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.716863716 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.70106003 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.752751031 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.732123966 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.731561954 seconds)
  done (took 23.275233674 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.677046153 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.708283435 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.672195186 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.704274545 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.675843206 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.321462317 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.671978538 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.705707898 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.726874206 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.673221085 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.672543694 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.525705539 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.709384692 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.691028308 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.688383907 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.707281212 seconds)
  done (took 38.081065267 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.302725996 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.680501201 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.705203155 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.744790451 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.684550947 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.692088987 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.254616457 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.678005632 seconds)
  done (took 31.288981302 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.715963043 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.716893398 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.719344478 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.720019983 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.717910986 seconds)
  done (took 10.136464909 seconds)
done (took 1437.868774412 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.711979435 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.713550446 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.717488865 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.711923073 seconds)
  done (took 8.402745769 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.658567057 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.661823616 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.664263032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.704614393 seconds)
  done (took 11.234341951 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.220707675 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.445679929 seconds)
  done (took 6.212500556 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.685837773 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.529614694 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.518798445 seconds)
  done (took 9.283630691 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.079157343 seconds)
  done (took 3.626062993 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.183940849 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.284013281 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.692736137 seconds)
  done (took 8.711077994 seconds)
done (took 49.017628081 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.679807956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.448635193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.83398692 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.674859352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.882299278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.833734653 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.95796309 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675479543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.679017004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.678937873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.674550165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.88225912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.945375805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.450252787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.945586167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.439685592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.84288414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.68946945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.685784065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.691680346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.958409865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.674898952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.693161679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.675849282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.843137106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.825105762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.675854241 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.439962721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.683997385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.675714559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.825077896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.689758453 seconds)
  done (took 92.800600554 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.688945082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.676900184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.677313016 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.679695302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.675324494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.676955988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.677317416 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.68180416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.694343603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.68246814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.675853054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.683120109 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.67896993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.677630445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.678223537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.675155339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.677647556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.691905165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.676514032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.676849549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.679571054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.678027911 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.677715441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.678612832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.678031473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.700822849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.677880477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.683730383 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677022756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.678271587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.678435435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.678100336 seconds)
  done (took 87.322509659 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.679747823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.681062375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.678991512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.68439576 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.678645029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.701563726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.678771022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.697792157 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.687349068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.687109863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.678810203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.687526536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.680757937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.695945623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.681246267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.690570498 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.679485638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.67902294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.679623016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.679057371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.683192674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.67845101 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.699517167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.693216994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.679057861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.704896202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.680042484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.68080955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.681633468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.68208094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.682479316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.692617546 seconds)
  done (took 87.475799823 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.009199145 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.718310129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.721681786 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.692020543 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.723276752 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.719790066 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.691985901 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.011148345 seconds)
  done (took 17.838778033 seconds)
done (took 286.984539103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.690997717 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.691815489 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.750001729 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.692674048 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.738911142 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.751866561 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.007896046 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.747220929 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.001785283 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.711407575 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.740571758 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.713489544 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.70592238 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.921163648 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.708350971 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.70641099 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.685109468 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.701222691 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.709641847 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.037475436 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.749838649 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.70139422 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.711916788 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.695532233 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.679315855 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.799946278 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.804678584 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.94348136 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.910553919 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.802896653 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.687041278 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.70562339 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.695391502 seconds)
  done (took 77.858480889 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.715012083 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.723993673 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.72492766 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.72473825 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.724068822 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.727870912 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.71378581 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.725063851 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.724383108 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.723494517 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.72560114 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.726184454 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.724395959 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.724058695 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.727635407 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.701511414 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.715648827 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.724933178 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.716209443 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.704022278 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.725990993 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.725740264 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.726813375 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.724518111 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.725894403 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.726726771 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.726685355 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.727939705 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.726025495 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.724779806 seconds)
  done (took 53.235519476 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.723380816 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.691752282 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.686905996 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.731798995 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.717243862 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.721521291 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.142726391 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.732718805 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.721524923 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.721085203 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.689424822 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.751434942 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.787503984 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.693811343 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.72087519 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.726716505 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.725679642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.717119125 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.704330697 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.740370546 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.157625561 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.731614544 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.142694403 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.745225143 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.723001437 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.718310966 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.731810588 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.689106625 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.723174155 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.690518256 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.723556187 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.132610718 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.698529889 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.708788387 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.704760989 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.734478316 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.727597064 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.688490694 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.720664408 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.720177126 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.141499907 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.724775267 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.690690835 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.691511679 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.743160915 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.727384468 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.689658301 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.690847768 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.050241026 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.736843002 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.692619641 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.726303603 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.730424868 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.723778771 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.053038798 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.726841939 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.72079564 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.691097869 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.756512822 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.138032427 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.735637542 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.721552021 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.702940227 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.7214122 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.698680188 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.724035437 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.744969315 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.726426175 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.692675864 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.726755547 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.692106797 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.724715134 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.731737604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.694562695 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.719757031 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.693640232 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.724834282 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.707516926 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.69294559 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.152813916 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.736268628 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.694951641 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.161503219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.731904595 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.734029655 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.735008062 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.734327599 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.849650295 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.133435963 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.69863095 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.694617101 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.714477798 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.149230569 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.744613963 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.725674962 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.694955972 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.755634498 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.734945275 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.694838569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.695275565 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.726019 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.746576852 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.697487928 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.749964224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.140958707 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.742922965 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.696727356 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.725509997 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.850738491 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.732724322 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.747623005 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.734377186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.164312864 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.732830969 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.735436049 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.696193699 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.718624065 seconds)
  done (took 246.755901926 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.698186131 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.697604143 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.698243052 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.698458302 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.698620404 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.727756861 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.700262582 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.701456589 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.727140651 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.699868887 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.700614792 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.738854641 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.72707947 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.698690665 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.711552635 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.698811629 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.697289927 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.710656571 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.701410634 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.699473795 seconds)
  done (took 51.698694646 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.736588501 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.506908246 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.486831461 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.74092299 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.735471529 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.727941451 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.805565707 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.740582514 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.736739567 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.162271055 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.97336428 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.743973308 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.737566138 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.735787351 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.486070471 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.718318231 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.179780543 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.530949571 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.742955092 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.494525037 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.715650014 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.736980031 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.72743587 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.495215278 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.165825277 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.190347948 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.818621209 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.544002697 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.745083017 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.741067562 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.538601731 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.746290293 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.729109686 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.533563312 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.746976344 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.759734391 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.738138069 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.817147278 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.820398041 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.167569074 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.505102151 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.156263447 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.768008418 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.98241627 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.741306908 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.714978909 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.508654278 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.742388261 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.716182554 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.742464736 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.752958949 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.498428257 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.736869332 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.49582632 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.747006655 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.741566507 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.501396791 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.479909701 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.494186656 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.978133183 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.736912843 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.149391553 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.745265791 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.520831735 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.74172861 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.741138521 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.742842788 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.97637842 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.505345059 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.151237109 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.175434739 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.18507137 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.746848255 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.82713556 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.750122624 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.168937824 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.826150867 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.260416565 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.175466028 seconds)
  done (took 159.902223395 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.130021352 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.869266895 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.30328759 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.518835182 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.45762649 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949100092 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.886705845 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.07000569 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.716457449 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.906720261 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.698356335 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.86797518 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.636142348 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.835386329 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.918358124 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.93885661 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.334396295 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.712745664 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.627281235 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.666587769 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.739345345 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.895008367 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.625420314 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.213837388 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.714317024 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.623896516 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.710064876 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.459186256 seconds)
  done (took 66.603928546 seconds)
done (took 657.61040662 seconds)
SAVING RESULT...
DONE!
