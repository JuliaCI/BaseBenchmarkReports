cset: moving following pidspec: 28597
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.526791475 seconds)
loading group "shootout"... done (took 1.143192743 seconds)
loading group "string"... done (took 0.454508161 seconds)
loading group "linalg"... done (took 7.551010279 seconds)
loading group "parallel"... done (took 0.143567048 seconds)
loading group "find"... done (took 1.265051775 seconds)
loading group "tuple"... done (took 1.823899452 seconds)
loading group "union"... done (took 11.941682607 seconds)
loading group "dates"... done (took 1.23877221 seconds)
loading group "micro"... done (took 0.19080947 seconds)
loading group "simd"... done (took 4.087115721 seconds)
loading group "io"... done (took 0.977438945 seconds)
loading group "random"... done (took 8.203605528 seconds)
loading group "problem"... done (took 1.604818906 seconds)
loading group "array"... done (took 18.352215887 seconds)
loading group "misc"... done (took 1.50903853 seconds)
loading group "scalar"... done (took 37.239407787 seconds)
loading group "sort"... done (took 2.854828677 seconds)
loading group "sparse"... done (took 11.177458868 seconds)
loading group "collection"... done (took 16.344272575 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480600999 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120124984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123686061 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112363991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141988446 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115285843 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119507498 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081802681 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.858308841 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137849254 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109874928 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419990954 seconds)
done (took 5.143539065 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.160139313 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08385863 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07524385 seconds)
  done (took 1.282059769 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060533672 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12648293 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062040146 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063428927 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062961962 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062121192 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06257531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062604529 seconds)
  done (took 1.625181923 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067814595 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063270201 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06073088 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064140419 seconds)
  done (took 1.380040568 seconds)
done (took 5.645887726 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229312839 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098984424 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.279619964 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.384784566 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.445309202 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087395669 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070679846 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06635829 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126980013 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320911842 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101915482 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179543484 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085665289 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168290784 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.968761433 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113518626 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080152489 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117048046 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088129841 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125833895 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.400877263 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073186464 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069211232 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065170288 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.062629969 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.630714878 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.649662641 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.122684441 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078570312 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097487059 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111283104 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.641332076 seconds)
  done (took 10.297487789 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0885465 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086986212 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065054872 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120846564 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090546028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065906927 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071551622 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063237095 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087655903 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121591126 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086102703 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095273053 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061258002 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.063781033 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07087857 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191692208 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074351765 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07607316 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065090667 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07630615 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103829193 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075199557 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07585354 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074709002 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12301459 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.163322584 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091164875 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.092713029 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061234229 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075316939 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.109677296 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.121338671 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061115048 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060974793 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11524854 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.089596611 seconds)
  done (took 4.391766836 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.919402089 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086331461 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097395317 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.596638533 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.060968 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144901924 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231403356 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067317778 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.447264204 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.136748614 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.133314106 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.137101081 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.108338564 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064410277 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.193096037 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.109110198 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345329268 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064257803 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063450739 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06056023 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063493699 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062530776 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059012076 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066430704 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088331669 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083207619 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.17270328 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.906242887 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.238495039 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062181439 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159993812 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.078854125 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.351725755 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.064473161 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078222807 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.385430196 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117689802 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060426477 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158780704 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110830782 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.059326569 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114629229 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072530412 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06401097 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.063413546 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06380688 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066488329 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075337979 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096640893 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062608198 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06028189 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.154946172 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059923644 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062202419 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061512684 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062666657 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.144842503 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.059700857 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13514876 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059430928 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063195295 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09289304 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063054372 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084999226 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09740978 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.32819856 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.023312465 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062811793 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.887539921 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075358407 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062688467 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067461953 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06276233 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063832015 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081886185 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063916955 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070856785 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066328532 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063998022 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103001425 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061660282 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064203576 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061291909 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066274892 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092502875 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062348447 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.450979534 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092061909 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061285299 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072054296 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099488774 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.059169691 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061480846 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.0679887 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062400591 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061992615 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061254563 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.061550039 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.173527556 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088164031 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064514402 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.10819976 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.033772948 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063321043 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.059338048 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061334052 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066389855 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064698461 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.063848279 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061448658 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064307726 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063026914 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060448022 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.106442303 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.061504739 seconds)
  done (took 20.799542773 seconds)
done (took 37.533418054 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242922458 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077159087 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077612329 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077121153 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076961822 seconds)
  done (took 1.766024012 seconds)
done (took 2.969582926 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.104266123 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059967978 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.095847268 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095419986 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063045119 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060152144 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.091570161 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.059307489 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.091211323 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093369627 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095208395 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094336006 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.0589832 seconds)
  done (took 2.270912419 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066662751 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07542061 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077989222 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058256975 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067118354 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076119838 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057336721 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075165544 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081439981 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076006551 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.075564926 seconds)
  done (took 1.985343448 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064860188 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076340881 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077619565 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059352476 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068754983 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076796987 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057412913 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075742008 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079283798 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.075977747 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.075966987 seconds)
  done (took 1.976892117 seconds)
done (took 7.424426504 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064179233 seconds)
  done (took 1.237798066 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.517616956 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.597299896 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064916116 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084087251 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.177342957 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.095385877 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.225493814 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069503621 seconds)
  done (took 8.183161474 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093204889 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063959042 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.064282101 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.064050876 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.064749564 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.063906888 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063818833 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06447032 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.063702519 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063492538 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.064781668 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063967034 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.065061325 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.064183226 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.064878017 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063279176 seconds)
  done (took 2.335838612 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091332364 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090569655 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068495092 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.069456482 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066871202 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.066719368 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069089398 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.068236232 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.065323694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.06682824 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069971293 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068033661 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067323839 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059166998 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.068439442 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070633058 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065367103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068552432 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069397676 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070069983 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069328527 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059047607 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067592811 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068699577 seconds)
  done (took 2.964012508 seconds)
done (took 15.909629933 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109705132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071356135 seconds)
  done (took 1.364236012 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066254162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067028125 seconds)
  done (took 1.332782433 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072997236 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057122813 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080100616 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068762814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058023208 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057327315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077180905 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.057976322 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057321639 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057635574 seconds)
  done (took 1.843822243 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060021333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067324887 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064941856 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066696959 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064745883 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.058980933 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062160844 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.05946778 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066957545 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058022708 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063058423 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.077954995 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062367725 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079152651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062235866 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06307707 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065148779 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062260646 seconds)
  done (took 2.370280997 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057407611 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058211881 seconds)
  done (took 1.327348924 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061836825 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058589583 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061596019 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061682353 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058511628 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057558438 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058521822 seconds)
  done (took 1.621126354 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400971181 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113775501 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329196112 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064914479 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073950464 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.236734531 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059069464 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064115977 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063952795 seconds)
  done (took 2.655275211 seconds)
done (took 13.72877995 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075139879 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.07874271 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084971525 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.408904254 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087448688 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.061994873 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108929173 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17319807 seconds)
done (took 2.299863412 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208186411 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.31578517 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.891176768 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.061713011 seconds)
  done (took 3.48006882 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315906315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079231884 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072075178 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062069477 seconds)
  done (took 1.755426065 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060678779 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066494756 seconds)
  done (took 1.345890646 seconds)
done (took 8.013849423 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059855271 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084580416 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.058967586 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.059496568 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059750804 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059472188 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.059354211 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059718118 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.058987839 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.05884146 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.059140369 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.05895492 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.058805333 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0591213 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059623157 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059350488 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.059244446 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059016125 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059641398 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059444047 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.05936066 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0587032 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059520781 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059555492 seconds)
  done (took 2.689635111 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076598773 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061879028 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063130863 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062814211 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063804801 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062836612 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063133753 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061235116 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062887457 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061201998 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063426927 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063490723 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061347926 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063328203 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061480667 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063366213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06285309 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061599379 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061037917 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063306253 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062857191 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061574452 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063329388 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062658991 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06340625 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063436082 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062690188 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06307292 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063858502 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06368724 seconds)
  done (took 3.118638165 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06003946 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055840314 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056782515 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.064891039 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056529566 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057547335 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.05702732 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055806734 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056319031 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057699136 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.056882872 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056350471 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.056977967 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056061482 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.05613978 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056849044 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.05996106 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.073478528 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056391799 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.055918142 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.059597701 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056151836 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056038225 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.055882734 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.056574467 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056155697 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056136333 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.056818181 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056107784 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057057846 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057152926 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061504462 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062009401 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057812703 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066264416 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061661766 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057119787 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060097347 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057678977 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.055932024 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.055801034 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0558555 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056218944 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056240443 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.064671103 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05637249 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057486123 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056990242 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056332706 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056066704 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056356644 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058464057 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.060910191 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058057812 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056142258 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057386241 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056127218 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057231637 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.05641259 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056019752 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055883319 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059108302 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058040598 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057336274 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073125876 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057768286 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064515236 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056081666 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059447636 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059267205 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056726227 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071119322 seconds)
  done (took 5.42544263 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083056688 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083335961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061402457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060435039 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057144199 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056726685 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064657297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056695651 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061508035 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075930143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056957987 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060749793 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061047898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060547157 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056844915 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061095094 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065231206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057389769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.056729532 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060391787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056865817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064177957 seconds)
  done (took 2.617065686 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13558709 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062181257 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098691713 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073287813 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065181947 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072967063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062040967 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062602723 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062302975 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062839845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062137383 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064996045 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063087201 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06332549 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064307704 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063762692 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064233704 seconds)
  done (took 2.503987265 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073536522 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062390775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082869508 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06206711 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061763126 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061714019 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066249969 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066864139 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061291023 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06214589 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067065331 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061435928 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061864286 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061547023 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061520367 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062092281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.061431725 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061585827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06655945 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06578315 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066137362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066879111 seconds)
  done (took 2.655676457 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07116304 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061045612 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07415221 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06269996 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056698656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056872798 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062188088 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061084947 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061924086 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061021706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060948296 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056723576 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06280422 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061043821 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063925507 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062406944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062196194 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061183776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060429037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056737312 seconds)
  done (took 2.476824831 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083378102 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060578346 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060228911 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077549964 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059642342 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059406542 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077476309 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059843461 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059776761 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080187734 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059608789 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059330638 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078030974 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077758207 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059536418 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077484807 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077475233 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078000822 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061265769 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060939763 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081854964 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060963194 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079064211 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061227153 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060887434 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061073659 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061041548 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087792498 seconds)
  done (took 3.157657859 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061075641 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060056368 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06010768 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.05949196 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060782265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060479817 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061019476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061784651 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060627948 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061150916 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060452233 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060112206 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060364931 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060345452 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060184083 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060416852 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060658945 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060895583 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060562499 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060612747 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060926869 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060403933 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060185918 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060646907 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060864104 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060193151 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06043587 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060944241 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060397034 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060725137 seconds)
  done (took 3.061362352 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070364205 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068524627 seconds)
  done (took 1.381205443 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059949508 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073597693 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057381226 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067331336 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067078851 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060963282 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067522126 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066544308 seconds)
  done (took 1.757563494 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065155957 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087729017 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060082997 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060268755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063468532 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115189913 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073397787 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.06860306 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073128531 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060519737 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060129249 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070941583 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059256888 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069999687 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061679793 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066608654 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063892281 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068718841 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.06928521 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.056381905 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068019157 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059663052 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058271196 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0607896 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059718274 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06466852 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072961131 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069583773 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06630303 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056869043 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076544431 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058269834 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059439174 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066475642 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063875504 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058170032 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091925656 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058834804 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064838498 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058060022 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069543388 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076741825 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069350715 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.072974784 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059346834 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059243456 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056846863 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059402845 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059711329 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.064763829 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056886982 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06266636 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056427185 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059094326 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06623768 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057345408 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063456362 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064932099 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067845783 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.065652075 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.063856992 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070069132 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064262874 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066452132 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0580392 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073467842 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.05880698 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067634124 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069642709 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.0581317 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069569309 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056549871 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055599467 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.056726773 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085917203 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058481345 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058076504 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056667792 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056757524 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058344275 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064897801 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063556003 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062698726 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060979142 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070807043 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065143574 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057126505 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065517283 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.073315352 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059258982 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056996486 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071380214 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059303015 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056556049 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072656589 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.064490955 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058556508 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057552349 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.058877752 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068898338 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058024807 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055137968 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063393793 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058650508 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059670656 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06189015 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062740467 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056434749 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064853954 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062142616 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.05820301 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055071139 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.059690955 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057626369 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055376104 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064129957 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056369382 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069997812 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061650881 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.06861527 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.06873435 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064777214 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069361894 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055836636 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054697165 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07142006 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.19315828 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059951108 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074366491 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.05861257 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067241263 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057648367 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059615514 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066103896 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056693612 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059749979 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057691913 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063617362 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059170909 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05957425 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.060474227 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064520998 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068273818 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058783333 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064917125 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058065836 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070865156 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065445185 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.060764933 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061623976 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058689935 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.06764974 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.062396548 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065547334 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.056782856 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058185904 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057640948 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066355858 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065629067 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059130205 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.065847859 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.060938031 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058113269 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05762317 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058904131 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.059777984 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061247039 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058213347 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063547365 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064697397 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070844423 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06829324 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06432047 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0563772 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.056629559 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059166013 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056782475 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060366018 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064894969 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07016447 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068357467 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076895731 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058437412 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065177666 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058972737 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071774669 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067893116 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058206084 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062632795 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055746202 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.05915966 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06494813 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067490211 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069960337 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069721294 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060460058 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060602621 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057092957 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069732685 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057878675 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063929266 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065098899 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0623781 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057191929 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059246977 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064912146 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060185164 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057324513 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.07009007 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064352388 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056579115 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069317845 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.057176652 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066528229 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0568539 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059331701 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.060958204 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059383857 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064728628 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070464241 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055919112 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057744835 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070491219 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059216543 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058859058 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063127904 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.069535997 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060028827 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063079939 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065576898 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064900089 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.059936 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064749815 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057992981 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064542488 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060291777 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066602601 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056302057 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072590936 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055328589 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069192135 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056876979 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066011681 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056962615 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064678109 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057183441 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071171711 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058286326 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057499971 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066724582 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054982295 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063853892 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055480665 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.059428378 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06116084 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.063847987 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057897401 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.196972069 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060972349 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065644659 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06174963 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065124804 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065691625 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061127479 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058735573 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065388391 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069205708 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065242751 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059443598 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059564398 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058333898 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065736743 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059340608 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.058820775 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063962098 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.060778062 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.061965575 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058949511 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059269326 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059276849 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064269992 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065802182 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073737466 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065155304 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064322066 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066269486 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057998069 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07380765 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058454954 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063357277 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056059603 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065065555 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065529437 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057565383 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076043351 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060146418 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06552244 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070681334 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065151013 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060783303 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075166817 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061450404 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064061779 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064451279 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.060717206 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062251017 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059001486 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064048937 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065001184 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06660706 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058094932 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.062735675 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064474611 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059405013 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066802435 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058991181 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063737757 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059335019 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056086237 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060559002 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067360128 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.060936841 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061409803 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057690995 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.055959568 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057644926 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065713647 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060634196 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064263148 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070408464 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056052002 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.05847501 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056937952 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061553361 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073202152 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065533355 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063082472 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060807792 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056432072 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059421212 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059184294 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057438558 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061462721 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056371918 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056696301 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066710175 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059052235 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060629409 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05740065 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.05886447 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.064934605 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062787387 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057368946 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06242358 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056815288 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060834919 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056244563 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059003635 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060364745 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056221228 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059312255 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065621079 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.070843856 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.061826349 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.063654637 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057706618 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063381234 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070128289 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06538228 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057760269 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064339575 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055955527 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072744011 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064348428 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.062934454 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06479334 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057422982 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.070819721 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059601296 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0647908 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069681154 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057380802 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064324013 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055899294 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069030358 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059300073 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055696842 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.062382642 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061575423 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.198088259 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068961626 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059195265 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064962122 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064286719 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060655408 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059982485 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059834806 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064980164 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071681214 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058339349 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063322119 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064221802 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064287203 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061034351 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068433861 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064470212 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059057927 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059362446 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.059582587 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058421024 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.067962979 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057787871 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.060857319 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060910161 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.056798953 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.062884303 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071537273 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065666113 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065662161 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05675015 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056986555 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073003221 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060504734 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063181208 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065106422 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066099018 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069687862 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066452186 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0737132 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059515396 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06322056 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069540995 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059720115 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058562541 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060878946 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060342157 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066336443 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067427578 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064533202 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060535545 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063946158 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069500978 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059932274 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062333673 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065856404 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059468516 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067465114 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064149547 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065185984 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060115313 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058317755 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060577648 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065958017 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064293738 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065788171 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059602223 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066144146 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070264158 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064062118 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061730477 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056930471 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061325296 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064948193 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062710992 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056842653 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060910993 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059733217 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065697286 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065099126 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061433231 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058377434 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07420187 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066104316 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065978382 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060554239 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060817234 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058943106 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058158307 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068995669 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058604693 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060503966 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062010815 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060675247 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074159888 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06516795 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072813862 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059370116 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061851598 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058286147 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066619496 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060876052 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058004104 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066521442 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057385262 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071138361 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067292977 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065444543 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056399218 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060596599 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.063675822 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069330876 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06463763 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06408605 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.060866164 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064813085 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058742732 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.065961952 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056141746 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055381871 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.064797476 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063239552 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067427441 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.05615857 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.06471419 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058641308 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063016926 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.063021496 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057593301 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057849852 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057589157 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.200631704 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06191601 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066324995 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06145267 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072203565 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059869513 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068553507 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065988236 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068815895 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070187242 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070669857 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065524928 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059280415 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064393534 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065694445 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059233363 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061272937 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061512549 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077785091 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.05925016 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059906999 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070698116 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065180114 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057145451 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065558995 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061050862 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.065992426 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058649166 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.065971494 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06251344 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058495552 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.060703707 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.060782963 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056304794 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057354598 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058044923 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066485578 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.060903818 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057878147 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075141777 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059526764 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064022411 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067169424 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.062605722 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059319512 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05618229 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058521476 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067883069 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070587874 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.059699887 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064030165 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.058937869 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065130115 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056118858 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064466104 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065010729 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064167658 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057434203 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05769976 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070901462 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072162683 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06198062 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066628863 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066075935 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059515861 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077167517 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064352732 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058683373 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067048941 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060264872 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0566541 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058018772 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060955416 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070582361 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059067958 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061566093 seconds)
  done (took 39.33255776 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098122357 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059355935 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058570291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058857441 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070618924 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059698049 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058260383 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059437708 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.05938338 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061630872 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058216134 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05882881 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070560388 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073711416 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069648947 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062186036 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057183164 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058087252 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057830632 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059555944 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069465465 seconds)
  done (took 2.690907043 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067851413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074614217 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070853794 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07558573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066564127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062502309 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069332464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062112676 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069935059 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06713215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0700438 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062510512 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067004795 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067314479 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067108883 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062163629 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069773428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065331087 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061967955 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06917409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062254284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070256544 seconds)
  done (took 2.80537599 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060356491 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05934515 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065216554 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057699209 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057612924 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061945319 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057876182 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060802455 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060852434 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061076183 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065046827 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059034827 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057764517 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062067529 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057295321 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058892003 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10170357 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058967624 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059075122 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.05790462 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063296267 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065518516 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05741731 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057755416 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060890754 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061755801 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057983046 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061271099 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058704346 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061441889 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.05875954 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057812995 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065040574 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064671974 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060756931 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06098744 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059678035 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058779006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057563316 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057828103 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064594396 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059362992 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058080318 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059227942 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065426145 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057978657 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057334154 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065436169 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057645664 seconds)
  done (took 4.323145216 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070709459 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104795625 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.062513984 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085664597 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071404546 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064270941 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06238311 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086485068 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057939902 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059000287 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072288916 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072274798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060550517 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061933993 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.061888476 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060339807 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061466675 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059365173 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063439332 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059974591 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063864908 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.063897413 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070594684 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0714567 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061636724 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059385272 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059677042 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06228734 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071858582 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065818868 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062620546 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063291634 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07142379 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.062389518 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059814078 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059876334 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07237014 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060836675 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060659202 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058661388 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.059978026 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061892174 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063971023 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073104282 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060710374 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064440845 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061309471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057959687 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071632421 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059966734 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065267625 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072972093 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061820644 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060685526 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061953262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071567907 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060371729 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058778983 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060889137 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071316832 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058085053 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061387264 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072812187 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059893773 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064342957 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072532411 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06472829 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061735273 seconds)
  done (took 5.901548676 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068420571 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087346381 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069178614 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069287294 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068239675 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068122251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068182128 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068161316 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067955716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068670245 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068066805 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10647791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06374286 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073224881 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068066422 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068136658 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067776252 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067942093 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067949354 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067815134 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068102555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068699679 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067876951 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068301361 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0712999 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063526402 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067573112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067784916 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068610595 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0677389 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070893746 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068077357 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067789428 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068547117 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071023993 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06775552 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057980552 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067610651 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067915361 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06770585 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063561463 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068431886 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06761622 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064363646 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069711912 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069474614 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073243441 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073098056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077858873 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069383842 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069719511 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070518892 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069376333 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068767025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070011725 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078306294 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070759904 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070520924 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069642743 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070403441 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069055404 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076722034 seconds)
  done (took 5.692913577 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074878094 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066225466 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077184505 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058952306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057143983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066698005 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0568999 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056747675 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065250856 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065146335 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067460337 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066863031 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069342405 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067270637 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066842618 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069155598 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067306267 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066557309 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065222015 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06666817 seconds)
  done (took 2.67688113 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071173836 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07503692 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063075746 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067163621 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062160849 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06662003 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061650469 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062641483 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06338382 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062676451 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068284746 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068262657 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063123672 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066611709 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068335609 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0667316 seconds)
  done (took 2.404023966 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065691209 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065730192 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066428194 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058548072 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061902926 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057733152 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.05837569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056727465 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.057668925 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071056789 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058176608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069380937 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058325511 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057101282 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057865694 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063769813 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.057612802 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058572667 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058170264 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064044823 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064779113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059562852 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.061903015 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058346066 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063089561 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065293782 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06036922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061477668 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058292474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.058917044 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063897054 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064974183 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.057969032 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059402209 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057451379 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058222272 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058480115 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059349532 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064153039 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058593112 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058678517 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063008181 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.05839147 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059531984 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057649775 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058748044 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057635383 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.063643595 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059502073 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064506916 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059748693 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062150518 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060126104 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066926685 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062527379 seconds)
  done (took 4.696928741 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073825224 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062704604 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057008662 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057146609 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062208249 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063019054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062412883 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062519816 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063058903 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056870982 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063046773 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06201859 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063159436 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062373689 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062789889 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062291332 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056552542 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062085177 seconds)
  done (took 2.477497447 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070170056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063698304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067895044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063109303 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062598064 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06270194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058652841 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058703673 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058548132 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062832037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062996427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062776869 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058689231 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062685625 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062469143 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061522337 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061320476 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0573067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061650812 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057364708 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061070883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057459791 seconds)
  done (took 2.706658951 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086254841 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080397169 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.117612462 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074163267 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081587954 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067054758 seconds)
  done (took 1.860193699 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088036777 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100840645 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062052571 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063647867 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074040852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06571172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06540975 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065576583 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072523389 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070389829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066985607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072477881 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072373868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067593726 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072447271 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075473885 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065789197 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065775529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062017958 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075703809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066026077 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07252355 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065754578 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065314771 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082892445 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067740563 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075741581 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070595244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067924558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072686926 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075533554 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065471795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072902083 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070867204 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061742401 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072895952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065778522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075783345 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073509174 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0679799 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062041869 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073237412 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072847153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06768315 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075957633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066321797 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067852203 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065708022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066000421 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078433134 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073087869 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068025683 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072879729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0761806 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075879293 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078432363 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070530574 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067896116 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072934102 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070522194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068079354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072933252 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068061755 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070398203 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075924302 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067759806 seconds)
  done (took 6.035506963 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095743674 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0629537 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066047329 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071345409 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067678987 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065917817 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065717475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065852013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06600247 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062375277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099967297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066175626 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067897415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067811534 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06601106 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065763166 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06570328 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068052434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062434183 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078299891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06582456 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067955918 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067966322 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067849248 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070461426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0756194 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065613377 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065657133 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065763725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066561564 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069364417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066718215 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068021745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06229627 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068261056 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065950227 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065778013 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067947373 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065915052 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07317521 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068147608 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075790946 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065952134 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065843566 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070614071 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065718783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06575087 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062492272 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06587319 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062683497 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070688284 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070906983 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071623087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068011199 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065889157 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06635264 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065855964 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066274708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066373494 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076112956 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067872435 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065771259 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078774466 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065587785 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06571032 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067952886 seconds)
  done (took 5.898676087 seconds)
done (took 121.567488061 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206177051 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179172659 seconds)
  done (took 1.721862224 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071101306 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094137586 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070832977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128431643 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066299934 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100127469 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099159026 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070888629 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066128077 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065739092 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066167445 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068484807 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130839315 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065939276 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065436713 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06856437 seconds)
  done (took 2.654403837 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102325493 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177526149 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103255099 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063992674 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09871849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071367473 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06408167 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074398005 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067253882 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067074723 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071275316 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069420213 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066857552 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069588981 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067461166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071551095 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067089873 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071325767 seconds)
  done (took 2.806457916 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091426702 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082660539 seconds)
  done (took 1.539692814 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152057789 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099828504 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139216541 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313544702 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131911949 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.270428656 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12617111 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123948001 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106399615 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120657355 seconds)
  done (took 2.943136917 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09901647 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161321272 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290970028 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113070143 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070010422 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.081715071 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114935387 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076292793 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07531056 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074805158 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.074697846 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074035673 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091698824 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071579928 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072984436 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073219543 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097236975 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071963638 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072316816 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072578379 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096609703 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065869781 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073346989 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071851296 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074711133 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074703992 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0674398 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066020723 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072788478 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070194957 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073322632 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.078433787 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072968396 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098610291 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068444997 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099637831 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069651114 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068666231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070432965 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068631215 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072423152 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07218229 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072653059 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071665694 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065619328 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069815633 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065521949 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.063964007 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074139122 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065495578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074325712 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07327213 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098528256 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066052909 seconds)
  done (took 5.823053428 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10298162 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103071688 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065667255 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108256092 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098677626 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064882487 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100037605 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093198676 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101809311 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064477084 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064027796 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064605903 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072627272 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075258826 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110328159 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102328868 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066686376 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064334313 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10228194 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101936956 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063516767 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095495935 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091850908 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101230408 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063139435 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064839772 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064646956 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065372359 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072089225 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073713343 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065716298 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074355764 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082819722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072004372 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062749763 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064357298 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064646445 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073881407 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074659713 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074765166 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073525682 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063376427 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064097169 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065226987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06568446 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063942026 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07330415 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07467021 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073499162 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06384672 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063664366 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063612993 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064436515 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072040393 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070579923 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072434231 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071935252 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063159598 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063399047 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065252956 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072858624 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072649174 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072240794 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064205124 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072831808 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063018231 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073306772 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07626615 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062828681 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063532288 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063446474 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063104991 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063461204 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070394184 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070740025 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064209782 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063149263 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062859152 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072909495 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070738509 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062843922 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070170035 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062477956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064198307 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065238827 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065431699 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07092914 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.072281785 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063941441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062831849 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063131541 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063668762 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062471343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070392528 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071579083 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07207428 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070960525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063487429 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071337307 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072016219 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065307336 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071156847 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062668766 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063389275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063328961 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070456727 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.06921257 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071219515 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062263777 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062108809 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.069566681 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.203405648 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065440595 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072769438 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074323043 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072604427 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063726239 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076985898 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06463164 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073492633 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064200649 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074242509 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064001484 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071855197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064489152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064621307 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065179439 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07377761 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065051172 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064321123 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065206431 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063712288 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073220525 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074837348 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064882333 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071247633 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071821829 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06640404 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071525961 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063510689 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074223724 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065626728 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066144712 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064237012 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076622949 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065504854 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065019233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064817296 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07549153 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063492398 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073323206 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070596159 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063216942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074553381 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073073616 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071556479 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073735897 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064158721 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063544987 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063539892 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065117958 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070952286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072086218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064294363 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063853045 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070806325 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073138099 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.062823683 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071099835 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070993306 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07136287 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063835013 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063359611 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073761259 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073666996 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071379699 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071452594 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071599282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063645876 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070956997 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071500911 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0635687 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076771764 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063450299 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074987811 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071702749 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070709736 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072001029 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072760955 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073070617 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073764718 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075123837 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062875279 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063175021 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071314131 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063262846 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063457363 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070895872 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06422833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064035796 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075690514 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063700716 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073199008 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.062563852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071969506 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062733652 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063796164 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0754877 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063544693 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063764742 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071185628 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063089168 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070247896 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072791546 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070706741 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062788665 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063391597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071005702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071174607 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062646958 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.061925601 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062520789 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068731898 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068670313 seconds)
  done (took 17.248243243 seconds)
done (took 36.114345425 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203258832 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152309849 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18510335 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110206087 seconds)
  done (took 2.113294913 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096893779 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093620157 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.075013357 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060411785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080546437 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060328763 seconds)
  done (took 1.872951817 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27707345 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193915867 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17146739 seconds)
  done (took 2.04114363 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211646207 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19302891 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443735827 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280102495 seconds)
  done (took 2.627701986 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131191958 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.07769003 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059733505 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.07044392 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110179 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142300408 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087200523 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111214956 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070677961 seconds)
  done (took 2.316756624 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.129590074 seconds)
done (took 12.537513187 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.272165051 seconds)
    (2/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.176759573 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.211460442 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08021646 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079608806 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.104105014 seconds)
    (7/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.192535401 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.173191585 seconds)
    (9/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069227988 seconds)
    (10/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071547513 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065402744 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077265093 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.084804763 seconds)
    (14/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.174718366 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.276941081 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062827104 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.138802685 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158245491 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07281234 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083645502 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163886602 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185698079 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212877456 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070903915 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.158092941 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071954085 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070707391 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.171544159 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070719133 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160157532 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066659164 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079616441 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071678448 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.05989197 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.178802966 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067727497 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.060650932 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.162157334 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07132016 seconds)
    (40/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.062818236 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190723187 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155247371 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214666531 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070375598 seconds)
    (45/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197338788 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06122108 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066574331 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070815901 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074403525 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075436732 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.149773427 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18286672 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061534262 seconds)
    (54/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132079918 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.209297203 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093700965 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.06227154 seconds)
    (58/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.165373436 seconds)
    (59/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074069763 seconds)
    (60/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162883254 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091446971 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072523801 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.20046359 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.185003305 seconds)
    (65/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070547989 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061537018 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070968834 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154773536 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070461185 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063237119 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.111921379 seconds)
    (72/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117745697 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.16656193 seconds)
    (74/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.205147482 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068526561 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099376577 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070374211 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115317705 seconds)
    (79/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.060476505 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068947513 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130512363 seconds)
    (82/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068590217 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.213193415 seconds)
    (84/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070662439 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130923107 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.183355291 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081313591 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.061731827 seconds)
    (89/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.062989868 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.170169618 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076469122 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.075555801 seconds)
    (93/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.176585807 seconds)
    (94/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073690893 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.060756613 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071357278 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114610241 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113689308 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198544979 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070295918 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.081072127 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145365002 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061381389 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.125963464 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200584993 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067239554 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.071735532 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076966017 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069247922 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070276902 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070475869 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.20519661 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13002885 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.200974154 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10483444 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061143617 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153155176 seconds)
    (118/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061618466 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071633654 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079218162 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064676378 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061194365 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069102521 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08418449 seconds)
    (125/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.064830004 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069860342 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.131267535 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05971603 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.129808786 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.188692535 seconds)
    (131/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.090182798 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122064646 seconds)
    (133/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069195085 seconds)
    (134/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065558412 seconds)
    (135/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06117636 seconds)
    (136/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.060602556 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069658359 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.152978317 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063033655 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.059657516 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059979848 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07076756 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.209024807 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070658755 seconds)
    (145/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.152154873 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061275087 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06060597 seconds)
    (148/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133154442 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068279055 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066913895 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13464327 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.060871207 seconds)
    (153/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061082939 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059867169 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.059598188 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087328816 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.066896514 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086189286 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158544425 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059446071 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060061835 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.066925938 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.06912823 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06222974 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.060431359 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061113949 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.060326938 seconds)
    (168/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06082559 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.080148837 seconds)
    (170/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.130458878 seconds)
    (171/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.068881443 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068542366 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070541941 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061654206 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.060275523 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060135693 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.059932899 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136904856 seconds)
    (179/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063776455 seconds)
    (180/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.059905554 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.059300903 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.059861386 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.158804382 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.14632714 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.060591059 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.058485603 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.060780065 seconds)
    (188/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.130547707 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.060982594 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.060502697 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.059130085 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.154264586 seconds)
    (193/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.221175446 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065896335 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114875638 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062196711 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062231464 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169320397 seconds)
    (199/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061576858 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111472094 seconds)
    (201/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062624099 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061777552 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.061060516 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062633888 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087649768 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062326778 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061181152 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114462725 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067567015 seconds)
    (210/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.074474765 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133331131 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074780643 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.131724415 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06841128 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0603716 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081472533 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.167542459 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061319707 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.059826784 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062720185 seconds)
    (221/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061563885 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120344681 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085199457 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067317704 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086104058 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061026147 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066701992 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.082115162 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.060761157 seconds)
    (230/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060816768 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071428529 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071754267 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06229677 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133032567 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060058538 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059851039 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.060060313 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05997886 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081385852 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083484533 seconds)
    (241/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061059752 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072593429 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060304146 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133593821 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.13963599 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06862956 seconds)
    (247/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060290411 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071335165 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061749303 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0613802 seconds)
    (251/309) benchmarking ("sort", Int8, false)...
    done (took 0.163290414 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.126028587 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085518152 seconds)
    (254/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061559529 seconds)
    (255/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078696654 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.060868592 seconds)
    (257/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.060874024 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.081503725 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067111197 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062887897 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.060971138 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 0.127061289 seconds)
    (263/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.059738175 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.062384488 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.059989632 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.060265283 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116567346 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.088792729 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.061233591 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060438559 seconds)
    (271/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062137338 seconds)
    (272/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.060037376 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061189915 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059888153 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.061244856 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069048913 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 0.231866581 seconds)
    (278/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.065410002 seconds)
    (279/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061229493 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067365284 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060003779 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.059723421 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.081559571 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064262329 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063468749 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06019619 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.060337257 seconds)
    (288/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067168809 seconds)
    (289/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060024673 seconds)
    (290/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061516214 seconds)
    (291/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.060284305 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.066599216 seconds)
    (293/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088136072 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068825317 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071229893 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.061337754 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.0855803 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060987088 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.060933495 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.059660368 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.067288698 seconds)
    (302/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.060490622 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 0.125797769 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.155588101 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.118750446 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08311284 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.060943501 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.059923652 seconds)
    (309/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.060596926 seconds)
  done (took 31.014648307 seconds)
done (took 32.432144386 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084876019 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087875946 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070440155 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.082881864 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078064393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093579636 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070614309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075457943 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077899444 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.076927441 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07618532 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067696252 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07011919 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070855693 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069252899 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083886624 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074600963 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.068701381 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.06868226 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060200187 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0702568 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062215759 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061584079 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068439605 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073162945 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069464287 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0716314 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.069491921 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.060266926 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.060620354 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065556989 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070154777 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064158513 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075539176 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071750481 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069589331 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072050923 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074112315 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061507191 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062464953 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072311241 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0627468 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07069902 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068697925 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066706694 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069017522 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070637878 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074660515 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086064832 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066274816 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072192718 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073162249 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074118725 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067741323 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067702264 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07032581 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068355845 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083841187 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069008026 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064003546 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.069857204 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069735666 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.066949205 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068821538 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068769082 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071730918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074974571 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068600203 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072319272 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069324913 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061672577 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070316314 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066977883 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061251622 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072282361 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074681587 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061423749 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066233384 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070089017 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070558079 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06186085 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06604599 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061222189 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066790649 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066067396 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068304107 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067095626 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069182166 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062220176 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071034177 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.06948201 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070021721 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061743037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075488415 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062525283 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068219027 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062128817 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062044002 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061363512 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067481437 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061780258 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066175376 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070812471 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060242406 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065228959 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.073399207 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061643807 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069513373 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06194691 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060952341 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071559734 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07047814 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.060468926 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064146638 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060243891 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.065980841 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060121897 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060365621 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.060039365 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.060813697 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0647159 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.060415079 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06407039 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.065491464 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073835391 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.059961002 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065205973 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064292577 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060953566 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068545075 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060439651 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060106165 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059604298 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073526606 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063402971 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.059704288 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065320762 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063263267 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067432682 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.058494292 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.067852967 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.065032187 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.201538671 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067811896 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062738671 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07386795 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067036473 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066773389 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062133006 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061867707 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061457383 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061896897 seconds)
done (took 12.029838271 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063607039 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.092410264 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071728929 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079327422 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074816442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063476395 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067509909 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081124135 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066010586 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082274688 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08403635 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082930422 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090312916 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062292892 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062386597 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063141637 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061318234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068890644 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078435529 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082490122 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090218349 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062435014 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07173709 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077559349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073607427 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080134318 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.061960466 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062125413 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063477481 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.076286847 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083275172 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.060447576 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.061579709 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075535947 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.07474849 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068653692 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06236644 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067163017 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062840335 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062073677 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063547207 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076986638 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.066391264 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06973391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062379607 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062153805 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063070056 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.06672639 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.073431178 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066915502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070451658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075205823 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065282462 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062854736 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061491746 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067339689 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06247339 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063603816 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061097683 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061410423 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.060804583 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063901613 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.06331793 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063757511 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065879662 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066412517 seconds)
  done (took 6.056832986 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081365984 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090660009 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079649546 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079453001 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061906753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063284527 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062621841 seconds)
  done (took 2.031207069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063974824 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076536815 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079168475 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079679185 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072618017 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079814312 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06121576 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090231436 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060515107 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073310117 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106149144 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078472945 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064491533 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072454356 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061464594 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069007531 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061325765 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069175173 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070069198 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077198954 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065737757 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08744468 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074202895 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.061564027 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081960786 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066270842 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.060657477 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061585256 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062806804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.062479677 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062461898 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099448991 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066148277 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075194389 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062745861 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061288177 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067574153 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064750054 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066596242 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067819961 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067121254 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.062996469 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060476508 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.062848442 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064122224 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065249796 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060459144 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.062855853 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062695821 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073126524 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060411986 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066641095 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.0647629 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066577845 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066897881 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065886055 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069151312 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.062692601 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073262825 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069182972 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062594537 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070791938 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070065874 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067133739 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070182416 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.065541359 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066157348 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067457053 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062220527 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063689496 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.062974202 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070204105 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061251319 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063711058 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065005658 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06331153 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065695806 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077914912 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.0773672 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073560739 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.062831129 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063888447 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067095172 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077485096 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066365543 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062630341 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06547637 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.060637387 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06562276 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064465145 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067733553 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063023997 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069500811 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.063760276 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065104612 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070600031 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061468025 seconds)
  done (took 8.112763288 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066556849 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064473275 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064315263 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062439006 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062752613 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.062392782 seconds)
  done (took 1.929986177 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087813534 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062635602 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075655356 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.062732898 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.095566392 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069774948 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070301355 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071216296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07447726 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074268088 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069874288 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072530852 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069105296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064407803 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069685563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063467064 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069850154 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065681827 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073520414 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064423618 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075266392 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.063989437 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064193427 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073943509 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065166419 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063104905 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.062522666 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073595655 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073482914 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073181182 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064027597 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065449812 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069487172 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070421176 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069519852 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069409211 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062397555 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068131039 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064567401 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065125503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.071989278 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064184662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.064684374 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067889058 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070724424 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069504713 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067884826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06600715 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069347773 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067735775 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.06776627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06328555 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065019451 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067845479 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069744814 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07107858 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.067725288 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069773518 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.063763906 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069541514 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062311744 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06513531 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070521403 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065127772 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066304923 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068084973 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069616828 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.063915817 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06420534 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062412574 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067985471 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062366821 seconds)
  done (took 6.436737665 seconds)
done (took 26.077221144 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.98878924 seconds)
  done (took 2.47447168 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.561082827 seconds)
  done (took 2.091729933 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.625739369 seconds)
  done (took 8.151384346 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.299076256 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.341719904 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.702929949 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128301259 seconds)
  done (took 3.032770861 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713010677 seconds)
  done (took 2.25173169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228512972 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217330754 seconds)
  done (took 1.994459163 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347116023 seconds)
  done (took 1.873042428 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102081987 seconds)
  done (took 2.627970987 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233502253 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154638235 seconds)
  done (took 1.923846497 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445447301 seconds)
  done (took 1.974555057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.441962112 seconds)
  done (took 5.974889054 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236428118 seconds)
  done (took 1.810487828 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234105737 seconds)
  done (took 1.767662494 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.706912942 seconds)
  done (took 3.235576328 seconds)
done (took 42.720165188 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080569459 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080085109 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079735347 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075692373 seconds)
  done (took 1.817100945 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072261782 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06715278 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071276347 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071710047 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06862673 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069846575 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070106879 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06676635 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.06838927 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067276942 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065527219 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067058578 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070172155 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066948698 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069769278 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071151263 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067202944 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067522628 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069956201 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.06688189 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069817025 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067008786 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065375487 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066247673 seconds)
  done (took 3.169082487 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07522749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070069121 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072269302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069073826 seconds)
  done (took 1.821375026 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073941859 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083080062 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085943049 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090405453 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073879783 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074234781 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08178848 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08299712 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062467765 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08607478 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064882255 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063607796 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063417194 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084152649 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081890772 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060607601 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061921455 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073809266 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073174597 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075431174 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065508353 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062489705 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073473023 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073363001 seconds)
  done (took 3.306939598 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078212215 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062752794 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07818559 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089782295 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091558031 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062767146 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078463545 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090886714 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138281824 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062777964 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068511062 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0623837 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10345596 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062743095 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079364448 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108341273 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111969009 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066184625 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095867306 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06288095 seconds)
  done (took 3.200769471 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074590931 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065829578 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067133051 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062308051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073797635 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070688056 seconds)
  done (took 1.962179178 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065430644 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064230692 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064406033 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063527435 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069180588 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06403482 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062808737 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064272349 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064387898 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063669148 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0635445 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062783777 seconds)
  done (took 2.313105701 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.160976315 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066871325 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066087971 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063793186 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066913782 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061746213 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076736753 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064001286 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079793272 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.061632152 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.061746504 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.063825275 seconds)
  done (took 2.435154617 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099076132 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12616036 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093094839 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069441947 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165680091 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09090188 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.086295315 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.11799227 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089672 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065711788 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089016115 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130458549 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0911962 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094611233 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077837623 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120801604 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105116015 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085306919 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112728631 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080587185 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068550277 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131714734 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068403068 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091281813 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099101996 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095662521 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105847017 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12882357 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08019372 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085676991 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078885368 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070408224 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101183621 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080177525 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093424522 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089872412 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094561407 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081487324 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082927216 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116000322 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149624243 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09628178 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096455788 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13012352 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074648688 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.103950977 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077308584 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095708469 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100549086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089385756 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071774053 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087852309 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102518312 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099436889 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078445752 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077783536 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113185192 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094984854 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092388291 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07571846 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101908254 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.082277153 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102377887 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25826803 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136960057 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098461592 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132932551 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11970794 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093098876 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086488731 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088353808 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072072954 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107173126 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094132064 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132855299 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1062234 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096252018 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.091669905 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078447922 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103788756 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112579402 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092675572 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09237849 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142793634 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107475611 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089715637 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092250098 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.13946631 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07034937 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146607343 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087901036 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118606132 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09641384 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137613297 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090212741 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081937692 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104707403 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101889952 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088110911 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101616031 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080832109 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110010504 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089057735 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09732106 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078350799 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08679604 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08318578 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092728409 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071648198 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100474636 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111945728 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110450071 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071536038 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104825726 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082751281 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073227174 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089238083 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135470902 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079690727 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071770174 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145099064 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088972334 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111446942 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104586799 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078866366 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258578302 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134473163 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08958449 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086549354 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073374253 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149675276 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07296874 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11521439 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077876071 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098647489 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102326628 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128458571 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134665399 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092366803 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074880834 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088436067 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.103307802 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08556955 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084646988 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075288235 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108228203 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125216026 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099272229 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080099896 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091668803 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068199046 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114021634 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075073546 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082857479 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095906341 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.087064256 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089000083 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140136886 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083417142 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106709422 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096894961 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066253358 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090825553 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152853674 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082105293 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110217367 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114317982 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081168429 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066888042 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095742624 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07184115 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108292859 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092248292 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106319858 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077233514 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105271077 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065124636 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071621117 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127540517 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098743801 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087774327 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130007223 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100643649 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085090957 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100125442 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093609055 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0914116 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098212535 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.253863162 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103487805 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071344981 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125732859 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090751591 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074612248 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08475131 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076475871 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074720429 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098081352 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112314788 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086097202 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098312049 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099650003 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087459859 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106642722 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086683941 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075496754 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1284939 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073350102 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071769656 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085289778 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.104535639 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08539643 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130679598 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076577524 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132398662 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089168462 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078817624 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111759309 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065733185 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066468472 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078245354 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089007895 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112621209 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075968643 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074673589 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114906427 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128518447 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094778993 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100361954 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065239226 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088067061 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132371456 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.110909275 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078441651 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10706423 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08130332 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125990412 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093622603 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116952376 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103002249 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107478678 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087987238 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.077546221 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070429856 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084385592 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107393981 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082997447 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079194769 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064732512 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071379922 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08963399 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087855389 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108483246 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083869164 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129997928 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069098261 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098173925 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252413144 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104669389 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088426968 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092336655 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089194331 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088770777 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088773546 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089174696 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07075821 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123344599 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100378017 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075573616 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086427175 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092586395 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104023465 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105623377 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106090891 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090145381 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103912835 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119270474 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095593753 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079633175 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081182066 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090792075 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082137272 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077980285 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100975321 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109630076 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095912297 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105783799 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.09137658 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090193244 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103939573 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090080249 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085598266 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114646725 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149149549 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099032109 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100984677 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082600762 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104405263 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102431238 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109951891 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107733747 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105941361 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067539054 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072255155 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067196082 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103236221 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075974853 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116532425 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075862789 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105918487 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095160421 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076777332 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064245554 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098626904 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090432768 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078848437 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12041711 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110187568 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07046814 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087934736 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103452552 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079748231 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119115644 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.09719541 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096064377 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.067605138 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086129092 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220495438 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107732152 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098777603 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.074834043 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073553308 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067586371 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104733117 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080783254 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106118438 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086872642 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097666503 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116576025 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128596868 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08407165 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093690692 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114649846 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109472173 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.07880683 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108744024 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132108548 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116730207 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079796572 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084056805 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104615395 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105556832 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101158865 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07541317 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078141722 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10576309 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110558067 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065206872 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081659861 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069518378 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.08376165 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110813779 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092507275 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079392178 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1143897 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072105673 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104953797 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092547393 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120364318 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119431161 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141712184 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093903583 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08196971 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074133242 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121097513 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070225253 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117373836 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112160861 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087480127 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067382499 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081811919 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092768839 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.625218435 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106180587 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073126418 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132593156 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08435167 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111247695 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080970978 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113011075 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085426262 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097193694 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086845917 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276547602 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080757695 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108155748 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.170440838 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107903426 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104958967 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071207714 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083802372 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070715167 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076045239 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078420805 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083777328 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105659729 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081708945 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103029759 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.07703299 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104087313 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08803751 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085919631 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095681791 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078476016 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135201515 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084989778 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120450533 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103928047 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075747746 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072479716 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084048583 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098264064 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079239752 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091209232 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07597523 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073494118 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148792677 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09947877 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082366289 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099510152 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088116746 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084360658 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089175377 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115168699 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107386599 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070162127 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084818293 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100737286 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076237016 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072111719 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093691839 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066259217 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086558101 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09585271 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093314337 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087183997 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100871047 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075379984 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084385894 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106899525 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083173462 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074442666 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07411772 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074102103 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073566536 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100561303 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106089677 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111051739 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108001145 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087567486 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090058564 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.074815418 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.365961098 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078198196 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095664358 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10195998 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073221111 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128114116 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086113184 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086703172 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094027246 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098188251 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148697563 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071472162 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10651804 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090703936 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106759118 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084157044 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104298396 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092781425 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089975168 seconds)
  done (took 49.107522682 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.091984906 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14693629 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.156369439 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077639798 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090865847 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115474171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20434532 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187949992 seconds)
  done (took 2.73855085 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065285366 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079583097 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100294733 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079816392 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063829661 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064452328 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201784138 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07773269 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061054351 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098889947 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071632422 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063604412 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.40891263 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06100624 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062039033 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07055289 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062340483 seconds)
  done (took 3.338449095 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362118034 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601058232 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.340273876 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070982845 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.930745708 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08425441 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.369827558 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142269734 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076155016 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536178636 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364576943 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126584409 seconds)
  done (took 18.664129955 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073743087 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071807831 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074436555 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073890916 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069636018 seconds)
  done (took 2.014466 seconds)
done (took 97.432008073 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078704982 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164398079 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064728473 seconds)
  done (took 1.91404483 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081439666 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079945443 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.07753405 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074917592 seconds)
  done (took 1.96945489 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071838076 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073369596 seconds)
  done (took 1.796605433 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.244155216 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15760689 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087770444 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081454032 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078134364 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078148047 seconds)
  done (took 1.900275905 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070241926 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069679401 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069895163 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070476469 seconds)
  done (took 1.934424742 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065471948 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063424378 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065935079 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069157802 seconds)
  done (took 1.915814517 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082005807 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081839314 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075883101 seconds)
  done (took 1.894076552 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.093555556 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094262695 seconds)
  done (took 1.841131282 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078827094 seconds)
  done (took 1.732846072 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09001566 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.096911671 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15232586 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10837389 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147368958 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131798048 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.07365414 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075226914 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069744862 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06785439 seconds)
  done (took 2.667554229 seconds)
done (took 21.785901863 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076644841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36288269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357694212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08437301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668951191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35407657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965880601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08896372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094017437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06359126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079330535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645680157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954861126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320275142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.939167973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31736834 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644975867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063141906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062383531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063492669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.944174526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062562653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063233272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063216042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676767821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368200803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064556148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320526134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063305172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065925592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351650052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064943633 seconds)
  done (took 15.947265027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068289713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11764294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068063406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080443927 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067428012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067300753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068371568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063987449 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103780369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063799911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079638145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062753931 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067249895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.064528297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083094276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064262527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065245345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064428573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064197412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067157869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081384525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06348961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064655533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064671236 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064548594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077041995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065480158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064106386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06422042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066426903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067121836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065407581 seconds)
  done (took 3.935360026 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118601274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124269713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069318656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101375426 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11388548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065601179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142698092 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086749903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107883938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063736897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079965589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063324947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098496063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0658148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083810091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064392232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065963181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067180271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066610864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067750674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085387531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066381864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067134965 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067189689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067469673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081616447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067780246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066618734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066750839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069104534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07054907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068223378 seconds)
  done (took 4.231808192 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068014028 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069740442 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076242241 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076284188 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062838083 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064647988 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066325955 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062578426 seconds)
  done (took 2.225189352 seconds)
done (took 28.010070497 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076175716 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065237838 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067306013 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084197076 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070397142 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068550516 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062256249 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071526078 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068525458 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068790228 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070089473 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063602126 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067141115 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062097144 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069049132 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063767441 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070575942 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068585396 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069398876 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070053609 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066525741 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069864842 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071712447 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.06896216 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069113646 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069671456 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073520697 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069215955 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064564051 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067057324 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066416184 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07582315 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069936109 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069348747 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062190048 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062332888 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066382981 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064099311 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068536402 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071169148 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06354161 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071075135 seconds)
  done (took 4.518049711 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082705339 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086252768 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080914561 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078955334 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096374781 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078928488 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084029476 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075510515 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073991282 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083206248 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070492797 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077723788 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075491493 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069544485 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073942392 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069376036 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.073530405 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069041388 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07224863 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073010845 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081870248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.066942438 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074474762 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.073493133 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.068996996 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074658378 seconds)
  done (took 3.665710745 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070842248 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081737465 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088926711 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145288897 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109022035 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074702374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075477333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088760438 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091684762 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064319601 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066760238 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.087843221 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086863949 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069558809 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102057276 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.078759254 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077881381 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065112721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069910331 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091156213 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082950328 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080124973 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.088503092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078379948 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062069683 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.064800697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068591558 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.075654173 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069415754 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073579756 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.066894176 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0655147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063229743 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073318369 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067144455 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062308795 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086072535 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074224762 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075084062 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103471304 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071220238 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064066853 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092045263 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125033952 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064391737 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067931193 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067505031 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076055157 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064076817 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090012992 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076551546 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062273269 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063043129 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06360135 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06361157 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077298442 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065629647 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065518213 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075068591 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070414901 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086285882 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069759319 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083685452 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064525411 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074594854 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065270409 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065628595 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063168528 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094818125 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071156057 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112392204 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065254581 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063434002 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076376214 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07474312 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070383691 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064239905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081826107 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074778965 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067552113 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075452572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067418575 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067360137 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095066412 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064925344 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063899939 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06333343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067558218 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067247488 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064872223 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078289187 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06352605 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067531787 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078889729 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063581624 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065035221 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066268161 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064552899 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.061768334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074613188 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066421497 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063582088 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073542641 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063189051 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067261575 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077491278 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07104592 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063679543 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066318119 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067946465 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06592501 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068181278 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067478684 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066555955 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071355684 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071406739 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070043957 seconds)
  done (took 10.34978952 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160800973 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150396738 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067100478 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143463519 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073056421 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070245354 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143576533 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085108775 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065192563 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065535641 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064358042 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093911527 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090285345 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10225058 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068872668 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063412408 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086546694 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.09784763 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145419491 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141513798 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088640243 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072141806 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065849432 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064499581 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.064915115 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071238401 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078571093 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071166992 seconds)
  done (took 4.271843495 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075867937 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.08972128 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069043659 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076637657 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084796979 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06547908 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066658899 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065650179 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079239328 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074655796 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065706078 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069403096 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068785849 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067818642 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065867159 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071026747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071311289 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062415022 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067058784 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.067952913 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.072625426 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087677255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067418426 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.062652617 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066939693 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064444198 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074130726 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077409094 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064889898 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079439483 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06141235 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068849102 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078538044 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064700577 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06422725 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065181354 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064700511 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064759361 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065203846 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063275272 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06351363 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069570731 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063742359 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073587205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078505244 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071703369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067431015 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067414516 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067681387 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062530493 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067710637 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06731927 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066805111 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072187955 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068247686 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067546402 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067823835 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09078237 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071100292 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06439701 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064481466 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063696217 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067160538 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075030262 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079709928 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066825667 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062620289 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06462018 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070819994 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079344226 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064515948 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06956661 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062696157 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065425065 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067699065 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067276786 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065738651 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06390974 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064439013 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064927499 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065174216 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064583474 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064518606 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067512588 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063127555 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063611608 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065247098 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066750318 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074301799 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064802333 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068746825 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065769975 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063414737 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066945334 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070196858 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065545554 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.075635048 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074486131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063374229 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061743142 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.075469311 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066730882 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064515496 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071547552 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068791308 seconds)
  done (took 8.934918899 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08805279 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06695 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080828327 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087678555 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075365036 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070436758 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075820773 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065668391 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079017357 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063141904 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072277959 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062120907 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073987629 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074046749 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066194681 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073515767 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.065671912 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079878571 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077259433 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06189465 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071633328 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.074733585 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.074841117 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077400751 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076206147 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077401936 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.074637811 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067771972 seconds)
  done (took 3.781476446 seconds)
done (took 37.192484127 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.763353736 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.930845788 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.746394105 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.942522664 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.819789406 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.880965138 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.869622894 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.746455873 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.837968602 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.80355838 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.089036512 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.250459606 seconds)
done (took 65.42065004 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.770173048 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.908198673 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007766193 seconds)
  done (took 5.596954629 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.026834612 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.654723535 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.027122448 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.74546967 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.747957419 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.272124341 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.546799329 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2160378 seconds)
  done (took 30.891746004 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.879248331 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.980799701 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.421869179 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.453768621 seconds)
  done (took 15.465315807 seconds)
done (took 63.528645857 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.788702666 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.744800381 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.759117715 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.777980458 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.749318622 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.74621385 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.748781284 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.745677085 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.802585841 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.807045902 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.746717506 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.748348408 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.745792332 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.763614017 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.506673786 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.80595478 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.765987193 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.760544797 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.759392473 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.7948255 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.746368536 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.746799216 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.21997976 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.932497754 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.350591291 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.234881755 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.840441735 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.157319673 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.755101262 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.7500794 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.826712113 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.228095905 seconds)
  done (took 203.538612149 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.74789614 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.654984194 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.713732262 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.751088054 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.071622222 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.929066017 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.84468757 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.156868367 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.755778311 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.769758189 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.944587059 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.745103868 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.969830268 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.759099835 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.786060143 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.834396739 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.915151053 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.9607855 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786940608 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.908074427 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.768094784 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.789268608 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.761372875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.915771038 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.76476898 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.81757215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.763927896 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.776360681 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.931947055 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.885679964 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.752835668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.763450717 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.905152388 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614998019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.764654568 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.763303093 seconds)
  done (took 168.427497995 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.938155014 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.756783561 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.750542466 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.805600179 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.873685804 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.750407543 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.399744624 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.757297377 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.833738674 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.752682552 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.75083503 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.748750439 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.752066769 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.762010638 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.827933167 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.74976744 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.763348439 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.74969464 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.776307011 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.751744246 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.749807901 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.75075277 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.749597385 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.749000988 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.749012919 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.752370836 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.14311605 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.989160313 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.748332594 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.752554083 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.849712084 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.762450975 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.057307144 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.753716839 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842721725 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.806024051 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.881014904 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.750163899 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.969254802 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.825442277 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.748903786 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.751626071 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.816371718 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.760304009 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.753292754 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.754304542 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.758487217 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.814845451 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.99848567 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.750550527 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.870537261 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.234101865 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.753547803 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.752244564 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.752403473 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.752999498 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.33591551 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.752089697 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.755379542 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.75598845 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.755542062 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.750209302 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.754961748 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.139315322 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.820124393 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.019050234 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.157586404 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.75000785 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.159709537 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.98971258 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.749301124 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.754605482 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.753867305 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.754182802 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.756341479 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.754736805 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.756776401 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.874248381 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.760005281 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.876066185 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834209665 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.870547693 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.75511648 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.767499019 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.580148115 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.822760638 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.788251602 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.589960013 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.753704273 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.12986403 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.512781756 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.749507677 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.753665724 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.755461373 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.767454401 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.755545409 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.751826961 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.754939597 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.836969194 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.751278522 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.875930272 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479444166 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.097574693 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.947385873 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.756396165 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.755687003 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.765371823 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850059803 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.92061099 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.751879771 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.82217979 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.758245991 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758087769 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.902049325 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.751878646 seconds)
  done (took 398.832335922 seconds)
done (took 774.485084217 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.341139825 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.313284423 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.425256363 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.328800811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.302861235 seconds)
  done (took 13.399285514 seconds)
done (took 15.089840249 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.771021505 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.762385412 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.820537292 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.841027865 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.772792038 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.77533079 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.839723654 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.775395811 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.807147691 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.808487211 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.840948385 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.844329499 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.781892444 seconds)
  done (took 25.129290585 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.764019504 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.909480935 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.990928008 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.795450835 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.764734798 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.996560494 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.821359828 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.905477505 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.906834601 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.013294234 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.004352237 seconds)
  done (took 22.566091887 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.7669148 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.913964813 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.995397177 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.798892047 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.765333903 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.994987618 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.828497854 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.909177879 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.907941798 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.996768213 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.00445272 seconds)
  done (took 22.58316416 seconds)
done (took 71.972329061 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.761843284 seconds)
  done (took 3.451674369 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.778091337 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.927271619 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.76212866 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758966072 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.763371588 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.761560798 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.760629309 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.760645198 seconds)
  done (took 15.965010566 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.761875669 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.762671842 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.760948604 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.760377173 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.759494838 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.761012332 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.7612363 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.759476562 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.760753586 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.761305514 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763344599 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.760993312 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.761827409 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.762823221 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.761040854 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.761954491 seconds)
  done (took 29.873344886 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.763963787 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.761786867 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.761117051 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.762102207 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.761293014 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.762359781 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.762759983 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.761308744 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.763612957 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.762801797 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.762549551 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.762357071 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.765142366 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.763173961 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.76365233 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.764261491 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.761671993 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.762830343 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.767506824 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.762632987 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.763409677 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.763215638 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.76329868 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.761005771 seconds)
  done (took 44.003507309 seconds)
done (took 94.99776603 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.571089584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.517730489 seconds)
  done (took 9.783249704 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763387412 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.763800281 seconds)
  done (took 5.22524364 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.762067636 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.764675773 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.7623808 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.762198646 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.764357271 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.763926006 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.763403089 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.76285899 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.764296442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.762943786 seconds)
  done (took 19.326660483 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.763988724 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.761927924 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.761433121 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.763680682 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.762418871 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.763121185 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.76390525 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.764815131 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.763679218 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764314255 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.766236501 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.766610894 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.765345444 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.76295832 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.762436388 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.765749867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.764693407 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.763542503 seconds)
  done (took 33.444970577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.764385299 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.763461421 seconds)
  done (took 5.22439231 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.764375004 seconds)
    (2/7) benchmarking "second"...
    done (took 1.764603866 seconds)
    (3/7) benchmarking "month"...
    done (took 1.764920929 seconds)
    (4/7) benchmarking "year"...
    done (took 1.763283238 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.763633572 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.763967287 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.763614548 seconds)
  done (took 14.044399205 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.764316308 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936241985 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.00455115 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.654920113 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.767571906 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.769355595 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.068053637 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.769227294 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.771479962 seconds)
  done (took 20.200279263 seconds)
done (took 108.947775109 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.615117641 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.768860835 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.044685485 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.846401917 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.780712759 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.057413338 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.78776114 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.408746038 seconds)
done (took 42.009556147 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.772760688 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.764649178 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.791366006 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.793817373 seconds)
  done (took 22.046356129 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.773679115 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.112614408 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.788263578 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.619174864 seconds)
  done (took 22.013714475 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150730749 seconds)
    (2/2) benchmarking "read"...
    done (took 2.119962456 seconds)
  done (took 5.97311195 seconds)
done (took 58.507169005 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767074008 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.767595468 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.769213048 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.765359913 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767357134 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.766789709 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.767432195 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.768454865 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.76637363 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.767804333 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.76569866 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.765897556 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.765955522 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766396862 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767133725 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768455815 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.766670476 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766342177 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.767327794 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767528367 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766403087 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766145181 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.767378006 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.767740618 seconds)
  done (took 44.106175712 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.768500949 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.766702453 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.76803915 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.768180961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.768456815 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.768791828 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.767846488 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769124246 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.768473659 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.767790333 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767908045 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.770165448 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.767172011 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.770084835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768264279 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.76791776 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.769627886 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768432271 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769972057 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770058027 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.76783591 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76830513 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.769776808 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768605726 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.770053513 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769970136 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.769571685 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.771265137 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769214569 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.76936465 seconds)
  done (took 54.765086691 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.768367921 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.769917698 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.768608593 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.770347742 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.76933038 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.769655146 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.770722453 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.770451871 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.770898164 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.770935391 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.77135527 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.769891471 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.770146019 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.769672763 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.769359348 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.769649348 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.770678127 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.769893665 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.768625481 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.771775442 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.770115497 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.770923561 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.772057821 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.770065797 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.771579982 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773172325 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.771896624 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.770398644 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.771125439 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.771373792 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.772436711 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.770682519 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.771276023 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.771384829 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.771137372 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.770771715 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.773280582 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.771817574 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.77033794 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.772852416 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.772079388 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.772246553 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.771492955 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.771704172 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.771706259 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.773241453 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.77312912 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.772998471 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.773559063 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.772447534 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.773568971 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.771875406 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.772161488 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.771940115 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.771311184 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.771505284 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.773352853 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.772845023 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.772996895 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.772855706 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.770297104 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.772287221 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.771636994 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.771854604 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.774535343 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.771506907 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.773064127 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.772380797 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.771907559 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.772780039 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.77427399 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.772603865 seconds)
  done (took 129.249156157 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.773010217 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.773756154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.772062487 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774366767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772366739 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.772298297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.774560685 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774446489 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773121103 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774350752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773788145 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773819234 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774414157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773248535 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773424721 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773247651 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.772765459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774657107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.774298988 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775199621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775739359 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.774469585 seconds)
  done (took 40.727323809 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773930669 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775211289 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.777268868 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773540024 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776376445 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775618384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.774895091 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.775393804 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777271278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776160705 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775560666 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773310534 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77586736 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778224279 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773768505 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775898992 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773212502 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774358578 seconds)
  done (took 33.659993544 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.776076432 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.775234274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.777685852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776215728 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777204693 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775088924 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777559621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.775281899 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.775664971 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.776815927 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.777415721 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777208581 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.776583863 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776044387 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775400796 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775804665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.774635372 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776909663 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777079526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776061796 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777773713 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776765958 seconds)
  done (took 40.786380616 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780236159 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774558667 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776759588 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777062538 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.777990096 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.77698894 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.776875828 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.775880855 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.775314801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.77732804 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776536013 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.780693561 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.777086881 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.778508137 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.777153435 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776649142 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.776879013 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778480073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779282558 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.77715085 seconds)
  done (took 37.254499451 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778710012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781844267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780462466 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780432058 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779261034 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.77976702 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780873988 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.78081477 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779790172 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.779293324 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781361322 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780264143 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781802601 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78082653 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781007556 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781148718 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782939051 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781117159 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782283167 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781859385 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780945886 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781805884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780053625 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781684338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.780866836 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781979315 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781192456 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782069333 seconds)
  done (took 51.575099926 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779848524 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777608942 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.779965051 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.780272887 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.777868315 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.780558152 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.779541427 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.778321824 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77841101 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777596922 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.77850441 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.777903027 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778009612 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.778315066 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778782695 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.779711545 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778270536 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.781443515 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778992975 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777752488 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.780938198 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782012704 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.781109959 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779636047 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780310034 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.78020224 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780880265 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780521043 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784326522 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782358494 seconds)
  done (took 55.099894158 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.800751719 seconds)
    (2/2) benchmarking "in"...
    done (took 1.800123948 seconds)
  done (took 5.310185243 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.783979546 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781015479 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781033613 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781548851 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781619259 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.782663673 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782934934 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78190997 seconds)
  done (took 15.967804211 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.782172516 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.788852135 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.783135234 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.783532742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.784521122 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793296912 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.782202228 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784811923 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.788871485 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.783527324 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.786047588 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.788474072 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.791387582 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.790109132 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.78516467 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.782633061 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787566187 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78639179 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78688451 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.786505007 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790052313 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786569601 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.782039744 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.784454531 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.782227426 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.787562411 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.79474907 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.786841719 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786466925 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.783762438 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.795056545 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.781317888 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.783224461 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786168863 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.785338749 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.783081994 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.795405072 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.784812695 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.785659316 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.782557949 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789318893 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789281228 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.792765563 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.796298502 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.785009549 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.784625886 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.785796418 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.789623576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788323886 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.79054981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.793297852 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786970311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.786352868 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.785664053 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.787974123 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.786242051 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.785216696 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.789446333 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796392266 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.793894395 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.788080356 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.808218321 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794733988 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.785086237 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.789762157 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794725249 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.811751891 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.788508811 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.786948213 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.7829165 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794327478 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785478303 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.786411032 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.786784887 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800966796 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.797879713 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.78782233 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.785988292 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.786117665 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.788486045 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790493693 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.786873185 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788586409 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.786530536 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79760639 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.812220931 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.790865184 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.787727792 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.790472682 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789252327 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.792337329 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.790876829 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788443221 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.785932717 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.792027105 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.789145108 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.78784728 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.787966956 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.786427376 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.798569896 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.787517033 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.786013587 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793736984 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.796763616 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.787802125 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.790980358 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791309806 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.789802675 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.7979632 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.789086314 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.790585521 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.787638917 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.789008006 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.794195319 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.789228655 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793611993 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.797600776 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.800043529 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.790488907 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.795559575 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.795931048 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.794184981 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800543419 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.813613806 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.788240846 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.795044384 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.795704865 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.801197709 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.793930906 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.788018947 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794465258 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.790487737 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.78836086 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.79259173 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.787684467 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.791509701 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.790377997 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.791294707 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.789353827 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.79215188 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.790577317 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792665596 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.793458309 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.789603772 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.79575186 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791735114 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794991022 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.79990032 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.790949199 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.791378496 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.788843277 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.794301911 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793029363 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.791110338 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.789711755 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.790712258 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.793524361 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.794320385 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.794432944 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.791168218 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.790023034 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.792083698 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.795601057 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.791743648 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.791922709 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.792057953 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793273556 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.791793667 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793502399 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.795534116 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.796355895 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793636327 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.800404614 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.790364718 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.791845984 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.793145255 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.792436569 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791817183 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.798080586 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.804524121 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.797950842 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.805995707 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.791352988 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.80124544 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.793194987 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.796229668 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795847496 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.794479193 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.793796307 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.791571112 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.792499366 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.796654484 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817564471 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.806074245 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.79625639 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.792694866 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.798046785 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.795586288 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.803104015 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.791549804 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794781567 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.797732385 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.793468815 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.794250816 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.792899628 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.799001959 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.79279229 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.793161869 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.800014614 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796082611 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.793313056 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.795662619 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.793516007 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.797769838 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.794247169 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.79284697 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.792515211 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.791496592 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.806663244 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797988997 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.795303873 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.794374934 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797713473 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.796276417 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.794528326 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797767307 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.800476353 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.792198152 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79615165 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80317012 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.791977135 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.794557418 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.791240915 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.792661398 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.799008764 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.792896959 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.800975132 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.80727915 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.801117241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794570958 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.801404703 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.795122947 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.801396277 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.796823306 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799224263 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.796570461 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.799142234 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.796724051 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.79544656 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.805672029 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.795347751 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798905213 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.795267464 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.797949522 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.797061827 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.800407388 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.797661802 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803170699 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805994472 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805900993 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.797791748 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.800354366 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.800504786 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.796590007 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.801538371 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.799723684 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810986194 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.808742379 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.797826534 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.797157681 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.798287906 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.802431746 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.796444795 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799731331 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805962793 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.79698605 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.798228074 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.801717942 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.799268567 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.796850013 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808032636 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799738273 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.80383683 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801213437 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.801158135 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.800294575 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.795770306 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803123276 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.800285996 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.800278051 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.800968451 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.797020591 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.801411218 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.797205858 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.811293335 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79738256 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.800910803 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809341461 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799621107 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.798072277 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.80148494 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.798491699 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80023866 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.800960108 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.797186557 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.800201682 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799299808 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.804101703 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.811518268 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.805508468 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.809626443 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.805801729 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81261712 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.800800475 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.799117854 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.800603559 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.804853351 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.808441286 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.798783243 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.799206121 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.809955439 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.799637375 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.800264457 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.805727846 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.79855328 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802711588 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.802209691 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.801813041 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.807402216 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.80678643 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.79956966 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.800900066 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.799541543 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.799911636 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.804257587 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.803758897 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.803723969 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.800932361 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.798840547 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.80147733 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.801480953 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.799937874 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.803732137 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.801567496 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.801225509 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811557179 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.800784066 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.802426331 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806849106 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.800450197 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.813101265 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.802881812 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.80278362 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.801966878 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.798827807 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.804702027 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.799696752 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.802971509 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.802373548 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.801302061 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.803629692 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.816904413 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.813815221 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.803384983 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.806477215 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803265632 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.804140838 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812147238 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826666511 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800866039 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.806708156 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.807377285 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.811287469 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.804711235 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810352234 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805661207 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.812193003 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.805470339 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.801465803 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806779462 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.81786912 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805807385 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.803419722 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.802311234 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.809416923 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805246904 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.802212805 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.804512297 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808280468 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.802339131 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.816930027 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.804901115 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.806147313 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804651648 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.801861141 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.805070413 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.802600566 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.807101947 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.804988435 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.804043586 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.805299597 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807710264 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808806752 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.802662593 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807272903 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.815802619 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805202708 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.805280759 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.805431305 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.80523041 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.809009302 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804919753 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.80390858 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.807127713 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.805659767 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.805394546 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808746351 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.813327208 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806411469 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.803256699 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.803181299 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.80902781 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.803524912 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.804978842 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807873601 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.817333883 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809290164 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.81821329 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.816214488 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.80512372 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.806954224 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814084784 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.818385753 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.807744335 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.806085648 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.804843551 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.809323016 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.808025463 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.809602223 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808008275 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.8074798 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812617216 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.804863624 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.805402102 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.805565806 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.805291484 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.810811726 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811687632 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814863689 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.806751434 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.806054878 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.805708234 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.808704508 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.80981316 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.810514031 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808486347 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.806734033 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.811121055 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.811699851 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.810902126 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.807588597 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.806733216 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.809977069 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.807326462 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.808108593 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.807387793 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.806206059 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.806428081 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.81306821 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817118346 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.805207513 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.810497536 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.808292984 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.814440904 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.810151655 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.809874863 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810409877 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.807051223 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.820234939 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.807347907 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.810726587 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.81007468 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.809323458 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.81550377 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.81353917 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.815704271 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811816562 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.809627027 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.808766292 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816432053 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.817565279 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.815000864 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.815624077 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.81817534 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.815399241 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.814454534 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.809099751 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.811381365 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.809439905 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.811332542 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.816147457 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812997478 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.814647428 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.814309304 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.814219857 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.811690513 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.813147706 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.809940228 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.809068458 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.815991977 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.822414301 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.823761444 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.809784936 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.814089925 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.811968899 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.814176683 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.822058755 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.811861635 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.811051766 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.81326319 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813896806 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.811365934 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.821343749 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.819383836 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.816874356 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.81338418 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.819037229 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832214735 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.816169949 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823105684 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845817441 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.812224294 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.810770722 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813901033 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.812796728 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.811457745 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.815330273 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.812729595 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.821211238 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.81079701 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.810292853 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.821951025 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.812072957 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.81039669 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.811078944 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.812497665 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.821319385 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.812400872 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.821277796 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.813734502 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.811045967 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.810436808 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.813977517 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.809521115 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.811095535 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.813183221 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.815798327 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.810857038 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.813812518 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.824554767 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.813414821 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.816971326 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827247561 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.825008834 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.813574482 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.81178588 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.812493919 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.819071176 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.818263735 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.810684918 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816516085 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.819580687 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.81677039 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.820806288 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.816653056 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.816305536 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814258971 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.811378902 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812615187 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.827694204 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.829450557 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.814765441 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.813539796 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.822134227 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.81226033 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.82496349 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.821174646 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815701816 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.818749336 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814660522 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.815139893 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.814710452 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.815762211 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.819379465 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823069761 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.814219544 seconds)
  done (took 1075.636585117 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812391733 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813357191 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814156295 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814839861 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814057711 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813746492 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812469298 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814908514 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814011264 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814234695 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814989862 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815286254 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816255683 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815447709 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814819439 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815602341 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815318338 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814890539 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815904896 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815540092 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815566311 seconds)
  done (took 39.850633493 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.81550719 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.816121691 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814606304 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815488605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816314734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.815880377 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814886923 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817063385 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815273357 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816564455 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.817019366 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816869578 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.81740964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.816758889 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816761234 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817086278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816442064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817379803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816238282 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816882394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816718646 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816698921 seconds)
  done (took 41.704987546 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81972331 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.819083444 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.819764863 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.817584731 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.818125728 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.820301875 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.817285308 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.81888082 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.817415293 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.817211134 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.825660969 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.825219759 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.819695793 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.822493393 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.818131997 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.820893993 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965087751 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.820472857 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.82033549 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.818560563 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.820885911 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.826674039 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.81722413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.81822897 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.818859973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.819012699 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.818054474 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.81681981 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.819552107 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.819751915 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.824766002 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.817808994 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.821932559 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823051643 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.820659959 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.819909806 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.822256457 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.819147841 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.819567539 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.818395412 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830292078 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.843901239 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.817205795 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.822029629 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.828782757 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.818616253 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.820040338 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.824663919 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.827945387 seconds)
  done (took 91.122796467 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.817995863 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819104873 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.81658004 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821513519 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.820266087 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.819116392 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.819600265 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.817606339 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821507535 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.818941967 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819772163 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.817328279 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821006937 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.818969621 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.817185256 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819430769 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818905652 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821664406 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.821960453 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820226879 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.820008769 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.818489889 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.821313596 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.820465707 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819652802 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821445312 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819385845 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.819497647 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820037004 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821436743 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.821392198 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82005414 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.82012253 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.820963733 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.81990497 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.821034714 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.821138267 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.822035916 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821423036 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.822363962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.822007228 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.82062226 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.821018124 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.820317418 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820966552 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821321016 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820762066 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.822465163 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.821352183 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821167099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.821503217 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.821212816 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820952864 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823019085 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823873296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821759061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.821301045 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.821109541 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.823289068 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.819986512 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823080874 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823763934 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.822560968 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.822341212 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.821739877 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.822591212 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.824239379 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822726887 seconds)
  done (took 125.563874994 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826311371 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.82418056 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824635275 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823407868 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821955397 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.824779666 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824608185 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824232588 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8251589 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825931066 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824664246 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.823048507 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.824251972 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.823521914 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.825546535 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824264655 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824935937 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826034603 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824922181 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825196459 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.825111611 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826307481 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.825900459 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.826288938 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.824740007 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825205027 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825652753 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824803384 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823779045 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827137046 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827532202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.826089323 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825494495 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82670848 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.826567086 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.827194245 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826009909 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825658511 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.82651548 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.82674174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824743235 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82700541 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826520472 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.825548615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827168606 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827250688 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827695755 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.825872095 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825815413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826671515 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.828221354 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826742659 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827383938 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828402013 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826996226 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.824868183 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829241461 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828772042 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826795004 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828080449 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827498397 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.825899297 seconds)
  done (took 114.957548034 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825789907 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.82723039 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.826106422 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.825616428 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826526626 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.827651331 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826806831 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.827046889 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.827718755 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.827963406 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828203537 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828377777 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827226925 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828321561 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827710118 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829629114 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828874782 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828154009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827774646 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.826592995 seconds)
  done (took 38.303614199 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827811765 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.826623073 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.827764551 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829017614 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.829016036 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828448679 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.826727614 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826194176 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826578233 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826821163 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827729767 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.829099501 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829099381 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82918637 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827892741 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.827410126 seconds)
  done (took 31.001197628 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.828227342 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827148832 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.831335196 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.831074845 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.828137921 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.828183472 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828795696 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.826999866 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829289185 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.828473409 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828585924 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.826776893 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.829511792 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830845938 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.832927281 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829386445 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.829119376 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829947423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.828834122 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.830821697 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.82927525 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829443455 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.828244151 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.829315208 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830996335 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.828726445 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.828395295 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.829943722 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.828830025 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.830023496 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.827948154 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.828869052 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.829876692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.831224677 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.832873362 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.828893676 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.830156195 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82968158 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.829907032 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.829139058 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.829047634 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.830913675 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.829781987 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.830079813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.829875312 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.830796543 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.830695907 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.830529474 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.831444842 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.830460279 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.830327478 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.832092849 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.830719955 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.831208598 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.831138537 seconds)
  done (took 102.393088032 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829350927 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830938991 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830897655 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831114784 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831273653 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.832158029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.831858325 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830419153 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831885213 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.830947147 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832491523 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831626955 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830558001 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832123528 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832668652 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833051689 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832592378 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832923534 seconds)
  done (took 34.727868724 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.832327926 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.833509189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.834432105 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831685288 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.833289099 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.832280948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834137036 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.83127762 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833301361 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.832363602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832628085 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.8334548 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832813746 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.833631572 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.83265798 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833076859 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833436667 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83325132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832259622 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833547069 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833101035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832677315 seconds)
  done (took 42.085129839 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834261019 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.834651351 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.848478769 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.857861046 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.853475143 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.871772311 seconds)
  done (took 12.860124384 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832565668 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833857398 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83440628 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83225768 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832052807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83290401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832756599 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834250247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832235845 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834865243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832895349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833589983 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833981552 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834870214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834118006 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833695323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833361604 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834784871 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835807649 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834153633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834373819 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835402012 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832838494 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832866867 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835909585 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836550907 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836701204 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835477727 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834572048 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83481635 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83517191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835166732 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836356565 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833430368 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833930387 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834196637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834147064 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834060284 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834987947 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835145158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834566408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836001989 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835964898 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834386027 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835334983 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835188886 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835525929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834829508 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836084338 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834894456 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834564625 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835012927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83628676 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835141925 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837961624 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835617655 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835540364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835551127 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836085973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837650436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835447849 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836164639 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83890247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836094698 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837363033 seconds)
  done (took 122.862867731 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838578996 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837823283 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836867373 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838264802 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837588281 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83433886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837345417 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837241288 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837824954 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837354949 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837510451 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838704705 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836911895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838493555 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838698614 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839924682 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837039828 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837445419 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837993366 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839151774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838186416 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837136146 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837824496 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839866555 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839319983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838314017 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838100781 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838350375 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839752144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837594292 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837302322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838679589 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838018069 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838696119 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839349719 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839409253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838368637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838243461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839686736 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841414737 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838819338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839675853 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83851815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840093649 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839888462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839079276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83763021 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840408977 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838878552 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840598267 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839843883 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841707192 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839892439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838959894 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83923959 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841746446 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840416883 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840103448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840550995 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839594461 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840831755 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841097365 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841395922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839699302 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841622317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83970236 seconds)
  done (took 123.133925475 seconds)
done (took 2506.412568525 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.932909568 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.887577392 seconds)
  done (took 15.586647239 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.008114101 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.957919818 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.845053181 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.885596758 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.84201306 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.867953435 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.843233283 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.840131134 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.845989336 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.844895653 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.845454008 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030458835 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.899556005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.841532943 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.847245943 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.937734836 seconds)
  done (took 51.958300845 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.851770248 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.848305184 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.862552649 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.848594048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.850197754 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.862776668 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.880973144 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.85161991 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.887898091 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.86232229 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.921700437 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.859629968 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.851149086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.903905139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.865657143 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.864607188 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.950809301 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.927474864 seconds)
  done (took 35.521784464 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.930578911 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.860286511 seconds)
  done (took 10.566096876 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.845828368 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.837952221 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.869406885 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.864048087 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.842287798 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.862594426 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.871168746 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.86675702 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.859159968 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.864627467 seconds)
  done (took 70.358122835 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.852478097 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.850471512 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.850068025 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.848224988 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.84362362 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.845693008 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.847030799 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.850193722 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.525742189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.884000558 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.858442451 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.857526943 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.846846819 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.847065191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.844255666 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.874051219 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.955128364 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.845098264 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.844358081 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.852599075 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.84779279 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.899862998 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.860141735 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.850029822 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.882671416 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.53199963 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.856416627 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.851924204 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.972046515 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.843875578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.848508061 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.058048163 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.854571586 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.315462499 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.128303837 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.854678554 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.85702165 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.853199335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.844110851 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.969042285 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.847697125 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.851438327 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.797794235 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.099347253 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94378245 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.897830459 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.190666505 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850625163 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.849338128 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.882941069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.851838679 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.849105146 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.869505707 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.364263292 seconds)
  done (took 131.721331998 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847758859 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.191426985 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012930308 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.847176741 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127940984 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047455559 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843620107 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893478902 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.845015721 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071721219 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.095200171 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9530993 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845409654 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.846599581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.843904672 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842830158 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003378817 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.917607181 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845462012 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.847008227 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87425482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088010189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.966502126 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.848900493 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.871464699 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.057119159 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.96409677 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950039017 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.573770316 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.845832101 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908278317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.846505539 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.850317809 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842730679 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001894198 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941051435 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9272031 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.843368071 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84625584 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846912528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.592987858 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043452357 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.936122603 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974090795 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096879139 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051778812 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.622472522 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.845232146 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.57801327 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006209295 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.075867846 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.08059248 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.962567336 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851115918 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.182291388 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.846951909 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846199587 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093700524 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068096099 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94607116 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84646576 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848771012 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844915125 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.13680293 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.849640282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937837908 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848310077 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.844726042 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941393557 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.948905244 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.075100126 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05505311 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883847476 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.188071762 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.355011698 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093867744 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908236998 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095745548 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849207532 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843602751 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925541151 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.700855064 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.101169526 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123230844 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.089724555 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880347169 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.566243112 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.848413069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.072981942 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064269938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.106752454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098420446 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.082147326 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.161777086 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847481854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.848531269 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.204106259 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969446261 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848464033 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190884389 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07798836 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.409577559 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875813179 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152540302 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979875609 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.849232257 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.475843012 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848817562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.078955584 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888901489 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.850627115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852835798 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06425549 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.836476729 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850404417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.487890964 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.908942847 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852151338 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082784451 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849582264 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116307509 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849965387 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082352664 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.40653559 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875850345 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.023905885 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.097048462 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.848365393 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091458232 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093491785 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961967614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06813697 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.538515379 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85402142 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136654178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852621621 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.848399714 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.017928971 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852527784 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.990839743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852024854 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143617458 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872046672 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088279578 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850286658 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.102544094 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881461514 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901242681 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.853481146 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980694703 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854042171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.767149573 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006968931 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855911861 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850390615 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.404353009 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.85001155 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998916886 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080970411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870268561 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921485018 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.509705293 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.853206985 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930986284 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868366955 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.24218948 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.848258636 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.101448605 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.842842097 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.844256868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.839965625 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.124830178 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.01984415 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84289005 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.835107049 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.750136738 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.83770784 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843954593 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014136443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.256331331 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832108042 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037738539 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830955242 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958048733 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.826585564 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.897210997 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.157966981 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.825310596 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.827023083 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.824479138 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.825766358 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.825243681 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.032718357 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.846307774 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.35140604 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.957721359 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096757515 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.133546975 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.062744652 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859722843 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824798144 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.077614348 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.820158076 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.877299521 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.8191204 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837188526 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044120066 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815621445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0192899 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080837259 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.686686745 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858022567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.814243863 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807114731 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.804523021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.953571244 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882143983 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.799890928 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.79907983 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.916539888 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926244092 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008054466 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.801117835 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.896477775 seconds)
  done (took 896.728877948 seconds)
done (took 1214.213739806 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.799117076 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796621905 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.805048019 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.799840919 seconds)
  done (took 28.926694521 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.803919599 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.798833093 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.801863856 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.79991366 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.799011379 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.799356243 seconds)
  done (took 12.529416231 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.98805013 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796053227 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.800791471 seconds)
  done (took 21.31093242 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.875696526 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.203304448 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937999009 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.23740859 seconds)
  done (took 9.982554306 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.806731913 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.800964937 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.800310939 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.798918754 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.803146668 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.805641807 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.796565723 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.799261478 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.803516674 seconds)
  done (took 17.944321701 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.528535756 seconds)
done (took 96.953260799 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.199147019 seconds)
    (2/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.348716662 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.164749298 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.183491967 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.246332443 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.857586214 seconds)
    (7/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.931734577 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.120844851 seconds)
    (9/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.913788624 seconds)
    (10/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.947340212 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.984461304 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.849753989 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.928050573 seconds)
    (14/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.385014338 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058190313 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249715226 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.982344849 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.106849101 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.867702493 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.852738279 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.729392753 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.858265838 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.173791967 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.009546227 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.129482081 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.336022034 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.117101763 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.342261978 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.879626496 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.973947546 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.93876175 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.173290451 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.946824747 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.86207861 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.036768947 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.098388981 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.85969307 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.917303423 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.308091099 seconds)
    (40/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.060374178 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.245338441 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.956134122 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.862920128 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.746240919 seconds)
    (45/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.860046307 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 4.012869361 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.934012275 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.878423134 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.946394166 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.282562077 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.074691808 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.172019272 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.33405032 seconds)
    (54/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.007248546 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.195609138 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.873399283 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.533248112 seconds)
    (58/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.859522418 seconds)
    (59/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.992182608 seconds)
    (60/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.002679742 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.862161891 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.263773022 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.122560917 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.867014135 seconds)
    (65/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.910294874 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.011021885 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.876865324 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.942195318 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.987877847 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.949824027 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.628800975 seconds)
    (72/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.863750831 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.861992408 seconds)
    (74/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 4.803992297 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.87512191 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.678718541 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.888068677 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.982423392 seconds)
    (79/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.336724676 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.868589634 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.89550906 seconds)
    (82/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.940060169 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.861182644 seconds)
    (84/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.949999736 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.860932289 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.672671189 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.852056824 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.867143997 seconds)
    (89/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.732903411 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068958516 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.693221409 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.129891717 seconds)
    (93/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.170896758 seconds)
    (94/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.038230733 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.178744401 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.863457035 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.608449435 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.950318588 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.923483039 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.926989042 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.550437879 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.860554678 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.743269333 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.956960387 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.279892324 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.87956538 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.508049071 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.218669827 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.124828098 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.885225078 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.429235342 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.27004964 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.865272586 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.11016143 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.992016728 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.960521968 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.972526621 seconds)
    (118/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.200985039 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.174683304 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.347230344 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.931554265 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.175252716 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.890546314 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.741789774 seconds)
    (125/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.027192882 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.423897384 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.089109409 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.032815575 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.348145034 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.232267094 seconds)
    (131/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.897666079 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.96333723 seconds)
    (133/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.884452183 seconds)
    (134/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.960703888 seconds)
    (135/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.659640559 seconds)
    (136/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.99583494 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.891956166 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.022429298 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.946591403 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.075930551 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.164263671 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.11789235 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.866426993 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.122227772 seconds)
    (145/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.300587729 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.108847477 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.163550273 seconds)
    (148/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.068401892 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.891687144 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.996635634 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.957165914 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.536635149 seconds)
    (153/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.055982269 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.045780844 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.131334931 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.468066155 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.891668987 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.533939939 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.028932588 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.88131516 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.088354866 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.253552966 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.885967961 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.767089002 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.291443767 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.284888854 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.182264772 seconds)
    (168/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98533099 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.763386465 seconds)
    (170/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957226063 seconds)
    (171/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.888642019 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.011914622 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.440267642 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.263677065 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.182867507 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.258035324 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.355304831 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.86675514 seconds)
    (179/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.874185556 seconds)
    (180/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.318736669 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.082023043 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.971587911 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.872446298 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.971455046 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.837417209 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.040447734 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.867065052 seconds)
    (188/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.150823589 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.872077554 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.924800529 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190806799 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.073611389 seconds)
    (193/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.621627791 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.925236897 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.866158165 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.313900135 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.867769562 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.920136274 seconds)
    (199/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.317728169 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.991912288 seconds)
    (201/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.954664715 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.129968068 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.1933419 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.860948682 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.501558028 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869461545 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.169153079 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.742316216 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.069461385 seconds)
    (210/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.354674414 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.136292439 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.425426079 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.983825934 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.933126548 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183725635 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.031061329 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.865406538 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.651511517 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.25286387 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.86718012 seconds)
    (221/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.027651687 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.99418522 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.703683009 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.196769287 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.233841403 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.259054885 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.988343593 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.90716442 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.144598701 seconds)
    (230/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.61688071 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.505387845 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.168466239 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.29097051 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.953976139 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.944713661 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.046555278 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.97258701 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.125021246 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.745763853 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.8789699 seconds)
    (241/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.984941618 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.533974705 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.986271462 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851798379 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.852963407 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.881154406 seconds)
    (247/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.336637501 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.855411393 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.331502668 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.098087652 seconds)
    (251/309) benchmarking ("sort", Int8, false)...
    done (took 4.737868007 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.983643998 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.866558929 seconds)
    (254/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.145309097 seconds)
    (255/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.752638589 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.658578856 seconds)
    (257/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.96468146 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.051242435 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.955319069 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.86257529 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.399348397 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 5.580380246 seconds)
    (263/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.984296775 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.547843265 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.095170778 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.022537203 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.008960176 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.865149853 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.984030771 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.066960623 seconds)
    (271/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.025884487 seconds)
    (272/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.273344976 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.119257419 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275843358 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.958553027 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.905885929 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 6.873056059 seconds)
    (278/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.002599072 seconds)
    (279/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.294803358 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.882755606 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.9682687 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.954833498 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.804920735 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.939697349 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.880922015 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.04782431 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.21921557 seconds)
    (288/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.872387588 seconds)
    (289/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.013163133 seconds)
    (290/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.207565134 seconds)
    (291/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.56582899 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.87532387 seconds)
    (293/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.887606538 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.887688585 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.744262263 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.150335474 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.645670294 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.876956603 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.272108456 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.946879597 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.894983197 seconds)
    (302/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.495708183 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 5.588427722 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.006423264 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.973454977 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.756235211 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.982306234 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.076701156 seconds)
    (309/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.206829029 seconds)
  done (took 1011.357081533 seconds)
done (took 1013.222134872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.896517046 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886367422 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.869396082 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.888862369 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.981412902 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.911918441 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.882293572 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.871418196 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.918349331 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.917894054 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.8682421 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.909890299 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.869138975 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.869113415 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.868551782 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886421518 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.175341535 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.898314646 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.88838656 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.880501901 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.887438734 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.867417587 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.920438624 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.910181719 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.874735794 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.874495706 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.872085677 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.888676672 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.983390574 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.872610825 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.87523931 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.883031881 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.175152049 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.895283849 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.868793056 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.891116704 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.88332073 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881917141 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.873254814 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.902510079 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.316896344 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.876526744 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.871603611 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.871690829 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.870672929 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.878399386 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.871407773 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879046262 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885881348 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887432556 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.311061846 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.891984569 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.874347709 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.871133171 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.885680606 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.871380995 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.874925473 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887713716 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.892785102 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888148911 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.163998524 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.90592207 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876577977 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890537768 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.880910409 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.345143009 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876495628 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.878276877 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.317292746 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.886439097 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.346965095 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.888122575 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.874545731 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.887124885 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.905638101 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.174443741 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.898240058 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.872064488 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.881845421 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.87158294 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.884459913 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886327352 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.876897169 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.873505425 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891595907 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.915737611 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.88561816 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.873424152 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.885478221 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.893109778 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.882093618 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.884496666 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.87652604 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870520265 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.885497335 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.877819515 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.876478985 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.875296336 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.878985211 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.888157157 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.31555834 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898128803 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.872632959 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.871111828 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.873011437 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.88879807 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.314946343 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.880256404 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.897501475 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924367755 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875441139 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.164658165 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.90595731 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891808614 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.885222274 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.877152259 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.872987889 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.165760332 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.340282663 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.896229783 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.873982901 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.87372681 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892249443 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.876340834 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.872233262 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.179131726 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.904867693 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89142217 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.997623803 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.886905749 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.907279954 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.873514057 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879198687 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.920313455 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892434794 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.906569553 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.87804058 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894179793 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.89351892 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.872998939 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.888024038 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.889206263 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.876190963 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.883643233 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.873158976 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.922199979 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891467985 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891021772 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898411912 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.000497022 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.873448473 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.167261116 seconds)
done (took 294.609692312 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.953355031 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.875785064 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.993634317 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.875654459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.962575942 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.947575752 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.875804764 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.876408446 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874554097 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.373900443 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.875143026 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.880472038 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.873341263 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.875694583 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.94418817 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.875009848 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.87474207 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.342592272 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.878346495 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.954891759 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.87475462 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.875957529 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.875851885 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.374939927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.877908373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.87480105 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.955263545 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.876078901 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.323682989 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.874290089 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.875685201 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.323487842 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.956178322 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.905416943 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.885314639 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.884549335 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.965363723 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.885243744 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.94263082 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.942516843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.994158142 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.911295248 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.876890908 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.875465717 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.878611451 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.878340303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.876481918 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.908718546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.879478528 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.881186941 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.321429516 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.88420291 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.881965127 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.877777244 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.877556583 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.907105605 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.876857247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.878222427 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.957159925 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.879973898 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.945297941 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.379591272 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.401967121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.877881428 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.877421013 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.877968879 seconds)
  done (took 185.804459343 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.944759727 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.950715069 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.943530299 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.882445966 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.928226889 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.945411963 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.88247899 seconds)
  done (took 15.286474156 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.884603698 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879052983 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.927336704 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.92753628 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.879505019 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.059274934 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.890175082 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.883716754 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.905853835 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880715458 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.543500809 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.926900207 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.886036877 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.87813648 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.891387592 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.935273332 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.880392618 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880951941 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.994371487 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.028699455 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883634038 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.887170355 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.905659433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.89150242 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.878728245 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880426164 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.880126637 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.887869228 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87958695 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.87872975 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880111416 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.932279928 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.880450235 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.878235697 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879916954 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.879866006 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.880234184 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879560783 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.880436267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.880044571 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.880554742 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.879445487 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.879640541 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.881341072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.880444652 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.904238849 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.880587347 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.881776466 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.880366945 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.881447448 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.906830236 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881069816 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.88081138 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.885510086 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.928813375 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8899645 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.883008266 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.880158481 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.881667246 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.882636148 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881642684 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.030395764 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930390301 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.881229811 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.931422484 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.035603793 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880879453 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.881947527 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.881324581 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.970702386 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.881598944 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.930875339 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.883725028 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.996387838 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.882723389 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.062552636 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.905342044 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.886363094 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.885981667 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.880884074 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.890071752 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.881776878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.885392659 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.889790277 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887165893 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883542012 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.882649388 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.885467268 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.890738244 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.883480734 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.936089019 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.883098892 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.884619978 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.023512681 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.88274558 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.999298002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.910472957 seconds)
  done (took 207.093182646 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.891517363 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.890157931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.885056389 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.897992949 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.884648224 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.883961558 seconds)
  done (took 13.146794977 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.885611222 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.88648775 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.8841006 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.883458566 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.885553574 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.884570451 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.883518385 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885900621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.890019607 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.883483996 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.887551502 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.884491486 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.886322963 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.885257959 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.884246885 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.88406977 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.883849648 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884065613 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.883737203 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885294635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.090748771 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.885719805 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.883956099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887224832 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.889637 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.884476636 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896710685 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.8846251 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.884415123 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.892561172 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.890059366 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.885067939 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.886999301 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.891442807 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.888299135 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.88768179 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889001076 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.885653557 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886073355 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.88732095 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.887673171 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886136476 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.886421365 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.88665703 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.887070954 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893458077 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.89082311 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.898580702 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.886129 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.886605376 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.886910463 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.886722716 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.887671483 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.886457963 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.890176913 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891833001 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.890232952 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.887482706 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.887016121 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.888467328 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.890133372 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.887100774 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890131245 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.890031492 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.892697558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.888024067 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.889888955 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892829182 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888567538 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.886435185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.888388313 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.886283822 seconds)
  done (took 138.918821057 seconds)
done (took 562.074647471 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.834533108 seconds)
  done (took 9.650503926 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.068953043 seconds)
  done (took 8.888590826 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.560882953 seconds)
  done (took 10.379445972 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.899170897 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.912076854 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.902217625 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.893182729 seconds)
  done (took 29.43457225 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.239536387 seconds)
  done (took 9.05269744 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.89233661 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.884995602 seconds)
  done (took 15.664839655 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.948144556 seconds)
  done (took 8.756631214 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.975042224 seconds)
  done (took 8.792739554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.894219735 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.877037689 seconds)
  done (took 15.596937024 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.867077803 seconds)
  done (took 8.670360993 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.355323784 seconds)
  done (took 10.236753309 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.886182301 seconds)
  done (took 8.730456583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.884650975 seconds)
  done (took 8.677609309 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.872783252 seconds)
  done (took 8.663498162 seconds)
done (took 163.015834937 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.863575017 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.855104343 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.856925886 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.855315512 seconds)
  done (took 29.219902183 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.890483143 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.889318112 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.899118325 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.88950542 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.879807329 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.880232027 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.888644746 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.889951484 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.879937153 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.88796739 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.890470038 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.886910372 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.888528714 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.899493169 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.898296072 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.887927293 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.890323563 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.891232155 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.879854205 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.899497263 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.888463789 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.890827922 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.855863392 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.856020473 seconds)
  done (took 47.06445322 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.047459095 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.927284627 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.009785515 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.910234239 seconds)
  done (took 9.683032562 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.856817009 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.920688327 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.907326618 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.903612616 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.908037935 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.959508671 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.909888172 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.991631581 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.984870287 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.981867718 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.863357026 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.877412601 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.881527174 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.904349147 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.961771187 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.857450194 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.856608691 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.974987458 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.918018955 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.043329054 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.85729421 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.910785731 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.908181779 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.909884168 seconds)
  done (took 47.838184987 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.857910269 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.866142957 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.865261926 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858411996 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.858102611 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.859109909 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.865213671 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.860372563 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.880131868 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.859269812 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.858663365 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.859183948 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.864929185 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.858945895 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.859183304 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.871371818 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.874516076 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.858988161 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.863155978 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.865792097 seconds)
  done (took 39.053837223 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.857583469 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.703797364 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.201191954 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.108592601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.857925716 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.858801118 seconds)
  done (took 31.378377976 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.870141379 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.863977272 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.859325347 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.91483648 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.998515346 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.863748973 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.859650678 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.86962994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904302401 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923582353 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.878039226 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.886494611 seconds)
  done (took 24.481976556 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.87143821 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.858971717 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.860280118 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.872211401 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.869191932 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.865230333 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.866906945 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.85785481 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.871375048 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.876637158 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.86612027 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.870488506 seconds)
  done (took 44.200564558 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.564443982 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932783626 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859261041 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.731772194 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314537603 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41383424 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.75181158 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.616734298 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.326811056 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.784176123 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060899671 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.859640666 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946947839 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.859340812 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130658356 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.217846685 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051480297 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102423268 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.681462641 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.894436946 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.062486996 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082887805 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.150684107 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859242441 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861888491 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.913391125 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384814104 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.659511595 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894993715 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.282954919 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107373397 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.808806598 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917068757 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.862393205 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.872015286 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863345754 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865168428 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131474986 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.920992674 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992228971 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93424858 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108861487 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864884694 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27872156 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.567290994 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.172237434 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.974266417 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861200635 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863487144 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861666441 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.787369854 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942458372 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.86365175 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866845691 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.560903888 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862967877 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934413357 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.861939087 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06367185 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.668833581 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548329267 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.857494447 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856069568 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403632282 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946375443 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.965033768 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617640058 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231377309 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.265482698 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.947848953 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.851432549 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851780397 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.08513385 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819622298 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.562171119 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889385248 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986884182 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.867933917 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492067262 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143706803 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.280264173 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.407881684 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.769771915 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132061286 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.657396784 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842834988 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06736097 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.698996979 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778513099 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072059919 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888008844 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85556975 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.114347109 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.605983174 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962165803 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.86298201 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286737539 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868634195 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85873805 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853928483 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066541117 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354916428 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887184986 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974576232 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866575922 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.933157022 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776066894 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.865308938 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.848236069 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.749669861 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854170483 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844505125 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.890883827 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.625004579 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887965635 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.781273045 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847197213 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938293998 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88438756 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.797311635 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096463823 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.147788087 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.517663187 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877365047 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.979477157 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.229614131 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071457493 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.84834133 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060693371 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378129198 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.257429852 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896218497 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134931059 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906327992 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137283446 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275613159 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92196864 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.613996968 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.647462591 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.055955022 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855752538 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.844725171 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838733663 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838783345 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771276199 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.475426425 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.219092208 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.002099361 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045406463 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.256344893 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.820363166 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.834146724 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138514168 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970314169 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.827693678 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.485060486 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.342742566 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645942528 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.859148042 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070469209 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.126731525 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.799274948 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846484655 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909419633 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851105761 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.846654768 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.220531332 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199771856 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.836645343 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.83737866 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.782699335 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839813607 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.836048999 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.367979941 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.801192056 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.840251185 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.845483875 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708292311 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908616657 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836465826 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.837021009 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.371892006 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340631689 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.838391214 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.493435441 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.929636051 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909750356 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104647906 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.214480543 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965178912 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.534155131 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.245948804 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94769901 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.53514446 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76077512 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.835665823 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.773593252 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838862873 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838978564 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841630877 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.023960308 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.110504438 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136920259 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.294476121 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902929771 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038152282 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.553429256 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790231885 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.838123238 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84140387 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.838240429 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837615271 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.347294915 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.133476108 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930055054 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865963128 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.841714624 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964539952 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.84828083 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.763558903 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.83776683 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838365744 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370499287 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.869054153 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.783586592 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.153557547 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.736256204 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954966457 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884825763 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.848537598 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842809368 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.555512409 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.882213741 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764508897 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36234933 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876580284 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.608415647 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325961839 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397219508 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140306987 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152654895 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.164188546 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.90637078 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.051591151 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921706985 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89246378 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925574549 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775355015 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.764062628 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.491439022 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171750131 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106263059 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845857839 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054662256 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551627965 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067995055 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868435289 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.617776158 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149325972 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815639469 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856245336 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.272666632 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95033196 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920374827 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841647047 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.786669594 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188941726 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881879207 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.540305853 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853586278 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191638304 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367575191 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.912849163 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.216738206 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046909669 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.846144953 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19032762 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.139413863 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882198591 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.844844119 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.827655025 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.055202814 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41802062 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.700029939 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846387659 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.098845914 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138394814 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.744677801 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.841465753 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.089957381 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104646582 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83945688 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.198232675 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213470986 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.959397229 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89852083 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066252546 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.616694494 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147530076 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.399821876 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.332230896 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846918971 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766421783 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.540738561 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.042308588 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843337257 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.805205051 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059339881 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078266875 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.524807705 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061274783 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084576041 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.85264267 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110008612 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914471485 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.937759701 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.165621442 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.279161681 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.08995143 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067431902 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382317132 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058739745 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297742366 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.009031022 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843766115 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046399127 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058204107 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.057227366 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.225417679 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015797525 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.552700284 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.84707922 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.049724108 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135970407 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902491531 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.230588173 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013948968 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.927419706 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849415613 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907162356 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8481817 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851366311 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.228542586 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.369628635 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.857686613 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920460148 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942528775 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.354729023 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.846902932 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.848541486 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112247123 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207617752 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175814484 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827184742 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843965657 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847028168 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972310288 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.769889372 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848268358 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115647701 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.848141767 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345169434 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.997505634 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859726567 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.1727851 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232426824 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.612820084 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.808876364 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848483974 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070770072 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156756945 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.123981577 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961845788 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116257473 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194665175 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.880118961 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.23706677 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089616105 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847894754 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.718399338 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.848060101 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973752129 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.048675146 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117421682 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.35348705 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626459647 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113819651 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695379956 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848962246 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.56105593 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115921384 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114778823 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897492026 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909164021 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851926035 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376730426 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.571953897 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977126695 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.757746526 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773528264 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.844106033 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182157776 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.088504535 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.556395033 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.850323897 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121677047 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148407999 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115404265 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.899197735 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.744061662 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061363679 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848947132 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.853133135 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114296729 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066771153 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094153781 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850443966 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850320637 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.652407806 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773483925 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.849049103 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903228621 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.073458281 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867413816 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.3635143 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.548883206 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132152895 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898000426 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853564849 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117269533 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.362427843 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.408053737 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853762617 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068036344 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.879092474 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145782228 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.850757569 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41275238 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156575332 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.851088516 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.47367571 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.100501139 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114164119 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7788334 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856837719 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062954734 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.710976215 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849848334 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.831948509 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368531476 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088018291 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.58437603 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407153162 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.853109011 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.852241963 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384527085 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886906548 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38619713 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882343423 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865822336 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371323137 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.563472963 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.137000314 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093877879 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.47753974 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.442053294 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.853630511 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.849535842 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853218308 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771147968 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033153526 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.038753132 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142615785 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886597107 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379313805 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890320526 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.236599968 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293972929 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476110961 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899437944 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.373355545 seconds)
  done (took 1651.764478225 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.85454269 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.91717746 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.924787459 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.859878563 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.861792005 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878754757 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913292572 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872175897 seconds)
  done (took 56.867776949 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.854701096 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.8722087 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.85974862 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.864582878 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.861374084 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.857762509 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.016332348 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.867743414 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.859772981 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.861384863 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.857717091 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.856031785 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.142376798 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.878194179 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.85764955 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.863653636 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.859711885 seconds)
  done (took 73.883637189 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.859861999 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.257275789 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.916638517 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.857735206 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.819169888 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.871537751 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.90921238 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.916515935 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.864425647 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.097134061 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.159350441 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.900318566 seconds)
  done (took 90.219383433 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.863808177 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.858842895 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.858819953 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.858138705 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.858239196 seconds)
  done (took 11.092410891 seconds)
done (took 2158.607354096 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.242275753 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.922004692 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.963034387 seconds)
  done (took 5.673658596 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.005381288 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.050241197 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.163232073 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.918492907 seconds)
  done (took 9.934783346 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.165809071 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.221414539 seconds)
  done (took 6.177732608 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.253674691 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.8654611 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.272875596 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.859710646 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.862730327 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.861588741 seconds)
  done (took 22.379393377 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.859387014 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.859295768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.858425855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.860003322 seconds)
  done (took 9.226701414 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.863299687 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.611134427 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.863635279 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.874992656 seconds)
  done (took 21.003601212 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.008867526 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.974065882 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.001417696 seconds)
  done (took 7.774023404 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.078885127 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.909706981 seconds)
  done (took 6.780089297 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.013057876 seconds)
  done (took 3.804029485 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.887602216 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.130694575 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.356046204 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.389079888 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.509662417 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.671205756 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.187193986 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.108400741 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.280722615 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.306167349 seconds)
  done (took 24.617614889 seconds)
done (took 132.798310328 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.222299167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.88452685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.065500193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.228026877 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.094989324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.065197404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.075608347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.219943999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.907407861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.890296824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.226731953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.090890619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.01760901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886140934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.026115652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88658477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.090220865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.235489838 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.907233511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.150243726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.082474188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.872777572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.069710723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.887221496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.093846195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.015834244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.415116032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888366334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.056878587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.434938378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.019523943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.308167701 seconds)
  done (took 168.109107123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863229522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862410465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.864939741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862138362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.341124 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.866861083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864988699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.862722229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.290248121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.283236296 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.862266117 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.332375966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.864851018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.86315311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.864084437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.863702936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.440397194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.864426851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.864127491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.864175333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.866524979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.165151836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.863880415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.172813452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.417386432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.863475214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.864794306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.864337085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.864878518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.86466093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.862828705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.864731394 seconds)
  done (took 208.97618314 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.864183829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86609715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.865544203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.864523614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.864236024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.866743305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.86825209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.864565745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.595523895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.582084359 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.865507801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.866124595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.8683099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.864282731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.870699706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.865052777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.867298604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.866953447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871089448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.87296908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.868005195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.681567363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.864475981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.701532809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.864810189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.866623489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.865509343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.865555055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.868837852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.869430153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.864429281 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.866694093 seconds)
  done (took 220.624261966 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.110258372 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.866511577 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.867288994 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.772755014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.866964433 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.865621584 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.859263871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.112100988 seconds)
  done (took 19.121206508 seconds)
done (took 618.644017665 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.203415322 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.045457993 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.045700479 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.892715708 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.129848754 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.934274968 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.887094716 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.948501172 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710605176 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.964509119 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.542450478 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.912070033 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.633131775 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.917466412 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.013389263 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.944124801 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.455328323 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.553865006 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.029972978 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.930685234 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.066606947 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.831015643 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.967233686 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.749920072 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.554042994 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.867819923 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.913295692 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.461360116 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.901247943 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.048821537 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.555530382 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303089661 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.904650314 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.888767662 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.940018691 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.92230685 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.106484436 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.900577071 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.016806889 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.627108662 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.951323768 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.61930014 seconds)
  done (took 102.589851425 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.87911632 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.873738527 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.873324553 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.874045706 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.883565167 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.873545446 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.874137246 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.874063783 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.87326298 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.87491832 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.874239632 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.88350383 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.874570643 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.882241576 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.874564893 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.874008334 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.874539541 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.883354974 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.874867986 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.8752007 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.875355303 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.874508864 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.872483701 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.875168246 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.874751916 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.874215615 seconds)
  done (took 50.585157288 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.86898044 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.024477358 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.112800694 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.891346353 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.871104838 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.87414013 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.888891268 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.875676738 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.873273696 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.873301809 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.960624955 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.87907056 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.890126434 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.115093186 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.889745375 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.872143115 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.871478447 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.87174162 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.035175473 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.888895873 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.890834441 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.876112024 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.891310902 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.887218533 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.874858761 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.871787572 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.875509691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.311470279 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.881938612 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.962575308 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.930789952 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.895250582 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.248952871 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.123489589 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.928171813 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880075922 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.871308033 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.966840343 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.878981846 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.872274906 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.891669208 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.880821324 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.11532237 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.393124145 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.888941763 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.873774876 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.322120508 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.975482462 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.915055392 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.883828048 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.119099078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.891871117 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.874263794 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.87460731 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.910049418 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.886004505 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.874527877 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.184478384 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.88732299 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.890010758 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.877958706 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.874473691 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.039265083 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.883649988 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.026258909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.883567634 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.880191416 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.87601754 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.118859817 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.892346069 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.407170154 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.889770726 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.87269153 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.964935896 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.032838899 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.349327237 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.887875187 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.041482713 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.268558065 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.898502694 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.883284914 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.298319908 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.902655683 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.88176121 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.875363333 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.876662922 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.874422753 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.920092082 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.890492445 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.320141285 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.401463298 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.20333362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.900906603 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.886446516 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.875841497 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.184644808 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.884492774 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.876173537 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.111784937 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.417848005 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.891685695 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.882629944 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384933261 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.893480066 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.894062072 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.884178634 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.126529452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.892871176 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.919863733 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.875801431 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.882412272 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.879104134 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.894884459 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.884157151 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.876859615 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.376775953 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.987071988 seconds)
  done (took 232.545521242 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.876751683 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.876052733 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.877645593 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.879445892 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.875474322 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.87682836 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.876075369 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.874231332 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.876473849 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.875327988 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.876461586 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.877293955 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.877613079 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.881139709 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.922375231 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.878878856 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.479474015 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.877792953 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.875589893 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.877136968 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.517937541 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.882773719 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.878119054 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.877130991 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.876995529 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.876561971 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.879374672 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.914563083 seconds)
  done (took 167.701547178 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.877416193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.989998841 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.898531411 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.906977815 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.887693493 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.877481667 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.976044576 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.895558028 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.882938844 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.877662821 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.878692605 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.938335879 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.891058431 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.977257519 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.908633667 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.986572005 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.98250952 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.885381201 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.88015165 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.879631055 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.90996041 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.894268075 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.938626584 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.004965139 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.898371583 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.99380189 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.905357165 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.879859688 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.8795639 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.992489005 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.898048926 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.939824276 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.909582378 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.897233429 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.997722726 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.995674795 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.983468201 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.984086156 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.885360018 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.878489161 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.880332868 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.886731477 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.993875321 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.898721826 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.881918314 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.001749587 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.899437759 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.881845704 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.879576497 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.880586232 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.894222156 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.897093886 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.944380323 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012185068 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.915910511 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.903147424 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.979412266 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.004970538 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.884244326 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.980032877 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.892398595 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.995161378 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.900793348 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.887328834 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.88290779 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.884589411 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.910119647 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.989428344 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.985241887 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.887828898 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.979380907 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.918491902 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.890135978 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.882438669 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.882439366 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.995299093 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.998675262 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.915866575 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.918448353 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.91200422 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.896522492 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.882710629 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.888921556 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.897660943 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.88678122 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996837206 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.999752385 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.887273151 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.882121244 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.881927385 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.882570417 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.907187997 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.003563898 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.919031422 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.994176947 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.950537879 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.956592601 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.897733239 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.895514133 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.886607362 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.945353221 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.896773868 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.894089749 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.173575936 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.943016275 seconds)
  done (took 204.012944615 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.266816342 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.930107663 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.93940984 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.21364112 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.267955415 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.843094984 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.928113828 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.933600247 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.964542457 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.155435639 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.001650422 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.950049659 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.918903444 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.904322082 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.92895384 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.966301973 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.939102045 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.269092932 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.143834254 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.406557583 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.922050863 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.225695407 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.262102314 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.499210043 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.980172251 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.320707534 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.532867899 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.097635461 seconds)
  done (took 63.531378322 seconds)
done (took 822.768461242 seconds)
SAVING RESULT...
DONE!
