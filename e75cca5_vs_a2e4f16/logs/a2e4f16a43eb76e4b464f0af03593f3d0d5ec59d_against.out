cset: moving following pidspec: 18740
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.483911467 seconds)
loading group "string"... done (took 0.546273796 seconds)
loading group "linalg"... done (took 8.722506752 seconds)
loading group "parallel"... done (took 0.168634434 seconds)
loading group "find"... done (took 3.424881894 seconds)
loading group "tuple"... done (took 1.951092943 seconds)
loading group "dates"... done (took 1.389052755 seconds)
loading group "micro"... done (took 0.193149004 seconds)
loading group "io"... done (took 0.506521953 seconds)
loading group "scalar"... done (took 50.067239488 seconds)
loading group "sparse"... done (took 13.686337767 seconds)
loading group "broadcast"... done (took 1.17442707 seconds)
loading group "union"... done (took 9.09424746 seconds)
loading group "simd"... done (took 3.03904924 seconds)
loading group "random"... done (took 11.401774555 seconds)
loading group "problem"... done (took 2.317083269 seconds)
loading group "array"... done (took 23.580288667 seconds)
loading group "misc"... done (took 1.1131998 seconds)
loading group "sort"... done (took 3.774340438 seconds)
loading group "collection"... done (took 19.165826046 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.734416227 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118523731 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.198429424 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.199814795 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.270571837 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162741715 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159121981 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.143463076 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.622511214 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209998771 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135836268 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.379816805 seconds)
done (took 6.047307272 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.30109597 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060700387 seconds)
    (2/2) benchmarking "String"...
    done (took 0.19147407 seconds)
  done (took 0.913670306 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075936472 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159919498 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107023945 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093065256 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09302817 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107237589 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092376692 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106845221 seconds)
  done (took 1.416087828 seconds)
done (took 3.363041976 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.582597899 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.196118934 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.562345602 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.187336322 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.303017863 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.304472377 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271262777 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.232281354 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089027592 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084110766 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195562368 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.564704073 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423726997 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.179263369 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068655239 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093927167 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.158094406 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.996393885 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080703769 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109660384 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513180412 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.216994074 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114657667 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107087431 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185044062 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125232755 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140494961 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101527157 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.869911111 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132886661 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.212031851 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083931692 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.138567691 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.169330192 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.218965414 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109168841 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.843635144 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198229537 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096405206 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098488083 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.835965524 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.134474013 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208574219 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104598217 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068411772 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191410584 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112664047 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077632218 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09322659 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099420744 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170893379 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.680594718 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105460408 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19652115 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.0922317 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.851569742 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096806375 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.28801393 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123779078 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094850469 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089722234 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088438342 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172376599 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094358717 seconds)
  done (took 22.110949654 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.19055405 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.207618022 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0958228 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144181672 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140344663 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080685958 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088645281 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094171961 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.114008352 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196318191 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.125660254 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.214974893 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075799583 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106446498 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.166591855 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25223431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109208859 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121154722 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090925041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09472678 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142580143 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096118648 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093985765 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11041474 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170251328 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203435995 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108604034 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121316265 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090180602 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098210254 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142666886 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148211795 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090117046 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088328062 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17370519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122716653 seconds)
  done (took 5.390117556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242112771 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10369489 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.245876867 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.187947015 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127454266 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.180515623 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.192673733 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303518765 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.244693896 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162356051 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126442755 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095979803 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078676206 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078638771 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0964388 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.851054663 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152948919 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157856317 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167520465 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113474416 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095707911 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 1.050144715 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098879543 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085095947 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094627117 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.213008861 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083352918 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084572627 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224683739 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093814025 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.475565922 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083336715 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113788422 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127498825 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19454108 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122676843 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135410166 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09319146 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10047835 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191751479 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115685032 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077946086 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.078610764 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134287188 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113759089 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105942243 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118945363 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.119607877 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.101108388 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.108111793 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.151661675 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193312362 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.162824756 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101534001 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.277205641 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106526605 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096706222 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107276003 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.874249232 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133422973 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082253197 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093445542 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094419339 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079157203 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.832372609 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10484783 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 2.769074895 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081325425 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157872939 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094766521 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115655071 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086040271 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083825674 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123014805 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085086589 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078009501 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102422871 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081141952 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090294653 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.130018349 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086126455 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095978336 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145632765 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095750445 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120555903 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110115051 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103016313 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08518688 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126474743 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082454409 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087808513 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.202514859 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111934904 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113070943 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112320358 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128573264 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102950033 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.331461564 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08501975 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122526615 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100035137 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083554899 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127497777 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097098591 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099242299 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080871177 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08335662 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095568857 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081611286 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147097267 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.10106802 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081759699 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087879401 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10910787 seconds)
  done (took 29.909729373 seconds)
done (took 58.067173767 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.781176293 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078349838 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098285124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079396968 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078334473 seconds)
  done (took 1.839017727 seconds)
done (took 2.545403714 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.18383036 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.265840021 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199021677 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12795007 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148981306 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.168846471 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152593915 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.168065576 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.14879895 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.167688782 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168351576 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105887069 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173739342 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183626144 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101434268 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206126981 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.102133518 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148714163 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085045033 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192343174 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.083169305 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104033341 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087322557 seconds)
  done (took 4.19539468 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10440364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100364299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103460154 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121952868 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085549705 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102750497 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120752576 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107256167 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102087493 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113565419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086314677 seconds)
  done (took 1.86390043 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100920236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097665632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092651237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11787749 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085883896 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099679296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116141794 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107954231 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1007464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112952562 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088587942 seconds)
  done (took 1.835870888 seconds)
done (took 8.602710443 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.199418376 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.002742738 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.181532162 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247143229 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331183595 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.29813037 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609692476 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202319862 seconds)
  done (took 15.89527523 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.113062073 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091892831 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108914688 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098583905 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.201707913 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096529104 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096748965 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114967902 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096177804 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09790861 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090059148 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109929412 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094613987 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091569884 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111999717 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092800139 seconds)
  done (took 2.47861652 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135945849 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118258614 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115775895 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098741467 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09439231 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116323591 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102198401 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098165067 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114838905 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096898495 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102543627 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114531673 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098804325 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094626837 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115139921 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117635001 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096009765 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115388905 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118482944 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099641302 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116230563 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097627847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.097725696 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115692854 seconds)
  done (took 3.373607635 seconds)
done (took 22.465048524 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153183866 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084879439 seconds)
  done (took 0.960532481 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.16783091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183149757 seconds)
  done (took 1.07969973 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114287229 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09067885 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138599538 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104942814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091758038 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108120523 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118476169 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.092064221 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.109271228 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092634755 seconds)
  done (took 1.791372213 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096647835 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095815746 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12378697 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160631949 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117288658 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093919485 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09699767 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112515565 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096993759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09150179 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114675756 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109215215 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097928514 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12704751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095700228 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09735847 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117103928 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094747244 seconds)
  done (took 2.672147974 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092472234 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093267866 seconds)
  done (took 0.919262778 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09315598 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091648037 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09239911 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109328219 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091980133 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091496552 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107609564 seconds)
  done (took 1.412335326 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.522804471 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237703971 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380552513 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072882104 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121657021 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31322356 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.123847872 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073991671 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092079866 seconds)
  done (took 2.69649653 seconds)
done (took 12.261053099 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091715574 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.207307787 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603301718 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130331867 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092327383 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151719782 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.350024539 seconds)
done (took 2.365518688 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343417064 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.178569426 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084667261 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091784227 seconds)
  done (took 1.432959527 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082249216 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099565314 seconds)
  done (took 0.923494251 seconds)
done (took 3.101311906 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090865745 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.113934391 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089648901 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.108017856 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091496342 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090657409 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109690695 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089034227 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090406189 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.212115172 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108118148 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.089423243 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088891611 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106590021 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09107918 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089527446 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089562576 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106419469 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090277751 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090037846 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089536247 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107760421 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089258208 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089733269 seconds)
  done (took 3.177271845 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111886505 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092582094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111066498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09438372 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095280412 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111427158 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094467111 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093121339 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.093866196 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.109142999 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094905434 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093820102 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108788974 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094883574 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091139103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111977228 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095085485 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091403453 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109467621 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095296964 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09421233 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109708364 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096235562 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095268399 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111189279 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095629479 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092955746 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109363908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096518769 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095048469 seconds)
  done (took 3.73452958 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097501295 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087062328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090036869 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115661635 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087234487 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091795402 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103967201 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090901154 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092126589 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090090716 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110379469 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091822291 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089359129 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10881251 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092212284 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094523333 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098628534 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108527558 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090932862 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091397656 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110301596 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091652857 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091953034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089356055 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108798193 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088476265 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09123737 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108065488 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09143998 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09107003 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092352596 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110602821 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091547536 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101231379 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111036886 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091010596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09744179 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088328551 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109738466 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087997503 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087054017 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108017227 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090707974 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096335784 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091113542 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.109245526 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091426081 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092015262 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108267888 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093502673 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08809584 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089480932 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109984237 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09319984 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093556171 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104412789 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0908765 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087288753 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091433555 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.108612485 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087969497 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087357897 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111979114 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092471256 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107119208 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113379083 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090210983 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092503523 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090544056 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.114493191 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093553517 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10029774 seconds)
  done (took 7.722751825 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11478862 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101349201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109321723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092766685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091457999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091481187 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113437051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091483771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092243224 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116176715 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090804354 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092961542 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109482568 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093552889 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091728354 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091170044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113790797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092460222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09218791 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109046269 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092190704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09708567 seconds)
  done (took 2.934515765 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219371332 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097603263 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140176345 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12205323 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110358587 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121568183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096063892 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09777633 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1139214 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101176553 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100477162 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113233254 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109768708 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10016113 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118054328 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102846947 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094774971 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119705236 seconds)
  done (took 2.849176351 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105918287 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093588228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155167776 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09253586 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093050241 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111163019 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099478432 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112874829 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110586688 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09427379 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099414528 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111283634 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093715479 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093677136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092767662 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11140027 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094023549 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093950494 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116519496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099484648 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098828419 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117043864 seconds)
  done (took 3.04390244 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105512091 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093457765 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128328051 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098062261 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092851332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091510659 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115082791 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094627466 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099917943 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110807736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094406419 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092592291 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126029434 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094992597 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098139435 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110710098 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09387793 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094181599 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111764212 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093998476 seconds)
  done (took 2.795464703 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1865849 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128528844 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109950504 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117070334 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127345105 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108688193 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135042731 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109839457 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109541653 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137449881 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108733869 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108536218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133700242 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115562321 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127704158 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118082614 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116483458 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134399773 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109766402 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110363825 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139128726 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111822251 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134906122 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109386396 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108479088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128441403 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10925258 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115416841 seconds)
  done (took 4.169121227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092504431 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092496469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093011549 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109725685 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092075186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091820126 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0914265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109771501 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092833454 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092404278 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108726605 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092520914 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09214873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09159419 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109884155 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092781003 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092241758 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108554028 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092260545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092275631 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091574005 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109646206 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092766266 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093249847 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091538177 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109536276 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092482082 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091623383 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110463558 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09255311 seconds)
  done (took 3.668200265 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104453227 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103260827 seconds)
  done (took 0.970842312 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100970731 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107251348 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091534894 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11110987 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099086832 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092304196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118694773 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099040178 seconds)
  done (took 1.583893454 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.185139674 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.21058048 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.118015566 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104855233 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.209992137 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.189773365 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130918464 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097888216 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111512015 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085724448 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202570522 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084774957 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091118501 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109893164 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092554367 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097016038 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.114102569 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102958973 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099253334 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113667388 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098244825 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098149143 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113800226 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10534971 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087377732 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114294771 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096005714 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104130769 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108747628 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094111968 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090724177 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112463953 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096580578 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098287429 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093948609 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.207210218 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120297491 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08958276 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09365318 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119048519 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124370704 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094613359 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114648798 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092581117 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096547403 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116119795 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099327645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094334063 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084896689 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106956968 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094808286 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087762348 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.11329241 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092853148 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092907834 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118117185 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097439486 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090516189 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109610377 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089859052 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092191542 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110060994 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09664972 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097255314 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112794581 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094079911 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092721427 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093761714 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.113135756 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095118172 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092522659 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127307879 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095176209 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097320895 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119150906 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094966755 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091868386 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118196595 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09260584 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094095556 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116302569 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12009076 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094992876 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107273977 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089402919 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101271118 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095274825 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115424943 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086351135 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100968775 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115016372 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095300597 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085374962 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11162453 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089876234 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097895689 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106189412 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093799777 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092709415 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098000032 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118736398 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091087351 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095037854 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118322309 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100220845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091961694 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1635312 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08983824 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109898543 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09463927 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099335606 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086935706 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112213292 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094247879 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090419948 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108979989 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098435702 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09334532 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114966994 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098499397 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094885111 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114361749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096698958 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092629447 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088625935 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117539249 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102891576 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095036317 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115622734 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094433308 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095398584 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112820212 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098298394 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090760564 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11914483 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091438513 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094576273 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094924222 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.118118791 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094292228 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089196469 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110960619 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094646254 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09312972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.117889084 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094600927 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089534849 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105758631 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094070901 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089802132 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.115510987 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10319776 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08992184 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095663981 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109962657 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103501849 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090164049 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118377204 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097486838 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098793498 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119698461 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086959312 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090517447 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.117841521 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096058515 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090060963 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094708482 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.114960708 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101834877 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086311465 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117990772 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087282678 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090465974 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119567859 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097118425 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09631993 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089397262 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150611261 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105899989 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099279175 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.1142382 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093925212 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098018191 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112562848 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098194889 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100048826 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119538106 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091568767 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092749574 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120071624 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090900456 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095314565 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113242683 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095590438 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086935217 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095802616 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106234459 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099924299 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095465981 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.119665846 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099658762 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097342895 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11296702 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103031258 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090176621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118045528 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086956868 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099134464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105047506 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121176653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099896782 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095504882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111085495 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09594614 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102952896 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116701991 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094711276 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095553143 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105685087 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089341529 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101166845 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098421734 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110914873 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094536602 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095205892 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116493166 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091711872 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087912506 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.119015134 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097851549 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090392221 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114547318 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091502697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092816971 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12145497 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087557084 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093366063 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096072412 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119851344 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095576679 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093441073 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118428119 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100364299 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096857708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116139839 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09231572 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102997246 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092638177 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.114890517 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090611522 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097064927 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107931393 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097836534 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094331269 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111965984 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090826215 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098288686 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120537395 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098985563 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092874311 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098302724 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120248182 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101220972 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091590558 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120093972 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090298005 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087601503 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.119645243 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089017186 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096309803 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089898024 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.119843312 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093161358 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093386177 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118967013 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096197498 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093080202 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120602697 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104389461 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088912773 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108538593 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091954711 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09334525 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111376035 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091173257 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095744856 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115349445 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099793486 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097367131 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111408441 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095694432 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102144832 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091642519 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121460557 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100647575 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102825156 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.111531431 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099465093 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091828507 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118404442 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088670982 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094815619 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113548866 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094277212 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10237028 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094013002 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110986251 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087584252 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091896322 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.12024476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092717377 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100378686 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114518473 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092765637 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092830939 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111108053 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100733201 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092906717 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101879436 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115388835 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089465287 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087598151 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119435859 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094089549 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099995887 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108455272 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0992196 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102843874 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099301594 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115814657 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103864116 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103782331 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120700405 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100517391 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087661706 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112198066 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099179931 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096408978 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117180265 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096467854 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08998337 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116249559 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100892718 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097487467 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094393289 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109903571 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095803943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101553417 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118125706 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097777448 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098662966 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114381095 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090820697 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098966914 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100907525 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114846238 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101029188 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096087638 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1198797 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091487751 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101167055 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.115490454 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090197782 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08777415 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092558139 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.122919402 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088266042 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100070058 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120025528 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091732894 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09391257 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.12079043 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091411694 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09788619 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120424881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093225891 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104222472 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097014711 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113399127 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10001628 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101024509 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108212714 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094428908 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094412215 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122211071 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093807041 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101638972 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114912797 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100713296 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099229029 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100364858 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.120951764 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100903195 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089531567 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123992304 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097998984 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098261727 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112000486 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092921663 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090918824 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094283847 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.122303751 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092455472 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103741125 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.12032871 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094450698 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093537523 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.123080596 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094004342 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101802331 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112908911 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096453536 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089105255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117407877 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095176908 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10212835 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092193777 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110002466 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101780611 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101220623 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120528665 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097788832 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102171512 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109861457 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090095675 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098140134 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092542146 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124662221 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09815466 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093722882 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115133776 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098476699 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098146768 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122524659 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089813795 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092206069 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115502049 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096887531 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094268971 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109670022 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099624121 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095714266 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097195251 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115115198 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089183198 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094989593 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123425262 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094086197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092292742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113630441 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102910852 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095331187 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112263858 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089215046 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10115148 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117747236 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102926077 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093081669 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095372534 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112902625 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09881927 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103180369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114098727 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095926095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095036387 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121617281 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101264483 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089771402 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112575768 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1056355 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101600071 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11673817 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098418452 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095643098 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10264322 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123411085 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098221778 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08968424 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.11107432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09541765 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090393548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119789744 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101689328 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095712032 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09356972 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120766684 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099985549 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098306356 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.11962841 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089466685 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104461468 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112806244 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099104502 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090003974 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090166913 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.118955211 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100908013 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094068387 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116798163 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09765327 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098538648 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111179641 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093314032 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099763315 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098759905 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122612379 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09528174 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093970399 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.119308329 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105956979 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097271098 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116030327 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103449049 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102825227 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116372061 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094581511 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10071609 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122406697 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098228413 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105928415 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092690138 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11569034 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103766897 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103225418 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126924311 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094535206 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089945027 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120765147 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093642494 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0900449 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120835827 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104298109 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10251555 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116050931 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093512589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105449024 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12024064 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095852692 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093294894 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093109955 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.12154744 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093295523 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099927931 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113230949 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103443462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102671157 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121717504 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105107779 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089466405 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121472081 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097815721 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10404263 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097034477 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110594581 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090800444 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099458038 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.12376106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101783893 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099799074 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100387696 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119732893 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096511645 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094598692 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114092092 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102549703 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100973734 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117970239 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097605568 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094554412 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116741032 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097741131 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101826985 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102134147 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117545115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107071297 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099680483 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114311115 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09360932 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096189676 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119535242 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097866286 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100015582 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114156905 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090063967 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102846248 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102547049 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116222461 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103833595 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102912807 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.1153778 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098237632 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103708998 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121052684 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098227295 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09725755 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.118703922 seconds)
  done (took 62.453134929 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147916925 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105012097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119493058 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099133626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116066435 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122080748 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099745435 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100056299 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120197058 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10975865 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099268838 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097102362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134041277 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118403814 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136099779 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107221247 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097371949 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120753764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099068464 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099961106 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132602547 seconds)
  done (took 3.195827975 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11486286 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112109997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130561505 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112691356 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104897906 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129957308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110013431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130514711 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113280327 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106196955 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133337068 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109923825 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104743977 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.128400336 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107274396 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126602133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113733737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105302985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130366508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109495838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105634173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129394318 seconds)
  done (took 3.38560085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.125922857 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101907721 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096730736 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120319769 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101654547 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098779112 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121773167 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098795105 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108028681 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093677066 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109570498 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094587168 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09709 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11871782 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09228017 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099361099 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126283307 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103330528 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103642719 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09741993 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110271145 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09811555 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099925207 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109077977 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104070986 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104515316 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101151201 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122870513 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08963144 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101857087 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11818102 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093143548 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089700932 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08981177 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110892034 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102093639 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101823703 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.1180009 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099180978 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089938252 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100183061 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123414227 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090509694 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098887575 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.1176489 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093395815 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102947029 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097559473 seconds)
  done (took 5.80807776 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129712165 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156126279 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102864966 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127099123 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134471709 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109126936 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100546235 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151213154 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101266788 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100670204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135973297 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113748334 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125001581 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106739551 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104745653 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125232266 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10557865 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101881461 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126733434 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102214744 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108459043 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125295333 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113170956 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.110716733 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125458622 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103230446 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102351214 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126374171 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111615241 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1071491 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.12765946 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107628561 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112625216 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126705638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.362485481 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101545874 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.134374001 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105225601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125112838 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102007874 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105202834 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104062884 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.12499278 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114079381 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124897447 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105602605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103790503 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100560135 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13281689 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104290497 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.131404419 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113734924 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105327639 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124104049 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106052452 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111864295 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125443885 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102471551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104998478 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13312447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101688001 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104250548 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135196871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103701735 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107351221 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134806039 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105062103 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125534749 seconds)
  done (took 9.003942052 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132648432 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106964789 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136424681 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116270442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107133037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128067333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10722432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105460966 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128789841 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113339762 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10570576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.239738377 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126602761 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112091349 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106060135 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130961696 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107506967 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106209875 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130257067 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107423018 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105796205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136353442 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108255596 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134941811 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117498042 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10456609 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129615645 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108076802 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11412429 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128291244 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118203998 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128026406 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107159996 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115953782 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13756931 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107395989 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101602795 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12769906 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107011583 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105946015 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125554514 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115768842 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107101748 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125198463 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108283951 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105939869 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137253138 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118741846 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136460929 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112396695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107348917 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1359807 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107844929 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106619843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136336122 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121638932 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13586183 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114732886 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127884699 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115715693 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115062258 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143686498 seconds)
  done (took 8.290543442 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100947892 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100393563 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098995899 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121092563 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099691099 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099937988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099293981 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121313472 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099979754 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101249957 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120913979 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099517334 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099802217 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099251728 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120859433 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099855925 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100401734 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098883454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12026704 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100479747 seconds)
  done (took 2.938021099 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109464618 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117338385 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123595885 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10733411 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102653348 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128566838 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101925461 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103498357 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102487823 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124266221 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11123293 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109483196 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123603288 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108361405 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108863145 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.130702375 seconds)
  done (took 2.651873817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119375656 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118558093 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203515755 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104267938 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123595117 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110490098 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102167531 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125876342 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102156496 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107800999 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104663519 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125922647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103424535 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102926008 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124630793 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104524185 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101254147 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12625111 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103160954 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.206219101 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105249069 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104258788 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125728209 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105797252 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104193278 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128264216 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107940751 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101914706 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103096421 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124233256 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10413985 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.109792523 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12325464 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107055932 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103274795 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125411339 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102479722 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104192021 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124850723 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102146998 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104486262 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124664456 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102798059 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104954757 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101301289 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.12473332 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100947963 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107896402 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123951656 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10358503 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101946274 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127728393 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106868548 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110917107 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130687429 seconds)
  done (took 7.157982451 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114685044 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105586192 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135171659 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101769157 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103750694 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103462598 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126643479 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106234459 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104394001 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123605872 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104862217 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105606935 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125641117 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105396782 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105233703 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103792109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122302075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104603455 seconds)
  done (took 2.844665443 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107475469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102560598 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106866452 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124621574 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103498287 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103280871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123016482 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101950185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102150979 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103077633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125527136 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103189868 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10117327 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124951504 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101796814 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103136439 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12388384 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101800725 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103128896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102256718 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125040481 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101822166 seconds)
  done (took 3.241788219 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113513667 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.228215194 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108160332 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.23718044 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098899728 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122417174 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.10902818 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099975772 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139730549 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099182235 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121004074 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099700039 seconds)
  done (took 2.425781239 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130137987 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140230123 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126306494 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105112598 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112925045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130787163 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107312809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10826663 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13844016 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119402823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129377347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117413394 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116311648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136773049 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112301222 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113064238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129038895 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108706701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103860833 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144565031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108224377 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138285952 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107651049 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108470498 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130122832 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11533387 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115503235 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141359946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109176243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138143475 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112498664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10830211 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138494357 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119636024 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103975932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137288548 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109372498 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144710651 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113109914 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114844632 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125722272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112230543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137592637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1139478 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116362912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130914413 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113517718 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108454714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130061721 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128747308 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134748071 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117792633 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112907375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137530269 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116340423 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150614125 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119880677 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136748884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113986841 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118293115 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138115119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113327749 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137004573 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120358322 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112903883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13874418 seconds)
  done (took 8.935260134 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143033762 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105484154 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130022051 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119196163 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115405667 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130948146 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108660466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129883765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10824931 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105629354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173109793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109354339 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115356778 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139083189 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10837265 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131433893 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110063228 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117366531 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126253485 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129415131 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108035177 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13751609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115603598 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138326878 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120797414 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11145279 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131267112 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110680555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108223818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131262991 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114047813 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129324266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116529553 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105328128 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137342954 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108116193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108133444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135167607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109027621 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113222638 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139665945 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123679345 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132148299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108362104 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119579732 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130964909 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109588447 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1048127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1304712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10503263 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118291439 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14188159 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11949208 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138983875 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110309348 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109410003 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130047543 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109510854 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107912326 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136179537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11697521 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133242362 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131637969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108235901 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131814248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118070532 seconds)
  done (took 8.867744564 seconds)
done (took 168.593904579 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175804828 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215298328 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.19795576 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.185957097 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09351713 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.166570903 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.131405327 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200216661 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09459045 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09363125 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116338607 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097156908 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.201110979 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093312494 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116014124 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097228216 seconds)
  done (took 3.125571555 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195028572 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34150935 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133636477 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098783721 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101537982 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09885014 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120645161 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102932643 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098950781 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126350006 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101130807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095441886 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126559181 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095310095 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099623423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.1212481 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10580249 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099307182 seconds)
  done (took 3.126655003 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118870843 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15102961 seconds)
  done (took 1.134891455 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129214965 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213495096 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295118814 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170038383 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119222283 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139389583 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149058411 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133701429 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18944511 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133812127 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112294588 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097300152 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148540049 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106188573 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115515947 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119913363 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128282584 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113483146 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135700288 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10260802 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.125118914 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124043148 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104845176 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137308801 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180540766 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133160648 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10299969 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103889538 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123244443 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114249724 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105973882 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138186147 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112552999 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178574873 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102641405 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176331711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106073755 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121569579 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114306994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099993093 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124587491 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103974534 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112671451 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119144131 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102942001 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106284745 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126752292 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102455487 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107159646 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128142761 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108265095 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128359898 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15297057 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130214394 seconds)
  done (took 7.876698566 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.91110322 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14800681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099061899 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.063545091 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142744828 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11289613 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.903924165 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148492487 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251366602 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.924820608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115948823 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106400891 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26536084 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259165568 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.278573134 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361058833 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.767375655 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111965495 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131182673 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165958954 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105317653 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138700878 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115886245 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458840751 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102194629 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09964207 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126482914 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10842133 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175565971 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100308356 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102676185 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197684217 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296012294 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21402177 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100582344 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121133211 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099645633 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18831445 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270973355 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221340716 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167897188 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119310912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099975004 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104604294 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136545577 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097942343 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180449623 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192769974 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1701275 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126527193 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109188606 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106601615 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129966946 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180021146 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097893873 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360579163 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36583025 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121005122 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106133678 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111904314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269802815 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124413237 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241137926 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122867021 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214463725 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123013269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813748103 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165400642 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121221281 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104079716 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104590256 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128723562 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102900865 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18338156 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.41021208 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128747238 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1044915 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099337633 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230553341 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100296064 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122240545 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18056528 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101304991 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104778338 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129637085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106677043 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190295847 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250697453 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127920736 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105297398 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126445549 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110047164 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101140934 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231489214 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231760687 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.180005014 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227907544 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10552578 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181571204 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164747347 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128692553 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190333352 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104471735 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111433164 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125707536 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230965124 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135537557 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124670393 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105896287 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105680059 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16070605 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103562681 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128938883 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166676502 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495921513 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188282043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096892769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126539066 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107107964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180618429 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107637989 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263018643 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107141279 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187775136 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127740267 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098369841 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106676066 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181314258 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108332421 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128547701 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104175608 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108547532 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28153671 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221717231 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131028394 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248618836 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173658745 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127142984 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171110306 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128599803 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164920204 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13252649 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10439023 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101248351 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835910768 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111445247 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106386155 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126382203 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185036798 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100167486 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124732481 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10073334 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097869848 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810601823 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126931434 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09874461 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101870007 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127036895 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106188294 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105506573 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127191663 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157796602 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270841494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109549685 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105546382 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122370659 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156914228 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124163694 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104526351 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101061595 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122992736 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10799404 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105891399 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124809028 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167025429 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179046442 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233627265 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568879674 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123733751 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101262178 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245203807 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100569912 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351327498 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108067513 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239454054 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184549655 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098839524 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364201621 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187040265 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206794943 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104639285 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192135536 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099126013 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10612837 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180722912 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100416959 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130011784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179837324 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110063089 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107345285 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284167002 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124744285 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249332404 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098785467 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19129779 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102565417 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105889722 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327285264 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123922602 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111820993 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182934925 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106191297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100794521 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.98238973 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124374545 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110362568 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105787894 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256855149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16101 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130033785 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108071983 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10879484 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180469876 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232769265 seconds)
  done (took 46.772748477 seconds)
done (took 62.898661137 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254703339 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167264077 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.352412063 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149816328 seconds)
  done (took 1.861349199 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.257405289 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164511563 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.241243387 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096842553 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248492703 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097014082 seconds)
  done (took 1.995850101 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170586637 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162830832 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143441565 seconds)
  done (took 1.369908702 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209016035 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.206745704 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345370315 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233549602 seconds)
  done (took 1.947623856 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.27371679 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117556988 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127972488 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226369289 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242780594 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207485952 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123341523 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174921126 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130586648 seconds)
  done (took 2.551054991 seconds)
done (took 10.619338605 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136357284 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113906873 seconds)
    (3/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.332437037 seconds)
    (4/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.347530995 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.249099484 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.359878096 seconds)
    (7/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.390913677 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.266692154 seconds)
    (9/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.446586259 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.207781311 seconds)
    (11/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.253281719 seconds)
    (12/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.332959868 seconds)
    (13/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.149084811 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.341572416 seconds)
    (15/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.20627644 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110823171 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.41516264 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.297495234 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12192123 seconds)
    (20/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.156476393 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.182301394 seconds)
    (22/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.201033665 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.237582726 seconds)
    (24/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.141979228 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.254224228 seconds)
    (26/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.282961052 seconds)
    (27/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154378221 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128629625 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140038897 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128347048 seconds)
    (31/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.134676833 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.143271571 seconds)
    (33/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110197323 seconds)
    (34/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.333457279 seconds)
    (35/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078514314 seconds)
    (36/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102067309 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160890362 seconds)
    (38/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08305714 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.144487927 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.246942785 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129659644 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12000297 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.130243517 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109634822 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212964722 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19029445 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111487362 seconds)
    (48/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156846133 seconds)
    (49/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140566688 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10564863 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109653958 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126296577 seconds)
    (53/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.148117578 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085193166 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.136942973 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07848519 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078195209 seconds)
    (58/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111874492 seconds)
    (59/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.140225444 seconds)
    (60/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.295621602 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103027137 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08551702 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084551395 seconds)
    (64/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13708978 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107561164 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121263465 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124597269 seconds)
    (68/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.174610333 seconds)
    (69/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172770714 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.269021221 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.134883563 seconds)
    (72/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079098047 seconds)
    (73/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.104037043 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.133465576 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.1006107 seconds)
    (76/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084845915 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.149314518 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08234874 seconds)
    (79/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110187964 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105123703 seconds)
    (81/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.102768515 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196492515 seconds)
    (83/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078843616 seconds)
    (84/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.078260301 seconds)
    (85/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.105734117 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122824278 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102824179 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129938311 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126724774 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083289712 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102898071 seconds)
    (92/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135124446 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086493122 seconds)
    (94/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.174371755 seconds)
    (95/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.164757474 seconds)
    (96/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.07958093 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082185032 seconds)
    (98/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.171187551 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.111666784 seconds)
    (100/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079577229 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100523677 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100527099 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.136102503 seconds)
    (104/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086957566 seconds)
    (105/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111186415 seconds)
    (106/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08166199 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127493866 seconds)
    (108/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083383508 seconds)
    (109/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.176000663 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151924138 seconds)
    (111/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081959864 seconds)
    (112/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082914315 seconds)
    (113/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.142880879 seconds)
    (114/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.230171658 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.140765037 seconds)
    (116/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.132783785 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129074444 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103223532 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085184575 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.110545412 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104833652 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080467775 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110276733 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.216734823 seconds)
    (125/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087087191 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127616159 seconds)
    (127/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.204158783 seconds)
    (128/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078746885 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.136949329 seconds)
    (130/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194997213 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160547232 seconds)
    (132/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082946372 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081305661 seconds)
    (134/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082712962 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103262223 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.15025528 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125070444 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12184217 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.111069571 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134846687 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079927692 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108027495 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104831068 seconds)
    (144/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083253673 seconds)
    (145/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080278993 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112726835 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079459057 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.182782881 seconds)
    (149/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.080680651 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107551945 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13596303 seconds)
    (152/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114758378 seconds)
    (153/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.145279019 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084978754 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126040888 seconds)
    (156/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080663679 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105227696 seconds)
    (158/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079372733 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.138725322 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083130124 seconds)
    (161/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083160156 seconds)
    (162/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081450651 seconds)
    (163/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079165514 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125499618 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087719465 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081650886 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111033184 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149678391 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087252226 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10447383 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.127245371 seconds)
    (172/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080789394 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110609876 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082038365 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110651012 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.110466142 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100902287 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100981138 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.110313679 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087884639 seconds)
    (181/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111575012 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103428236 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12821386 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080347647 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12479024 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104770446 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.104398262 seconds)
    (188/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083460543 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104876185 seconds)
    (190/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102020306 seconds)
    (191/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.112183959 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089094221 seconds)
  done (took 27.444537536 seconds)
done (took 28.345184468 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225336546 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131536001 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111674047 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111960956 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233607849 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118246461 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154485846 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113409393 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12124838 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136736592 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10126155 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124041192 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135939354 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.219299814 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141449482 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104760877 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101421137 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148469089 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127661695 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127850476 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233508814 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129504736 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122802488 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103172477 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236360923 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104813119 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135634636 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112857787 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123774539 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136342199 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112969603 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103058706 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128240121 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153130157 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102345277 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111074809 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125558355 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087706125 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112018086 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136582034 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126302724 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112282924 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135009277 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104547862 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112735984 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111038561 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126156964 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116620416 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100346909 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.136234293 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105144865 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127431429 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134790116 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100935601 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10160929 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126491505 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122491693 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10194802 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124461847 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126069733 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105321913 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101670401 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137274091 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103343589 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112186193 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125515961 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11249175 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114075959 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134370649 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1053363 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102110192 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109740003 seconds)
done (took 10.058420488 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106750936 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146499775 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.246396138 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.2517633 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155309554 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120008557 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115349655 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149852925 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117449363 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120584328 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164323619 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135077023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.253868316 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118917846 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144453215 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115546747 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113640918 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135389423 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.250990926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128467873 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126153542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.144836225 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128506495 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118555369 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.131374946 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140629754 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134455505 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114906721 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106446637 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115776036 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152030785 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10755404 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13382016 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125373695 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123605592 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116593737 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144398879 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11573029 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.13163308 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111303609 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113397661 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147028473 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108656205 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119812373 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.13950566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12288958 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115029641 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141198403 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108237647 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115093895 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107350732 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155853408 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119807484 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146369032 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120379484 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119475528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143630974 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119913573 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109940727 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119718855 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132550445 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107814409 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106262744 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152160621 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110492263 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118339839 seconds)
  done (took 9.766398856 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126239726 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13733583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142263831 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11808862 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112030727 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125292399 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101476173 seconds)
  done (took 1.809270788 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103274795 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268275386 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.258494603 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.257858698 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248922367 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.266812421 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125836742 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103410636 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164910077 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1136618 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.267035215 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.326374185 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140005792 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119903935 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262866808 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10196988 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.261537448 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10311416 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145109934 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261420255 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120775274 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132448267 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.142780378 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104128675 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262235861 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103690909 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.307502441 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149500645 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113945495 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116436665 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145000981 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180296391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261649334 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145787184 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112298219 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.257201562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.250935193 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118001598 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.304682669 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136052985 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.249754455 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116853268 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14420074 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1203813 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120417408 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.246277058 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121816329 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145952359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118166423 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.271220384 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113231229 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263505017 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142575323 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118520449 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114108505 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14671321 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126067987 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117907103 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270981526 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148610239 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.256676705 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.258956463 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.226676661 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260157524 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157484272 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26531209 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.241608517 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117502651 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112863445 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14500559 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.235923577 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145543578 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115981579 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.249615052 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120712977 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.261972489 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.262737322 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141945564 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11749909 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107311481 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142019316 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105088992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252889072 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117143179 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116885953 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149187826 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117578569 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11833488 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.13666249 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127310045 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117692131 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140829221 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12461012 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142302035 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122089129 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.264900865 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114562473 seconds)
  done (took 17.749262668 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105693259 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104853417 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108151253 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129951651 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107333412 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105957888 seconds)
  done (took 1.637403471 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14202218 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118617807 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153091326 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121052615 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166460413 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.249870951 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260218217 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139222732 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139004478 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130054108 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252030164 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255136774 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.254708438 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124503472 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257201771 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119546067 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261763455 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117095826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155107713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116305852 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118862043 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149264512 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117076411 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244475013 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118781446 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147208105 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113023101 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127919759 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153881999 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113714181 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120604652 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145895368 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112749393 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112960594 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.25686772 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138996167 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116340633 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122165535 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147953242 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119515827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.257151835 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116489535 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123823287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148461966 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112251076 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137778415 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123027098 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112835717 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258373918 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120467415 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149259763 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119441865 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119824595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149247889 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11227147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112596371 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147999826 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261701296 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123396837 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111184949 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148230721 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120947293 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112212314 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149803128 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120357973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121368995 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136753703 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121027681 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116334975 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145575426 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122759884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11946177 seconds)
  done (took 11.760265115 seconds)
done (took 43.664514253 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.755644904 seconds)
  done (took 2.729648443 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.112799889 seconds)
  done (took 2.08839071 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.361704377 seconds)
  done (took 19.368526473 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.418822883 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.321882343 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.021193337 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173262606 seconds)
  done (took 2.910609233 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.086886818 seconds)
  done (took 2.078538409 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.409498373 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.276344848 seconds)
  done (took 1.668083002 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720031647 seconds)
  done (took 1.707039631 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.907836954 seconds)
  done (took 2.891248741 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.270964206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245963052 seconds)
  done (took 1.510700139 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.670397891 seconds)
  done (took 1.665344524 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.109216193 seconds)
  done (took 21.109992619 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254413708 seconds)
  done (took 1.259086298 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291915473 seconds)
  done (took 1.295988407 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.679974737 seconds)
  done (took 4.681059791 seconds)
done (took 67.953755294 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119317826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122212678 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121524601 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146780746 seconds)
  done (took 1.499208594 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122927364 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11804902 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121260043 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142624491 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123992933 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118252258 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14246693 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121849503 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116849496 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144108479 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119017998 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118763916 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146062079 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118113414 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116071534 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120150334 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.147989559 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117886569 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.118693236 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.144478009 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120003877 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119255947 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147550398 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122859967 seconds)
  done (took 4.05217556 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114929559 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109650606 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110955521 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133419201 seconds)
  done (took 1.471720042 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126778762 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131035099 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153575186 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126072806 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130608369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155141936 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118649096 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115708709 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143648714 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128238723 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134170554 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157473656 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129761403 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120854754 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155437853 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114454778 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119528398 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155094094 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125992278 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127136279 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145298784 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125707397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122946779 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153412944 seconds)
  done (took 4.216851459 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194040247 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130077086 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172227557 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164581963 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.173963742 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117766372 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14633481 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149589064 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124650139 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.125726952 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144953699 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166067207 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124692113 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.146156156 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120515675 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.123513263 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.153077637 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123882513 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188727631 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123850526 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124246316 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.156161269 seconds)
  done (took 4.197021702 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121807459 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11030858 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.108215996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132691035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122966754 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111330219 seconds)
  done (took 1.710095188 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107808332 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105255005 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104612744 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128863873 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108312517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103581328 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102003335 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130743093 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105054142 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104056389 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129040152 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104230433 seconds)
  done (took 2.342657331 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207124523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147070448 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251747027 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388761937 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190688634 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160426266 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.305173025 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186923281 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178144372 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165127633 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182660239 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189625021 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154384646 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214620029 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142589571 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185608868 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173554682 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237422231 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168582331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212953267 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184694507 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179043578 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217413472 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173878466 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140923228 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161630679 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.145491057 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128916394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192849105 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163015143 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203088536 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175921044 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141952618 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21361187 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232579366 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204908459 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296265398 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161123492 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.175160542 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215556461 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257540641 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142499127 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219251135 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151260436 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159142025 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217380157 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149436042 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213086245 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133750807 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144899292 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211116861 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207004047 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169952338 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164558286 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325366375 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135612427 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141946682 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203923557 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21580789 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202972878 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208072129 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123002443 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199367391 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218280271 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244291331 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1425198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192520641 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126464336 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164665074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233226376 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212553217 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159398971 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219486361 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158503816 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173969539 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191804838 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155868634 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235085621 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171720371 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146715934 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152196798 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162232712 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126690692 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188835815 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149221071 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244268003 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132510985 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.182102626 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207461438 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180147839 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161694514 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188492824 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162763156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17566361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103363703 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142767945 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185371966 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158600755 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156809116 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150747801 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139644015 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153226678 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152352475 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.150667344 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170145309 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161991619 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158588672 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198271163 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132520204 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206557622 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147211458 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.193359295 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167483519 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222183491 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129689048 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160925142 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220764386 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198693563 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136065766 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198872287 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224396133 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152587491 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162960248 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166443931 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221670647 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142482294 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227584457 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138073843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163248553 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141847787 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201481627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159096209 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187052488 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128099181 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193432838 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187204532 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15537716 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139839081 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213090366 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134798706 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15130702 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137830236 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136705443 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.169945215 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151641211 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.166449798 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155972837 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19616021 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166592903 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183788455 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135125424 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202255887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131221715 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196021714 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148051788 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118437268 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201343411 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225550819 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129586869 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207913241 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161289155 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207218599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201338661 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129427282 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208627298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128421428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119608716 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189964869 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167774408 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190863797 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216119592 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175726676 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191036723 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.189440431 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149320874 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196312674 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182507915 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183908233 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140382796 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200729785 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167707849 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148943033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122786843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127136977 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165526216 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130329003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136195392 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211410892 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193760533 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203532795 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169872091 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137737767 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219065986 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123195904 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187021408 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203052637 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139018726 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216319966 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190612088 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207770346 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139286288 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19201527 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120496817 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15348537 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135010954 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158094964 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165318788 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135403322 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169599011 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190682418 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196421067 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147514498 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217969478 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193272971 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229796261 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12042076 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160423543 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193586559 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168907233 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.212662378 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133966686 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.18586756 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192328438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171058554 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191802393 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198580908 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176884155 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222330507 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194288045 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130836261 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143441634 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187706271 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137749709 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1905808 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142882206 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159985009 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148413426 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165482566 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1401123 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217600366 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143577406 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20272124 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153617929 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197140782 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125003256 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171286167 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175006822 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172922269 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106439304 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191444038 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190472964 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178273927 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151855275 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197031829 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129887956 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341253731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180636239 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200339652 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135596224 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167990636 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171703958 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184311357 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158940532 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212587787 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140223767 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236138828 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196985734 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138927164 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130358617 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175287514 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149321433 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167755411 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151772722 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194976261 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143419215 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215662481 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136061018 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200276167 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176734346 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174361628 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14935768 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167184249 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226471258 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198625607 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19967211 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165164369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191237307 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182131261 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12213236 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155553929 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132092775 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214090842 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129871334 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207147641 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.16367221 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208781019 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203064021 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160273175 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168842002 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127565942 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195339226 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148788334 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210193768 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134793607 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165654655 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185285433 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157582329 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130470712 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187793713 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285868685 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174804561 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167419265 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107227672 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30930742 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155804799 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133474795 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157472678 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197926915 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130967004 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211866537 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173918415 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167906268 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159270742 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161609378 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176151171 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208613888 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196251912 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175616117 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174263362 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161357809 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185829776 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170018269 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175578542 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146987128 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186187294 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195177683 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203986624 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132022026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199008617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170427259 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199702699 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172237126 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168330554 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181566874 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156663428 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166072375 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166560007 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124632958 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159527828 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191771314 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157654964 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173127672 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199894483 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131335556 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125537682 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177101153 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16611428 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169289614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129356464 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215208513 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128084095 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212290683 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240987628 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130007384 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166538775 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170585938 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129995651 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167354242 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144753184 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130462679 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.201174395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177345807 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.159851053 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171783367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194126502 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162132768 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182321928 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141585254 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.294489963 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126886666 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221433256 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150086893 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225218584 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147172765 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205103945 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168682973 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17903834 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164535868 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176651374 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220115771 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195445106 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195638426 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132373328 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142412943 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166771417 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13402675 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177948955 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168335653 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140555862 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164652572 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165691671 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175187012 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145037717 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170945551 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199941068 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179036874 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216845033 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185595738 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166154998 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176962169 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202496211 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128448247 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193190629 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171327653 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173026542 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152865669 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.161776089 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138209335 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242849667 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126006946 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15899934 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20324498 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167771195 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201977989 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133391404 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209870333 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139500142 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206891463 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126568889 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179643515 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170008142 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164212921 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128214069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201076896 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161096952 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.195130819 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142531114 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176125819 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222049327 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123117332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163261195 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285759173 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190087091 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222770857 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134329372 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136514078 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176416149 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158406946 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194145429 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171373329 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.161757372 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129483295 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145222448 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188100806 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138538916 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197859378 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178956556 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187560863 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183722246 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.165079232 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254344564 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172015449 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172210098 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146841089 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130182057 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139742491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16362814 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141714041 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206895654 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247897375 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162371626 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175784994 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136444586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125059758 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15895059 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16021814 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17801286 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170182465 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175743717 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105667627 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140632199 seconds)
  done (took 85.067368206 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17245971 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167590445 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.187956303 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.238350282 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217149402 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.313518081 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.244253268 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266992961 seconds)
  done (took 2.905060483 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119190506 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161161975 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14270858 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144822047 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110461673 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.512425707 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160409574 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121081459 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160251453 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153204608 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138072726 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574744456 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116312068 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14591227 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122149332 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13612164 seconds)
  done (took 4.106469825 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.677177105 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547707428 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.179226702 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.31018756 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238436606 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.213019826 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816410593 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200194242 seconds)
  done (took 13.276646004 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171055482 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.169401361 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.461881291 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.337718295 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.215642436 seconds)
  done (took 2.457465437 seconds)
done (took 128.295990018 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124001384 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126082653 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12406019 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15514836 seconds)
  done (took 1.61855736 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197279556 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093737549 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094062939 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122496653 seconds)
  done (took 1.606603326 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372292873 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092520704 seconds)
  done (took 1.586730478 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145560759 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13485409 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165655912 seconds)
  done (took 1.559053285 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136371532 seconds)
  done (took 1.238920466 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117117687 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116125312 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.277915089 seconds)
  done (took 1.618155912 seconds)
done (took 10.334376948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142951349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933922324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434746765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134415906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715581709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429091856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427723525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177081666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171530541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13723896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132825341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701312995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.444021129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.884013113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.399887932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.915396085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697878969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111974365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146339978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113436562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.408716849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108900231 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141117037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11279514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.694546702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.45073539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111184321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.896640697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140250726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114592505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399510022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139884758 seconds)
  done (took 21.066113506 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151704557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169133729 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147720111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112657971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114123242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142163819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122472209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122403345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203928097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110062599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162827619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111914511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116434988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140488535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136636649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110987717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141410301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114654524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119999059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113179127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162713499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110218066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112709863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143969564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111678587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132330794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141967634 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124030088 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11024286 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143780434 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115743909 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111011463 seconds)
  done (took 5.29322402 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16074167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177789368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149158144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150582347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190064393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114628264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20026555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179335864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174841018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141752663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133558814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110841959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.182956855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11246947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165246852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112025349 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114644188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142134764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119905541 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114567222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161986032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111458936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113714041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140861069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112718524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134667124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111357387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.152855681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111674467 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144006721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118144354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112626892 seconds)
  done (took 5.589235684 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126525447 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129292559 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136153068 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166712261 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123394742 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125552139 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157119142 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123291516 seconds)
  done (took 2.206897539 seconds)
done (took 35.267607285 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135391309 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129725086 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132954267 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157896824 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275409603 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119526862 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130091752 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.149317801 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.1271624 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134815468 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11081465 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152445293 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132762204 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123432456 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.274880136 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127340635 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.280734792 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.276883813 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.153057731 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128094641 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.1217101 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.280074373 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125835485 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.152793802 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.27183324 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116694727 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.269788288 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124359459 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122663853 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145069704 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.279798639 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123724392 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119675344 seconds)
  done (took 6.612433536 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.227384781 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153338703 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122876031 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121910056 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122345656 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151111395 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.229908426 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153414621 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12046029 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120081261 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151245769 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.212707147 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157610965 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116572715 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122325681 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112111603 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.263991322 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120763471 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144693191 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095461301 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116889375 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120254328 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.276150619 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116361096 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.152001591 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120466925 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121204869 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156266101 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122834614 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122978418 seconds)
  done (took 5.573252716 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125546901 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133362001 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139441825 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217409281 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150323305 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165363696 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138077894 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132131747 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172013494 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115856563 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129593854 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181479502 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130647131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125011707 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143299368 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131581118 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131004508 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.113667876 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.152591122 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133573829 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.132555195 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.160607784 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136459462 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121878068 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143533546 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123271542 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124167954 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155217853 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124170329 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128889225 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145376796 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116783147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116657013 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.17807935 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115924239 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127936101 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164880743 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128590025 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127687815 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177137051 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117086118 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116189147 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171580618 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173000351 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115600175 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124546913 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.147620448 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130489987 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11209994 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163970432 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158244565 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112939153 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.167060839 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112866239 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110737545 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154287357 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11613041 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117351655 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.159146495 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116799979 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137142858 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120749852 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156084443 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117334404 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125538939 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.143565742 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113494251 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118116627 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171509659 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122672234 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150993573 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.143518251 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127441625 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127776864 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12417445 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157654685 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113608442 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124414913 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156055669 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119018627 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126404551 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147062556 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11645594 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130406178 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165099696 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129707626 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126107587 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154304259 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117348442 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117437001 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131058495 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.14679709 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118509902 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125860977 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.146244086 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119170601 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124858545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153424119 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113385229 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140343546 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116491699 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.1444514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139967729 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116775953 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148311527 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125672057 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155272468 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.144915286 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124621085 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125836393 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144854733 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123553211 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11542173 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113029876 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.16103186 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130687429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121344341 seconds)
  done (took 17.018431394 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.374437211 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.366456447 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211336861 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.409228925 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126692857 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283502532 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.394229951 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.368201082 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115149629 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.149245725 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.203924535 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329500351 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113539788 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.174565006 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.372133286 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.444534462 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.143111914 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.183847611 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.150663153 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126601015 seconds)
  done (took 6.184612233 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123576608 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150195846 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167437423 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.133965709 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126218704 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.130423499 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.145634301 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136996681 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.12488711 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.154561345 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117905077 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.121273592 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.157255263 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131720451 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128575149 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178572918 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124053275 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119173535 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.167326516 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119041325 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.103216477 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.169028966 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12491386 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.136829132 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.16195146 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125612691 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113458841 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118786684 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.151775655 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.125281435 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118342563 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.153549973 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122821345 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105959144 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125644958 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159847212 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121874856 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117191649 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.149800125 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11919756 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128615377 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.15580857 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123749536 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101450541 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133542121 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112023044 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1594348 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127229726 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107608936 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166059874 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127449656 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128854095 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151342081 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136749862 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121767579 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162104482 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126516228 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12976273 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148872144 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11498208 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113260631 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116193198 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.153211801 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130280534 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127187682 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151971351 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124392984 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115420543 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118184442 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147473433 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119434671 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127629079 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165854471 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124154476 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121641516 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155613294 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123682138 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096380902 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121779941 seconds)
  done (took 11.660434403 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140509767 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126145301 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131913982 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180181014 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127151225 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120972507 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155179649 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135503404 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128589816 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164323829 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13008861 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127938686 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167027664 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127617485 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124561092 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161262127 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129544825 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15306723 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.157371339 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143126721 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128807651 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150600716 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128137035 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125795466 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17256999 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127249143 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141443126 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156505865 seconds)
  done (took 5.124355269 seconds)
done (took 53.292828649 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.289379326 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.563865698 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.255122666 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.248404773 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.263677595 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.307218886 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.255770793 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.250068812 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.842946928 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.223979111 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.249331846 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.255560641 seconds)
done (took 29.153476501 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.391557334 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.470043083 seconds)
    (2/2) benchmarking "String"...
    done (took 1.645992482 seconds)
  done (took 4.266406574 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.241982239 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.241078073 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.575731104 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.243034187 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.240526886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.240777476 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.251137592 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.25253323 seconds)
  done (took 16.187234564 seconds)
done (took 26.228175036 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.298848059 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.561961406 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.536475204 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.230251556 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.239598206 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.241901921 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.240905216 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.305483051 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.25099791 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.225295689 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.753632986 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.529000371 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.258520584 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.655509475 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.234538833 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.256989664 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.256189073 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.590318783 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.24461323 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.279338316 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.222082291 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.225483562 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.268516758 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.252649027 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.256285524 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.242358753 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.287609059 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.242226054 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.549504724 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.248145173 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.230756299 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.25943767 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.291339353 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.246415344 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.260734273 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.250621046 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.551382686 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.257137098 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.22535701 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.253954012 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.546552254 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.269710275 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.250651497 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.249986817 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.22421699 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.315389757 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.22801021 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.430659234 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.281141547 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.257216788 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.312935395 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.656078681 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.254055491 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.274154346 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.259339892 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.567983122 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.279083884 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.351772177 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.286963098 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.272708143 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.251096665 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.252671796 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.280375598 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.26338014 seconds)
  done (took 147.573992059 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.244998962 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.243588029 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.244678671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.247244639 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.248998773 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.246324969 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.245283147 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.244419699 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.246173693 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.27814389 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.251000494 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.243963356 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.249143135 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.258015073 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.257627035 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.2720362 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.251315129 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.264691201 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.25928793 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.246023953 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.251443637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.25013516 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.24747337 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.246259877 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.257417581 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.338590543 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.254448977 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.266121412 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.261250051 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.248288277 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.253652367 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.257135632 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.25016617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.20827879 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.25571066 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.288831911 seconds)
  done (took 82.32489879 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.24781189 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.247134918 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.246504531 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.283617631 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.248212291 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.882537926 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866907517 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.309981038 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.391278948 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.826383299 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578422996 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.253377821 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343657947 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.26176541 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.254802374 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345022436 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.276246721 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247817198 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248120379 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884077647 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.265675894 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.303309031 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.433619247 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.265940732 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282797135 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.247211954 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.643985523 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.248684696 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.249523002 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285635485 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.592390345 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.302415552 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.249995059 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649755811 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.801728208 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368397126 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253252735 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286451091 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.248830246 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.539507922 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249234766 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.250679224 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.252107059 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944246472 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.254826539 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884700701 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253236603 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.300643679 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.25624746 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.251408856 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.339851737 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.07577912 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.254647536 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.250703459 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.252947459 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.250262481 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.249694322 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.286608723 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.339094309 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.213934817 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.256241314 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.254794692 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289129924 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.251380291 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.352652248 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251659516 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.316624551 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307255203 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.363824199 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.890837026 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257009569 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348870691 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372344137 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.251769376 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.250447491 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25150817 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.253599847 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.367412853 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.252887466 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.99372071 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.43975655 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.270178212 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.826150379 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.357124603 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.251004684 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.648519061 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.256375829 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.251633396 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.071352788 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358083105 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.252364494 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.252102799 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252970088 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.997701524 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870243066 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.577977619 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.257480997 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.92428269 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.259062971 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.164413227 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.865295161 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.254063523 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.956608309 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.260724426 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.253959809 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368713997 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.440063084 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.272864308 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.254437732 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.841404553 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.258384743 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.312054836 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.258387117 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.657030618 seconds)
  done (took 385.25540246 seconds)
done (took 616.295813401 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.230656287 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.232530757 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.231106344 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.233426471 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.231348484 seconds)
  done (took 12.311583896 seconds)
done (took 13.46148599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.55062882 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538273407 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533784219 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.350329116 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.552064896 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.561306365 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.463062587 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.359076947 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.529362638 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.563683273 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546794882 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324403334 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560504237 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.529284625 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.306290486 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438983338 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.478096691 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.476605649 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.372711432 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441339364 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.578096698 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326651943 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324021442 seconds)
  done (took 34.856793662 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64483186 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.271109266 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38869901 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629741743 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.334765895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.640342602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.692666434 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.269560046 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511869351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307165038 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304629171 seconds)
  done (took 19.151329231 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.654961571 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.272694803 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.40562302 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.674271498 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.335584225 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.645775835 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.691080619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.270641888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499542156 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307337337 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306089692 seconds)
  done (took 19.217238869 seconds)
done (took 74.376666266 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.319933491 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.395225469 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.312966684 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.298065976 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.297734859 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.2971315 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298726395 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.296794655 seconds)
  done (took 11.668795243 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.294449734 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.294112541 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.294713664 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29446021 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.293660318 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.29413021 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.297701545 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.295922896 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.295150452 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.29437221 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.294866896 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.295876731 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.296623265 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.296759944 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.295103938 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.294831696 seconds)
  done (took 21.877423031 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.297470858 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.296291239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.295823302 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.29870237 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.296846687 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.296069564 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.295791385 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.294953709 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.293781283 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.295336648 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.296959551 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.295968712 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.300622935 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.296065652 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.296232084 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.299583488 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.29665609 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.297876986 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.300912358 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.297240732 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.294473201 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.297977138 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.29611461 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.297844649 seconds)
  done (took 32.280845561 seconds)
done (took 66.9804545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.258426019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.277218353 seconds)
  done (took 5.691434994 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.412578722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.39404529 seconds)
  done (took 3.9635388 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.299455678 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.296825385 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.296970516 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.299139437 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.296943487 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.298371811 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.297704617 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.305011133 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.297024992 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.298273893 seconds)
  done (took 14.142561146 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.297257354 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.298755379 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.296589461 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.297945081 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.298982154 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.297623043 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.298396185 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.298280877 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.299497373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.298428871 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.299502332 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.297042173 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.298171856 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.297534903 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.298175487 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.299816617 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.297260567 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.298233735 seconds)
  done (took 24.524272605 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.319980285 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.324302622 seconds)
  done (took 3.801329415 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.481244368 seconds)
    (2/7) benchmarking "second"...
    done (took 1.380277338 seconds)
    (3/7) benchmarking "month"...
    done (took 1.462957266 seconds)
    (4/7) benchmarking "year"...
    done (took 1.453422115 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.379789986 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.329316459 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.381874119 seconds)
  done (took 11.027411377 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.291595041 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.653379735 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.85582615 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.503788855 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.287866774 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.316253485 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.24085507 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.342461076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.329182992 seconds)
  done (took 14.980828358 seconds)
done (took 79.286815106 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.263463182 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.272646752 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.290061746 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.282771224 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.706950933 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.320577428 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.268797311 seconds)
done (took 16.564723001 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.2486657 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.246727185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.260385068 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.277792727 seconds)
  done (took 10.193453511 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.267016846 seconds)
    (2/2) benchmarking "read"...
    done (took 1.679495975 seconds)
  done (took 5.10673152 seconds)
done (took 16.459680523 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303020307 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.301195843 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.303370631 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.307482816 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.301852701 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.303354428 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.302490911 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.302423793 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.302270771 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.301446713 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.303214256 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.302822517 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.30331825 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303040701 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.302936358 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303897444 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30095985 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301974434 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.302578422 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303044612 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301876726 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303549286 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.304027838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.303839755 seconds)
  done (took 32.43104427 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.304766688 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.303786885 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.303554942 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.303194003 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.303204758 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.304977959 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.304205234 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.304589362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.303747565 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.302452219 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302973654 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.303671996 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.302501247 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.30416766 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304164727 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.303343463 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.304609616 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303682193 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303871952 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.305171558 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.304331507 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304961197 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.305222193 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303929221 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.304517914 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303954574 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.304818721 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.304111158 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30352931 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.304198459 seconds)
  done (took 40.283091378 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.312262334 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.310488855 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.305073571 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.304857412 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.306298866 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.305390022 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.305667501 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.305867457 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.306458454 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.305068333 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.305936111 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.306595413 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.305798872 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.30520627 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.305076574 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.306088156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.303410511 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.306160791 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.30698394 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.305749356 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.306081241 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.306164422 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.305824784 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.307240048 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.305750473 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.307395375 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.307543438 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.308122073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.306989876 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.306387984 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.306639063 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.306607216 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.305197679 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.306959705 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.305864035 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.304993254 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.314866436 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.31329815 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.307451248 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.306554416 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.308146169 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.307449502 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.307406061 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.307998664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.307877978 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.307266168 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.308038055 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.306572854 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.306386029 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.308749388 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.306865908 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.306661692 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.308193661 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.308254702 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.307512917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.308593222 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.308733395 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.308075908 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.308411845 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.309636582 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.308739121 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.308624652 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.308706645 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.309976639 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.30859441 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.309002214 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.30863855 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.307687591 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.309478741 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.307630321 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.30936867 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.308349058 seconds)
  done (took 95.298153979 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.310617782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309907426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309589927 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.310121629 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309988931 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.308821045 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.310047039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311145572 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309652645 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310823045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310270601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309628969 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310293439 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31081662 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309485166 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.308406258 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.312809052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310136785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.312466271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.311897135 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312294531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312426601 seconds)
  done (took 29.999850261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312101699 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31241836 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.316975644 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312724405 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.312999299 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309967769 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316125186 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311383033 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311334982 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311282461 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311109046 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31382629 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314055021 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312586678 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311597655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313803313 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311881909 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31543264 seconds)
  done (took 24.802464336 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.312358157 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.311415369 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.310955046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313046583 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.311465166 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.311831903 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312758487 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.312122163 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.310171566 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.310909649 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.312237122 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312252207 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.312511738 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312245922 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312459287 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.313362405 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.314280608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314694697 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313492729 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312442385 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.313185078 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314064449 seconds)
  done (took 30.044708969 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312535484 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311957128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313448798 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.312450976 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.31402457 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.31294622 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.314128423 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.314235142 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.3180373 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.313868754 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314722843 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31380422 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.315732888 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31367683 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.312882106 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314167116 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314976017 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.31501897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314594196 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31399405 seconds)
  done (took 27.451885118 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315611643 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316334291 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.317496869 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3153225 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315661859 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.321059054 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316830303 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.317946018 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317092418 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.317198506 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31566123 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314978112 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317734259 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315904348 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315902671 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315703833 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316834145 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315499478 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.315415389 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317743409 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.31798052 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318874418 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318154984 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31592097 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31731598 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.318095758 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317604704 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317179929 seconds)
  done (took 38.045373718 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318621663 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31880297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.315966088 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.317046532 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.316159408 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.316566373 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.316239027 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.316480818 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317733002 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318246894 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.320200494 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.317973885 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318355567 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.318755269 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318513897 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.317451472 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319262247 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.317969694 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319444742 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317212126 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.318032133 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31656798 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.318999015 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.317729999 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316492062 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.319772787 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320014438 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.318707847 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319526806 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319130317 seconds)
  done (took 40.717254339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.345912004 seconds)
    (2/2) benchmarking "in"...
    done (took 1.344934156 seconds)
  done (took 3.866222373 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.318592608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319086037 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.319007955 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.31919031 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.318056926 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.31955579 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318777828 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318810583 seconds)
  done (took 11.726808206 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.312831541 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.32000466 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.318814635 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.318933854 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.321192241 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.311101014 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328146058 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.324555867 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.313593719 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.314246386 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.321335625 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.31868459 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.322309282 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316993034 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.314010462 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318766025 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.330061596 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.323305778 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.32332708 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.32280362 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.322223169 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318269174 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323301169 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.325151473 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.316196983 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.336819159 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.330292071 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.326813487 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314196449 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.3274459 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.316666596 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.32448861 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.322664914 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.323712394 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.323344959 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.32261393 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.334401184 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323259054 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.334104777 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329316947 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32370101 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.322099549 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.321743708 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.321801886 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323726851 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.327398268 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.323156737 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.322729727 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.314950385 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.322882889 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.331364205 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.316682101 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.325075207 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329261773 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.327220731 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.336928809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.331882567 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.323869537 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.324406127 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.34031255 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.34818925 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.33469284 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325906039 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.331481958 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333135101 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.346011109 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340925546 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.331563044 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.327272972 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.326309512 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.334700872 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345583332 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.343553674 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.329661894 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326875226 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.327033696 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320952057 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.330360167 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.340035001 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.333501628 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.330704973 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327631258 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.335415628 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340635775 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.323775112 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.331243589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.326035176 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.329679354 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.318357314 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342505496 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.33815599 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.326544668 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.319506901 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.322032921 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.323747035 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.329706662 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.317979263 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322077619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.333002053 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.326646915 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.325200222 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327125817 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.339763178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.333851393 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329795779 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.339082575 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.335256739 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322513777 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.342799458 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.337417139 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328227494 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.320972101 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.332241062 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.331646363 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325546495 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.335544276 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.331317062 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.330248211 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.333640332 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.329537157 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337924187 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.35711301 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.33488211 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.328808224 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.331685685 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.340421292 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330224325 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.336376295 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.335354168 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.328301734 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.330179697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.330349132 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.334713514 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.323427232 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33406846 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.325601112 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.333143412 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.33114197 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.329577386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.332863348 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.328583614 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.327158782 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.337804549 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.340048689 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.337065 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.332880529 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.347487135 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.32978684 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.335941114 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.333928497 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.33567858 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331447316 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.327664782 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.334593457 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.324112515 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334031304 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.32513576 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.336605933 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333414187 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.332713957 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332897571 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.322928914 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33085164 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.333055272 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.337759083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.331064167 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.336395851 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.332528599 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.331048802 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.323223784 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.340119508 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.324503207 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.330881462 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.339831902 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.332848472 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.331789259 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.337998987 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340277001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33349157 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330860161 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.328146757 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.339413203 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.339487585 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.344456163 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.340729782 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33374712 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.333637399 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.327644738 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.330165449 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335449152 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.331116967 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.343900017 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34949612 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348488589 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.330029468 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.337028053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.32633675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.337436136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.33933107 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.340674956 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.334063571 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.333136497 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327622458 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337802594 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.332472796 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.338722263 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.325449626 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.335781317 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.336795901 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.335781946 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335859679 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.330451519 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333084117 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.338266619 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.33469312 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33433232 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.32771367 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.340010835 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.326849734 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.329410046 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.339488423 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.33529606 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.348051034 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.344296994 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340834753 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.349869002 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.337509888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.332115907 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.339694314 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342019819 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.3360046 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350908869 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.338562886 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.333771145 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.35150252 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.339341267 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.329106027 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.346798989 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.351731949 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.337682327 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.332156764 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.34841777 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.339337565 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.337561781 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.337338149 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331164738 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343057382 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.35064452 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.3469613 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.329398242 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.340761978 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.333616796 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.340962423 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.342426087 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.343767808 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.343203141 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349449466 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.347981332 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.337146016 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332282198 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.342548378 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.337502206 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.338381089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333304675 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.346228945 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.349247555 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.337754193 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.344361249 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.336241361 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.341482391 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.332179532 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.341905839 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.333717856 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359728496 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.361983671 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349300634 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.345227141 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.34328674 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353056419 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.343644817 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.335422892 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334174549 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337375654 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.333733501 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.333411952 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.343617369 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334825679 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.344340785 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346666081 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.342760906 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.34610323 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.33960834 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.333567208 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.34410116 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.341204352 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.341928677 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.332896104 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.343270677 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.342254137 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349592081 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.34242001 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.336246529 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358893893 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347191777 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.340605114 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.338766333 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.338127216 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.33780846 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.344485916 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.347940335 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.339836931 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.349334088 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.339333165 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.347596297 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.337315939 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356671124 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.352545669 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.339056174 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.350361104 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.342407578 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.332772555 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.337031267 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.344507217 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356677619 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.356240134 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.336947596 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.348851694 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.343178976 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.343650544 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.343536843 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.343515331 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.342435306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.341882861 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356948045 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.34927165 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.340428276 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352326717 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.353579181 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.345467884 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.343433687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.3361762 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356253124 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.355526635 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.345670842 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.342047686 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.339262346 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.345868075 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.34287803 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.344402176 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.343446397 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.343959382 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356985969 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.350638793 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347602653 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.34535963 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.359526934 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357558248 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358177321 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.359448153 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.343306785 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.350042767 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.34512196 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.341735985 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.341323083 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.342511782 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.350109536 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.336558092 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.350088863 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.345976538 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.348376215 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.353873911 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.352839352 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.335915412 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356960127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370455279 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.339468657 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349452887 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.346077878 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.339654086 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.351405929 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.347967922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.337448428 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.342588747 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349126729 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353458355 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.34168961 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.349544659 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340613495 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.350728609 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.345989598 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.347771948 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.348108722 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.347441947 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.340159248 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.350714501 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35648367 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.358640998 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.346479186 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350493873 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.344249852 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.36516131 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.361021398 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.350053523 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353812311 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.348957923 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.339919273 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.350674342 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.354712635 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34503396 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.351257307 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.341648194 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349132805 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.346251572 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.357789981 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.351846 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.352344177 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.341435038 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.342148887 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.348640843 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.347814412 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.34874309 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.351362488 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.357361226 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.343280385 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.341061737 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.351420037 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.347988247 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35614487 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344342322 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.350299644 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348849878 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.352672221 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.350510006 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.34958817 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.339393787 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.343063388 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.363833278 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360431519 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.352515847 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.348681141 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.353358133 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.343885909 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353725079 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.353144279 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.34632756 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.346282443 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.354263346 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.346434208 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.3460813 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.346059858 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35316139 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.364676891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.354876553 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.34453669 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367943438 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.367541291 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359688128 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.345609103 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.350593606 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.346456558 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.353691346 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.351264291 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.346284119 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369046021 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.361040115 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.356160794 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359275017 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.353486013 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.346703027 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355360133 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350890431 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.356053448 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.359024915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.357046172 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360435849 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352387898 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.352679695 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.344819337 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.347673821 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.352815466 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.352738711 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.354438718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361211576 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.356058197 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.356201232 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357776433 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353758464 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.353379714 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.352963879 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.34397335 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356323873 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.346620894 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.364823068 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.357190813 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.3479293 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.358067321 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354598933 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352802685 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.356315213 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.361702769 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.354727651 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.347035401 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.355956927 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.36900712 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.365445983 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.354679041 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348990399 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.355107867 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.359873627 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35610988 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.355652839 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.353608794 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.37929069 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.370826556 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350509168 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.353781999 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368790961 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.365617514 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.354922997 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.355509873 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.360326408 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.358939709 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.363788928 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.354626521 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369603565 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364280192 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.35076346 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.359426992 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.354629594 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.356961943 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.36802152 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369097565 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.356616648 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.360044808 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.380884189 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368733272 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365866149 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.392025689 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.366594174 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.362098071 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.364027855 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34854558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.359780598 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.360585798 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.364973646 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.35772901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359130655 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.357443429 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.349463643 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370467083 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.3732138 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.368220568 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.358366731 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.348911688 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.351867021 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.359838286 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.357839849 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.360267392 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.35786534 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.358814343 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.359599569 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.352080806 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379577389 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.384890006 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.36524058 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.359941023 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.358208121 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.367959222 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.366341768 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363711335 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.366673933 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.358634502 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.36002609 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.363253805 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369481902 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.359887106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.355109892 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.354852108 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35461339 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.363565646 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.3796209 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384565803 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.37280907 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.363598541 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362370871 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.360400579 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353828165 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363386643 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359554312 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.35372934 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.358069417 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.367249215 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.361979271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.361475995 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.360470002 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.36831185 seconds)
  done (took 801.824938583 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.361021189 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360204046 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362081589 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.361360338 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362557488 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361718274 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36236703 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.360405608 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.360200833 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.362925062 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.361572934 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362929951 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363729075 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362607913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36186571 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.363090237 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362383303 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363054129 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.361775195 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361414465 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.36102049 seconds)
  done (took 29.812166548 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.36277197 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.361994637 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.36203696 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.363487983 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.362288319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.364964917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.362445951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362473957 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.36542098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364509691 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363384897 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364513393 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.363516199 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.364230046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364423088 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362901735 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.366576573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.362545125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.362673494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362369265 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362839436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.362104218 seconds)
  done (took 31.207567458 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.364055024 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.364960656 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.358859741 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.367942669 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.365593208 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.36503371 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.366621202 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.365018833 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.363902281 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.356329111 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.355901823 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.357925822 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.364302612 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.372020213 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.368114898 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.371782263 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.365185894 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.365226891 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.36477809 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.365678694 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.379032837 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.379472697 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.364770129 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.356071677 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.367869964 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.365602498 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.36430771 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.366938422 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.356245092 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.368362276 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.366523425 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.359377544 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.378121268 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.370872232 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.360865303 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.371133159 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.367289793 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.366818295 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.368942727 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.377898055 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.388732813 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.365682047 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.379340558 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.379948246 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.368028923 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.367165406 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.373671471 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.366908739 seconds)
  done (took 66.850662995 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.367550091 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.368911717 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.366482638 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36860714 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.368380155 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.369036383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.366791545 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.369536168 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.367137679 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.365974333 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.367183076 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.366480402 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.366830936 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.366922917 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.367495127 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.367176441 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.369174529 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.368131939 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.36873453 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.368969337 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.368745285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.368544282 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.369111952 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.369311489 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.368061749 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.368394752 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.367574955 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.367747323 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.368171399 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.368792359 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.367843634 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.368699889 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.369039876 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.368124745 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.369456898 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.368700517 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.370417076 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.369335304 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.372187203 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.369142892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.369293121 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.370059559 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.370207343 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.368079628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.370340041 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.368694161 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.368728174 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.368384835 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.370632606 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.370223616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.371349807 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.37126446 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.371069464 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.370136384 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.371593832 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.371027419 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.370496206 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.371624422 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.370332429 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.370563254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.371356232 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.371285972 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.370897305 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.371513095 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.374228454 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.371818791 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.370638543 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.371209565 seconds)
  done (took 94.330159375 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373656594 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.374018931 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372808092 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374230899 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.373585914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.372322836 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.372309914 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.37338093 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.372335546 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.371529158 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.373322544 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.372866759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.37252286 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.373405514 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.373004137 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37370695 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.373109876 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.373377439 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.373307597 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373129782 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.374886708 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.373192429 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.372761648 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.374144505 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.374176632 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.371796581 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.373546734 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.372611769 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373104289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.37374187 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.374648131 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.373652613 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.376568487 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.374800525 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.376173395 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.3762593 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.374273153 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37395328 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.375812385 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.375027858 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.373360817 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.374314919 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.374694784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.374021235 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373496867 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.374220563 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.374417096 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.376418259 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.376463516 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.374957108 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.374947261 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.375998652 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.374853464 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.377069458 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.374738994 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.374478696 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377233096 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.376339338 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376701465 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.375570874 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.375758677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.376022258 seconds)
  done (took 86.426820759 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377359928 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.376521693 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.37633368 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.376884309 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.376927401 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.377022735 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377439338 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.381971269 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.376970284 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.376358894 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37890405 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378611973 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38276271 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37802356 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.377035725 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377129452 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375694214 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.376569115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377858245 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.378526627 seconds)
  done (took 28.778764745 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.377715909 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.377674563 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.378252221 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.37705989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.378469916 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.379155268 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.378896507 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377607097 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.377338557 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376586925 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.378013783 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.37670349 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37727109 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.377641807 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.379592195 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.377963147 seconds)
  done (took 23.272719667 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.37850756 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.379525427 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.379979116 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.379798367 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.379207649 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.378155001 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.378875903 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.378222328 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.37616257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.379385815 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.379671675 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.37787829 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.378852017 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.378095845 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.378266817 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.379523612 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.379461452 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.380372183 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.380744088 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.380197999 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.382026443 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.380947744 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.380035129 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.38016643 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.380437415 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.380825523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.38188278 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.379435611 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.37942737 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.380581427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.379650932 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.380925745 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.381375104 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.380370158 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.38179031 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.386675149 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.380988392 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.382782825 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.381582253 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.381492856 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.379947129 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.381428741 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.381103142 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.382662418 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.380840469 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.380994958 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.382005701 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.38329546 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.381282704 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.383181688 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.382631548 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.383019028 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.383554291 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.384102755 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.387959111 seconds)
  done (took 77.170197623 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381520862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.38135918 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.381447948 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.380857999 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.381166349 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.382291281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.380935452 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.384889308 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383722819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.383122672 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.38258231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.38383191 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3842416 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.383562812 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.385154844 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383198101 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.3842636 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.382518336 seconds)
  done (took 26.120899313 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.382642444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.382620164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.38326899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.383780298 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.383293713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.383269898 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383604228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.38420647 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383628532 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.384618952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385615378 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.386148616 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386246463 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.384758355 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384660018 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385236069 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.385859752 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38389365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.383352869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383775409 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.383830305 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384565594 seconds)
  done (took 31.683531545 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.375804354 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.375168658 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.375135903 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.398628345 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.393132744 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.374851998 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.375845001 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.375272931 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.406446239 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.432510028 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.426990681 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.39876698 seconds)
  done (took 17.939391805 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385399568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385069009 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.385329448 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386179626 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385704914 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386293048 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385893346 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38718953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385274901 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386420717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387783321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386750788 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385272317 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387112216 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38534181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384758425 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385811701 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38614226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385715809 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386868888 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388416921 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388947295 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393958129 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387270336 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387438654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387024496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386232076 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387515619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389075943 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387988375 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386315257 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387663613 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387750286 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386994184 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387676463 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389095848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388277238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387628553 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387989981 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387714946 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.389801944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388519588 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387483981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389317245 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389333378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388829753 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388162978 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388929975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387811886 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387129327 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389879886 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388648236 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389733638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389814235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388644603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392152591 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389082299 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390505664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389312426 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392787868 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389770165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391257435 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389091518 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389083836 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389839029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389706471 seconds)
  done (took 92.840521412 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390000572 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391279506 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390087315 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392537766 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389760877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391187315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391752401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390683061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390927226 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389712546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391276921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39065715 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390433867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390606655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39436635 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39160315 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393016389 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391814001 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393767392 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392093366 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39302889 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392246947 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391760014 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392134921 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393314262 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391737524 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393964135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39199943 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390943709 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391660141 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390574458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390765124 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391295639 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393543201 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392537767 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392182274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392758325 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392551175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391648826 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392033931 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392938166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39240416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395679716 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392746592 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392634776 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392450744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393235551 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393204401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391122712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393371811 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394599411 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393348414 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394323188 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39515025 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393104807 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39391797 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393417487 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395999938 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393716826 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393846312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39401016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392402414 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393355887 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394190421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393733589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393278433 seconds)
  done (took 93.141080373 seconds)
done (took 1877.226020969 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.61285007 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.563002879 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.384810876 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.4229908 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.38467266 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.387913365 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.396212046 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.384471168 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.384625936 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.384290279 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.385239073 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.674856348 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.404048518 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.385070686 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.386251213 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.538203985 seconds)
  done (took 28.317951467 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.426779481 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.402493991 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.535330016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.394014211 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.423541639 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.655135894 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.468821769 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.392828725 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.599188626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.415050685 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.368182085 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.421951842 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390744521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.363398935 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.414873707 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.650539569 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.747139284 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.373954746 seconds)
  done (took 30.685540949 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.979884662 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.384240552 seconds)
  done (took 5.605481256 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.415059346 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.389377029 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.393531607 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.389894693 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.364133526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.359873626 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.390622788 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.3630403 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.364547126 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.550781562 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.39314762 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.410793719 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.409135897 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.390692001 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.398761882 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.449973283 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.601394353 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.401776232 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.400789374 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.405586143 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.39196835 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.545814171 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.445793211 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.401350968 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.548700991 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.363021164 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.39907973 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.40500234 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.583253359 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.400613583 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.392506967 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.393757614 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.3954271 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.365301271 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.030144057 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.365252453 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.445853065 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.408669776 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.400883799 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.603135217 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.393261391 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.4061286 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.364254072 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.018750778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.548619416 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.554228789 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.384127898 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.394062821 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.396347049 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.478873955 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.393469169 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.39659771 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.500691254 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.30060778 seconds)
  done (took 89.308645536 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.391767556 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.364785424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.630307178 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.392842763 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.373109807 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.366210256 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.366470206 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763710455 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.424309614 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.365189386 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.80106325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.126951689 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.368038073 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.425056218 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.390847468 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.431444809 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.366623507 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.364474491 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.384994838 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.366571336 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.055206182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367468307 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.384419835 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.571295274 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.441291871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060345732 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.366141184 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.370002778 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.387222495 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.366863971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.098639499 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.378760176 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.409215097 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.370721584 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.764477941 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902481314 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863718284 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.377484245 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425263716 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.368648765 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.367666447 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059000798 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.8797331 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.365736104 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.377061496 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061984768 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.367284206 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.381370704 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.37622815 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.725735794 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.367313888 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.370303654 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.369729279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.374197515 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.368327844 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.407104213 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.430467869 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.062239968 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.369331882 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.368938676 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.412364729 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.371656968 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386070742 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.371936753 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.373160232 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890781851 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604004392 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.376487122 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.88270352 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.090573599 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.369011101 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167542605 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.370246385 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.400403641 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.488092724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369249679 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.372398683 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057069478 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.397692542 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.369823007 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865314577 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.37408081 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.784208034 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.38929301 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.371038594 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.083074112 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.390573201 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.418318 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.369446142 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.374743953 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.392622624 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.373918149 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.770871701 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.394491646 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.371037965 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.370418123 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.374112379 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.372019166 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.371812994 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.374998176 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168357094 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.375017172 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.369910587 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.372790492 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.372248873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.372553241 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.37429655 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.371958194 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.739931244 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.372634327 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.374577731 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373184118 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.378118335 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.37436269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.581751073 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.379862342 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.818566034 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.374707356 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.373619788 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.39632924 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.371706555 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.417989187 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.374351026 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.402778873 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.373159883 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.789798689 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.393641608 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.393787088 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.372850067 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.372756829 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.400153749 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.37331535 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.423082014 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.373665255 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.299769685 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.404054035 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.407573198 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.374129629 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.375212449 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.373663439 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.375214334 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.373682924 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771339289 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.774629022 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.606384443 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.377581535 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.374882658 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.318168672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.384316539 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644104044 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39450303 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.379433656 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.764408518 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.587696802 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.376481046 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.38249012 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.377558627 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.743733404 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.376623662 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794592176 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.123650641 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.375226696 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.379962563 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.295560909 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.239699057 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.37768029 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.378689497 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.789143438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.39900458 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.376410994 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.375393268 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.377641528 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.374421776 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.377513928 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.382255383 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.378322411 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.377126519 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.452155054 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.660516955 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.395959081 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.387350375 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062665371 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397091697 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377522099 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.378770513 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.387272362 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.377748804 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.438264182 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.384532349 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.42205814 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.379140322 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.386919174 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098459308 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.39205188 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.382762151 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.6593182 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.26348581 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.384926253 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.379662456 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.376564715 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.430929171 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.106868757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.391789906 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.828063401 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.385459981 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.452503702 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.379378621 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.393854693 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.099694242 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.38030758 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.378926817 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.253698882 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.377492976 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.165617429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.379870163 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.378449243 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.179799122 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.379240474 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.383543466 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.382405193 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.377808938 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.769700393 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.379597992 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.388221016 seconds)
  done (took 513.995070476 seconds)
done (took 669.151335812 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.379473186 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.386932375 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.386570387 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.384755911 seconds)
  done (took 10.796434449 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.420638198 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.406941274 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.418021733 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.407654703 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.420101816 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.409968893 seconds)
  done (took 9.741651994 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.380954659 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.387334451 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.386797372 seconds)
  done (took 8.414675497 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.701275979 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.411680563 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.885522943 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.388359791 seconds)
  done (took 9.647317163 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.419164966 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.41890732 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.420104819 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.421154045 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.421646915 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.420659639 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.427446535 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.42122661 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.422891626 seconds)
  done (took 14.048556943 seconds)
done (took 53.90845526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.443392696 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.448638475 seconds)
    (3/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.360873405 seconds)
    (4/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.904332248 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.359337594 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.397739615 seconds)
    (7/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.554556483 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.626518638 seconds)
    (9/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.753349571 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.521119481 seconds)
    (11/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.360427957 seconds)
    (12/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.749718732 seconds)
    (13/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.74315414 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.810792071 seconds)
    (15/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.361336662 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.452344185 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.289051631 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.875957131 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.424149747 seconds)
    (20/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.55351948 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.61753202 seconds)
    (22/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.620460116 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.36239364 seconds)
    (24/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.622466935 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.397933843 seconds)
    (26/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.605226336 seconds)
    (27/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.388391708 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.557945741 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.43948389 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.55416216 seconds)
    (31/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.603372748 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.63711796 seconds)
    (33/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.456056528 seconds)
    (34/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.68521416 seconds)
    (35/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.393567716 seconds)
    (36/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.414997536 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.366399387 seconds)
    (38/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.610530641 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.792563077 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.859116861 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.546722597 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.571469878 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.576130736 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.451077124 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.775807245 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.087988493 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.546248794 seconds)
    (48/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.85917916 seconds)
    (49/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.57751527 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.59244971 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.79937351 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.563682854 seconds)
    (53/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.746202083 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.129541194 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.575155542 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.363181659 seconds)
    (57/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.388459314 seconds)
    (58/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.52066628 seconds)
    (59/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.393056477 seconds)
    (60/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.742973251 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.572375719 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.780865639 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.098479492 seconds)
    (64/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.461522097 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.576776628 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.591172942 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.583559194 seconds)
    (68/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.3639995 seconds)
    (69/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.645093695 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.364461919 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.933467866 seconds)
    (72/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.364966453 seconds)
    (73/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.540277713 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.551963975 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.640585929 seconds)
    (76/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.926727624 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.552425068 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.69151992 seconds)
    (79/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.456785042 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.545793428 seconds)
    (81/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.364771665 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.371667514 seconds)
    (83/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.579138101 seconds)
    (84/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.53849676 seconds)
    (85/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.565949064 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.546241599 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.640759973 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.578812152 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.547091359 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.363620262 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.628952607 seconds)
    (92/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.523880377 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.116735585 seconds)
    (94/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.373161489 seconds)
    (95/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.541355713 seconds)
    (96/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.537739332 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.404297921 seconds)
    (98/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.372922912 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.031842388 seconds)
    (100/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.365259367 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.592106441 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.595471114 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.453991391 seconds)
    (104/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.858565045 seconds)
    (105/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.450863759 seconds)
    (106/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.887965222 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.42940237 seconds)
    (108/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.609655529 seconds)
    (109/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.366820459 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.549763765 seconds)
    (111/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.643179346 seconds)
    (112/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.694301139 seconds)
    (113/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.62181825 seconds)
    (114/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.931258926 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.629877724 seconds)
    (116/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.649129054 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.458394604 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.593046294 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.761711528 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.376356379 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.437507242 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372837426 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.463869393 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.548444464 seconds)
    (125/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.989026398 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.42518703 seconds)
    (127/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.373880156 seconds)
    (128/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.371382003 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.462862701 seconds)
    (130/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.834342202 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.062812457 seconds)
    (132/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.719746415 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.367778543 seconds)
    (134/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.814970326 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.60218321 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.604207281 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.550918172 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.743901582 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.984282289 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.761970778 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.369902415 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.532713273 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.369356397 seconds)
    (144/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.88219305 seconds)
    (145/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.478941212 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.526285291 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.397546015 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.80688494 seconds)
    (149/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.478459587 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.68548696 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.458371767 seconds)
    (152/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.526058935 seconds)
    (153/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.696190276 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.75015936 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.541993643 seconds)
    (156/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.478377593 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.42527964 seconds)
    (158/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.554773132 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.648449429 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.776408718 seconds)
    (161/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.605766627 seconds)
    (162/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.369074866 seconds)
    (163/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.370628206 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.54860014 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.370251622 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.380246748 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.504908411 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.588667385 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.373912632 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.647258076 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.595094739 seconds)
    (172/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.454457233 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.462793558 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.370735902 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.463191164 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.046319926 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.613141098 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.689402822 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.293303709 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.371675895 seconds)
    (181/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.465745888 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.633713058 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.63947643 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.613399512 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.687125157 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.741817308 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.524882599 seconds)
    (188/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.813718979 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.747098985 seconds)
    (190/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.536708753 seconds)
    (191/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.046441102 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.378127415 seconds)
  done (took 355.27177144 seconds)
done (took 356.532979866 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.458951798 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.575009434 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.426741697 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.42743529 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.436363102 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.398738415 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.454490477 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.425351506 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.447691847 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.449870406 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.397902205 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.43573027 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.451141028 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.437933064 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.471184569 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.428435977 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.428048078 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.437096435 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.449236456 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.452147721 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428837284 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436942156 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.46150778 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.427618763 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443172697 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.4452393 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.44202716 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.41580993 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.436643933 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.452214349 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.397850942 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.444996463 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.453726833 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.437577642 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434245863 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.438257616 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437509616 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.576879225 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.457096045 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.437447737 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.43733208 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.453412895 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.440972417 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.443498577 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.441406899 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.465771241 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446957187 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.452702889 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.400579641 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.39881559 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461360484 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.448072202 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.437964353 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.415589371 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.404213204 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.453678083 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.440038289 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46040296 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.437189114 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439468105 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.472320607 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459950319 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.448249529 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447507815 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.437613121 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.453259106 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.439564207 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.454919023 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.439193908 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441463891 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442588475 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.439843852 seconds)
done (took 113.229786276 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.607761992 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.401664974 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.647467182 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.437297579 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.660487692 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.605638398 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.437337388 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.437800645 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.439387718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.294428433 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.439670436 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.438649077 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.401503083 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.439903426 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.609493638 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.440620207 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.44072902 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.195251855 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.440846005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.618445055 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.403791083 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.438329273 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.441052595 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.301536878 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.403072625 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.412062037 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.620844034 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.442409471 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.201672294 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.409123814 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.401702549 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.199205499 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.622549487 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.458595329 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.448767821 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.449021555 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.661327184 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.443889059 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.603295992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.611171644 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.649950737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.48171412 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.410253776 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.403700149 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.44310544 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.441708195 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.440230144 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.469818054 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.401431565 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.442462341 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.203989418 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.45273767 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.442717821 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.443254062 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.443653344 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.471145039 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.442299332 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.441806043 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.622459881 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.443876697 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.606365027 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.304126663 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.300544363 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.443032734 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.403922803 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.443467497 seconds)
  done (took 116.180028273 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.559432663 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.566544182 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.611152578 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.433319628 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.524302636 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.611058432 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.434482346 seconds)
  done (took 12.01919008 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.448711181 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.444624278 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.526698821 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.52556872 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.444844697 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.669983453 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442458919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.455709836 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.444575529 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.530519628 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.4454725 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44551203 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.453722362 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.406406289 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.526726897 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.454054458 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.60766638 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.443641192 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.445808786 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.648744438 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.444393872 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.455914401 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.530106307 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.45649129 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.446107986 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.450057022 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.256863041 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443465611 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.446218406 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.445935409 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.445667637 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.554006274 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.447923859 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.410430475 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.446856405 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.60893407 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.445848107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.44510283 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.446404184 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.413598056 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.444760678 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.444319211 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.447019066 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.446699473 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.444893796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.47047575 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.447266723 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.446877149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.44751026 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.446914094 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.530748358 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.447402355 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.446310037 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.447045326 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.532748473 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.456741182 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.446396151 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.446050088 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.446063707 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.448367561 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.649534973 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.532326423 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.452976737 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.533441578 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450764235 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.448238704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.448349612 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.447568786 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.58333696 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.447913173 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.529372625 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.446983586 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.679054368 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.471293731 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.448913231 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.4450149 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.444926062 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449207752 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.410358119 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.454247708 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.449385707 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.443489287 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.454594191 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.449089232 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.447071935 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.656247209 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.608823371 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.449100127 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.46216345 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.454513664 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.449469377 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.532023172 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.449974749 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.450140692 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.53405667 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.612396241 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.533132042 seconds)
  done (took 149.480425692 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.463848999 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.459685132 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.451699549 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.478470622 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.440985827 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.440382049 seconds)
  done (took 10.019042505 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.444594386 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.453628495 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.450477815 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.450908527 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.450149911 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.451653943 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.449788133 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.443365877 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.453855271 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.450883523 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.450556457 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.450276464 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.450482285 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.449876762 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.452230273 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.450276952 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.450372774 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.449712145 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.452678375 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452162527 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.415610603 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.453193454 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452577175 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.443641542 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.454692318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.451757866 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.472850842 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.450717092 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.450962095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.457962217 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.461748593 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.455666325 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.445172951 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.451082012 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.456997918 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.450052133 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456813467 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.455309017 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.452776293 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.454435232 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.452737879 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452960394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.452329238 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.452742559 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.444943732 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.449618279 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.458163011 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.476338577 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.453572692 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.455316769 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.461233443 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.45533374 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.453192896 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.457910325 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.447462767 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.450674628 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.459428396 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.453627797 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.453723341 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.448146165 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.455333112 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.454432648 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.446485968 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.458203798 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.457375411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.454903797 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.44948146 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.457935677 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.455205721 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.454056692 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.456702281 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.454014997 seconds)
  done (took 106.884008577 seconds)
done (took 395.85766955 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.768392824 seconds)
  done (took 4.058153694 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.545712343 seconds)
  done (took 3.836872063 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.607786019 seconds)
  done (took 25.90284016 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.480021587 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.426917697 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.454679537 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.424670205 seconds)
  done (took 11.077585914 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.98401801 seconds)
  done (took 4.272758079 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.42655529 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.45360922 seconds)
  done (took 6.171625526 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.722788003 seconds)
  done (took 4.013682745 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.278493026 seconds)
  done (took 4.575840405 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.441629903 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.438098029 seconds)
  done (took 6.178243965 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.39416451 seconds)
  done (took 3.685418516 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.925190766 seconds)
  done (took 23.21686005 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.44292476 seconds)
  done (took 3.737649599 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.462591088 seconds)
  done (took 3.752897488 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.599068569 seconds)
  done (took 6.890693363 seconds)
done (took 112.662125543 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.418383721 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.42370814 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.424910947 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.425509207 seconds)
  done (took 10.982910746 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.575803948 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.576930278 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.578510647 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.558198288 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.562806974 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.577521415 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.490984852 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.489813963 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.552078096 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.549534127 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.581306953 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.561210403 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.573189719 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.490371785 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.550343587 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.583830458 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.556229531 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.579898742 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.491847601 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.554912744 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.45970343 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.559554326 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.553914852 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.459392427 seconds)
  done (took 38.361932478 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.031654514 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.57749704 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.664822741 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.543584209 seconds)
  done (took 8.110547507 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.623434656 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.629605972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.635419839 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.676212387 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.72636639 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.633671293 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.493016535 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.488103131 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.474261357 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.625977437 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.701884785 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.622583012 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.84614964 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.459882014 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.841785607 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.458244795 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.461600739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.624517266 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.673705853 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.703507338 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.459586097 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.626881952 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.632314207 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.621754764 seconds)
  done (took 40.034950535 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.476669834 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.484529911 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.462070421 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.483592152 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.463024662 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.463116155 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.464316307 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.477085459 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.461953717 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.461194961 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.461994643 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.482763625 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.462943507 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.463022428 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.476473929 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.463311711 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.464474916 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.477552906 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.481221321 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.463428136 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.464078079 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.478101999 seconds)
  done (took 33.631533243 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.423654363 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.423520407 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.861015636 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.7691205 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.424736134 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.430111678 seconds)
  done (took 14.628328156 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.553171042 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.744253721 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.454226058 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.905437905 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.052111235 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461183716 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.454438515 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.795039649 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.168474357 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.153488373 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.542568716 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.549592305 seconds)
  done (took 22.132449735 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593653146 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437915114 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452417797 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482209644 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442052024 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442364912 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485821486 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080181076 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.471433064 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79702384 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442750855 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595812848 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.772883898 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436897946 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445812279 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.420360299 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.756118289 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08534556 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438975026 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436685908 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505712214 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.439445057 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444041522 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.734249516 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446099465 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438737007 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.780833931 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437841292 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868720876 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821228733 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828454932 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44755838 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800016398 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023623465 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622546414 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728879 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438051445 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441492664 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.426059068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.444376481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455834572 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441163363 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816634294 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447042323 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440255287 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455681969 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088758005 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.47503464 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.439546398 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438214245 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831102824 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606401065 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.469920372 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440897757 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445525161 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446689066 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.467704797 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64352499 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161091085 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438541522 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472115554 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.446316253 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458139334 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46146357 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278938195 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.470776556 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.467198867 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.467663521 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440370804 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448793523 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499740784 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439111077 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.489232535 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439868366 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457812198 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458499087 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441856677 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154438564 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462984713 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.448245828 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754587158 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441021865 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440476614 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.44105895 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442298703 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388221086 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472340861 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.408822309 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514512355 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082516988 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.739863009 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501149273 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50114634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.74728616 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.409102512 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440396646 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.46028025 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444450862 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493275227 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08899295 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449574628 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.475028563 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779374528 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.739023936 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452063143 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415131841 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09822087 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450437517 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.507200881 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452329309 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.740515606 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.260880382 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836988139 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4587795 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515099232 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.443670525 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455174013 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445572513 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.480057625 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463952783 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843021938 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.410542221 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446174126 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593520447 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449067651 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447226984 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44461471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454376914 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446755694 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.728571909 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461211722 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833415478 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.454425804 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444546055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.455008979 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452185016 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.447319383 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.749419462 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446543726 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.807314674 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447776355 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446892164 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447026958 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.752843431 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.453108388 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.479332532 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875579919 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455943734 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463328751 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839901219 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517772895 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642004126 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510316081 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.454822293 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.79010145 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.47432596 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.473920112 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445399307 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.454803016 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446953205 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.478074272 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444527548 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262841874 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45119313 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456746769 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446721891 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.490478014 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599888995 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478244126 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.738769225 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.471647477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457786706 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.477039154 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.449465327 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761001172 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831908164 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.462082644 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702796773 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.094053441 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266374027 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494193012 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.448527987 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.450711574 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.448169701 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449992907 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44934052 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449457574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73838384 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849801431 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463354383 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264993195 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451082502 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462245723 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.483448699 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834159707 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.487400249 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451862 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.449489562 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45414155 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461587748 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84016515 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760769508 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.495876256 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450782463 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.057299745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.479907606 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451067486 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450824299 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507138093 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461680567 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193591308 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883828035 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457099537 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842806617 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464724599 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.502624251 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.449165149 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466170873 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457889861 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.480950127 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487833055 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.741856488 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468016569 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460424262 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17384592 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452664546 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207792416 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458109024 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.463314434 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458283976 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102427411 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458109792 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453749251 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823287305 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101222439 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457562097 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103670934 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.474990919 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.459999627 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86616238 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773201746 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473044512 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.476686107 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843471646 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.759658054 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510643009 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462236085 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459824325 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.426230319 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196208261 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458758896 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729490391 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101797931 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459234377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455470489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.493844294 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.468692423 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024647198 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46116472 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454862451 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47373643 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459732205 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217699192 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467107724 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453961499 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293300356 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470541191 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.113386136 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461026852 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.747096331 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850141976 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.827759033 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.460427055 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.477210266 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.795943814 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846577278 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463012999 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.469294873 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214649223 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.404659 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.484375073 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455833455 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459828655 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456257322 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893366468 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.474346773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.474488131 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466129737 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458562712 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456102344 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.456163594 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466428657 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457144306 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109898542 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.46286745 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458414439 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46412599 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46561731 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.79608629 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.503361356 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27429794 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773236736 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468499032 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520683182 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.483900501 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464928816 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.425432382 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458502579 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456785252 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460211945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.769735872 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456259976 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.428612745 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449178977 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.760520385 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.45765317 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458382591 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79600688 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.465994453 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.459051811 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467437584 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520327969 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456230851 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459002922 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453004044 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523994148 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610031206 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753986383 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.856999622 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856422943 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031238889 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467264448 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461264592 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.501644099 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617985011 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457440922 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.468190474 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.466221228 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278012937 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460183869 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.285923929 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859599116 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469777197 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461527475 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459189747 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790996606 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460525043 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.814392179 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459480847 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.476410094 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513613707 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463393844 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46589046 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767038672 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810535683 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460034966 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460723602 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467279044 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.461748872 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862531122 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.768956583 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122671046 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176092365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464442301 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463346212 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122607351 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822701336 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462244955 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462227005 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461964332 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.472968316 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.484401822 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.498065013 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462987577 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772482101 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847858097 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069325785 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.851149996 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.495147253 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.422469575 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478382691 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80531847 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382075891 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.755826073 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295785868 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407860804 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803192291 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611797142 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758941413 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.469887477 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786600237 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.466731629 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462380167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463288104 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464465279 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.463853678 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848752345 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295096255 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807196781 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.490085855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.466497939 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523364528 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.759430232 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778379988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422656121 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770339091 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865196615 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481207562 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464809107 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290081302 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863076234 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471733521 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.498090155 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800687294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474736488 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533430194 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.417654577 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.464740244 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179694149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.763755782 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515698399 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468678035 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415777872 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292166553 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.485691581 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124334666 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467469641 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467827229 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83575579 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.494429494 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474517395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841843645 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.493367138 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475010754 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771498317 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.295936515 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.46849987 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.505200697 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478396939 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.476023731 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466587267 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522376903 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472018194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475935103 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.017589108 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474905014 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468076981 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510525396 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.475369179 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479784546 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.474318138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468651286 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.498071158 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.447026469 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.445689846 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481116279 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682747645 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218869522 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481248907 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.169167043 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.898731396 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.806633441 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470854429 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.442803515 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.495186364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469452645 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469873089 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475945999 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492865958 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187761587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.472922151 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.864705352 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505145731 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.768898754 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769657161 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473583198 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768766126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484780921 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525395163 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.437762233 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470608099 seconds)
  done (took 1041.167203901 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481749181 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.479871428 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.499209013 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.553085627 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.495151793 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.609464234 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.472239592 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.580321632 seconds)
  done (took 21.498062498 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.471788556 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.493108795 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.464837742 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.493357221 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.459029811 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.105843907 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.465842619 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.498964778 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.521680935 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.467519508 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.467396448 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.268978409 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.495728053 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.478289244 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.48259433 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.496732511 seconds)
  done (took 34.466020994 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.790319566 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.682084991 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.236888155 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.47567236 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.533347851 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.472382697 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.881136002 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.494310624 seconds)
  done (took 28.895238495 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.507545967 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.506765769 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.508417935 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.507460132 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.508872951 seconds)
  done (took 8.867716488 seconds)
done (took 1304.068188453 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.499863705 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.501576074 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.501840981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.499371743 seconds)
  done (took 7.332422999 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.441527865 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.445168621 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.446454888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.488123175 seconds)
  done (took 10.150375058 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.974940878 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.209580073 seconds)
  done (took 5.517671067 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.476157967 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.324353886 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.309860772 seconds)
  done (took 8.444932767 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.870669797 seconds)
  done (took 3.202455843 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.031643759 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.078804574 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.46838526 seconds)
  done (took 7.914946027 seconds)
done (took 43.891386678 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.467449388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.258419174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.626763432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.478356221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.645686718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.627085469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.748864294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.478774989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.487684782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.475050284 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.478107586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.66507361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.734333465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.240726491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.736673079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.243738956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.633745185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.477914544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468863184 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.472246785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.746609118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.480916602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.470629191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.469122575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.635771281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.618002192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.481546571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.2320323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.468428422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.469069286 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.618800687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.471615629 seconds)
  done (took 85.944187946 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.473367109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.470655311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.471385991 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.469734594 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.474624601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.469829439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.470942709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.47306728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.471939064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.477217669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.469853953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.475048049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.470690093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.469687242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.469578359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.470089248 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.482211111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.470551877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.470407376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.492181862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.473438417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.470646302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.470631356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.469454041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.469833769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.492194853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.472443528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.472620436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.472393452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.472333109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.472265223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.472010582 seconds)
  done (took 80.480749963 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.47197601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.47191881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.47397396 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.472039077 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.471228638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.472340792 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.476015072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.479869193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.471288213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.477671777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.472125541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.471598449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.475005655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.479019085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.474863179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.482028964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.473653598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.47237655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.471440887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.49231924 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.475640792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.488010312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.473243071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.484734547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.472705713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.473713242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.471738689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.473176373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.492379024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.473752493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.474614126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.478449599 seconds)
  done (took 80.57298383 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.804706311 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.510811046 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.514702253 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.484297759 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.515362463 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.512676019 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.484442191 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.803278336 seconds)
  done (took 15.970551982 seconds)
done (took 264.30452274 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.483207396 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.484192299 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.561097608 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.484185035 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.532262657 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.543321885 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.802216888 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.541015028 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.787422828 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.494143215 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.529125736 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.488704814 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.486258693 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.732108881 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.492209938 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.500192518 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.487965963 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.47833485 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.518888261 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.824772061 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.543172704 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.486037365 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.501749001 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.493394377 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.474096462 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.591455659 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.590970821 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.726572213 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.691983387 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.590243773 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.496610917 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.497918346 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.487012769 seconds)
  done (took 70.76319859 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.506202151 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.515032813 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.517263334 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.515656146 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.515703079 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.515732762 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.506017909 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.518311093 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.516659485 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.516449403 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.515091619 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.517135455 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.51533292 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.515697562 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.516904838 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.488611297 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.506987516 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.515451651 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.507243484 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.486349835 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.517759347 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.517470972 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.518930445 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.51662212 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.516396673 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.516448146 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.516916991 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.517038375 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.516632597 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.516447518 seconds)
  done (took 46.742601626 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.51759089 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.484945956 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.478968869 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.543317624 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.509501383 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.512775263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.913048021 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.523151862 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.513025714 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.511965942 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.492854293 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.519758413 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.578479288 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.483063872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.51221772 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.520220973 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.518701156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.51045765 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.497812466 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.535621883 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926577674 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.519094362 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.912110682 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.532515832 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.513618038 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.512623009 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.524338047 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.48295925 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.513418851 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.497932523 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.489542281 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.906095042 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.482619193 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.494927811 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.483041315 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.527949749 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.519415842 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.482631066 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.535841464 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.51282506 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.909043392 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.514883213 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.482839263 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.483852381 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.532825857 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.52026141 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.482561505 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.521360992 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.822455705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.525108185 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.48418762 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.538656766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.523805227 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.514619422 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.826100792 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.516961479 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.514014876 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.495382269 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.524548897 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.904930438 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.521697557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.514037225 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.496827634 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.514605035 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.491770496 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.51457172 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.534965375 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.515502146 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.485535625 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.517687759 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.485109664 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.513958025 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.521076319 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.500098232 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.491480237 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.486093378 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.538088118 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.502113852 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.494918662 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.904245156 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.520031144 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.485562794 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.950870429 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.520973372 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.52505357 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.526262174 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.524257658 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.645735397 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.903761854 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.488456807 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.486976941 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.495300904 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.919635032 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.532321394 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.51496381 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.499308327 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.523840497 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.524091786 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.485953975 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.487695887 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.517376128 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.53930224 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.488970979 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.522462459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.912809373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.529544364 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.487991874 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.512898044 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.646966419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.524987082 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.538382988 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.521588954 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.93254219 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.521632395 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.527944371 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.488832204 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.497197094 seconds)
  done (took 221.852128408 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.487284312 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.489621201 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.490539893 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.488074426 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.487862458 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.519358432 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.490251449 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.491354034 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.515920356 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.490721341 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.488095029 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.520182839 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.518566432 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.489646484 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.504052226 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.492051119 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.491119017 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.506918093 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.491925056 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.491428903 seconds)
  done (took 47.296733476 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.526556275 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.268901094 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.235408847 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.529992397 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.525609017 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.519175588 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.596565108 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.533254334 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.529139983 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.937613855 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.75559364 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.534252435 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.529597654 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.530931762 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.237025184 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.498097558 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.935395416 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.269587634 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.52946698 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.271225342 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.499455622 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.529099056 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.51898541 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.27200987 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.947955742 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.912243589 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.600894778 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.270313424 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.533247629 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.528182878 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.270554238 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.529747673 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.528319139 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.25702207 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.531796257 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.553142897 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.534564137 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.600274798 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.600882906 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.940812376 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.277224708 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.922600912 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.547697301 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.756357775 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.532964212 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.500130708 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.285864635 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.531545807 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.500806562 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.532055229 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.544946742 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.253420843 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.523462096 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.253707402 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.53020171 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.530777483 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.27553427 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.25527059 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.246205959 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.754203171 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.523684542 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.915566638 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.532036092 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.287239599 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.531068791 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.531431616 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.530109869 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.756540339 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.27570566 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.914884846 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.942722255 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.943090668 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.534001915 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.614389022 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.534053876 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.942925145 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.612112965 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.016667343 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.944277201 seconds)
  done (took 142.046824114 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.903592839 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.669820862 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.074572192 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.279579338 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.209136581 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.729998486 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.671315954 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.851920904 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.523377589 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.698157706 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.431454168 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.642868552 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.437661452 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.618730567 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.65860086 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.715722789 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.092493186 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.49762578 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.373916893 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.408842773 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.508028779 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.687630878 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.412925414 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.006277404 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.496803679 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.416185326 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.499906657 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.233196275 seconds)
  done (took 60.108802524 seconds)
done (took 590.148923981 seconds)
SAVING RESULT...
DONE!
