cset: moving following pidspec: 14177
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.475120964 seconds)
loading group "string"... done (took 0.542115307 seconds)
loading group "linalg"... done (took 9.841014489 seconds)
loading group "parallel"... done (took 0.167338388 seconds)
loading group "find"... done (took 3.479448469 seconds)
loading group "tuple"... done (took 2.076043818 seconds)
loading group "dates"... done (took 1.393545576 seconds)
loading group "micro"... done (took 0.196882928 seconds)
loading group "io"... done (took 0.504275508 seconds)
loading group "scalar"... done (took 56.838928053 seconds)
loading group "sparse"... done (took 14.139943495 seconds)
loading group "broadcast"... done (took 1.327457144 seconds)
loading group "union"... done (took 10.337520854 seconds)
loading group "simd"... done (took 3.586831468 seconds)
loading group "random"... done (took 13.271766054 seconds)
loading group "problem"... done (took 2.332786453 seconds)
loading group "array"... done (took 23.715174326 seconds)
loading group "misc"... done (took 1.143019025 seconds)
loading group "sort"... done (took 3.799487351 seconds)
loading group "collection"... done (took 21.967705322 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.736182024 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11936504 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200568242 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.200237055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.273509781 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164904141 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161005949 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.157587708 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.634075674 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204074555 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13693578 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.378271707 seconds)
done (took 6.095607969 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.300803545 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060722038 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192065555 seconds)
  done (took 0.933966114 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0775394 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161004622 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108296942 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093717224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097911753 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108056968 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093495269 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109084332 seconds)
  done (took 1.446683129 seconds)
done (took 3.436915965 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.550053467 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.94803585 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.530471018 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.186293662 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.30199406 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303989914 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270784085 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.230471905 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090221179 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.083968289 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.197899118 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.443483769 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424914719 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.985097406 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068075277 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09565525 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.158891644 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.846090554 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080766835 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108806992 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513371777 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.216751865 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116004836 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106571024 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187483478 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127219949 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140987831 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10288096 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.73067874 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133210306 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209591178 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084803312 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139046243 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.170378091 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.219419872 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111111546 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.750144065 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205424726 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095303879 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10121301 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.726723279 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126792171 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208236187 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106024726 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067964858 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.171398123 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115318296 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079668161 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095287606 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101229633 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175787577 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.504720957 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107314764 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19699614 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095293613 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.754874974 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099362705 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.283948539 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130165505 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095456482 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092465669 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090040849 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.168704903 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097216553 seconds)
  done (took 20.756442842 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.189688577 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.207248631 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096597758 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145625711 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142485996 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08292975 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090026951 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096215028 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.115471528 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196391454 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.126320812 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.21479135 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077683622 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.10956512 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167152052 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253818939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108565133 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122557135 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091393466 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.095612647 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144505666 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097890032 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11108773 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096690717 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171719742 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207047908 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109828701 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124129053 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090387681 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098437448 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151870709 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092464551 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091918952 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17504726 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124742399 seconds)
  done (took 5.456808229 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242831718 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104437792 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24559373 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190442304 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12982021 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181170455 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.212211693 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.322084324 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179550486 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.252497821 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087087262 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16580621 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130530286 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097565619 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096503123 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081990873 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083988823 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079019965 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.847349723 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.172803818 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14221578 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187353434 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114536981 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082265698 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.741914178 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087729871 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101352343 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096061098 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062984895 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.219206018 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112294377 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.470905623 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08455789 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097489143 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131324521 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197796801 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13932079 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122896005 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110839234 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086070093 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.208734575 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100672299 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078659304 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.096542584 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120119395 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130513803 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106569418 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107172497 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.133794598 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087498347 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.108916435 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.071630618 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197115848 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.16482962 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104803342 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28005782 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10795891 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099152692 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110264441 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.786646053 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137148516 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084414715 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096481892 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09577398 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080600543 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.833356114 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103637481 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.512488844 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085145046 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.1617624 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096718794 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117090867 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086924461 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086079871 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125036711 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086724087 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096860781 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086968043 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081928924 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108753844 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085235141 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1114134 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102884382 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08120488 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149725465 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114444581 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107620878 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124848837 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089629344 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085828163 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130752102 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083455934 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105692491 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185766291 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116651217 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111815127 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114991229 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146187095 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089787535 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.27774307 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086354626 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124974272 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102500255 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127442882 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097274451 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082371369 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103203487 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080474549 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082591648 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161515511 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088927719 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082805921 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105929532 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095295707 seconds)
  done (took 28.279756037 seconds)
done (took 55.168187729 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.771849828 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076796079 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09738466 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077346149 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077013564 seconds)
  done (took 1.838843403 seconds)
done (took 2.563164981 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.185400672 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.266101925 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199145925 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.129933841 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.150103794 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.171397634 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153305947 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.170410916 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.149986811 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.169829767 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167918839 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107933348 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17457185 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185516469 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102277252 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205442186 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.105712395 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148581115 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086520011 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191652514 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.104789583 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086848265 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088759402 seconds)
  done (took 4.244974728 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105700592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10110315 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104870669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122729853 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088134392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104295735 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122125796 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108539641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103345824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117049242 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08856664 seconds)
  done (took 1.89981687 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102701398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099399581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094332386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12027109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088824005 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101740871 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118716144 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10883919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101869099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116068461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088924995 seconds)
  done (took 1.875644591 seconds)
done (took 8.74724209 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.206113641 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.918434181 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182051502 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.250617694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331138687 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300375139 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611342196 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.204132034 seconds)
  done (took 15.844849405 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.224118234 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098047245 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093783644 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093652831 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.115365159 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093379333 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092274234 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115615471 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098380527 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093244608 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10864999 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092064221 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093056526 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09783353 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115034111 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095895085 seconds)
  done (took 2.50801132 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137013653 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11869596 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117131375 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100225594 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095663283 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118362887 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103674916 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100085353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114308111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097425378 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103814808 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.117523813 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098552337 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095947187 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115527889 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121263535 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096682686 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115824855 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117597636 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100812401 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117409064 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097455829 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117063629 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100072153 seconds)
  done (took 3.420833194 seconds)
done (took 22.508787186 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149269401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104072522 seconds)
  done (took 0.998333936 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.167039956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183029909 seconds)
  done (took 1.098493251 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11256641 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092024761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137771081 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105247253 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093639561 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108972237 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117100645 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110354396 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093676787 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093842101 seconds)
  done (took 1.822626746 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096466457 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096145257 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125077777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159263339 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118645325 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094398806 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09676447 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113295413 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099224629 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092645441 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114903508 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109782536 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097753282 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127259339 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097249658 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098316483 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116464112 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096019193 seconds)
  done (took 2.707094806 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094399854 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093383872 seconds)
  done (took 0.944286211 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094825396 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091256158 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09594607 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11049338 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091486564 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092864602 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107773062 seconds)
  done (took 1.441184944 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.518565524 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.235777189 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370102231 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07461731 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12076005 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.310174779 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.120244481 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072300674 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090442716 seconds)
  done (took 2.691632156 seconds)
done (took 12.456726725 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092303777 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.207965133 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.602314931 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129900038 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091711383 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152477211 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.341539661 seconds)
done (took 2.377386188 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341300245 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.176131476 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084457947 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0928132 seconds)
  done (took 1.449267327 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084643585 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100445664 seconds)
  done (took 0.946155025 seconds)
done (took 3.163468204 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090865117 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08977196 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114706765 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.109075393 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090548945 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091803364 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109596409 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089977085 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091684424 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.215413846 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110840771 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091063954 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.091540062 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107462338 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090346824 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089512291 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091103136 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108155373 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090019408 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090413452 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107123887 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090825935 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090469116 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091838704 seconds)
  done (took 3.216832043 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111151215 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094256889 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111849977 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094689625 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094981492 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111708898 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095407035 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093070634 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112697432 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09250485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094751295 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113186251 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092269066 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096403181 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092922151 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112757495 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095510819 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093334216 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109278281 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095496851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095475479 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109383393 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095587993 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095733124 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111704219 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09518466 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093353911 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110655063 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095130114 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096223619 seconds)
  done (took 3.770821555 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096764679 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088546385 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092274653 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116802353 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089055459 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.092811592 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106441678 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091976291 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09281732 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091800291 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110734403 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090981542 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091751332 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109978441 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092734278 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093942533 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118074582 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092065688 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09094278 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093403079 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112798841 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091434462 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091925167 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108633856 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091111726 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088646608 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092006463 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109092504 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093518596 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092788825 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110990441 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093523136 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09228939 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117858633 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093813606 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09165125 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097674502 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106085697 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093976685 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089432811 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106218536 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092213402 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091164176 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097497663 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108677507 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091975243 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092186444 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110602542 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093068469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093724488 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105790548 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091757199 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093485282 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093029917 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110821145 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088690958 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092559326 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106274827 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091932571 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092463714 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090250164 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105884275 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095816165 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092945549 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124030996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097269562 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09272045 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110568948 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092379695 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096942006 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112704346 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101641836 seconds)
  done (took 7.826337204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116537446 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100862267 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11052425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092739377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092464482 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091998919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113719768 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091744977 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093263885 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11551853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091747212 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094843904 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11129851 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094406 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092189097 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111286847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097458063 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09217925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092732672 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109487456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094537092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096691556 seconds)
  done (took 2.976597443 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236594052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097977613 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140610618 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122492812 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109994923 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123594976 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096627931 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099613715 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114210613 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100806604 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101799747 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113973363 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109422713 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118446766 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100812541 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102732198 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115167089 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102775639 seconds)
  done (took 2.887679152 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107751411 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096348426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155091301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094215613 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094011676 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111803114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098508546 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113539369 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112838581 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093778616 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10094021 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112267698 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093844336 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095083599 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111829235 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09464353 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094372406 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094194939 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117439515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099081664 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116204722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099870312 seconds)
  done (took 3.087637891 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110346784 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094521447 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129123753 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09689633 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093708774 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111486245 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099660788 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094342654 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119385712 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093276457 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094226577 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09342892 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126214863 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093935968 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099610013 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111424923 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093925073 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09532553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111785863 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093295314 seconds)
  done (took 2.838653854 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186894297 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129106501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1090726 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117675299 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128745492 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110139495 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136477341 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109116599 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109922637 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137512878 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110232594 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110834974 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134263652 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114434035 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127560565 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1170549 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117385947 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134053779 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110024955 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127971162 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119579103 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113365044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134315963 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111561393 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128743257 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110564479 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110705768 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132083347 seconds)
  done (took 4.222674965 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094435123 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092191961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093114774 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109890022 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092425719 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092479079 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092396107 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.1096842 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092228278 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093236787 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112419044 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094099326 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092753695 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092929066 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110012803 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09269817 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093419351 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110733076 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092527199 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092657104 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093614698 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110548834 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092965943 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092859155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110569717 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09259285 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09332332 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092745732 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110338752 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093314869 seconds)
  done (took 3.711824947 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105458452 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103017709 seconds)
  done (took 0.990826208 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103684065 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107741494 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092824514 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111253952 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099154159 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094194171 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11897721 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099726648 seconds)
  done (took 1.616149303 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.18671704 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.20833166 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.118538328 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104512452 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.208942143 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.187850005 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129845492 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0982076 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112468352 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085886271 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.20139244 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085280608 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112703369 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090062081 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093421168 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118306595 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095177396 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103631335 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100213233 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113347026 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098882895 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098161366 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112639533 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104373747 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088040735 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114485439 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095544063 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105316046 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107902827 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094673492 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092139929 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.113603203 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097680997 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098369842 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.112633387 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.209353927 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099552115 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090922875 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114610105 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098747683 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125864959 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114208867 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094100025 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093124202 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117057903 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097933124 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098867111 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094508387 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.105121398 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089632418 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095811625 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107552853 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093756197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094581441 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112406124 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099317448 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09596367 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109630701 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090198202 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089730266 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110984085 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089432881 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095421422 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116217781 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094630818 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093856139 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112637158 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094286222 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094920101 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095304438 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11113187 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107844091 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094339929 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.116560772 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098507708 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09546633 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109901825 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099217854 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092976977 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113296112 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098106121 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121939738 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114716333 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088766107 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089053783 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.120305592 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096193518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097178908 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105753742 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101104896 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096946406 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.115161711 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087194119 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091253294 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089401383 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.11660575 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087194817 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093687891 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.113946613 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099650521 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099662674 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111951317 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09439266 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100304027 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120281497 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093436602 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164879975 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091034342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090399484 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095998591 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120206208 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08881325 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09307224 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.114686442 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091443821 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090008792 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1185597 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094840273 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096001384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.117729636 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096148819 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095367923 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.116300264 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094145701 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090591339 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098750966 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12207572 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095212667 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097827663 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.115169254 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095508584 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093884983 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.118435661 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090726132 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10072901 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112159305 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095020393 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095948584 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100032134 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113876772 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08998777 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093370672 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113448366 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093403707 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097796025 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113146861 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090482177 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087842525 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114280593 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089827903 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095608806 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1228101 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090267834 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097027911 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110747184 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103354414 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091487961 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120172544 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097760058 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099909283 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119689312 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086768018 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09189723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098778832 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114531743 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090372386 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096047339 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.116506017 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100945309 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088537795 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117859331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086323756 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092604164 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119486563 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09691421 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097818025 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09023438 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149368296 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106222516 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101084572 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11298427 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095568298 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099912147 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112410314 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098882687 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100157429 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11929436 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092455542 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092990386 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119045865 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090019129 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097506184 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113109984 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095300946 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087227643 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.115720582 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086637833 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098637124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096017937 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118579884 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100039607 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097823613 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112574232 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102708103 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090395364 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119058087 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087038373 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100484216 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.124357155 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100882242 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100504959 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115914531 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091352539 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09578746 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122548754 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09783346 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093912501 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097124572 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10747463 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087699979 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100946916 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.117489173 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090532113 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095876019 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115377172 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09632873 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092171917 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10820091 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099469353 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097602984 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111434561 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09520652 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091303231 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093969562 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120992551 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087888621 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095108324 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115617915 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099504134 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096190375 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113578201 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096959815 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101814064 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11933368 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097265651 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09260158 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123461091 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09383805 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094732857 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090952906 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117850531 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088146265 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09792195 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.1139654 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092070507 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091156703 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118150989 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101046998 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100853817 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11327907 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099428705 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101641486 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.120478589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092006253 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102355614 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.11169472 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098407975 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091624641 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089322183 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.117869737 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090694005 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099991556 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113738905 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093685656 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100427994 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11718215 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092141046 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101252331 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12438579 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089317434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090187935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11315573 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094946431 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091995498 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111414866 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096254838 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097564851 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.11912723 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096802952 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091661447 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096980419 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120313484 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091509682 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102579594 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120522728 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100497417 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091324113 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119739808 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09255758 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098812356 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109404625 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093352025 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094515371 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114938079 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102391861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094120837 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.11133406 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088430938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091996336 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102763138 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113094758 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099345315 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095365549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112775235 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091588183 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092059193 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121148786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092984311 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103004229 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.117104766 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087694951 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088912704 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120376411 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095449288 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100573684 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089764348 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.120025738 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10102807 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098694464 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116764289 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103467767 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104576287 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122956069 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099321988 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089409414 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114362518 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099613924 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09661054 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119537058 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098254324 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090077725 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098141531 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.120948202 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0967116 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094473746 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109566796 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095979733 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102810769 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118924899 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098306076 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098663664 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115568956 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09121551 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100159734 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102160058 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114765292 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101283969 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096236819 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119375655 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091895415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101914287 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116911236 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08982043 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090341306 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112952772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101928674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090029046 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10135828 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.119792747 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091983345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093460279 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120347077 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091950241 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098736718 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12082123 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093098989 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105643113 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.117658677 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093952451 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100738648 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.121068538 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088650938 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094796412 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095086533 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123820424 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093011059 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101163493 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114729533 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100963188 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098981442 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121719599 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100299765 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101589595 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110064974 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102650274 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099602191 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.119220329 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092160533 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093896577 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091225567 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114775908 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101674592 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092713536 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124793872 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099744667 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094198221 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113449693 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101070325 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09438791 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123353186 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093004145 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097703067 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.110532282 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09690925 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094829587 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.122707504 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09152819 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089928126 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101892986 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122257236 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099301314 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097877949 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123281179 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089055179 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089539878 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120292322 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092746361 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105472071 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11899481 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093496806 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094598761 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.119204335 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097277664 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102728008 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090831313 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112524854 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095860794 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096880476 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113695394 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090582399 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101422045 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114848892 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097046559 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094998672 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111226155 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093764857 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102779271 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114486067 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091152094 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092960425 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10353649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115092918 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092235123 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090010958 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121027471 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09820299 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103810198 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112853388 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096437892 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093185383 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.118932512 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101897315 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093893155 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116418784 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092854405 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102355265 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1226825 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08860624 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093953568 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.126548635 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101436084 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096990616 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.120023014 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094935885 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103454567 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10410856 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.118882646 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08986876 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09074045 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114776886 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089410113 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098875563 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121295732 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094816107 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093795028 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121026074 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100092058 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09918468 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099304039 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.11019858 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104467055 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094465853 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119022887 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089914087 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089989376 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.119295478 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101550623 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094431003 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116342868 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096950248 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098047315 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091161034 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114463369 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099455524 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102057391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122313808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094669161 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095416114 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.119335217 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105288878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098317182 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114921667 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102601805 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103582306 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116860322 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094867511 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100362134 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123419954 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098821715 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106316243 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094434285 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115420752 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103859925 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103265017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126052901 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094607352 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090167612 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122818621 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093111352 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090951719 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120302868 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103511626 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.1034575 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117065934 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093797053 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10529684 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121737408 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096070247 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093975358 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115120855 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10068927 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094352291 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102393468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11307213 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103688325 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104053595 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123336494 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105803259 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090504456 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123097567 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098398966 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105351735 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.119244284 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090150291 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091842546 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100096178 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.123672361 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103251258 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100413747 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.121447916 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102131563 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097618768 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117691922 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093529841 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104750821 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.122594849 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098304401 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097962038 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.11666721 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096603626 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099266464 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103120865 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125479784 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097111162 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107496561 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122058189 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094619574 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093973612 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118030373 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099905232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09774993 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12236172 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095423098 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091778989 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102905335 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123887752 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095474431 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103822141 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124591892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094787752 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099784826 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126734622 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.1010676 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099383029 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118244086 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099296635 seconds)
  done (took 62.780957063 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143630206 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106191227 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120976348 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098758858 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115167928 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122285453 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099575442 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100416401 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123203796 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108625615 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099059734 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120764589 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113316016 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119898208 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135426719 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108568276 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121457694 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100734458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100135011 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100959556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132898814 seconds)
  done (took 3.227919276 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114621071 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111159177 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132255854 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111357946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105903411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129817137 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109000314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131921594 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110961526 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10799851 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134724045 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108784783 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12827532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107147843 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107120606 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128614679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110983177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105992738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131591873 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109637336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128273644 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108691825 seconds)
  done (took 3.410775071 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.126399453 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101333487 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097340451 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120528595 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102172001 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099544013 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122649884 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098202851 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106749818 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115404619 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089609859 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094814431 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097755099 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120612963 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093296431 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098992756 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127531371 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101109715 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104308237 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121018253 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090864069 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098796712 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100234395 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111947267 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104109399 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103084059 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.124141904 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100786979 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090448443 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10224268 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11981782 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092330666 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091163199 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110359565 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.08979389 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102359456 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102199099 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119589229 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101235569 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089757853 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121002328 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103038731 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09069617 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120583839 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099365639 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092322215 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102206503 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119953522 seconds)
  done (took 5.872165937 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125240857 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157710069 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10213729 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127151085 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13547009 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107729761 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102507379 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150834404 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101214687 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102120878 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.134816236 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112346969 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126897771 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104682795 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102547608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126535505 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1058379 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102580293 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129003975 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102047335 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106608879 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125441161 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111591286 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111883222 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125593694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102028827 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10300395 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127339517 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110142567 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128704007 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105335881 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106736618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134390553 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102400592 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.363546789 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125060037 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113195819 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103343239 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125266698 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101446839 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103476427 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126909714 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103439969 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114536213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124417987 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104527049 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103451004 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122756463 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110482974 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103743081 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.13058546 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113024429 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127317726 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103142586 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105813525 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135096579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104629995 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10190388 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125996609 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110435063 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101400883 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126799923 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11287874 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104436814 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129358559 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113162435 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.126706476 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104136077 seconds)
  done (took 9.007006687 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133101842 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106443494 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136594954 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114250423 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107396478 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127910609 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106163011 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106896275 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128603993 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110888333 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12824892 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.214951287 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126372844 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111193609 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107258053 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128969333 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106748072 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13033955 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105992738 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106536383 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129144426 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112594067 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106454319 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136630643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117483236 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104413348 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127438063 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107546637 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135743449 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106611532 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117029408 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128006781 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10625192 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114203209 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137639361 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107234447 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124043637 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107269787 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107115088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128870717 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103517144 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113926359 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129209448 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103814319 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107373989 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129567524 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113334455 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139534364 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113891299 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111249761 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129419112 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113442988 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106636815 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128850813 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113637774 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142543266 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113456747 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114432918 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128323022 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114054169 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136964834 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121699973 seconds)
  done (took 8.285257993 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140349342 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109892746 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.137420548 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100294388 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100536876 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.128524375 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100446293 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100649321 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.131682946 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109457914 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109395336 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.12797612 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10589964 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110104574 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.127899504 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105972135 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106074942 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.126960978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109739513 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106078713 seconds)
  done (took 3.146916098 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110074961 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117296969 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124609211 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106890688 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101977214 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129589943 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101982871 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102293944 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102734083 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124289688 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11025613 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131877944 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102493202 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107958561 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131698242 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107673259 seconds)
  done (took 2.667538448 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119642798 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118330062 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.202024364 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105327291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125094399 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107832008 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102095874 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126646482 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101444674 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108135818 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128600851 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105219316 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102456814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103275563 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124449974 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104921583 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101397392 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127116794 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103213126 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.204188675 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105341189 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104037811 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126232812 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104582922 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103944852 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13030414 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108394021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103292395 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127268349 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102377614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104096897 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132153397 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101284598 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107037145 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125127085 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103166122 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103695519 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10347475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125759568 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102283817 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105122447 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125271726 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102729614 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105065316 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.126008133 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103468744 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101994744 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129006699 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102623385 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104633278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125303783 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106466402 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108089932 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131986966 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.108256643 seconds)
  done (took 7.188946374 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112515774 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103874522 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137623437 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101039943 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104246986 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104092287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127916126 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104333519 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104062884 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124118647 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1047511 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104582783 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126461612 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103811735 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104604852 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127084666 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101319868 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104784205 seconds)
  done (took 2.861518982 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106423869 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103529087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106908987 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124597967 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102404712 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102398915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125418253 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101561099 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102965118 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125132673 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103185817 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102620243 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101960242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125110672 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102350236 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102596427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125041111 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101055589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103677011 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124251136 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102132332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102201055 seconds)
  done (took 3.259793372 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112382028 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229006216 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107611729 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.236222078 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09991501 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122548615 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109167094 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.124039656 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114663114 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100305702 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.122594709 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099186635 seconds)
  done (took 2.442190449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128447549 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140065996 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127749066 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103275423 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111685362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131577067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106873437 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108009545 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137857195 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118046296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130607601 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114259711 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11610862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13900832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112349133 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135493277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106393558 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107475189 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126848813 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121383452 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107876078 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137402738 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10751451 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108725488 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129240876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114305528 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137791265 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117574239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108326136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136775285 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112228937 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130931105 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114624004 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118653147 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126752222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115323603 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107934954 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14182418 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112668797 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137242802 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104515525 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11202053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136230522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111850187 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13778917 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107375666 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113197425 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129270698 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107078491 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149836581 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111075787 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115668341 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134148762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115617636 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11534721 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14824441 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118904646 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136268655 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112062504 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14035004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114058149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112663209 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136306859 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119576589 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134680535 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114416505 seconds)
  done (took 8.905278737 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140286834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104635932 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130334311 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118366798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13773616 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107315532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108027704 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13036148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106755894 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105074535 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171809977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107983494 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138011126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115478582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108699786 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130048311 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107401647 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116474099 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128318203 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12730739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131027765 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114395204 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115686429 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13962865 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11804015 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135186395 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109275558 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108135957 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130490406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10772131 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112966321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131431448 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115576988 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106243957 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137584605 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108331513 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131560794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112374346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108612974 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135597271 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115450645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122701567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131035239 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108883399 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141902124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108077641 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109365793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127344616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107614942 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10622524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141262028 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118215592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141553894 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115714855 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109504498 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13124127 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108502206 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108775634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131264178 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112739616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140709513 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110854041 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128928896 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131041106 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108110187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137945545 seconds)
  done (took 8.879046491 seconds)
done (took 169.843552736 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.172692422 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21425902 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198844909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.187907205 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094981142 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.168675151 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13689164 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200331062 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093807111 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095428476 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117680608 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096317904 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.20373345 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.117188296 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093396723 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097211593 seconds)
  done (took 3.155647936 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194372204 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.340987077 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134638909 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.097051308 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101364496 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100162248 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120331783 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101207982 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100173283 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128239143 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099390432 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0962408 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127256476 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095367784 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099627195 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121392881 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10490496 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101498871 seconds)
  done (took 3.144602606 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11655749 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151512703 seconds)
  done (took 1.150451674 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127794953 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213689604 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294634814 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171125113 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120336671 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139973317 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148121839 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135052929 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188982901 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133588426 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111217145 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097275568 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146230048 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105349291 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138410548 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096909181 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127237479 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135442293 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112921902 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100863385 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145332238 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101727531 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104983043 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136546624 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179789902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134568998 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102034972 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102524001 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124151054 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113113965 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105994065 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137116598 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110828758 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177863889 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103811665 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174920638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106325253 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123609224 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113442638 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101145335 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123104901 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103495144 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134371278 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097876971 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103469861 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127316399 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101795835 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102826484 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12985548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105127544 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10760684 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129178508 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173433577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105195919 seconds)
  done (took 7.872421347 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.911381468 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146995159 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099876528 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.068190864 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144981704 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113242892 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.911162167 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148862156 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250220436 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.930525383 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115808442 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107307989 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263478408 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25835974 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276226816 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359039372 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.767324811 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110291819 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13159767 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164445702 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105099119 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137812985 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115037813 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.446144513 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100206598 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100557829 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126728127 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107904154 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176998346 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100675092 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126523212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173066631 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291264483 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213351642 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099767715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12162636 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098717372 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187689998 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271819832 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222213453 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190224259 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096959816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100201779 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126665269 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112658111 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097794908 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179212663 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195379314 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191673187 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102701957 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108308047 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128702889 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102380128 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180584207 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098454559 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358634642 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.38289485 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099176089 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105539678 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134561036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265883043 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100623899 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239545336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145305838 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217083611 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099346851 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804307517 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187540259 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09937395 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104920465 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12747459 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105293487 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102500884 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17967222 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.422903988 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105413545 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104776592 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121737408 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224826704 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099392388 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099841816 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179607197 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101121099 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128952641 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107751901 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106948726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189901174 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272839514 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106443633 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128347327 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104110725 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110587597 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122936722 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207457317 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252858132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156377358 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22540939 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127925276 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157707345 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187072113 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105039196 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188882189 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129356812 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110306765 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103865652 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227390997 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157042666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102623106 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127044927 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105411938 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161052115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103441995 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106180682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188934012 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483985498 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188222888 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097302248 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105667836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128320438 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15613878 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129145823 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265928999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106773913 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188194533 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105030116 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121416417 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104835818 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182573357 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107057399 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106858072 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12663852 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109695793 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28019436 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222386241 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108859235 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248567503 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.195084235 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105330224 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193758717 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105200039 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187559954 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133932744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103875011 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101379861 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790293445 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134717131 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105109246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105636897 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202915678 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100942166 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126517486 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099654991 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098422152 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816052307 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103934656 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121258087 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103549062 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105426814 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128802552 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105902573 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128224895 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157522266 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269067666 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107903945 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105123145 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123282786 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154817522 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125600888 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102787931 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101293747 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124697701 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107410027 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105014472 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126249365 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164295893 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179250379 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234590307 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581242768 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123889637 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100320998 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245553083 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100414934 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3503412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105932955 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237765222 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183039617 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098241403 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360933468 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184465707 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205115958 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103527062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192844076 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098781835 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106976313 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179433223 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124397942 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106641843 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180048176 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108731005 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108076314 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.278210867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101334884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247647554 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097693428 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192281784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101023531 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106188015 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349825771 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099852083 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112829362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180506404 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105405234 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124361973 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.883224187 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10667858 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109997368 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128584019 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235456059 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184689757 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105555602 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108037551 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13110969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182896721 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204647463 seconds)
  done (took 46.571109218 seconds)
done (took 62.768074559 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256042546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16540588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.353141904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14674366 seconds)
  done (took 1.870154298 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.256473117 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165125537 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.242041533 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097227728 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248028887 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097539079 seconds)
  done (took 2.012933209 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.169394236 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165954693 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142072466 seconds)
  done (took 1.386845911 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209007235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208507241 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345963478 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234541208 seconds)
  done (took 1.966743606 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.272668193 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115731965 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128754292 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.224915473 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.2415238 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208189882 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123677879 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174557603 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130875721 seconds)
  done (took 2.566083019 seconds)
done (took 10.710980286 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.430514802 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.137751525 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.139349494 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.393305461 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138805431 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.407771407 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.23648971 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.109479076 seconds)
    (9/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.404763483 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.208735343 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109653749 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.41704221 seconds)
    (13/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.232354477 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.255557078 seconds)
    (15/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.244156048 seconds)
    (16/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.231463722 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.282056678 seconds)
    (18/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.23433343 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121922487 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.229085277 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171258021 seconds)
    (22/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.154283865 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110789019 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.32164181 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126865714 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.435279584 seconds)
    (27/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082657508 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07768013 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118485877 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.297564306 seconds)
    (31/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.180939071 seconds)
    (32/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.173661888 seconds)
    (33/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195577454 seconds)
    (34/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.224359257 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130069892 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200084313 seconds)
    (37/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.181860417 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18548476 seconds)
    (39/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076149 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105772739 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110728606 seconds)
    (42/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172814923 seconds)
    (43/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10652437 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.166654643 seconds)
    (45/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.141214257 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101680947 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.095238787 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.21494556 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116160372 seconds)
    (50/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149363338 seconds)
    (51/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.135415404 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.18854751 seconds)
    (53/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076707939 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.098561207 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.143871647 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.173800383 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23190016 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106509983 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.15984826 seconds)
    (60/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13700988 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082996518 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076530123 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196355417 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083025991 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118172709 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127403561 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102818312 seconds)
    (68/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.134703721 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.153932005 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110642701 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102582807 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079571781 seconds)
    (73/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.307721883 seconds)
    (74/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.17867712 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083615452 seconds)
    (76/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.14358914 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.14005992 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111860873 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107757697 seconds)
    (80/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153720107 seconds)
    (81/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077098212 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123286627 seconds)
    (83/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.082087603 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130426571 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124154126 seconds)
    (86/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077376459 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083057559 seconds)
    (88/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.212651134 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107111735 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100060769 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134790953 seconds)
    (92/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128372819 seconds)
    (93/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109820041 seconds)
    (94/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157458221 seconds)
    (95/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.076770936 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089090589 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102572541 seconds)
    (98/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.200372827 seconds)
    (99/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076366974 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126679796 seconds)
    (101/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.194836718 seconds)
    (102/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.12937127 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08384048 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079007743 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.109639571 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079540841 seconds)
    (107/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.14224239 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077888326 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07935681 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.109088662 seconds)
    (111/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.147884378 seconds)
    (112/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138976402 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126521816 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.137666319 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109932975 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124663688 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110294682 seconds)
    (118/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112250238 seconds)
    (119/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.15808819 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110879114 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077506015 seconds)
    (122/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079678359 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084128505 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.105632707 seconds)
    (125/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.130919232 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101416039 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078536104 seconds)
    (128/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.135883132 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102904706 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.129570806 seconds)
    (131/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.100918141 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122131802 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084464092 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122943847 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.124376989 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104431926 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110769883 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.102972661 seconds)
    (139/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111799063 seconds)
    (140/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077128454 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083481985 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080395 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136294846 seconds)
    (144/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086165846 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10301722 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085053134 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.128288241 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104111564 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103529226 seconds)
    (150/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.10107654 seconds)
    (151/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077363958 seconds)
    (152/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080313496 seconds)
    (153/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077314231 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.13403988 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125968184 seconds)
    (156/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.08044766 seconds)
    (157/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.08101107 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103459315 seconds)
    (159/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.103297074 seconds)
    (160/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077481082 seconds)
    (161/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079932302 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083199267 seconds)
    (163/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217199687 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084841096 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.1049799 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125974958 seconds)
    (167/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079117044 seconds)
    (168/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.136405614 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109601089 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.137025246 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124597408 seconds)
    (172/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077239082 seconds)
    (173/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.135291227 seconds)
    (174/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077187609 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10416604 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084610829 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136988091 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080689451 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103562611 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103654801 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124760348 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122566006 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10303929 seconds)
    (184/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107564447 seconds)
    (185/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07827804 seconds)
    (186/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.082673712 seconds)
    (187/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081126797 seconds)
    (188/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112370784 seconds)
    (189/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10159623 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079649654 seconds)
    (191/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11013272 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084860233 seconds)
  done (took 27.133407398 seconds)
done (took 28.05448577 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.222446723 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127660019 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109588866 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110780568 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.231004166 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118706227 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152630442 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11296213 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120639015 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136734706 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101344033 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123255408 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135186395 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.244478645 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113536994 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102928871 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.12716219 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.122485478 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126081605 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152154614 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206876377 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12934473 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122075859 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101989436 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233448541 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104067354 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135967919 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112142473 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124360926 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137052065 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111708619 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102870484 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151199535 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127121263 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102136732 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135489995 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101613341 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084436855 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112248143 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136758592 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124920075 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11143114 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13559308 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103392128 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111698213 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.135665506 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10160915 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115087331 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124858754 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111868695 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1043507 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.152132684 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109913279 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101006281 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100374356 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127747111 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122677123 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101898433 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148931788 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102258255 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103100262 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126289104 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114112346 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102166483 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134702883 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102200356 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112037921 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.137006598 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11016366 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104184967 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101372039 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136600262 seconds)
done (took 10.054616722 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105872192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146069693 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.24656229 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.251001891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155389244 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.117820919 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116369756 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151041134 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114843165 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119981249 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.163015841 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134359613 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.252572132 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11862961 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.14451733 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115727216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112870988 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135091201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.250752976 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126261866 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124339904 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.143631883 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128208413 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145174048 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106799894 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138234198 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135365538 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114122822 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105985475 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140347596 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126133079 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106070053 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133744731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123999637 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1230037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140532885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118502779 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11511415 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132557778 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109153685 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112674454 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145693178 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106980015 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142023088 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114293514 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121326253 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113533222 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141751127 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108499761 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113729965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131226534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130030362 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118243109 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.144377647 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118208886 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118103846 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.14446907 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119468894 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108448707 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142478523 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106986999 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105821557 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131378299 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126490666 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109298256 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142700339 seconds)
  done (took 9.75443218 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124625066 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136828294 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141828301 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116964595 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111239635 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12493146 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100608115 seconds)
  done (took 1.824406721 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106237601 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.267086827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.255867524 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.256583955 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.247400525 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.265539004 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124830469 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101977144 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.16431468 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112336422 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.266524256 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.322096267 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139930015 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11737128 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.259906515 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101930909 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.258835359 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130424127 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116929744 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.260162483 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119560875 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161270927 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115240562 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103058357 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.26037913 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.131152292 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.308264898 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121096964 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112649101 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143830022 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118200087 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206376174 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261317378 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116431636 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11107439 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.256042057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.24979196 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115702283 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.332944714 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10813931 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.245368004 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116787896 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.145550422 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11694434 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117621312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.242745883 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148158156 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118295979 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117275319 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.269869862 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140641279 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263798909 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114385077 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117425477 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.14004239 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11869582 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124569822 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144123495 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270423495 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119285002 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.258375943 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259183937 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.253515618 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.258846115 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127651778 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264478953 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.240227895 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116550924 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111108822 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146222575 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.260809842 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116799908 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114126245 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.247205458 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149272404 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.262930503 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.260815359 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114457432 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115973267 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133968014 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115530543 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103578255 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.250522081 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11699295 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142705158 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122037237 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115709896 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144836435 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109110104 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152844785 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116553509 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115001985 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.148431445 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117982112 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119242189 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.260210534 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.142323266 seconds)
  done (took 17.699289484 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104274503 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104400287 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108032384 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130505842 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10615952 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104755919 seconds)
  done (took 1.648579334 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141146371 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119075408 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152344163 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119503325 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166729093 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.248712494 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259649079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138885189 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137019589 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129329226 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.250591224 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.253738552 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253870133 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120927388 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257081225 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119612836 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.258742051 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143141108 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126564069 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115538016 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144511114 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121574189 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115941001 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.242322435 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118104265 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147483769 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111216237 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125280735 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153576583 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111938815 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148528873 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118337116 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110593812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.137826116 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.22933489 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137671068 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114614575 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119794703 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14758029 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118732906 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.256646882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114663254 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.15180883 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120400646 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111761418 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137799157 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120433262 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111419686 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.25665212 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.148643623 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121970608 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119301903 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146745267 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121439535 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109200408 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13888065 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122043941 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.258065987 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121304462 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137684129 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119359522 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118816785 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139367164 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122344958 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118276424 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.147249661 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110898251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118325871 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141879145 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.1200953 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120357134 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.145504117 seconds)
  done (took 11.733947453 seconds)
done (took 43.619326872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.747177626 seconds)
  done (took 2.740690629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.109579787 seconds)
  done (took 2.106111329 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.207194226 seconds)
  done (took 19.23320284 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419109232 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.34617796 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.996429504 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171942186 seconds)
  done (took 2.9276401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.103290509 seconds)
  done (took 2.112514238 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.407127541 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274812809 seconds)
  done (took 1.681137595 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724390721 seconds)
  done (took 1.724844549 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.894404868 seconds)
  done (took 2.896728418 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26841898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242781432 seconds)
  done (took 1.524119164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.663290143 seconds)
  done (took 1.674205079 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.975026643 seconds)
  done (took 19.992500513 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251590722 seconds)
  done (took 1.27344846 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289090323 seconds)
  done (took 1.308424416 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.667936963 seconds)
  done (took 4.687562992 seconds)
done (took 66.88739972 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118445858 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121995262 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120909789 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145594282 seconds)
  done (took 1.511885345 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121517618 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117637725 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120706271 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141902682 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123116075 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117723909 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142148174 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119999617 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116810106 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145125927 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117406061 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116298029 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146218664 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118513884 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11539135 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145694575 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1215385 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117702816 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143958809 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118857782 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118206722 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120206977 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.148295045 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121421586 seconds)
  done (took 4.055641853 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113554035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109369145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111486384 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133560979 seconds)
  done (took 1.489465176 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126254463 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129716426 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153284786 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123987625 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130165016 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153619815 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117722651 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115810956 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142867818 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126547656 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133232934 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155750672 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129285155 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120251465 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154386392 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113094758 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119324741 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154665338 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125311186 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126297346 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145499298 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124611587 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122100932 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152921541 seconds)
  done (took 4.214527071 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193552616 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129576813 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171405316 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163955346 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175145247 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115761927 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145226359 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149444912 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123486374 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.125875574 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144544847 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165988216 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123327485 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.147127229 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119760062 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149337426 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126813612 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123043371 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186886755 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121717014 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124197987 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.155102056 seconds)
  done (took 4.204674631 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121465795 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108898834 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133334344 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107033932 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120366703 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13670684 seconds)
  done (took 1.750242401 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107572408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103257544 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103504014 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129107479 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107927831 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104125532 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127309346 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103715424 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103186097 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103104591 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128287333 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10233089 seconds)
  done (took 2.343946043 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20437145 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146943965 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248493611 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38869901 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187994856 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159639434 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.305660587 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185442996 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176851121 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164465327 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180404365 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188792095 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153463579 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214219001 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141453393 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183735795 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171501138 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235355348 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170006256 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211234404 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182191115 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206572148 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187677916 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175425171 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139125793 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191205809 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119862379 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127401816 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193337924 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190680742 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173253805 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17712839 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140384192 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212727261 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260644318 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176301889 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.319447047 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132273524 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196817416 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188737758 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256461942 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140800586 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2175329 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179284251 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128567467 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218283484 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148315719 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211145775 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132811093 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172043875 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18083808 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205822472 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198403722 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13609042 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325515625 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133409493 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1669243 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174554948 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215043268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228362699 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177777495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150688227 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172363119 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215344214 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243488645 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140613551 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191648464 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12465866 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191261263 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232350916 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181160258 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186616119 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.218972678 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129493701 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16942825 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191382996 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181199369 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204902732 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19922261 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118317211 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178532969 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133064896 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125261599 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217640316 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120146703 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24388234 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130399753 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209267533 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205485768 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151140379 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188892666 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158395421 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189065523 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14574975 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099223582 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171498135 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156337828 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186508913 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126971035 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179335724 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138601913 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124390818 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179484487 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121543109 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197350446 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131482153 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186378379 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168291932 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159775136 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177813464 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175303717 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163265943 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196123683 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220872291 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130793378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131412032 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245332874 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196609289 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134885518 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196532604 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194281409 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17569385 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13316875 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192179327 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191241917 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169407157 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225883962 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1368387 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132986465 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163689391 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198497379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156591142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.186454925 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126136431 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163409118 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212693737 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153768227 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137397849 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208834238 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131263829 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122952227 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164167594 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135254211 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.169363227 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14908062 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137780859 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181342125 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165720026 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192991371 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183330716 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132537175 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199973893 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129756514 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194677968 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146719006 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11728321 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200324916 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223676768 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127876177 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20754839 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157444323 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205674968 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169670878 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154709338 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180429229 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155395668 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12012582 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190795701 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167943843 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1895065 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185742474 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202894166 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188763669 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162513683 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176438428 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1956628 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180827604 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184354518 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137575316 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199230922 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167428833 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147262791 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121199211 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125865936 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16489115 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129277612 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135721728 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207917571 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193398826 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204683501 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167357176 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164460858 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188614907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1522753 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157738635 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202546008 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136761875 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215652353 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188670082 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205487584 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139048897 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189165396 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119635046 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15395142 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132292451 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185929091 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135747639 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134645753 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168422675 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187906716 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193893512 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175776613 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18614937 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18927351 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228982889 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119401985 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159214869 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191839339 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194144731 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180774315 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132509169 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186608297 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190670196 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169987329 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219260284 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165577061 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207414853 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189471859 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193030343 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128872603 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171658771 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158661447 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165999671 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158132678 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16865357 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128801784 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146107197 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165039982 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13798263 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212653439 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141812656 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199799569 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.180583229 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167221894 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153513865 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139836148 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201329233 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143159057 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102754966 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193086285 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217096741 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147809649 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178174613 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166429544 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156623758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315313909 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208592587 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166904185 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163818248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136261322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199267099 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155354043 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187184837 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181278779 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169047475 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205544644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196638553 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137143557 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158574913 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145692759 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176803419 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134816236 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.179708118 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163846464 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170276821 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184190951 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163939143 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167383715 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203870199 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144642066 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178120766 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137097881 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252482945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197335778 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171054503 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.19212967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160834419 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211143819 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122423389 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125103828 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160395257 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18208328 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158074012 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176095438 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191442641 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206571659 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199405804 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159174431 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139019983 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157038196 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165738534 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176664225 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208190162 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133718751 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135742611 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212498112 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124729199 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159358323 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157500546 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312231604 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14397159 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196101683 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104003938 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306821838 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128766514 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160166037 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156492456 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196612362 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131473422 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184966329 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196196318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138577469 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186924468 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133598763 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20389597 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207335444 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164941715 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201065373 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142870891 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188556031 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183739356 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168463252 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172654707 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145403895 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156820711 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222390571 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202811056 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1300004 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196845284 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167437074 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19788983 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169566675 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167617194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180292829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156657142 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164470007 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165942401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121746348 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157152526 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192382076 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157433148 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171108909 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20027882 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129852895 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125885841 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175907076 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163978115 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167493226 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128538483 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213005229 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128251365 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209802866 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239212193 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128070406 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16418275 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169724167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128715461 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166019855 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141510383 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12978501 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.19974663 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175141267 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161223016 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171017138 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193017143 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191015841 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151845636 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140193806 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.292926705 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126890926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219140506 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147232061 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224656571 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146168937 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204174497 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197117944 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147728353 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192531886 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14505385 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.248384379 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162863029 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194431429 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129415061 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170566383 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137206764 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132128185 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178688715 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166360471 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17028604 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134756662 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.195904871 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143624409 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173590441 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140404098 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2290836 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148844905 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214595725 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183757237 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166990369 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172905507 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202319164 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126620222 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19174212 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197974058 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142003743 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149565527 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16271762 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135622763 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243447439 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124824044 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187730437 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173553983 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196634432 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169656071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163248204 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176095996 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168320845 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174145749 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155514958 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148834569 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196814763 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132750959 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125602704 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198313208 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186712221 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163146584 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170374249 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172726434 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194317727 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150451813 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132412928 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312573198 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158633022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222076216 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.128975619 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166635645 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143857959 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187043478 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162538197 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203314262 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129553136 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127183142 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172059729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157798977 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.160031803 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167213232 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208146301 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155239643 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213856874 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133664693 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281487192 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140525273 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200427931 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113839896 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.157884463 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13995886 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133548058 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170410637 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204890511 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212866874 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192387942 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145312962 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164427683 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124476304 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129113346 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188881072 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148322563 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198054026 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146297445 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.100861289 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168063691 seconds)
  done (took 84.478477188 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17539081 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169933481 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.183744944 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.235099799 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21039121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.305154867 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.246726277 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262532686 seconds)
  done (took 2.903311099 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120983192 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160095428 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140189545 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142645514 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110440092 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.508864919 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161862203 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118963383 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16032353 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15388556 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13584444 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.568973052 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115337362 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145611114 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119884379 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13474409 seconds)
  done (took 4.104451341 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.702847408 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549356382 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.244915013 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.309006892 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237388987 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.2101006 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.823009546 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196410172 seconds)
  done (took 13.383078882 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173988815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168194573 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.458653087 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.337523368 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.214495713 seconds)
  done (took 2.47156262 seconds)
done (took 127.921089549 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127167498 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123731377 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122936164 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154887713 seconds)
  done (took 1.633873903 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195450343 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089613979 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090811409 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119111865 seconds)
  done (took 1.612735181 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372481165 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088434919 seconds)
  done (took 1.598316169 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145623826 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133807728 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164711029 seconds)
  done (took 1.573771498 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137417754 seconds)
  done (took 1.253847854 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118280894 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115080696 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.27643222 seconds)
  done (took 1.633538455 seconds)
done (took 10.430171253 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144238035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934680381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434581381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132595702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713736642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42802957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427420694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176551572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169144414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140043088 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130935644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692939794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.4425245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.884613819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397786898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.914089634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694798549 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110972631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147117381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110657926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.407038702 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138399233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110930098 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111739419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.72094559 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420378248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109909507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924519662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10846491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112923927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428485284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109775692 seconds)
  done (took 21.043299641 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150815686 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167595894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146483432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1126234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113179686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14133166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121194741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12151671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201103646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109840574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162379657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108862238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115403363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140580656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134538198 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109312155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143089844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111440219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118835153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140965761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132418026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110299501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141232974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11268507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110925767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162157562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109811869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121409154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139841176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113743025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115623362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140357374 seconds)
  done (took 5.311638023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161825816 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176806981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148338486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1490054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189426463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112452289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227998337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147719413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203791208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132511823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140007679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151223979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110856276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165670299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109518676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113540765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142712352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118082334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112000416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162549372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109765564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111849698 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142002695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110893501 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133796134 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140757914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122893561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110661279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144021736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115848111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110766879 seconds)
  done (took 5.567929484 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127187612 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12685412 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133724337 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165072946 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121552748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124721377 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156153936 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121090818 seconds)
  done (took 2.215277306 seconds)
done (took 35.270972797 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136558916 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127176438 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13206428 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15638546 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.273243406 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117654836 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129262737 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.149756055 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125093072 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132136287 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110275056 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151295915 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130935296 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12222504 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.271949945 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.159042641 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.277861312 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.242536149 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.15172083 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126450577 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11934737 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.278877572 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15651725 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119555846 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.269173266 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113473438 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.266193836 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122982398 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.153330323 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110723508 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.276930118 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121642634 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119729681 seconds)
  done (took 6.576864278 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.226039498 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15243817 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120249439 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120196011 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120393382 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150596735 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.2278252 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152383624 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119308957 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118990341 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15067775 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.21080488 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158502419 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11626681 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121954615 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108740085 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.261005327 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120589217 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.143608625 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.091038811 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116047579 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118608728 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.272271983 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148148937 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119094195 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120072811 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121225052 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156623199 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122648488 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122568589 seconds)
  done (took 5.555879976 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125490958 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132927798 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13903423 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216105065 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153168988 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163068083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136331024 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132069867 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171978015 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113663267 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129106781 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180347864 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130426851 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124334665 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144933933 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129530228 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129407727 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144988829 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121625522 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131878014 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162838794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129091905 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134948375 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152507033 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112153997 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121663377 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123192691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.153987669 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121954684 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128168324 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14427533 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115411254 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115298112 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179183121 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115381851 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127078171 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164543968 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126515041 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126645016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.176755228 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11520655 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114910213 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170503456 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172837692 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114508347 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154270176 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114825007 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127680412 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.14248453 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131372572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156141993 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144242155 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133418083 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111637381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.141774523 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121430386 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113000752 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147261743 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127814298 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114962245 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133142071 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.150358435 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125341288 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114559051 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.154390443 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112527508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112324759 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147647407 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139963609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120620437 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.181617508 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112939851 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124641549 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156143669 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125650475 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125667866 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.14232173 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124819853 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125172342 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116553509 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.155907745 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116552112 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114175203 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.162074102 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132802781 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12731605 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155337212 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124358482 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114212219 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145930079 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130850578 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115544022 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146714118 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12505033 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11473519 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115913064 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154252227 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122461522 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109946174 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168963386 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116102892 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113055508 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.170526224 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115512804 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11722601 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152684989 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.15455471 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112816092 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152391935 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123918761 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112969813 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12036817 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145673343 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112265882 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128083815 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160154165 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120597319 seconds)
  done (took 16.934543422 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.368436447 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.361015182 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21202787 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.403359603 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125273962 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.279153236 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.393017575 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.364367424 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112537565 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179568645 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169104814 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.327522236 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146839413 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140543012 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.365563525 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.441220982 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.140970929 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184827065 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.146923013 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.159546196 seconds)
  done (took 6.182452392 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121240837 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149063928 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165714579 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.131853429 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124265244 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16121226 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115224709 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134421773 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.123226144 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.153805382 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116743057 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120678824 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.158199936 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128269454 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128361505 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.176558695 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121310468 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117566417 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.166456363 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117324906 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100115804 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.169904427 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121802849 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.13488084 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.162130254 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123515847 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112924974 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.149000373 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120459172 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123004119 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146928531 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.121410551 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121100036 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.102219075 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.155307738 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128232787 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12009537 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.146209025 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119355611 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116974791 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12640511 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.158254901 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121755985 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097021066 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.163860013 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10835044 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12662979 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124778926 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13407969 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132287841 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125662279 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.158029384 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120461129 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13476616 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.150961166 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129619207 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124369307 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.15757297 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117586252 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112118028 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11122413 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.146346753 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122024177 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.126958253 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.156144786 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.121646056 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.121847897 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.142251749 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117465217 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116101286 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116364937 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.155519009 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133642554 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122045617 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.150706665 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.123217136 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122283916 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122825186 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120386259 seconds)
  done (took 11.561949743 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13736237 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123938247 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129372247 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176192587 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125822494 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118747084 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15445763 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133198013 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128164902 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163253441 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127146057 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126992336 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166034521 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124136526 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123462278 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160159822 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125132463 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151457389 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.155890634 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139954599 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127445466 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149499388 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126891136 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124822507 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172422275 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124628907 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139492529 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156411231 seconds)
  done (took 5.083333991 seconds)
done (took 53.035083793 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.294102554 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.575839637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.26382049 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.26189301 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.29061021 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.299154593 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.265978236 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.262296483 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.814585221 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.23270103 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.262354451 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.261305226 seconds)
done (took 29.24625017 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.41343365 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.482965327 seconds)
    (2/2) benchmarking "String"...
    done (took 1.663774004 seconds)
  done (took 4.306580537 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.259824731 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.252750368 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.583061366 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.251289008 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.253163549 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.252711465 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.268720625 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256441549 seconds)
  done (took 16.269648047 seconds)
done (took 26.403582886 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.26018155 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.526049018 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.509984894 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.233196414 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.268091843 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.261418788 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.257127949 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.306445813 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.265357348 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.234030249 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.808447149 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.543850304 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.255432901 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.651268782 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.22940948 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.287173041 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.268382173 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.574793414 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.254520634 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.233119519 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.24624528 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.23744458 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264704332 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.280567731 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.269392567 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.256283638 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.298207125 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.269071996 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.525277481 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.28112304 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.238072873 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.276413292 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.289539403 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.254484945 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.280872519 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.260949385 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.535919407 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.267788103 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.23512564 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.261235594 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.526797367 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.277108423 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.266419563 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.257419955 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.2352619 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.261012661 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.238277577 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.440677477 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.278473401 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.283280716 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.323021454 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.659922117 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.265020992 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.258472883 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.254490463 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.566336473 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.253214044 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.385348933 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.283622449 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.260493251 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.265967341 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.256607422 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.328450147 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.254245739 seconds)
  done (took 147.889186121 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.255339803 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.255880235 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.254761726 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.271854961 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.256427371 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.259576096 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.256761353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.257622425 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.256807726 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.26895117 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.256200108 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.263474846 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.259673105 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.27013959 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.27033724 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.287069187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.258699797 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.256017892 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.267260034 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.257339987 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.269949203 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.255650806 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.259875086 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.263538402 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.280528341 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.367694453 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.297163488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.286977974 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.271975368 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.262793125 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.277216607 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.271911812 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.257996285 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.233878205 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.261119309 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.267238382 seconds)
  done (took 82.781944201 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.257421353 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.256390564 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.259024838 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.296157493 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.259365035 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91212423 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.263190731 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.322958248 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898823377 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.352812045 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.262663919 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.870681879 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618748306 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.265217805 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355970406 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.274711261 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.264963233 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.262907036 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357911715 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.28442304 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.265914541 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.260763119 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.914523907 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.277969846 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.315618907 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446636335 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.276310067 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300432828 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.656979634 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263804078 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300159399 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.606343167 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.31362417 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26006275 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.690844555 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.91392879 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381173472 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.264093989 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298916015 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.263768109 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.553310585 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.260002686 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.261654992 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.267821767 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.981825063 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.265162281 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.91672719 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268021444 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.274470447 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.263488255 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265116326 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.461992618 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.147950797 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.264121087 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.264923563 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.265728624 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.261165544 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26250021 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.298263068 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.391676414 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.187103472 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.263472751 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.266582922 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300076497 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.26296263 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.344035858 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.263379931 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.04642399 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.322338825 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.366777158 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.921516696 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.266846503 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362485271 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384443091 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.261481017 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.262635004 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.261970953 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.263554953 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.379283147 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.26408896 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.262314572 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.003066172 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.454443334 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.278919128 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.888122155 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.368793197 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.262348027 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.708015384 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.270071913 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.264773893 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.042618339 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363019348 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.264125906 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.265737563 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.265577837 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.997362793 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.904921289 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.609399841 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.270297711 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.112551673 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.268522624 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.184714201 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.883497824 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.022473458 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.269612148 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380994958 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.453282152 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.281970703 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.267020548 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.901127581 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.26973472 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.325041054 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.270746161 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.669619021 seconds)
  done (took 387.082823741 seconds)
done (took 618.905247534 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.245194029 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.248050748 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.248114652 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.242479438 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.244859699 seconds)
  done (took 12.38807414 seconds)
done (took 13.55030315 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.566519038 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.551034737 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547480375 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.359550541 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.564701 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.571777668 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.473504207 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.3711942 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.545345885 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.575672158 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552991062 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332635316 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573870812 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.537902131 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.319827961 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.452776851 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.50042467 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.493161735 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.392169703 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.462647799 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.598594207 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340994899 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.331365183 seconds)
  done (took 35.179058315 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.648212528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.28142168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405480334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.635211503 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.342173262 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.645561143 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.694903241 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.279752684 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.524083125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320832559 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321241828 seconds)
  done (took 19.261059525 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.680362077 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.278612874 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.415593771 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.624462859 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344213814 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.69145001 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.694492016 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.281216138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.510929288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326030077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.32020678 seconds)
  done (took 19.329378967 seconds)
done (took 74.937114421 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.329639474 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40611603 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.329618941 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.308381673 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.309440258 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.309810347 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.314722982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.310921242 seconds)
  done (took 11.779488719 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.310034538 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.310438778 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.318498463 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.310427394 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.309855674 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.309711801 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.309099572 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.309294639 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.308450816 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.311831972 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.307448035 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.305528378 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.307858982 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.308621159 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.309818378 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.31208836 seconds)
  done (took 22.12681927 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.313718874 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.311115471 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.308815457 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.309943324 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.309133166 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.311459788 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.310814874 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.308350525 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.309688334 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.310845045 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.311384359 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.309886125 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.310899871 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.310936049 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.310282055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.31181109 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.313538335 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.312388817 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.319045669 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.313663211 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.31642278 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.313138493 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.314114875 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.310690556 seconds)
  done (took 32.649009627 seconds)
done (took 67.720206392 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.285401517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.275931388 seconds)
  done (took 5.729047179 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.407072855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.405554575 seconds)
  done (took 3.982347127 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.308421902 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.311055268 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.318080743 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.310195521 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.314595522 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.310736372 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.31312222 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.318464729 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.313075496 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.315431104 seconds)
  done (took 14.298127926 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.310568754 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.311271636 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.310538372 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.310323471 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.313299897 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.311283369 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.310000943 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.312466201 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.311011966 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.311385477 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.313086043 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.312910881 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.314582183 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.313259738 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.315417694 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.313875599 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.313774328 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.311380519 seconds)
  done (took 24.79002274 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.333317456 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.338607724 seconds)
  done (took 3.839205391 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.490762617 seconds)
    (2/7) benchmarking "second"...
    done (took 1.390732788 seconds)
    (3/7) benchmarking "month"...
    done (took 1.479156951 seconds)
    (4/7) benchmarking "year"...
    done (took 1.467286029 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.395012243 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.345164563 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.395658275 seconds)
  done (took 11.132680071 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.305508194 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.670241166 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.870714565 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.515657334 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.29909837 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.327276953 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.252567034 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.330199322 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.335299831 seconds)
  done (took 15.078817914 seconds)
done (took 80.018984469 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.281479439 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.289004559 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.30938669 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.316260049 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.718522935 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.281007243 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.283230291 seconds)
done (took 16.650222141 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.256015517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.259458134 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.273302632 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.285578354 seconds)
  done (took 10.242874252 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.281248753 seconds)
    (2/2) benchmarking "read"...
    done (took 1.688294719 seconds)
  done (took 5.142022739 seconds)
done (took 16.557142637 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317111206 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.31514196 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.317515237 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.317145846 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.317363262 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.316269548 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.316917465 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.313322805 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.314442151 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.316606812 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.314602227 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.313668938 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.316488989 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317806825 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313653294 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316180011 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316824786 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.315831224 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315259783 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.31737751 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318830628 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318278882 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.316712481 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.31787066 seconds)
  done (took 32.764174272 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.317282107 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.317099542 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.316786653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.315409662 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.317209472 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.319941663 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.317605891 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.317143402 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.318466755 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.318889643 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316760113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.318463542 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.316521326 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.317318075 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317492259 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.31991652 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.320133726 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316672672 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317407332 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.315847637 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.316382831 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318330913 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.31783504 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321138324 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.319560749 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317419695 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.320028057 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.319493561 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319077586 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.316501351 seconds)
  done (took 40.712388986 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.326097334 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.325099023 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.317008609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.319150292 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.318510196 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.320634349 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.314859173 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.319878736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.318331403 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.321238196 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.31712252 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.318841943 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.31745678 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.321520425 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.320721999 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.319315606 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.320412812 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.320814749 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.322317454 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.321172755 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.319889771 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.320543904 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.318316386 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.322419492 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.31981078 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.319413034 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.318573752 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.320403873 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.320991378 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.321587962 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.322009245 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.325701195 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.321981588 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.321463924 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.322357613 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.319862813 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.326240998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.327269062 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.32253899 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.321942546 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.320283885 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.321913073 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.321751949 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.322199143 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.322326045 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.321268508 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.325470229 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.325675074 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.325614032 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.320868387 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.321252374 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.325745753 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.32269767 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.320879841 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.324657556 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.32146511 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.320345555 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.321749504 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.319094488 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.323631308 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.323590102 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.323021244 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.32283414 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.323108965 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.323129918 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.324110978 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.322635441 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.324001188 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.320793587 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.323623556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.322518388 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.325185626 seconds)
  done (took 96.342661663 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.32336214 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322717574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.323800463 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.326025397 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32314207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320852882 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322763949 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324209175 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323741308 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.323020197 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323296489 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.325240381 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327774433 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325603347 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324887334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.321194057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.323230349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321493187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.323293346 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321370755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322200888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.323602813 seconds)
  done (took 30.2953099 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325370845 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.325505918 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.323601347 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.324724255 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3263415 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325088687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.323027251 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.325273486 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325488528 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324164267 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32513555 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323342304 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.326056477 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324922324 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325745194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328235804 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324891035 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.32958863 seconds)
  done (took 25.036643208 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.326575468 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.326011708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.324590368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.325086941 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.324352559 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.3274811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328384566 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.327657937 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.327331499 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.32583103 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.327039703 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327399246 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.325291994 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324577937 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327395474 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.324740597 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.325171099 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324388807 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324508933 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325507036 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.326807061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327606953 seconds)
  done (took 30.351579556 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329576757 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325771524 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.327349798 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.327821087 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.330434618 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.327163112 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.327778833 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.326151741 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.327794547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.328476757 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326419931 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.327497722 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.329150725 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.327961328 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.329445804 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328253195 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327316554 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328995818 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327034255 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.328900205 seconds)
  done (took 27.74118713 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328737195 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329924707 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.326483766 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329216935 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329825322 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.326434597 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325583512 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.329235163 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329725938 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.331535735 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327384369 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33202658 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32845748 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327554851 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329022985 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331694274 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328399722 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32870395 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327072458 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327757531 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.328461671 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335525349 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327462312 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331779691 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.329867576 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.330871405 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330836205 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329062375 seconds)
  done (took 38.405511065 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331160269 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334234961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.328716871 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.330366872 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.331538809 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.330959335 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.330810084 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.331321462 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332377392 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.331274459 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.331011995 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.333402663 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332667234 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.328236503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.329056439 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.332239247 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32998903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.33247957 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331596566 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331908408 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.331333335 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3314103 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.332397088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331710409 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32970324 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.331882706 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332187634 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.329727265 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329947056 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331044192 seconds)
  done (took 41.121687333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.358911982 seconds)
    (2/2) benchmarking "in"...
    done (took 1.358343125 seconds)
  done (took 3.90062144 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.330843049 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333540948 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.331046497 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.33128305 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331345767 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333463425 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334174827 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332598161 seconds)
  done (took 11.845682751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.325354642 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.334863114 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.333058834 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.336111876 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.332157392 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.32343247 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343454848 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.33619834 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.326146991 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.329038979 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.333502466 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.333700466 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.33211891 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.33047303 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.328419836 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332394503 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.337133793 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.33563039 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.333723932 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.332607589 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335384618 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.331690782 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.332725831 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.335663285 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.329913112 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.345480735 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.341721387 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.339789647 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.327330522 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.343258106 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.33020463 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.338666461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.33814321 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.336433774 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.33623326 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.338577413 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346360944 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338350079 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.34744956 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3417378 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335210923 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.334080542 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.334355019 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.338268993 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339563222 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.342823763 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.338150054 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.336579253 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.327168211 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.336149381 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.344365998 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.331920631 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.33702526 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34188335 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.336975254 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346753104 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.345167636 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.33219804 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.335123342 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.347811688 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.35513287 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.345568664 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340367444 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.340816873 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350241466 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.357767213 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.353163276 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.344173586 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.336555298 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.339996308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.347365612 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355816267 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.359786674 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.341932519 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.337322156 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.338165349 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331701119 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.341737522 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349930183 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.347178576 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.343783173 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341007261 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349057517 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354330883 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.333331145 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.344123928 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.338277096 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.338216054 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.334669374 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351322539 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.348569815 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.341534632 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.331153005 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.335177818 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.336040567 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.341929515 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.331152516 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337115355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.344445896 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.342752385 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337558358 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338029089 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.353993898 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347658526 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.341278385 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.35262906 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34664415 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332562542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.354645448 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.347056773 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33882493 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.336318955 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.344729173 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.347359396 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341255267 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.34637638 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.346800177 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.342638404 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.347999211 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.340763585 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.356816324 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.367914593 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.350010571 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.340554968 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.342837242 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.349749573 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340266035 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.346270989 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.347511021 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.341331953 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.344958811 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.348447452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.349490114 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.34135968 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344477186 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338137343 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.347386145 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.343925859 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.342623598 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.346473877 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.345549249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.338299794 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.349680081 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.352982736 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.349171288 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.343452893 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.360753906 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.343862023 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.348879491 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.35215791 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.350715409 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3440881 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.339383661 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.347057332 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.335086396 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346614258 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.337632111 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.347050138 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.343220252 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.344282468 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.342659147 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.334118117 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.340253743 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.349155015 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.35157739 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.344335407 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.351378831 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.344301255 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.344814099 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.337080156 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.345120005 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.337221304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.346527865 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.35336826 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.345788455 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.35054772 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.349017008 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353940539 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344332055 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344452671 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.344688734 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.353022057 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.35060911 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.354992 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.354939829 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35016932 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.345433801 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.340113711 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.339038714 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348991377 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.344340017 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.356760032 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360324801 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.358634782 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.342560181 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.353023454 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.339829108 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.35351807 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.354623937 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.357173563 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.347480291 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.345769109 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339906702 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353403041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.3457425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.352023676 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.339887286 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.348631206 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.349330316 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.34702716 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34570695 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.341340055 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34542123 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.349637199 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348527561 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35000652 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.344239725 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.35304259 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.339264651 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.343502481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.353743726 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.346207643 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.356289582 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.357089194 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354239111 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360343449 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.346864779 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.341861839 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.35284012 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354998845 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.349190914 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362888745 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.348718157 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.342834658 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363600008 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.356349715 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.339905654 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.357131029 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.358855341 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.349232748 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.341406264 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.35748701 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.350712336 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.347589592 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.349623091 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344593471 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353645809 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.361415652 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.361270103 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.344565395 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.356398883 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.347579395 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.358106362 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.355740629 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.360322846 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.355254393 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359543557 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358755607 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.352341034 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348734081 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.355019727 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.353659847 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.352436857 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349344983 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.359803157 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.362575786 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.356428635 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.355355593 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.353655797 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.363913526 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.349557021 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.357178242 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.344372284 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.373823166 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.372680912 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364931253 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.358908909 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.357906057 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.366083355 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.358125709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.349738539 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.345355299 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35144539 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.350704374 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.349809916 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.354795048 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.352913244 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.360772833 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363942999 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.356862489 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.360419855 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.357364648 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.344865922 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.355337435 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.352467866 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.356266813 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.345418157 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.355957835 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.356617975 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3612495 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.35707313 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.348370697 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366024269 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360436477 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.354520781 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.348047612 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.350673643 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.348980481 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.354687981 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.360824027 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.350259904 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.361648852 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.353027016 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.355416844 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.352880279 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370575336 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.366060726 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.353699238 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.3608139 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.354821588 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.348441796 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.349893097 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.359099855 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367720015 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.368863038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.348553332 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.356577676 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35720555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.352198418 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.35706021 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.355619105 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.354701111 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.354488374 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370898353 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.363467799 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.35378626 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366541584 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.36676745 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.358108387 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.35993802 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.347157484 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.364538744 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.367193412 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.357584648 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.35312647 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.350334914 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.362506293 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.356555048 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.357488616 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.35844181 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.357735855 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370046359 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.363334123 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359351633 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.358237106 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.370859661 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369624866 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370807558 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.371470283 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.355406089 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.364278446 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.357925125 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.355643969 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.350427383 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.350655415 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.36248988 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.349670234 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.366556809 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.36061995 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.362902782 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.364903246 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.364565494 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.351043733 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.369112581 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.382056266 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.350844405 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362820999 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.36143856 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.349559535 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.361049335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.357673696 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.349495282 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.354921461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362395176 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365432085 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.355005061 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.365173672 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353440546 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363199538 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.363184383 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.364069691 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.363954452 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.360772484 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.351706596 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.363082065 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369635063 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.371989343 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.359995429 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.36180823 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.355405461 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.379181389 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.374109864 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.360828775 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369310302 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.361867106 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.356942807 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.364172847 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.36832065 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358558515 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365124993 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.356964597 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358882578 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.359712782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.370245755 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.363118662 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.364440059 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.351877777 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.354383612 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364490275 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.365084205 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363733545 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.364385863 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.367646472 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.35579308 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.357945029 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.36740545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.360310275 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369587082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358873848 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.363691501 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360495354 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.365511844 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.362912211 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.362618738 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.352722159 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.36163656 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.376443681 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375158112 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.372036347 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.364169704 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.366029018 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.356654292 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367407405 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.365518199 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.357686826 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.361438909 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.3683562 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.361854814 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.361055551 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.35877614 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.364080097 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.375156576 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.367962085 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.357518787 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382915523 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.381530711 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371473146 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.356581517 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.361853906 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.362207164 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.365861399 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.364598669 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.357722724 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.380686887 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.372259489 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.36952178 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.371143007 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.368817851 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.361989887 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368044847 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367359844 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.369736892 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.373168055 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.372392258 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.373795509 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.365553958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.365168922 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.357486102 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.361870039 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.366338066 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.365309513 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.367102688 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.375006417 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.372231482 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.365648243 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374654137 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365688752 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.373594854 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.366347634 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.356741384 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372300346 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.360110249 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.377284849 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.371694264 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.361646338 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.37290573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366463571 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367099127 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.367826384 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.374788093 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.364734579 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.360201322 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.367128879 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.380237808 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.377662271 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.366202365 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36396004 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.367903558 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.372446804 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368316181 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.365219837 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.364084358 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391055384 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.382382425 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364072903 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.364431259 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.380987904 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.377618551 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.365750072 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.367445399 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.370650066 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.371801401 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.376099433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.36727352 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381757484 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.376252385 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.36379703 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.373318842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.367100383 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.371920968 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.381810983 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381067383 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.372807184 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.370408835 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.393415182 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383464685 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.383122462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405306848 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.37981876 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.377753764 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.374174467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.366364047 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.3731698 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.374870715 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.378002119 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.370248968 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377889674 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.369719572 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.361550375 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379176081 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.386986781 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.384473682 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.372202219 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.360701664 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.367442327 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.373549528 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.371121495 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.372548981 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.369776701 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.371384936 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.373019781 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.368544911 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.393089372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.403654054 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.376852322 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.371429495 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.369900809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.379989313 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.381245618 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375440969 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.378256411 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.37567389 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.370509755 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.377816481 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.381585536 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.374090937 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.367405589 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.370569539 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37197314 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.377173802 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.393836465 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396619989 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.381888787 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.376431109 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.375751693 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.372822969 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36978194 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375868747 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.37210968 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.368134034 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.370903521 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.378866335 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.375286899 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.374474017 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.374155261 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.378462303 seconds)
  done (took 809.567496628 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.374540715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375814201 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.374787185 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.374392442 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370863501 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372411115 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376035668 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.372617705 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.373635223 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.376925515 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.373972836 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.374168671 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.375065852 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.373508601 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37360568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.377786868 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37484655 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.379305916 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.37251881 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373513419 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376199516 seconds)
  done (took 30.090165796 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.374941884 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.376046843 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.376900861 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.373091718 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374452366 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.380308069 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.376548932 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377295255 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.380771535 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375123959 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.377498353 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376467357 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.374675649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.376150906 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376627922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.376195744 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.378413344 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376383757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.375551598 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.378299294 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376282278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.377556811 seconds)
  done (took 31.509899968 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.375370709 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.377871446 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.368623342 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.383496742 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.377499122 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.376643427 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.377023084 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.377818576 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.376947376 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.368080536 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.369805826 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.36929794 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.381092177 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.386096793 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.382041599 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.38494113 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.378268983 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.378481859 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.377813827 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.375532392 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.387054806 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.390964522 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.376152373 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.369067254 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.384277428 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.379557415 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.380281459 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.378682443 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.368642828 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.381013396 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.379030392 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.373029 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.388955467 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.381173821 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.37053839 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.384114558 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.378549884 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.377236239 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.377515325 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.389687962 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.401518167 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.375522195 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.391631436 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.391810718 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.378787484 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.381578132 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.387263702 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.379228881 seconds)
  done (took 67.452010135 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.379910672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.380446145 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.379619992 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.380126621 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.379654424 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.381256722 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.380661605 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.381095669 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.38091052 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.37999078 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.378763738 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.380110487 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.379129008 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.378302087 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.377886252 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.37801483 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.381078628 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.383437446 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.380409967 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.380161961 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.381391586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.385913809 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.379833986 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.382045719 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.38187803 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.380014595 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.380570392 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.379305357 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.38033384 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.380501599 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.377431237 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.378440094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.380942018 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.3790797 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383052342 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.381703916 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.384070348 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.381577783 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.381178919 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.38293892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.384592273 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.382835764 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.38097624 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.382008984 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.381981606 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.384042272 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.378242932 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.380959897 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.379689345 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.382732329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.381028691 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.383041238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.385396914 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.381761815 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.385231041 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.380871897 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.38393332 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.385157917 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.385754152 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.383409022 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.380138773 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.382829828 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.38470339 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.384257453 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.383470552 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.383624063 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.38197972 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.387062698 seconds)
  done (took 95.171437655 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.385022984 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.384040666 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387509264 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384156952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.385527378 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.386527226 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.385715739 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.385663987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.3854032 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.383388418 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.383213396 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.384833085 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.385341739 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.385735924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.385968425 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.384663022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.386973232 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387259581 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.389095498 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384849289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.38715021 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.3872204 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.384614342 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.384089765 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386887536 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.385132286 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.384835949 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.385198635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386373784 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.386405702 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382979078 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.386711677 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.384466558 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.387273759 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.38751059 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.388576998 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386406539 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.387847784 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.38830287 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.389298598 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.387388927 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387710476 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.385833143 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.388447721 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387449061 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.386578699 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.386478337 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.391270566 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.386816997 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.385760717 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.385353682 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388531601 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.388710952 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.386886 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.385809816 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.388528597 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388933676 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387864267 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391725442 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.389038508 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.387266495 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.387739251 seconds)
  done (took 87.202313997 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.388269277 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.387698045 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.388708369 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.3866836 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.385353613 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.388627213 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.389034877 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.388718705 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.388581886 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.391112724 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391119778 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.390910813 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395316332 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389084604 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.386288368 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389602895 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390627607 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.392563538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387723048 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.389073429 seconds)
  done (took 29.020877097 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.388485366 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398479653 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.389869899 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.388493327 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.391604826 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.387946679 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.387216699 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393372021 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392405277 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392238985 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.391042464 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389589626 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.388257963 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390984497 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.39123369 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.391161544 seconds)
  done (took 23.48902336 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.390311435 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.39192435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.395332116 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.392981049 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.390162395 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.393773608 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.392815385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.391350604 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.392534344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.391353747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.391068934 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.393432433 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.391321969 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.392468973 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.389387784 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.391855416 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.391226566 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.39140941 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.394038307 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.393656833 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.393092795 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.39174814 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.393751538 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.3924879 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.392369309 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.393653271 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.393791557 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.391375189 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.392433004 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.39159435 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.394246364 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.393853646 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.394078395 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.393009684 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.395129436 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.395987995 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.395974446 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.394176872 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.393632459 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.395612948 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.392567868 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.394961538 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.393242394 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.393066046 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.39170442 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.39230268 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.393302807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.3944943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.395508185 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.396244173 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.394839037 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.395931704 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.394087824 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.396464523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.394240008 seconds)
  done (took 77.866581569 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393865798 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.393483487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.392943404 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.39408503 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.395645633 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.395175741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.394259703 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.398299462 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394218357 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.395823519 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397131996 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.396639335 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400754733 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396472973 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39917625 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396741863 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.397111113 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.397229005 seconds)
  done (took 26.367100594 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.396463405 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.395972351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.399182606 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.398251481 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.396556643 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.394695233 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.396700097 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.39513251 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397366802 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.397817208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398675558 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.395139703 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398047755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.395976123 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.397526948 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395814161 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.396626065 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39560757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.39603032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397061246 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.399143634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394710808 seconds)
  done (took 31.972197512 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.38594014 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.390257867 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.386684787 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.415964838 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.406614836 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.389440864 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.388145168 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.389507423 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.418229301 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.438854061 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.43652674 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.407329591 seconds)
  done (took 18.094189283 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396871767 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400086422 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401494631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395687468 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39733698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396635843 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404959667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397606567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399216409 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401516003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399114441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400318294 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397372668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399397298 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398536224 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402401381 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401273794 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396886574 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398078974 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401270162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400525025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400579501 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400519507 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402804225 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40252046 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402607343 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40186926 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401498124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401217012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400367742 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402442098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400093685 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399261806 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402958644 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401370035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402112168 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402020816 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402779013 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399062968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404106975 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.401259615 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402898371 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403190797 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401478777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404240302 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402916739 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402102041 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404187641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399535024 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403373013 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400162409 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402229362 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402620962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402920791 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403534555 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403762937 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403879012 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404880886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403521355 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406399585 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402267495 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406239927 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401408308 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405025737 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401285387 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404385083 seconds)
  done (took 93.740974256 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404328372 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403016892 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402311635 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403846048 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405106823 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401540029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404206708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403256727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406675388 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406531794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401979819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403125635 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40293867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406967465 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40084385 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404636791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404308117 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406079502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404377609 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404432994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407006645 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407927921 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405323051 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40513441 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407267363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408737033 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407497001 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404916575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406424797 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405562188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405362093 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40445681 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408072283 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.407560627 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402963463 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407993362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406054499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408977636 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410681484 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410257617 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410400163 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408738849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410535097 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410165566 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409783116 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410645446 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407584023 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408539731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407683826 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408374347 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407329731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409498233 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410960151 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408512353 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407367097 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410464348 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409766633 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409322443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409875656 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408357236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410993745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411125186 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409877192 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41171744 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412383516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409522398 seconds)
  done (took 94.118160349 seconds)
done (took 1895.352558569 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.628577559 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.581597981 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.398395983 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.459541049 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.399935006 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.41818614 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.400765279 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.416112342 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.394187837 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.399514212 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.401208631 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.656515539 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.437053273 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.401525501 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.400217025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.551485493 seconds)
  done (took 28.594781292 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.438230798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.417537035 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.560266149 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.4065869 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.442822024 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.679645645 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.481326151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.407937979 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.628387102 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.432395977 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.378909008 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.437563045 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.40722434 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.388050882 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.433334294 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.67581939 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.784890383 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.382720806 seconds)
  done (took 31.039033945 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.018831934 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.416373339 seconds)
  done (took 5.689062485 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.433710879 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.40623888 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.408770068 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.406009591 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.377083286 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.376093077 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.406790556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.376122201 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.37470568 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.572210894 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.413107211 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.427100401 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.427608357 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.407511527 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.413172932 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.466168708 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.620051684 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.417751098 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.41406746 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.421422166 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.406492753 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.566596422 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.468594575 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.418956698 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.563940149 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.381279142 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.418449301 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.421045442 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.597591845 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.417152069 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.40579853 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.408195763 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.409343534 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.378079992 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.044163298 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.378181052 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.444364608 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.423685232 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.417702488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.622306789 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.410651592 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.421546413 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.379565027 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.04196225 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.591078377 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.586764839 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.414251142 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.413285307 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.4118493 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.491369538 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.412863046 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.411881148 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.515314343 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327431303 seconds)
  done (took 90.249026921 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.40653403 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.380953402 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.647210934 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.396528707 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378946932 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.379879383 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.38484 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.800538392 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.415369371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.381908901 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.814794465 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.150385954 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.387091124 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.422909016 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.404138962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.413353472 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.382873199 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.380547694 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.382914965 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.38286405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.085362741 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.387311892 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.401974372 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.542024513 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.458785646 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084754214 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.383818082 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.385274692 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.400629717 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.380917434 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.116070277 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.39418176 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.4184896 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.383349727 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.782520459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924953445 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885275076 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.38798621 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.398675837 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.389101645 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.386911143 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085329566 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.905242489 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.38447452 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.393497944 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087516646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.38504247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.394940795 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.394196148 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.743581848 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.383635866 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.383953923 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.384452521 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.382573511 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.384317447 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.456046261 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.449974539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109830447 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.384268628 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.383205993 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395867938 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.38457586 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.392463385 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.392758255 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.389653949 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.905638978 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602842093 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.388384165 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.912336059 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.113109705 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.386903251 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.201898509 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.388840927 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.394431582 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.466964479 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.388248045 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.38576812 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079374339 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.419018787 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.383750685 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889420156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.386904718 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.804150444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.407104633 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.386942641 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.111875889 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.401355298 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.443844151 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.388303778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.385898724 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.402212111 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.391560687 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.794318608 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.409636309 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.386898641 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.386966876 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.388036566 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.386079403 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.387921328 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.393239601 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186969516 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.388438641 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.385975339 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.390768337 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.387947029 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.388440388 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.387515968 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.392911626 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.759804232 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.391287258 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.395263881 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.391882654 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.387890946 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.39559891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.543505358 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.392418548 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.842319054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389177423 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391751354 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.414020665 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.384423815 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411692367 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404242956 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.39151948 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.387639238 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.869232882 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.410878436 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.411471179 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389381569 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.398247431 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393858814 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.390392173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.419172578 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.384974444 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.341521991 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.400263749 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.409440405 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.390945385 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.399385425 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.388404699 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.389076572 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.38898508 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789389419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.798028087 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.558468085 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.389855233 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.388034889 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.347117046 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.428090681 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.66245533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.412506995 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.390499658 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.778269779 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.620805272 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.389400217 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.390773506 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.394932484 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.762519242 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.391521296 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81520178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.146232283 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.391936223 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.401967946 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.341925534 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.238105279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.391653296 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.39618851 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.813163741 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.411411186 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.394323329 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.391032128 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.39446804 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.3930599 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.399337444 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.394262986 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.39363176 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.394743913 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.510401288 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.678016108 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.414154831 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.398232834 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09183612 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404374536 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391019137 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.399580352 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.397951583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.391441538 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.428169462 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.402528143 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.444103611 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.394348122 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.397463393 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.163396197 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.392623741 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.416134063 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.67982856 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.292564928 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.395185589 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.397028421 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.393168014 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.4248791 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.116196271 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.453429518 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.851667031 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.401248022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.471569534 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.396463824 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.400919489 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117530169 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.394320116 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.393630084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.271290574 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.394858592 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.094805422 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.398088542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.397339774 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.200745011 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.395204935 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.398078345 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.409335782 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39467896 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.792450003 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.39474943 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.420485455 seconds)
  done (took 517.537550215 seconds)
done (took 674.365639601 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.397179906 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.401482479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.399813202 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.399992206 seconds)
  done (took 10.871535759 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.438680086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.42575463 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.436480575 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.425699456 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.437486289 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.427106477 seconds)
  done (took 9.87062866 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.397919037 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.399771228 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.401611825 seconds)
  done (took 8.475544551 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.728001235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.415150348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.908587817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.39642157 seconds)
  done (took 9.724785952 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.438888073 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.43679074 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.43422107 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.43729234 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.439609255 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.439037534 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.439162062 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.441376867 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.441735224 seconds)
  done (took 14.221187625 seconds)
done (took 54.438632037 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.796386957 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.468307318 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.460780732 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.110812695 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.641480386 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.891176665 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.607051218 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.538309306 seconds)
    (9/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.307333775 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.944632624 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.469080042 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.773876971 seconds)
    (13/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.819834352 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.402026612 seconds)
    (15/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.383674419 seconds)
    (16/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.382908609 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.378515592 seconds)
    (18/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.417394418 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.443026449 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.001391937 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.777779562 seconds)
    (22/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.53366954 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.46514246 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.378192087 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.607473478 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.053977814 seconds)
    (27/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.305614143 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.37624596 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.598426308 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.405057794 seconds)
    (31/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.641317935 seconds)
    (32/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.639621072 seconds)
    (33/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.386883346 seconds)
    (34/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.489760325 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.55733903 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.711721372 seconds)
    (37/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.705440126 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.946035526 seconds)
    (39/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.380307999 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.602229515 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.533681553 seconds)
    (42/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.818314396 seconds)
    (43/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.696691667 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.377092366 seconds)
    (45/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.45467856 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.593453958 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.379861783 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.123033802 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.412535281 seconds)
    (50/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.391671455 seconds)
    (51/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.47496829 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.627082675 seconds)
    (53/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.381533644 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.734826056 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.758544156 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.378355586 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.787376104 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.560909736 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.707491295 seconds)
    (60/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.583762781 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.816693659 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.37867511 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.885965806 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.119356938 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.647804933 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.408688493 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.4150437 seconds)
    (68/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.468021318 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.569139344 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.47580876 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.580994622 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.610612215 seconds)
    (73/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.382843447 seconds)
    (74/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.768555974 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.883471635 seconds)
    (76/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.765884126 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.589082593 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.594327882 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.546239365 seconds)
    (80/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.657964885 seconds)
    (81/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.590844757 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.564755547 seconds)
    (83/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.640300838 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.601203966 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.563036403 seconds)
    (86/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.495835819 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.798720354 seconds)
    (88/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.010961659 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.594889476 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.613466698 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.46950307 seconds)
    (92/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.537237591 seconds)
    (93/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.472348544 seconds)
    (94/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.895159992 seconds)
    (95/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.554049366 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.381585745 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.589191754 seconds)
    (98/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.38751059 seconds)
    (99/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.383034254 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.573087612 seconds)
    (101/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.571673326 seconds)
    (102/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.571276837 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.839180666 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.664547985 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.389798311 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.592919812 seconds)
    (107/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.710696242 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.381998926 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.936148444 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.060814088 seconds)
    (111/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.764338817 seconds)
    (112/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.383579784 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.593376015 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.559326155 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.758426752 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.61069833 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.46726808 seconds)
    (118/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.569425623 seconds)
    (119/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.684376554 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.476035255 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.631198632 seconds)
    (122/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.893693744 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.383063656 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.826396918 seconds)
    (125/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.832921211 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.708395181 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.383703333 seconds)
    (128/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.47967245 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.656226815 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.782352072 seconds)
    (131/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.562250618 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.623627767 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.008969088 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.571702449 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.617485505 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.414780399 seconds)
    (137/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.470914703 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.665142683 seconds)
    (139/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.472911185 seconds)
    (140/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.555889754 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.892994284 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.401788663 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.543211954 seconds)
    (144/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.38665685 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.613679156 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.383962094 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.448747428 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.653457957 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.427639087 seconds)
    (150/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.542320081 seconds)
    (151/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.537152664 seconds)
    (152/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.087494017 seconds)
    (153/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.394844345 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.413123903 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.513381485 seconds)
    (156/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.668398754 seconds)
    (157/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.953723445 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.76589495 seconds)
    (159/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.59023616 seconds)
    (160/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.39378178 seconds)
    (161/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.617339537 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.781240129 seconds)
    (163/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.577412184 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.388944641 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.677330756 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.539681687 seconds)
    (167/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.384930654 seconds)
    (168/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.493046567 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.482556546 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.547441961 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.601624132 seconds)
    (172/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38989609 seconds)
    (173/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.4763633 seconds)
    (174/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.39046788 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.41405866 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.898844818 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.644819707 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.632648258 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.617680084 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.582138203 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.607467751 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.695320544 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.666102372 seconds)
    (184/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.127062667 seconds)
    (185/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.721985457 seconds)
    (186/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.645674355 seconds)
    (187/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.442501662 seconds)
    (188/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.578363212 seconds)
    (189/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.391618026 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.390006648 seconds)
    (191/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.487867557 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.390324985 seconds)
  done (took 358.173417313 seconds)
done (took 359.451725959 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.484810185 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.599318251 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.446312202 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.445936875 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455142725 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.428929894 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.472362372 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.445065116 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.466452263 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.46652399 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.42676244 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.450908108 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.467563438 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.452318064 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.486478693 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.450003314 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.444306919 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.45466096 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.470010746 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.470796041 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.454889201 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.45757816 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.48071525 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.443758177 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.463283774 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.463588911 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.46044277 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.42189115 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.451301593 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.468672308 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.4289579 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.460530212 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.469242073 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.456235531 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.455726318 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.454223963 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459367983 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.60542629 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.476333478 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.457323798 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.457926109 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.472452188 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.462013361 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.459855474 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.45784621 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.482142248 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46331185 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.471172696 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.433196918 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.425423652 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.474577109 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.467302511 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.458117405 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.426988097 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.426793798 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.46853968 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.458321481 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47765292 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.456593398 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.45984863 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.491040725 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476152868 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.46881248 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.469237464 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.455373201 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.474478563 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.457484084 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.47219217 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.456780643 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461821367 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461797132 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.456012947 seconds)
done (took 114.638455354 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.629587673 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.416717657 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.670214907 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.455829753 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.667993325 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.625032066 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.456937715 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.454892484 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.457078236 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.317817999 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.454508216 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.457995601 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.419405289 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.457613081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.621508713 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.457162186 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.455641322 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213685903 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.458225659 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.638200291 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.425231798 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.458255132 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.458173976 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.320656978 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.417376749 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.426061023 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.634989687 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.457054071 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.21391596 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.427095373 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.421498642 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216719738 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.63802471 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.479628869 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.465079323 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.468182651 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.680063436 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.458512078 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.625098206 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.624562104 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.660604536 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.495502466 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.423781195 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.425323639 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.458945861 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.455555976 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.458455576 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.485895309 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.419665028 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.457415081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.217278817 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.464555374 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.465033159 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.45490736 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.460528256 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.477424748 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.456448128 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.458662795 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.636824068 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.459538535 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.630650798 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.321033701 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.323575784 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.458638421 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.419243257 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.459223061 seconds)
  done (took 117.301281192 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.573127351 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.583460159 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.625264987 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.451989042 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.542187732 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.627866085 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.450415587 seconds)
  done (took 12.142927324 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.466439483 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.459568776 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.539886951 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.541306056 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.460676878 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.683475881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458691639 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.469025775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.4679322 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.544257758 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.462734053 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.458817703 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.458443354 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.42458814 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.544304621 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.468886302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.626005863 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.451704019 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.459210351 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.660348847 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.459569335 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.468710442 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.54512372 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.472475794 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.461509246 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.467088238 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.275437959 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460346599 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.459067386 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.463652396 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.460353722 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.574792018 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.462852923 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.426241424 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.460594326 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.625669926 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.461306567 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.463245292 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.463329729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.42774385 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.462773164 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.46104983 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.463444059 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.461803767 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.463258352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.487353525 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.463668599 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.461561418 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.46295524 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.462192364 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.547312476 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.461112618 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.46258997 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.461517278 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.548351854 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.473135236 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.463598408 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.465159222 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.468162886 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.463017958 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.666233115 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.542988392 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.464112301 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.547532267 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465585463 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.465084771 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.464707698 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.463447132 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.605665218 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.467983324 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.543315948 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.464618441 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.696053248 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.489184065 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.465807629 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.461792732 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.460493405 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464727743 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.428570211 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.470537838 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.462255641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.45853289 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.472659059 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.465453463 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.467225896 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.674486748 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.626736613 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.464633945 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.481740521 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.471110328 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.46867587 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.551145156 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.466602073 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.463509641 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.549347721 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.634333668 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.553440559 seconds)
  done (took 151.060124829 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.479009237 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.477721923 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.469993915 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.492891799 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.460999894 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.461159761 seconds)
  done (took 10.142536981 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.46256385 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.472112201 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.467251806 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.466095234 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.468817858 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.46741314 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.4676594 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.461139507 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.471520715 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.468823375 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.466892543 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.471158867 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.471926772 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.470091343 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.466398765 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.470123261 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.467907896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.465413444 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.469445102 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.46958206 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.431280542 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.467565952 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.468309273 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.462067906 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.473327718 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.471588182 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.493351703 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.471137915 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.468912074 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.480949358 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.470736537 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.47015867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.463777621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.468876873 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.47757344 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.46246705 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473566645 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.472819763 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.470740448 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.469171534 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.47021608 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471116683 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.471326627 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.471074359 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.461550452 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.469986721 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.473422493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.493366859 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.468634803 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.470681432 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.472047598 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.471508703 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.470355623 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.471833673 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.464141984 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.463022288 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.478679307 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.473507909 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.471818937 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.463081723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.472702849 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.475005237 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.462882745 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.476616475 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.470385375 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.472902944 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.465394586 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.472236309 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470038055 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.470993693 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.474534786 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.47119281 seconds)
  done (took 108.133122867 seconds)
done (took 400.071930526 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.820976257 seconds)
  done (took 4.125959454 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.635585503 seconds)
  done (took 3.945248345 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.965754305 seconds)
  done (took 26.281793446 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.503930912 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.438794626 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.452974711 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.44259895 seconds)
  done (took 11.141074924 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.05370669 seconds)
  done (took 4.360157252 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.445460348 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.458008033 seconds)
  done (took 6.213006138 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.751614853 seconds)
  done (took 4.058119262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.26615731 seconds)
  done (took 4.586100578 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.45508294 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.448756368 seconds)
  done (took 6.216677973 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.414717542 seconds)
  done (took 3.722335432 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.817145044 seconds)
  done (took 22.125452895 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.462279945 seconds)
  done (took 3.77242106 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.482338082 seconds)
  done (took 3.790200416 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.664729153 seconds)
  done (took 6.970851322 seconds)
done (took 112.616249737 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.436264905 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.438886817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.434894269 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.434636346 seconds)
  done (took 11.050854861 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.592246752 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.591910535 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.593874263 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.580403975 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.582741144 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.595096486 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.510077085 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.519137943 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.570327903 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.56962055 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.59461891 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.579791397 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.591938681 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.509336627 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.567393172 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.600730162 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.571450532 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.595137064 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.510252945 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.579286723 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.476125141 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.580093181 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.56955441 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.476568983 seconds)
  done (took 38.818065134 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.026087465 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.597864295 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.680536819 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.559881672 seconds)
  done (took 8.172665603 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.644476857 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.644983067 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.656437107 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.692296695 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.723044111 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.651944707 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.511678545 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.509226278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.493733246 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.645295467 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.719091583 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.641099263 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.863561421 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.476196589 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.861595528 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.47602045 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.474379459 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.641277079 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.692187393 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.718744751 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.476168792 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.639133999 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.647816598 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.638898913 seconds)
  done (took 40.449425308 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.494203558 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.499551863 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.481589943 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.499786251 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.478588723 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.480591771 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.477922367 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.492172573 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.477972513 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.479099612 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.478449948 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.499959596 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.47667109 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.479206259 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.494247907 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.482639447 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.479088926 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.49279444 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.496632288 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.479721269 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.477455688 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.492936637 seconds)
  done (took 33.999627677 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.441114893 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.441998665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.879111094 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.784405057 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.440741801 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.444947294 seconds)
  done (took 14.744981747 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.573524328 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.762838208 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.466485228 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.931762132 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.051764823 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.465470435 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.471168855 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.813682103 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.194974026 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.178809191 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.553064186 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.565425045 seconds)
  done (took 22.345701504 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61064986 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44706544 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467161082 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487116484 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450934368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.450499955 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495070637 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06868534 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.47947445 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815026408 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468927089 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607132653 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.78851766 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460647126 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454994941 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.421118566 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769624895 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123463605 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45536042 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459723196 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514169923 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461133361 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45897743 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.740196501 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453174947 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452909829 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.885719895 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451346292 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874024902 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826010696 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829854621 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455040686 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810663563 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026610437 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630298936 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737729288 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468170988 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453904927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.439342251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.456526979 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463199196 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456767023 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827908004 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457090598 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454779829 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469731451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076869482 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.4841036 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.457104776 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.456478439 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841864737 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617677778 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.48379588 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455166121 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531144708 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455491582 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.480485543 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662510156 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185167541 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466665768 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475005516 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.460435646 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453096724 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457595271 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331653697 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.491336853 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.48338668 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484233505 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458620122 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462575094 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509605097 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456301461 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.505544455 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456729239 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470541051 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460067652 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459186605 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186653973 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461999742 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.459609913 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772063473 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456193556 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458463468 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.458002585 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458506141 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425641557 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487201131 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.42538503 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524482967 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074687431 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.744659919 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506123579 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518865213 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.760830131 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.424341182 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459371125 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.476722773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463050154 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508813866 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.079666765 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456435137 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.483592711 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79435269 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.758833997 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467230086 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.43093385 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081008485 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460568554 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.513241943 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469749401 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.747442325 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.2993975 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849749818 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460389132 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528538301 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460767253 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461549125 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468615038 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.491158059 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476515135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863079725 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.425611804 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460962599 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608479472 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463124396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462139774 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465130028 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466535933 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4631091 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.74032487 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474442665 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847625247 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.466724225 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463120345 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.458519131 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466385984 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.466433895 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.767472106 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460293798 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819735387 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462513145 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461336459 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461586282 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.763571401 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.470715096 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.494040897 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890400518 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475358494 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477956798 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845386065 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532373006 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660296746 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525393348 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.471495642 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803355092 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.490157442 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.493716345 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474863738 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469284886 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471001864 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.495825202 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476854284 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260075112 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470847585 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472245668 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465411908 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.509473027 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613454057 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494843723 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.774501143 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469480372 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468682994 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.499106555 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.465895 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775829384 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855910658 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.469119502 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717859722 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.123738361 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267531995 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514394742 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.4687022 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.467269057 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.466838765 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46904561 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466651102 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468160092 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762550392 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8647673 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481029815 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266748865 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471531471 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466189171 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.518653944 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85641114 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.501374372 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472557858 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.481501873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470040918 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473975636 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.852061705 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771881676 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.514823499 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472450303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.073653919 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499587203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468408588 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471521204 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525521507 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484422076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225038882 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903412578 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463448599 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860161338 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472177712 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.539439617 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.470252327 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482820057 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47449316 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.484756756 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499715152 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.785320396 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491453557 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473909287 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195477023 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471898486 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199531379 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482385853 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.47274175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475270912 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136739944 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474140252 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472132316 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854477165 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137424877 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474170354 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130520369 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.475135142 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.50688443 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86008116 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787262542 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481897733 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.488563105 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859551973 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772943962 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534850835 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478038164 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478211789 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.438271584 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186318596 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490926325 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727331318 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10562677 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490061691 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476194354 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.530053718 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.498330548 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025829891 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475907865 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479733142 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474880989 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493509754 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191798133 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483309714 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479026977 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320517155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475840747 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.117423662 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476053484 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.782463888 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.863139021 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.833706577 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.477887097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.491212395 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.809776439 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873277391 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47888939 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499644403 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234647018 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.425084363 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.513268063 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484060089 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479789504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49918813 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902720451 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.488210826 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.492252472 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478676863 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479730139 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479568387 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.480826647 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491138992 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47867791 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144625025 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.497288936 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476749173 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487070249 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475172227 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.820744384 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.524924434 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298007659 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793926239 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474671954 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538740227 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.508386436 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479368012 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.443071077 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479864304 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481579746 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474805141 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.781237265 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492074306 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.442297097 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529597374 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.776727124 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480949498 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495237418 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805739124 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.483065898 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.484111213 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496203742 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537876151 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49783726 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479586336 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472972994 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544270888 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633805668 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789044473 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.870176717 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866370577 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034229772 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477306855 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501451267 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.525150649 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643830476 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489568052 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.479195154 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.500969851 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300784479 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481091695 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308005857 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872628635 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483102914 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485252909 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48055266 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804861428 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482324952 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838986997 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480205758 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.495135729 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531609222 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48207513 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519048756 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778132121 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831706322 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47864711 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498531133 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478544793 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.480867295 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879075056 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.784283113 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15935532 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218529395 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482491663 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482316292 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.110828688 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837444063 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478227224 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485162324 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483992204 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.494419717 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.486850109 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.510200145 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478321441 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810193531 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872246882 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066038635 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865002735 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.505280665 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.442869656 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483989619 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81715985 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412169732 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.786215203 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309753077 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423117283 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822580232 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633697483 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791726448 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.481714818 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806915531 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.501893362 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480254787 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483915098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485177829 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.484938832 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.870642419 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304358047 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827762875 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.507937637 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.500776321 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542627663 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.794117115 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.793232086 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.464473311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787686129 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880027691 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492742827 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484522229 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31159137 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875014134 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483734559 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.510412951 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824463432 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488520153 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552857874 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.44121337 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.485715258 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223661752 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.783917703 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537091274 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485625861 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428560992 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311909078 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.484329397 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156512291 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484652902 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486838305 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845789468 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.517092851 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483877733 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853840282 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.514404101 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488386896 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799362196 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.307887756 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.503945578 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.499294428 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50237841 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.486654273 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486871619 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526248973 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485346775 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484849575 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.040285012 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484597308 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488663049 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528483196 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.492556002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491314922 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.485221759 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489169049 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.518320871 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.463115526 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.46461865 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494514281 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698806042 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200798439 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491762745 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.192389828 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.909838325 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820717844 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486253594 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.453168521 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.516251473 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487145747 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491250109 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487607956 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480500628 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232674001 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.488678973 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.87630515 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517789099 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.78828879 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787870511 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496281964 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804321834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507798303 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541270297 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.458300738 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492858275 seconds)
  done (took 1049.519125468 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.540973961 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.508588837 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.513436939 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.541100653 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.48994289 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.510507027 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.56875368 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507899224 seconds)
  done (took 21.52361931 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.496844047 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.51221311 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.479691935 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.514939505 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.482287797 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.118151757 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.501027679 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.516368457 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.54328871 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.494955608 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.491156661 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.273416961 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.517563162 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.498303939 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.493291431 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.514278107 seconds)
  done (took 34.804457606 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.802605136 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.729299725 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.173168879 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.510209993 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.507271909 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.478171491 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.940820477 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.517864737 seconds)
  done (took 29.004694522 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.527920135 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.527685679 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.529342663 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.530107914 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.529227913 seconds)
  done (took 8.988865554 seconds)
done (took 1314.731268025 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.51991423 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.521915462 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.525300599 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.52061355 seconds)
  done (took 7.43044943 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.462108554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.464385939 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.462160866 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.501055267 seconds)
  done (took 10.237068625 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.979056485 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.218093865 seconds)
  done (took 5.544571346 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.496812269 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.339158981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.328259271 seconds)
  done (took 8.510839333 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.887021178 seconds)
  done (took 3.23247677 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.043436808 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.081693768 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.484982273 seconds)
  done (took 7.958182881 seconds)
done (took 44.264262726 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.491647157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.25558746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.664663711 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.487178921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.658318771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.742927296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.720840338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.48180666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.492454313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.479616717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.4825504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.655866294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.748730687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.259893175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.748472414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.258266502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.657844199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.490137608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.490706674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.481011168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.720803113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.488230522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.496227209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.495987095 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.65330731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.690570009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.486798426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.254255307 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.497084581 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.496159043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.647829797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.503319102 seconds)
  done (took 86.528055979 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.501954543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.483788267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.481456266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.483260825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.483849169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.487067943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.485746616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.489364954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.500586352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.483299168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.483967201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.485858991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.486834534 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.482109702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.483472863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.484482768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.484786159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.500381787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.483647258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.482626667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.484986813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.484029219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.482964908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.501476829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.482709428 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.483562469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.484531727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.48889562 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.484176096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.485368216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506518182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.48438946 seconds)
  done (took 80.9421138 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.504461286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.490702205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.48754028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.505060036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.49956674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.486262883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.506726239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.498918403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.488365455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.497653647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.4858724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.489814172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.510605504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.505720734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.488477481 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.504750081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.486085976 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.521474484 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.487079049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.502074111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.489056045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.485339442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.524450839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.500344422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.485798649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.485056375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.499042022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.486643518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.499641261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.495750821 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.488084414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.486654693 seconds)
  done (took 81.225931945 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.859846214 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.530807095 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.532403108 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.503848569 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.533525597 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.528532504 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.502548124 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.876773995 seconds)
  done (took 16.221813822 seconds)
done (took 266.269942853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.503050772 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.500033769 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.575328818 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.501948747 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.543530431 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.558702542 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.815768193 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.5586195 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.807199365 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.52218037 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.542794374 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.521730941 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.50526083 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.723857342 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.496107501 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.498773064 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.510558221 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.492370224 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.530407394 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.839137994 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.561108644 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.494241342 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.500557578 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.502226575 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.477075821 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.605128348 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.607499459 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.763309846 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.710361771 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.605627712 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.495758365 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.535955515 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.500599274 seconds)
  done (took 71.279285587 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.522758865 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.536407039 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.532169209 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.532524143 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.53361674 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.531882022 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.522420903 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.532567095 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.529662117 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.535289858 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.531715172 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.534658214 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.53385867 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.533684765 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.536079693 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.505259154 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.523705703 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.533354835 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.52223296 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.50254568 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.534128467 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.534899934 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.537030023 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.53550015 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.532830885 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.535401115 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.534326397 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.534058137 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.536274061 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.53529314 seconds)
  done (took 47.272109464 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.535597927 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.505986411 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.49407484 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.53403055 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.527598865 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.531061457 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.932989035 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.53234053 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.532530638 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.531692962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.499652785 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.537109084 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.602266532 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.501772886 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.524593735 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.537280125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.536192277 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.527136098 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.519079975 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.545954692 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.957441097 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.535168613 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.92979191 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.551238254 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.53140354 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.528706199 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.542919948 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.499537267 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.528456028 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.499426568 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.526948853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.928223833 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.493785138 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.494723735 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.522899106 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.540164291 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.537235985 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.498579254 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.52421778 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.529358726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.937635016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.527320408 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.499050403 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.494902529 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.533996327 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.540366761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.50263361 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.517112825 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.841262496 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.539920754 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.502139972 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.529991978 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.541928271 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.533050955 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.846969855 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.52726258 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.529204028 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.518863537 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.539462665 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.933847802 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.534442403 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.529896295 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.518940712 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.526231792 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.512216882 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.528797203 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.554187652 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.532463102 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.507887491 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529579146 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.500699007 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.530992314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.54294111 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.50366796 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.5126844 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.498959539 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.550405956 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.522085036 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.511332482 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.925484099 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.53573747 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.503717966 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.95410827 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.534058905 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.544330812 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.544351346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.541556647 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.664293274 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.931856 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.500359787 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.499552283 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.518631524 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.93788421 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.544965599 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.536191299 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.523122668 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.5392713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.543462894 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.51066438 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.499308606 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.530616358 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.556646554 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.507306201 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.551577265 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.94538272 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.545366558 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.50327196 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.529980035 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.671225161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.543970919 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.554286617 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.540860259 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.961407104 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.534189159 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.54416019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.505505973 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.528146351 seconds)
  done (took 223.823919794 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.508086608 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.50943699 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.506880169 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.506718138 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.506060721 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.534693623 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.50767182 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.503570252 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.533802308 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.506357547 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.50840718 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.540826106 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.537477148 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.506951617 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.507624677 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.528328009 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.503686538 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.508699116 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.529978778 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.507707719 seconds)
  done (took 47.667853574 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.544817187 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.298772141 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.267444205 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.543794151 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.545607859 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.53742777 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.614514807 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.546887492 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.54549786 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.963405333 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.768660666 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.544172901 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.547019492 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.547054134 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.270545577 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.513277911 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.962993269 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.295722382 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.541210234 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.299820669 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.512566857 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.54556805 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.536630252 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.299631259 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.971462712 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.93395899 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.614242286 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.303365673 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.544918806 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.547206108 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.303443824 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.543502704 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.538583084 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.282589776 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.543214329 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.568401051 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.547197797 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.621048738 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.624482485 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.966280349 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.300959151 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.956865883 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.565294511 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.778043842 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.549063327 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.516163193 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.316338761 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.545094247 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.517057511 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.55006988 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.563378765 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.293638248 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.540537801 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.297102585 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.550178622 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.549046565 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.30735808 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.295532274 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.286730806 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.779683994 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.532013254 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.95158218 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.547940699 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.316817453 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.546424933 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.54781261 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.550380185 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.780417468 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.320350933 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947568123 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.973968128 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.968495645 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.545868088 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.633928728 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.549052082 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.978101754 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.630953839 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.037226731 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.973715023 seconds)
  done (took 143.806799179 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.925576849 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.689752516 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.098633213 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.308161953 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.227394698 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.745528045 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.689314751 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.880836662 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.524420598 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.726000352 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.449145104 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.668537459 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.413327072 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.636154291 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.677703359 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.741558755 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.119077503 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.512514266 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.396630955 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.427535792 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.519065518 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.701406653 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.434329673 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.033675232 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.514634438 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.402900257 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.528978231 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.256039612 seconds)
  done (took 60.619678663 seconds)
done (took 595.822742628 seconds)
SAVING RESULT...
DONE!
