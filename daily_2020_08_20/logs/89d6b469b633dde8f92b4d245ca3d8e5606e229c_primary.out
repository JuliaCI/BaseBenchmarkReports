cset: moving following pidspec: 22526
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.631561713 seconds)
loading group "shootout"... done (took 1.212617312 seconds)
loading group "string"... done (took 0.428106992 seconds)
loading group "linalg"... done (took 7.953995835 seconds)
loading group "parallel"... done (took 0.154211127 seconds)
loading group "find"... done (took 1.337965816 seconds)
loading group "tuple"... done (took 1.938712969 seconds)
loading group "union"... done (took 12.702699472 seconds)
loading group "dates"... done (took 1.326681051 seconds)
loading group "micro"... done (took 0.20202366 seconds)
loading group "simd"... done (took 4.398716438 seconds)
loading group "io"... done (took 1.037011675 seconds)
loading group "random"... done (took 8.777112082 seconds)
loading group "problem"... done (took 1.577620873 seconds)
loading group "array"... done (took 19.625349361 seconds)
loading group "misc"... done (took 1.587682578 seconds)
loading group "scalar"... done (took 40.204690198 seconds)
loading group "sort"... done (took 3.080535825 seconds)
loading group "sparse"... done (took 11.996961472 seconds)
loading group "collection"... done (took 17.442358535 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.508101034 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125925095 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127814343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118989318 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146749948 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1221791 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12553845 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084654202 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.9201511 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144144249 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113951689 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419837342 seconds)
done (took 5.37610981 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.167961048 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087358975 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078992395 seconds)
  done (took 1.369510149 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064502252 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134442271 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065354051 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06644471 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066128132 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065613072 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06521466 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065207685 seconds)
  done (took 1.732697019 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071212453 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066808724 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064763627 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066739709 seconds)
  done (took 1.476848332 seconds)
done (took 6.032068335 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238365617 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.100971229 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.281570884 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.393914075 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.459720981 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091224282 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07329682 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06936194 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126315632 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315743289 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103882435 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.182995805 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089211999 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173594031 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.967217896 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119427304 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084366456 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122127982 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09171505 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13269737 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.38990567 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076395375 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07237065 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069027048 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066243303 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643020985 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660414029 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128591433 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082256414 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100179815 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115940543 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.654029685 seconds)
  done (took 10.516264909 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092898744 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090374281 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067303238 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12270758 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092553521 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068063999 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073770287 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065914813 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087231489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123576754 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088770232 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097812061 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064832944 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067243796 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07331383 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195697886 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078952667 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079674577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066278115 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079179124 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10455419 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076971421 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077558484 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077166081 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127766617 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166763655 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097639266 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096068175 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068540271 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07821727 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113659474 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123983091 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065330334 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063667121 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119342795 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093624114 seconds)
  done (took 4.583337424 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.963966573 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091745953 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101977124 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.628609912 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065036815 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150618784 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239433019 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071083238 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.319805446 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.148574312 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140371998 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148391738 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.11570359 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067911205 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.212667143 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112921509 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517225509 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066903995 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066693292 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064366679 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068358589 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066977772 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06270711 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069011129 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093357677 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.0871747 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.163448126 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925946419 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.240870747 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065993253 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164461313 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083232323 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356611663 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068122776 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082153744 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.411424763 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.121507999 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064170738 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163702567 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114867366 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063323778 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116013126 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076916031 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068096621 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067776479 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067116936 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070188828 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07746269 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099423479 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066141748 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063636228 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16252528 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063560949 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065080885 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063380758 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065912262 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148883373 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063170046 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139076 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062981933 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067297205 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099567136 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066679983 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087608103 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.098498184 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335562126 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.066347017 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066360129 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.918374365 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076328969 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064683974 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069192491 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065625415 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066397829 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065512642 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071846766 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068319455 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067411171 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107046027 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065205147 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06844365 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065016096 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069988606 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095848329 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06369885 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.480789175 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095774028 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066040694 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075321297 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10346068 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083541074 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0648415 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070551312 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065702982 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065467539 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064640207 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066215281 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068731978 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.173687612 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094478821 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06863935 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111718561 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.029258151 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06998095 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065250619 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070849296 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062758088 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06843697 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067791565 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065147865 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068412124 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067753415 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063931073 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108750081 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06570374 seconds)
  done (took 21.53252787 seconds)
done (took 38.800543644 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.2541233 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079253157 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080676699 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080522914 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080589029 seconds)
  done (took 1.882624094 seconds)
done (took 3.176742962 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107626561 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063705881 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100290016 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099995928 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064142187 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063846132 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098584311 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063995458 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098535865 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100192071 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100428359 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100770173 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062675501 seconds)
  done (took 2.423841246 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068484696 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079568839 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08129262 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061133869 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072036488 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081215786 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060967995 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079628987 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085539007 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.085467292 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079871209 seconds)
  done (took 2.119212204 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068369142 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079797777 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082024224 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060952076 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07137373 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080252021 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060808281 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079507519 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082774665 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080220213 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079945187 seconds)
  done (took 2.100828969 seconds)
done (took 7.921543108 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066262075 seconds)
  done (took 1.326868109 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524671394 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.534760171 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067291888 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08626451 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187847665 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096586591 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.221538377 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072011455 seconds)
  done (took 8.229703649 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100275278 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066562209 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067185435 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067590653 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066387779 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067163838 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06741308 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06639184 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068642026 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06894145 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067075367 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066876743 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066907991 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068404539 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068420214 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066837941 seconds)
  done (took 2.465844399 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096804506 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095383146 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071964616 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072478316 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070707414 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069553382 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072405363 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071739294 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068468829 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070124178 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071934325 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070428997 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07010752 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061427441 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071458294 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072519878 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068120655 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071602302 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072305345 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073234984 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072130631 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061485047 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070193348 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071938648 seconds)
  done (took 3.119905917 seconds)
done (took 16.417196337 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113330619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074660476 seconds)
  done (took 1.452527779 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068572156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06882079 seconds)
  done (took 1.419549899 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074576037 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059746117 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080978725 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070669044 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060380268 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06015271 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078614767 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060581801 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06000948 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060352448 seconds)
  done (took 1.949192456 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062631158 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069717758 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066258764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069229972 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06671827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061579825 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064330861 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061837731 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069372955 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060764902 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065250557 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080541972 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064884379 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082623311 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06440912 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065386923 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067751955 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064600101 seconds)
  done (took 2.499883738 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060613174 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061258925 seconds)
  done (took 1.415694063 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064719386 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061588423 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064009093 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063716417 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061282905 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060236457 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061204252 seconds)
  done (took 1.721121816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412562005 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119885885 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340464954 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068075604 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07670907 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247846602 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062365084 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067081865 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066860787 seconds)
  done (took 2.790366332 seconds)
done (took 14.538109443 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079507505 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082162913 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088047116 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415544151 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089775014 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065428078 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11187778 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.174853537 seconds)
done (took 2.415108368 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212241202 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.310073501 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.891760996 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064700825 seconds)
  done (took 3.563408375 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339078329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077844941 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076063126 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065278838 seconds)
  done (took 1.862102394 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063474143 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070176452 seconds)
  done (took 1.43536455 seconds)
done (took 8.385280484 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062887506 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062555951 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088885131 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062896411 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062197965 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062468304 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062251831 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062497159 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061853352 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061875851 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061855286 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.061826676 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061955356 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061907058 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062564438 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062596791 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061878092 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062505729 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062364804 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062466594 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062381648 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061831809 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062401422 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062295668 seconds)
  done (took 2.852025696 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078626628 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06512919 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065899136 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065752838 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066549202 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065519673 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065557378 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064225284 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065821307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064082698 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06597306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066128487 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064160187 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066112058 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063728918 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066370471 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065589384 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064794206 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064131686 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066315344 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065821186 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064353172 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066042026 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065385995 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066274628 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066310942 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064097697 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064229247 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065562383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066273015 seconds)
  done (took 3.286499258 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065338749 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059277324 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059873051 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068461917 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059276071 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059945064 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.05965795 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058753081 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059266777 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.06034933 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059392854 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059203763 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05992534 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058623892 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058889685 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059500745 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063020336 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077157395 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059042639 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059155265 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062748378 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058740565 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058864189 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058726998 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059540225 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058695137 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058484701 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059269748 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058641778 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059560074 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058803708 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062583807 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073109831 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059487795 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068280041 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063266017 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058828866 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062449885 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060100293 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058707157 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058633484 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058349461 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.0588264 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058670858 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068062499 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059071923 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060002827 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059621364 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059154196 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059045742 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059030041 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061081172 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064214197 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060501969 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058782518 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060119274 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058901127 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059964167 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058702008 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058584868 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058610561 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062116568 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060402457 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059663305 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076731138 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060563026 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068175149 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058607376 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059859354 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061871362 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059376199 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075092652 seconds)
  done (took 5.712799957 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088383932 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086676715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064407058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063532685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059926775 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059447229 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067093029 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059576882 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064142119 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078589241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059684164 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063668542 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063633438 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063283526 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059362343 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063619497 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067750469 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059895297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059322555 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063439583 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059393218 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066759956 seconds)
  done (took 2.773215392 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13975077 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065499199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102255073 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075095266 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067736145 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075241813 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065294665 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064734008 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065167783 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065298333 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066161439 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064803851 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067644981 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065385357 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065461619 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065864909 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065838275 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065678256 seconds)
  done (took 2.631853346 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075837724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06464483 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087545987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065194391 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06499706 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064183078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068950771 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069422831 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064661704 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064582981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069442907 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064355705 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064196906 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064436193 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064253979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064662932 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064416249 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069196862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068795626 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068713458 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069025308 seconds)
  done (took 2.804828743 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07413775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063360509 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076770452 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065424695 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059569786 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059502431 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064588462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063744629 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064475898 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063495434 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063791824 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059506443 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065492711 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064042389 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065960779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064020754 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063491478 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064057151 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063381364 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059338135 seconds)
  done (took 2.606685467 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085689646 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062787117 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062053378 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080903901 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062323217 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062286049 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080985357 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062081569 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062402239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083145655 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062168146 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062012689 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08076404 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080934533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062221988 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080874326 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081000272 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080733505 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06218508 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062387758 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083277411 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0619895 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080909645 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061936192 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06212231 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062247209 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062160681 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080372714 seconds)
  done (took 3.295586324 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062752173 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061886614 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062407519 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063139008 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062680267 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062549942 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062596417 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062418554 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061753337 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062819754 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062095136 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062348938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062174734 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061720085 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061903225 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062105571 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062038714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062239627 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062157985 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062236218 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061862489 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062283194 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061959191 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062619843 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062298778 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062144029 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062656683 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062306992 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061833493 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062412438 seconds)
  done (took 3.195370412 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072354026 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071188114 seconds)
  done (took 1.469651269 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061258686 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075472565 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05875228 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070220161 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068095703 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062616983 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068668899 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067739059 seconds)
  done (took 1.854852665 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066558404 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089240445 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061306897 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061996001 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064492686 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119598925 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075767807 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071382311 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073975364 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063414414 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061434828 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072931122 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.062981817 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072844583 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062523067 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068969802 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067235697 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072024113 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0724504 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059531495 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071885084 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06152061 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059494809 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062277226 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061063576 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066997849 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075729607 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07220742 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068576746 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058508573 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079572665 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05957044 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060599653 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068760829 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064459009 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059527616 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09555686 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060166093 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065412793 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059345467 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071336811 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079959368 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073338993 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076874614 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061285846 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06197797 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059104977 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061664527 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062872233 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068496927 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059408582 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066385555 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059000708 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06109512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069659388 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059723078 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065469721 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068555717 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071986931 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069283615 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067805505 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07454927 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068024071 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068268598 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060761806 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07818583 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061328269 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071637489 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073442325 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060530449 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072645004 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.05884725 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058564468 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05923123 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091712933 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061703929 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060739034 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059596773 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059616236 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060727607 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068677532 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065205238 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066155362 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063126708 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074626796 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068114608 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059268062 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06725943 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076862963 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062587193 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059938548 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.07506352 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062405223 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059171474 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076807856 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068907249 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061332515 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060304288 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062856931 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072726865 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060591597 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058131247 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067504413 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061327551 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062784446 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064938907 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066774126 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059004743 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068878927 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064741194 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061240689 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058491142 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063614101 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060408335 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058420816 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068696749 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059483027 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07403007 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065462326 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072865754 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073208841 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069881012 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074812875 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059012996 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058337176 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07677494 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200213184 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062467262 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07873241 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060263988 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070206458 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059844588 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062121705 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069516386 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059630419 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06192553 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060209482 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065956389 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061702863 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062560324 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064224833 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068317842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0718208 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061420646 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06879999 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060172143 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07538809 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069601131 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064177248 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064214106 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060587096 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071509154 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065746223 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069241079 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059756516 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060744464 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060153852 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070223297 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069908421 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062011751 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069014107 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064603294 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060923019 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06058297 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061438179 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063653734 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064230146 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061198746 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067021586 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068270367 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074209796 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06867065 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068260809 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059001618 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0597097 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064450512 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059429272 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064157725 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068381979 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074286557 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071121826 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079573021 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059847622 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068803774 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061583865 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076322957 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071825777 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060688737 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065124895 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058638997 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061306275 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069120146 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071269875 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073421914 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074078541 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064176632 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064019598 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059694524 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073834925 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060131524 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067726998 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068989165 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064963496 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059624284 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062097602 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068420572 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063960236 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06014347 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074908821 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066542645 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059617094 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073147977 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059850039 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070074272 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059291324 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063074334 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064954449 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061974772 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069065318 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074587239 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058883303 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060268315 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075069024 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061830327 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062202207 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067362013 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074185005 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064343029 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067022872 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070163044 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068971413 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064435392 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068786173 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060825319 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069130931 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063324735 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071117406 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059900579 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077458793 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059120115 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073978368 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060685612 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071101691 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06025991 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068665719 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060422806 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075759286 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061319537 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060176279 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070594297 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058048764 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068136625 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058693639 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063968491 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065155469 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06817947 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061062088 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204159986 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063265422 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068393543 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06473805 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068589959 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068967938 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064973154 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059691234 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068385094 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071423919 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067830847 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062333163 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062157301 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061027898 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069885262 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06168104 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061664175 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068049304 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064444483 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065357418 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061809709 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062380488 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062056223 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068312479 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069837695 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078106285 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06802354 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06692687 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069310187 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059836693 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075820854 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060128995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06771188 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059547293 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067153491 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069081397 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060579081 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078754318 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062041909 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067416589 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072375019 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068002282 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063545272 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077916883 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.0642498 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068155858 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067614091 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064569423 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066021435 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061719403 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06751069 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068665129 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070576714 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060981764 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06662947 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068008942 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061971555 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069026663 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061642143 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067515729 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061753087 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058907486 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064110102 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071395371 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06416557 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064515535 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05996122 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058719002 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059859804 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067436055 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064025327 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067735998 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074489729 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058584665 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060802356 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059409991 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06314565 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077110214 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069209344 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067197989 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064197945 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061860937 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061506856 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062164118 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060379308 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063640715 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059453872 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059589431 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069842493 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061709893 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064467366 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060146311 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061068178 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068946318 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065324493 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060464435 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066460953 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059713683 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064782957 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059083685 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061530891 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064285109 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059010654 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062890198 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069648227 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075333689 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066049252 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067913697 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060652775 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06713346 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074526901 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067851831 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06107713 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068555601 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058805749 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077306414 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068508983 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067451082 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068799216 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060832066 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075485018 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063415924 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068854424 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073873438 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060292074 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066894257 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059042482 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074072627 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063350942 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059106827 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067302494 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066821873 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.205059664 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072462751 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.06141823 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068474175 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066424471 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06356726 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062486665 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062488118 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068699233 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075745481 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060913973 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065070061 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067475406 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067914725 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064774295 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072261788 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068310502 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061936993 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062270643 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06341068 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061470958 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071733478 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060910414 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064673681 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064346382 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059983679 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066754077 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075366772 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069411121 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069574171 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059563766 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059517798 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077134865 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063682427 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063819442 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068091423 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068921894 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072068453 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069018034 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076649151 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060948898 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065464976 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07232899 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060962915 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059972539 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062958102 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061947409 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068654249 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069613964 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066529182 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062279153 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066180439 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072395021 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061415509 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064139814 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065668059 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060700772 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069748909 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067788444 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067948019 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06147891 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059523629 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063042013 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068410635 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066588201 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068279923 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061208452 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067708826 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073798397 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0666453 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063867415 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05951113 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063788643 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068468414 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06501253 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059818596 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064545298 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063074186 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067759045 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069041998 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06456705 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059837254 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076328675 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067889673 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068813533 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062022005 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06247207 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060478203 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059783129 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071142112 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059598458 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061818418 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064518859 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.06188653 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076697707 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067559655 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075246004 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060938894 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063840586 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059548578 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069008427 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064164507 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059922735 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07032652 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059383247 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075225187 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071282443 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066250284 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059656736 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064582156 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067774237 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074127723 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071880766 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068365395 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063874063 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069297765 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061955399 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.07033845 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059491322 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058742899 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06944453 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067433875 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071920383 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059199701 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069132817 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06165104 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067065839 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067373305 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061448252 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061570258 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061315432 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.205428276 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065397621 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070586992 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065004857 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077159644 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061921167 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071119431 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068906219 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070936954 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073316743 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072820319 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068017653 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061287897 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067732714 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067986577 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061767364 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065401263 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064826076 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082202247 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062000701 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062202065 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074791963 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068039295 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060455723 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0680878 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064505618 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070054229 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061249184 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070399194 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065250144 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062026389 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064802856 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064920511 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059419459 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060665272 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060396604 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070317103 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064566347 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060678704 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07865564 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061688594 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068390857 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071062777 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066819039 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062020528 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059985043 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061274082 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072097875 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075332271 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063027581 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068069248 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061809479 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068776794 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059085137 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068662274 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067782706 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085323648 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059711736 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060405961 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073849824 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074475709 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064254737 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06888465 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068955578 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061605429 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08123392 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069963931 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060992018 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070709121 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062604745 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059594052 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059293041 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.06243056 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071610352 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059631764 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062882839 seconds)
  done (took 41.279750572 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099104946 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06198297 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060178789 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0608065 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071851791 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061266437 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060044133 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060727779 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060860441 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062799041 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060130553 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060222979 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071626086 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074275279 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070888712 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064102894 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059884893 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061011719 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059759468 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061213556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070671254 seconds)
  done (took 2.791797132 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068073266 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07620242 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072237861 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077011028 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068358119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064962109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071699668 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064857551 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072636598 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070030346 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072347854 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06495334 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070055416 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070253554 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070053312 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0652547 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072095554 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06833283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064518365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071905265 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065010488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071881669 seconds)
  done (took 2.928352002 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062034597 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061299781 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068149754 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059589815 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059333759 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063455608 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059526623 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063578258 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06385287 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063675798 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068037176 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060323343 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059543112 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065377148 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059189063 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060538687 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102626698 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060789276 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060468269 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059653464 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062822535 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068324575 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059389751 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059568297 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066209499 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063357444 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059883175 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06278334 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060318007 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06349962 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060574882 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059096607 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067973046 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067345565 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063930614 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064170817 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061363223 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060443676 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059581296 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059559553 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067602379 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060886701 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059840894 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060943616 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067754583 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05941341 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059067497 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068233296 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059339432 seconds)
  done (took 4.493476371 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072408801 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110416506 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06602013 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090859477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073303422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066919821 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065482684 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092182167 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061105467 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061891728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074479564 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074635468 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063168603 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064519165 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066942122 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063079684 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063614556 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062027056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066111506 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062287686 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065976696 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066474713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072972512 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073703041 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063843737 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061923236 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062123949 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064263378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073715498 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066858141 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0645435 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065055907 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073851348 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067310884 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062490326 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062312645 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074665316 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063323802 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062930935 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061024584 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062374723 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064350137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067154493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074649386 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063480029 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0677192 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063200275 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060559903 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073947998 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063130367 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067716983 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075009548 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063927678 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063358778 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064457006 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074137571 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063252728 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061980182 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063630639 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073625869 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06175011 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063818215 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074437674 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06240421 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066887219 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075160963 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067584719 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064116393 seconds)
  done (took 6.159524916 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070623464 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091773361 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072403756 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071796584 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070602609 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070910718 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071015882 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070912208 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070937103 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071742821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071140091 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110068147 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066489525 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077653814 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070663519 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07093867 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070468551 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070655766 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070580421 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070791022 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070728696 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07139913 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070729232 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071378646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073609158 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066704341 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070797657 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070238 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071192725 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07077463 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073900985 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070953829 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07049088 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071335119 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073317289 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070280027 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060582381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070890791 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070468517 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070452437 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066749519 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071310378 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070224736 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066404801 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070914241 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070510954 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07155611 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073943801 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078979369 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071803272 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070740269 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071712761 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07082509 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070629159 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071399786 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.07899841 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071665476 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071262038 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070911241 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071657696 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071710277 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078866994 seconds)
  done (took 5.908044987 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075795532 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068105941 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079942825 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.05993837 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059608734 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069923185 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059870115 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05978111 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070426271 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068111187 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070022868 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069542465 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0722211 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069595397 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069696475 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072043149 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069618964 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069318806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067513283 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06954509 seconds)
  done (took 2.798339526 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073302255 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078041449 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065765191 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069926974 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065634272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069664535 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065038805 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065607513 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065708456 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065384868 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070798164 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07087737 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065782972 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069845958 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070681242 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069608131 seconds)
  done (took 2.51662052 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06671725 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068366572 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068244731 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061947787 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064718807 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060362374 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060637699 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059562033 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059971687 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073719559 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060706549 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072241274 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061406556 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059715078 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060598693 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066400657 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060233834 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061212889 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060926741 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066138068 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067271689 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062162846 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064869942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06162356 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066074132 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067611098 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062486045 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064338051 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061013221 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061074964 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066353141 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067720072 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060331811 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061545873 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059851343 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061033064 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061060356 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061159085 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066388041 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061015714 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059163781 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065378754 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060614732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061588418 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059789004 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061263451 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060068544 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066503577 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061372478 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066052511 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060845404 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063196357 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061285148 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068495433 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063776677 seconds)
  done (took 4.893984422 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074858805 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065049494 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059521945 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059713421 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065086211 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065140737 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064531176 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065054015 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065272106 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059363916 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065214293 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064225054 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065492502 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065038884 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06546875 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064831011 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059887899 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064777179 seconds)
  done (took 2.587970667 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07113421 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064946405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069621488 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065001336 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064877759 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064808899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060015013 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060338139 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059964668 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064745159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064657914 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064092508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059954232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064336807 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06485327 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064452019 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064187994 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06005071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064328094 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060345775 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064084687 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060521581 seconds)
  done (took 2.823503723 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08837851 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083695701 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123772359 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078268681 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085922817 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070055954 seconds)
  done (took 1.95340412 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089991803 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102766873 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064436841 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064834979 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074877644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068071057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06806197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068151812 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075068258 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073003381 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068817771 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074910558 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074524861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070344843 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074654608 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0775541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068146204 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068065441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064524684 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077427116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068312498 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074711382 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068232366 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067991481 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068338437 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070371024 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077712586 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072568031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067856283 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074770497 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077593471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068148435 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074817578 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075607187 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064835681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074705029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068335336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07772029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074885118 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070193756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064463774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074994208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0750608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070334259 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077956462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068870769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07087149 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068436653 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068591738 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080351795 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075117514 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070481924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074867992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077755839 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077659344 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08016522 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073120486 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070412289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074977883 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072861355 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070231991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074844692 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070614761 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072856527 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077541827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070413483 seconds)
  done (took 6.238064421 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098215594 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065543531 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068832195 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073429458 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07037503 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068599476 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068583586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068574745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068663712 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065484564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102954861 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068878425 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070502775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070818332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068733324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06840495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068723312 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070364673 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065129416 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080165779 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068173368 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070557467 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070650281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070438226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072585939 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077470206 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068132014 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068327913 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068071711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067872763 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070433317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068357293 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070139669 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064802124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070028367 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068095023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068131588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070120604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068215474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074605737 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070033344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077609696 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068273738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068135668 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072860018 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068433204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068383648 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065004425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068479778 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065087021 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073019773 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072812988 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073175256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070241986 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068270259 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068321757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068661045 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068851774 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068369219 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077809433 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070344092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068662773 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080087641 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068519656 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068184099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070434076 seconds)
  done (took 6.123824179 seconds)
done (took 127.285913353 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209386768 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182802649 seconds)
  done (took 1.804922885 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072787702 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095796254 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073826782 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132537708 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070511845 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10383485 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103138387 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074119224 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069691495 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069265935 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069883683 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072483494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135419921 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069963159 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069898917 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072311178 seconds)
  done (took 2.789453431 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104891547 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180572906 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110385301 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067499046 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104146502 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074709598 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067653576 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078136107 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071481151 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070872719 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074984803 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073186101 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070468168 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072951805 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071480211 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074820623 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070563243 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074615505 seconds)
  done (took 2.951067822 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092904043 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084286034 seconds)
  done (took 1.617630372 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153772624 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103652012 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143242343 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.32129541 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13271179 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127435416 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13104936 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127252354 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108937057 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123532702 seconds)
  done (took 2.908180882 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101505573 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176311711 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306585592 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11802217 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074862014 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100846385 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120654591 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080279616 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078383769 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078051794 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07851883 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07552906 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096387813 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074570305 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074615574 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078060757 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099574439 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073818744 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073839336 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074186029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098935937 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068422844 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074902213 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073797216 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075932894 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076392195 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069607938 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067924866 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074328309 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074035704 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076480915 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097540512 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075886353 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100726253 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072746425 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101752409 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073037022 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071964234 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074014497 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072186765 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075593808 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075543479 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076874337 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075146658 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069443099 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073403744 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069402469 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067835452 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077601871 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068940989 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077459437 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076497716 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100375274 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068947423 seconds)
  done (took 6.123629754 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107531743 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105137402 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069309411 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112703501 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103689301 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068376277 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103751112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097916795 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107447685 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068370717 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06744971 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06781284 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075699568 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078712642 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115026758 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10705602 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069933521 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067994409 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106512437 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106356701 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066978824 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099413867 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097755751 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105340055 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066332662 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06838192 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066746395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067511199 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07319308 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074664528 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067018597 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075585381 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080509394 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074629154 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066732917 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066964642 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066799608 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075325197 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075887876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075630519 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074321227 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06651071 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066684397 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067472728 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067928359 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066243229 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074393337 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075201652 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074395115 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067098957 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067664281 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066843686 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067459982 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074953164 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073616008 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075290043 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075174958 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066994441 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066951932 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068718295 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076468872 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07629573 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075451726 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068159724 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076317167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066809505 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077079273 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080206361 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066987183 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067679763 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067488595 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06717019 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068285163 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073876932 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074327137 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067789933 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066853518 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067123842 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076270455 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074203364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066855911 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073549729 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066370251 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067191711 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06768357 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067108123 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073139184 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075043728 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067581524 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066576862 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06709282 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066991374 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066795052 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073370928 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074871189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075120993 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074159438 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067278052 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074349354 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074416502 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067423872 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073936887 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066590533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06692873 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067029803 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074001839 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073110852 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076025627 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06688949 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066408338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074133887 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209801871 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068857603 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075009116 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077195647 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074988741 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067033478 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077624251 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068126968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076433298 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06786483 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077073873 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070246363 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0747232 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067730003 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066602718 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067832681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075062415 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068486882 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067756382 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067833676 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06745263 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075495157 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077901558 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068042824 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075229606 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074621539 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067888201 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074550651 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06757342 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075818507 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06768957 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068261091 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066954583 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077154582 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067753735 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067657115 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067102656 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07679362 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06795088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077438618 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073744488 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066642721 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078093655 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077504235 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074273884 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077193618 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068109512 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067221465 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067036761 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067240624 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073669988 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07523456 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067623853 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067522915 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073641923 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076880197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066950947 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074218813 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074096405 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074452218 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067300842 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067161607 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077068209 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076623927 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074616397 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074252108 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074694512 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067084051 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07406799 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07450309 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067381917 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081059542 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067239839 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07844615 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074788571 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073560018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074902529 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076092938 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076613002 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077261757 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079000847 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066765061 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067113739 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07460309 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067097023 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067601938 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074251528 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067847947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067584226 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079197154 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067417393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076902873 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066852445 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075315281 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066671156 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067790619 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07949847 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067657381 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067867978 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074501863 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067616877 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074021691 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076758712 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073962689 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06683743 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067126636 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074428204 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075005141 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06675824 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066601024 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066888484 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073333847 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073305883 seconds)
  done (took 18.062058761 seconds)
done (took 37.708582529 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205167849 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157774905 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191561627 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113305827 seconds)
  done (took 2.207823465 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096180368 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096654926 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077024192 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064132588 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082260144 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063925159 seconds)
  done (took 1.9631197 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276679568 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193407446 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17419486 seconds)
  done (took 2.11900179 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216717451 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195824536 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473647421 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292885059 seconds)
  done (took 2.755765542 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.132291708 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079608074 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062282388 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.074370305 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110195774 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142589986 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088466619 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.112887818 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074362617 seconds)
  done (took 2.414756594 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130909523 seconds)
done (took 13.090949039 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.195856588 seconds)
    (2/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.229000262 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096923175 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.118007452 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066692424 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085496681 seconds)
    (7/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198245788 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074734689 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.094186903 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158949483 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183131376 seconds)
    (12/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069230452 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158435358 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189841828 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075012644 seconds)
    (16/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069687356 seconds)
    (17/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.076345002 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.226807657 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151708706 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.182891176 seconds)
    (21/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.4559144 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087311007 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073240929 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.146517164 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071870398 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.081130287 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072714977 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21887696 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074894584 seconds)
    (30/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.082508124 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071421819 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197503376 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075982751 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.122981151 seconds)
    (35/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093719505 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072326713 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.209566432 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075632994 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.173773453 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.23013337 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080287214 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121805615 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072472372 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145472348 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078413926 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062707647 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071437783 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192801751 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139998205 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162599899 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.170878895 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169186029 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074838741 seconds)
    (54/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.182444322 seconds)
    (55/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076140124 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.148066511 seconds)
    (57/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071514195 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.182082452 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070198907 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212746218 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.06535115 seconds)
    (62/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072041744 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074386104 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088030863 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063279764 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072832997 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074987403 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.096731994 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06249083 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087236087 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155457998 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062966624 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149785359 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06654624 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.179592103 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079986076 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174998093 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07460359 seconds)
    (79/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.211997459 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06457615 seconds)
    (81/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.070301009 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.306485168 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089683 seconds)
    (84/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072984853 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076949625 seconds)
    (86/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065620931 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202355041 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169983958 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212497076 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150489257 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091521785 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064135412 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124725463 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132115723 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091797345 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143772429 seconds)
    (97/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143404016 seconds)
    (98/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.145250852 seconds)
    (99/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141923313 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06326074 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 0.250219085 seconds)
    (102/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065625631 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111560276 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094496812 seconds)
    (105/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202199864 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075091346 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065165529 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070898058 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071956924 seconds)
    (110/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073791943 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090987257 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136663222 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065511557 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092281516 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.200628937 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072862774 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.146916298 seconds)
    (118/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064836208 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070920768 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063490092 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119988497 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063163043 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188750315 seconds)
    (124/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064013544 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.199975885 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080144191 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06379506 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072418605 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082051436 seconds)
    (130/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.063977253 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0787815 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070900059 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075472403 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064034321 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072423997 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064761359 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066235571 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066185294 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065210987 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085556039 seconds)
    (141/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072324982 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07227706 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174667261 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088646811 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063049265 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108302663 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062792157 seconds)
    (148/309) benchmarking ("sort", Float64, false)...
    done (took 0.131602724 seconds)
    (149/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075750828 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066615573 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224963105 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073661049 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063726648 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063691869 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0759511 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065254204 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158449109 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119550431 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074087304 seconds)
    (160/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.139677228 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064432342 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065042086 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071439831 seconds)
    (164/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063725498 seconds)
    (165/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071669416 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066019463 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062566491 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064832007 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071551835 seconds)
    (170/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065061489 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.188212613 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072227768 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064544562 seconds)
    (174/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064711125 seconds)
    (175/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064498986 seconds)
    (176/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209172309 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070633227 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062939246 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065253072 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065105619 seconds)
    (181/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068100664 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073624617 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146762359 seconds)
    (184/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.143830254 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064706434 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063941464 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072051339 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062497889 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126005513 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06607313 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.229648674 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.169223635 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079073615 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064900352 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071750281 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067086645 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120019143 seconds)
    (198/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126327449 seconds)
    (199/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.141360259 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064165474 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071587275 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077193762 seconds)
    (203/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064980834 seconds)
    (204/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175380165 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086785281 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089773548 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17002561 seconds)
    (208/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063489619 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08551509 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064800699 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071851776 seconds)
    (212/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079564406 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063673824 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063714865 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.135226458 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071571033 seconds)
    (217/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.162288364 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.144859688 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.147405136 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.226153461 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072334415 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17315241 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064297965 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064464036 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075884642 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079789067 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076553482 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067440781 seconds)
    (229/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069105222 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076400064 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143763017 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064028442 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064840248 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13594909 seconds)
    (235/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064368162 seconds)
    (236/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065050401 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063800171 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072023358 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113250795 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065228677 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065170987 seconds)
    (242/309) benchmarking ("sort", Int8, false)...
    done (took 0.168374805 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086448552 seconds)
    (244/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065402913 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062664027 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064910141 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064601265 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064093938 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071840483 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065487795 seconds)
    (251/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.064392035 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064620018 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06424696 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062782143 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065131499 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063712878 seconds)
    (257/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064759378 seconds)
    (258/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065098981 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063947437 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088333946 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064518719 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.063283538 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066330544 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064226801 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064266945 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144455871 seconds)
    (267/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075856494 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064091285 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063708085 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064257711 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06480439 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063181538 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064300211 seconds)
    (274/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066022294 seconds)
    (275/309) benchmarking ("sort", Float32, false)...
    done (took 0.133598615 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064403973 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071564259 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063333943 seconds)
    (279/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092700735 seconds)
    (280/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064912691 seconds)
    (281/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063414679 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064046728 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064814217 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066488179 seconds)
    (285/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064780806 seconds)
    (286/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063718711 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068786541 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071454462 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066304806 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119198246 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074544913 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123452445 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06324822 seconds)
    (294/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064331853 seconds)
    (295/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.064558573 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071167708 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064606762 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063308612 seconds)
    (299/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070906231 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06494505 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075131222 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064791702 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064358595 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06313462 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063508298 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071340164 seconds)
    (307/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063032607 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085126054 seconds)
    (309/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.06306467 seconds)
  done (took 32.611903604 seconds)
done (took 34.105949026 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085525867 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090029956 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072882502 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.085074668 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080786052 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094901106 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072954817 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078343203 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080017906 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078785866 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078076273 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071439996 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074347915 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074478583 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071767102 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087744678 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079348644 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07275412 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07352074 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063403884 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0732298 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064243294 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063495043 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070712805 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075580679 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071154094 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0740731 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074021334 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06416434 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064768139 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068974403 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073621614 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064209129 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076727675 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072557096 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072929456 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076828161 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076958108 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063832825 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065034858 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075108962 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064488089 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072894224 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070871903 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069426235 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07141307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072721963 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076319782 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087581873 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068610807 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074559388 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075348864 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076217575 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069294293 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069486613 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073155501 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070614963 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087297015 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073590895 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068419111 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.0742271 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073475056 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071451236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072573976 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072519066 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075875959 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07647803 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071121344 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074895103 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071299562 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064149396 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072519415 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068858926 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064857398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075656761 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077690924 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062990044 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068623842 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07209143 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072541095 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063597783 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06819186 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063143059 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069662501 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067925233 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070341495 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069232998 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071573147 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063349517 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072973333 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071466344 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072060268 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062905162 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076681444 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063905295 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070583904 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064652414 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064620354 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062976189 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069447188 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063993881 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068333372 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072151462 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062794235 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068913922 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077369252 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063991026 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071667271 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063232229 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063682744 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075193947 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07526889 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064735865 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068838055 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063389147 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069732324 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063590796 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064200998 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063647849 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063932192 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068202704 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064127623 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067932894 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069679108 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076595292 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063865266 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068769101 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068278055 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064086306 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070781364 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064233287 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064192053 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062795962 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076772469 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06812714 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063860218 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069914459 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06800515 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072151609 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062849062 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073167736 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06935093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.20811385 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071621627 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064304202 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076495989 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06879643 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068810329 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063612462 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064657595 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063463471 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06439225 seconds)
done (took 12.519707283 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065466706 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093672218 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072883185 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080706921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076720371 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065379593 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069102414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082821363 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067927032 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084195411 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087193033 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085356819 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092018648 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063347935 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064533762 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065529316 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062707161 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071822949 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080460557 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08656455 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095056662 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06459793 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074282473 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080478588 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075168315 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081350814 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066159899 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065574815 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067487514 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082666494 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088901651 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064970572 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065354868 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079126187 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078716096 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071847717 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065353251 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068765549 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065854471 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06459865 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066348364 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079367148 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068758381 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069110425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065387805 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065298905 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065340776 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070468717 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077874117 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068709069 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07272405 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.07697924 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066701202 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064777009 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0628202 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068987396 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064753506 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065353529 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065273211 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064567207 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064869633 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067101938 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.0657977 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065496649 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06852941 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067664989 seconds)
  done (took 6.29505079 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083580443 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093629953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081929445 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081793283 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065214134 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065246745 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065179138 seconds)
  done (took 2.123474545 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066082929 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078304946 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081834474 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081807241 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073641342 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083306408 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065605485 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095618077 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064139746 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077154956 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.1113637 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082719599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067896546 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076540293 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065090255 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072952814 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065410547 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073116363 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073824474 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081530379 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069596167 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09349877 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079318886 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065776901 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085827679 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069914554 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064439349 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065427694 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066502335 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066753956 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066056218 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104535486 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069213335 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079393516 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06660463 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06461153 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071141753 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06881324 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067967883 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072453166 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070703713 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066760698 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064137988 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066553772 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067971769 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069451493 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063800764 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066542156 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066131228 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077332902 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06465476 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069255541 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06838262 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070328839 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071408817 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06955378 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073907879 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066847603 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077425179 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073592098 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066179866 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074676832 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107913471 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07084836 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073715395 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069153553 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069126492 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070784246 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066120228 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067410613 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06647187 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073727006 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064603157 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067137706 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06844282 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066991477 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069210289 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082231712 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082422006 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078442496 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067021467 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066401859 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06975537 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081801469 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069976065 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065999684 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068631797 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064645599 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06967363 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066332063 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071564564 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066358053 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073644065 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067146774 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068553979 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073604426 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064819902 seconds)
  done (took 8.58109476 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067913393 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067058405 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067524287 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066308005 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066433006 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066447056 seconds)
  done (took 2.020490892 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090011039 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066109238 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080015321 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066402063 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101937877 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073383523 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073212415 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074635605 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07926182 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079188331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073417808 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076072022 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073008884 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06778987 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072994241 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066919018 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.073399411 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06969788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077965283 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067622538 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080084625 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067514919 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067874044 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077750455 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068747528 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066537676 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066439488 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077977257 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078044124 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074486503 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066960077 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0686167 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073589201 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076537567 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.073063604 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073909423 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065406241 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071340764 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067804451 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068661488 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075254441 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067510129 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06823951 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071388814 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073964818 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074006794 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071261197 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069410135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072732728 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071077025 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071500501 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066403099 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068896703 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071744008 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073710033 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074519849 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071768413 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072768726 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067079755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073718814 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066022361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068847119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074220522 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068433229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069634168 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071382319 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073691677 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067330691 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067613957 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065909508 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071366898 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065590193 seconds)
  done (took 6.774741196 seconds)
done (took 27.368433128 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.970471254 seconds)
  done (took 2.533784427 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.567136187 seconds)
  done (took 2.169083085 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.741747529 seconds)
  done (took 8.342756073 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.28886254 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.332781952 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725334973 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133266211 seconds)
  done (took 3.104783855 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.72080357 seconds)
  done (took 2.331460889 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233724089 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2233374 seconds)
  done (took 2.07480384 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348339926 seconds)
  done (took 1.951996447 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.128076454 seconds)
  done (took 2.729870012 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.227525382 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158789439 seconds)
  done (took 1.996345488 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.470463871 seconds)
  done (took 2.074583947 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.409521834 seconds)
  done (took 6.017517475 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232921404 seconds)
  done (took 1.882197076 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236704132 seconds)
  done (took 1.849403022 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.708389316 seconds)
  done (took 3.314648296 seconds)
done (took 43.981840614 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081941599 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084252692 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084217443 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079785378 seconds)
  done (took 1.916844021 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072955109 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068432356 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072434276 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072732936 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070534882 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071591468 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071537957 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068285798 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070430083 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068305715 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06706611 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068236504 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071166186 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068327938 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071176126 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072297917 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068317699 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068203175 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071817588 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067952901 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071333259 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068147275 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066648005 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068203156 seconds)
  done (took 3.287314899 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07683824 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071277569 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07385628 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070190683 seconds)
  done (took 1.908795 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074029147 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083723026 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085653179 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091626315 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073954484 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074149915 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082102306 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08272205 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06459788 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085840964 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066777575 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065694678 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065733958 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085707882 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081815532 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061673563 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063531174 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074725163 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073738635 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075798994 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067030078 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064590488 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074282199 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07348919 seconds)
  done (took 3.409620324 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079115722 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064589867 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077836208 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091276964 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093108808 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0645311 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078311097 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09272715 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126055022 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064567479 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070703969 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064343666 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105861755 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064335548 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079677175 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106840473 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109918748 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068135411 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097549584 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064571948 seconds)
  done (took 3.288678241 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07624574 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068417317 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069420366 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064865418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07713525 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072081591 seconds)
  done (took 2.054507916 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06780543 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066891235 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066103833 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065995097 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070751721 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066781083 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065136595 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06683252 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066955014 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066405648 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066009927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06550139 seconds)
  done (took 2.420764525 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.164098973 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069046033 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071558788 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065380712 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071080705 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066262052 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081018426 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067798407 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086838016 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065751292 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06603817 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068077443 seconds)
  done (took 2.564999964 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099425156 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130155506 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095969513 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07231402 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184647505 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09336044 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.09020969 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122093352 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09246756 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068420679 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090648359 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13569267 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098197765 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097448824 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080955056 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132279738 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109845552 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088714731 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112713891 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082575331 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070099121 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131908776 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069676273 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091678287 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10037906 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097130664 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111360426 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13426412 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084555918 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090021713 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08115845 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07469512 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106056917 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085488751 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097946295 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093494267 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097937424 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084454204 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086463893 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125059606 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153784749 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100777482 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099833094 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135726609 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079450832 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.115311317 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082362527 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098408936 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104186188 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092611857 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075498185 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094384712 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.104902681 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102253883 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.082037186 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082196885 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11784094 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098366891 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095778442 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081212215 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10926251 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.087106778 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109176003 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269751471 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142260498 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103200117 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138064988 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127962942 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095861771 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090412595 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.092333028 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076315466 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111116961 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097991371 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136508276 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109625712 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100209687 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09744701 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083319649 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107933034 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123682359 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093446421 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099021926 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146074607 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108859648 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090404995 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091217089 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.146576938 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071865781 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147015606 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089724421 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122934281 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096053922 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138931168 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09551385 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086395388 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107657739 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10317525 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089590617 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103027115 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086484904 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114044481 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09299904 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101151723 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081969851 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094684436 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08725946 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097997986 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075131458 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104361067 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115719042 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114848259 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074971648 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108345377 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087410578 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077821111 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092619089 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138860844 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083649508 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075995517 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154164884 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093001572 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118344782 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111143097 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.084748857 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276435288 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137985042 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092901569 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090038994 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077626868 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157141476 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076521673 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121284593 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082987821 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105422162 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107485671 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131675607 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139214638 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095696615 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078937324 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095398812 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.10636265 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091079799 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086590722 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077665769 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108124932 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134541997 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.107098584 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08358823 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.094020583 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069851068 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115737647 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076636641 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082949452 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096436642 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.088037048 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090458083 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143362102 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.087449074 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108966125 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100522867 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067970196 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092497117 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154546672 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084012888 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112800027 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125352207 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085774877 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069499772 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096279764 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074194039 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109417618 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.093198476 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108769285 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079007487 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108089924 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068931103 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074814501 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129252027 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10186233 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092822544 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132908846 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10709426 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089763269 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10408852 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097678988 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09545331 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10297085 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.113912127 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261691803 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.075382738 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132881267 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091943226 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078142941 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087571935 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081012147 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07919827 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10119864 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116398962 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089771924 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103774602 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105269981 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091758624 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.112457501 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089645156 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080074906 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135060484 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077761685 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075710011 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088467487 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106041321 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089371732 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134459728 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081210296 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136701213 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096269771 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082837169 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115789649 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069059672 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070629613 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081451373 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093101486 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11714286 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080427005 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078974203 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126678459 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134416482 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102000009 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102612027 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068476985 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091213602 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137804986 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11778563 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081902459 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110954138 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085680298 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130576834 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096754012 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122283528 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106129432 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111057445 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091785549 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08438918 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074390682 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090708918 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111331675 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089257368 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082515754 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067897844 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075027503 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093764353 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090163814 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112498931 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088587233 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13576127 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07435039 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101178735 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106654223 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261169386 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092121099 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100029118 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094548894 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093457215 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095883742 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098291979 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074551462 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137214038 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107744035 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080163955 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092573579 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095579441 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10965886 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110235232 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119666202 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09771362 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108411507 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126830446 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101783186 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083709616 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085955911 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093339035 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087314848 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082290193 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104526924 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112973956 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101755132 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110086458 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.100437232 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.093413248 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107477926 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093957826 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089321061 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.1305692 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155561199 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.103358047 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106498807 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086693192 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108432352 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106146784 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115443701 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112066707 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110043636 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071517488 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076061618 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071973337 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107968826 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079943069 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117741457 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077598363 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109085635 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09823474 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082430537 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06725719 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103553003 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091873046 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083823828 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131515712 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.116497343 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074306225 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089201952 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108994588 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086667691 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138720795 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.103403201 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102991656 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072994199 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092367236 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074433866 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272860716 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105053391 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079282298 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077988161 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071219437 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108204477 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086112937 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119618972 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089543909 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103393117 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123225741 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133189812 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087958595 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101752767 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127880642 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115612737 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.084412309 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115352219 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136555225 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121561056 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08215061 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.08508817 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106649189 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106452144 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101338752 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077075052 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081000481 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110154489 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114463505 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068942829 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085758525 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071310178 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.087780836 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113569828 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095951841 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083345082 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126902581 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075892242 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109223816 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095869194 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122391333 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123136462 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146422938 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099724402 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089481585 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077870836 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13416264 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071455666 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126635317 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112835413 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088930542 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071645561 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085551134 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101239126 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.625053546 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109217957 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076981412 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136392716 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088450711 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117428377 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086844166 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119467867 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090488813 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104122726 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091600136 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127695697 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23833575 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112549562 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.185016784 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112034367 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109507476 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075369914 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087993734 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075607527 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.081060572 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081949112 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089097371 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109814343 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085827302 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106860929 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.081346328 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108062477 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091949237 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090701716 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.101490173 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083775569 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140112741 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089975313 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124430323 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108871262 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080822403 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075415626 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.088121508 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104204524 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081836443 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096404027 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080210627 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.077188282 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154851661 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103035216 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089446865 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104709323 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093350543 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.087046194 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097766052 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117907534 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112016302 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074150402 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089238798 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106764841 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080464553 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076428281 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098044615 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070523401 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088670768 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100486327 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097891665 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090887919 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102539953 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080267457 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088576894 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111073497 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086623741 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078194545 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078039287 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076883759 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.080265912 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10601039 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110227704 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115858141 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110010339 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095286455 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093459051 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.080447198 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.233719461 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082580899 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251316431 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.108599369 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07828411 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.135266693 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089718856 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089867508 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097979167 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103271233 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154822885 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075851436 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111817422 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093364101 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12009859 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088770683 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108274655 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099157593 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09317387 seconds)
  done (took 51.393968057 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110343792 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.162507887 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.156447067 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.08110648 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094869726 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120270679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209751643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192466843 seconds)
  done (took 2.872411515 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067262993 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.082021856 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102464998 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08361427 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066224984 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067537034 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.20122458 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081865519 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066116631 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10654989 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075452498 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067700814 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.368225456 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065451522 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066552626 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074688114 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067210067 seconds)
  done (took 3.437440503 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363876483 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602978928 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.330536085 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07468456 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.99123571 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091207166 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.272220081 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139505804 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081667374 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560484909 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369629639 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132345654 seconds)
  done (took 18.748140615 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075685909 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074853136 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.078695512 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07846522 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074349226 seconds)
  done (took 2.115875565 seconds)
done (took 101.099585681 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081832861 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.172342052 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067068988 seconds)
  done (took 2.009556088 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.083210462 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081344992 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08190913 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078933649 seconds)
  done (took 2.068793659 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074350529 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07572049 seconds)
  done (took 1.88691674 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.248485984 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166140673 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091971664 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083146446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080342166 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080605465 seconds)
  done (took 1.989280922 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071609822 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071313869 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071483816 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072397777 seconds)
  done (took 2.01819215 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067769065 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067140551 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06851925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071196683 seconds)
  done (took 2.010464893 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083150342 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084471126 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078950243 seconds)
  done (took 1.981570201 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102959159 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095290647 seconds)
  done (took 1.931326262 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079268995 seconds)
  done (took 1.815837417 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088721255 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094641439 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153460636 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112265746 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151619615 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134500769 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.078001274 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078964757 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073986816 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.072355992 seconds)
  done (took 2.773379449 seconds)
done (took 22.807122492 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078515371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372093274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359322655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08667463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671054389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356605243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991546212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090200259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098888817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067904104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08450551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648920766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97824017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324933681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967758139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329213301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648813532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06774313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06690913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067745201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973389777 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066911645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067425157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067825083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649979205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.406033938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068516079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328439971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067497941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070568257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389029675 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06907607 seconds)
  done (took 16.293875484 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069775105 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12197167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072525057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083958726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070463558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068906239 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070901083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068137397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10946243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068213349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084760848 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067233279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072070681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06993138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08848279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068321108 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069633516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069017338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068623451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069252165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086319232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068137176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069015205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071729225 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069353611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081511027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069615524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068307675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069078085 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071410177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071821179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069891527 seconds)
  done (took 4.153208743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12334612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126948235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073482931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108274792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120002252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069893787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152199812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091248672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114315826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068216624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085037059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067677903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104066361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069961476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088849678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068702541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070287074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069078359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068463494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069256386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086816299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06811458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06882692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069577784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069198854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083004852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069580031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06896123 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068410078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070609366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072833948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069501405 seconds)
  done (took 4.431897604 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069363509 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071305847 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079395016 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080864306 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066320067 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068979156 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.06964862 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066488431 seconds)
  done (took 2.333030778 seconds)
done (took 28.960057164 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078388572 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06771916 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070656982 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087518724 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073264267 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.070994639 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064195769 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073672771 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07062549 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070729262 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071697431 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066338994 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069016195 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064561799 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071636371 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066168235 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072818803 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07020342 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07132429 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.072508393 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067999431 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071316639 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074840411 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.071432399 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.071682414 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.071545009 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075161713 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071030802 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066808826 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069006239 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068235555 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076618969 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073215166 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.073012125 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066259397 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06624796 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070159583 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06836895 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072931961 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075544515 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068076889 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075366018 seconds)
  done (took 4.714870755 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084091273 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090063641 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08197207 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08180629 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100612087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082851657 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086055409 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079151651 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077413928 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085536981 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072997803 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081046109 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079246127 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071851794 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077772795 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074312958 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079318393 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073291589 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07833123 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078331978 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086085249 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071414776 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079205763 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079727291 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073308429 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079763066 seconds)
  done (took 3.848068698 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072895468 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087667045 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091545804 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147916661 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111321796 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082061508 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081845526 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095770605 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10017881 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067770392 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0718459 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093038216 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094654812 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074386907 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107358931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085237802 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079060421 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069165516 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074240944 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100679346 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089179486 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085700971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099219619 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086796698 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066980473 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069294499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07431886 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081698991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074409029 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078995477 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071502103 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070580557 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067749933 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078275319 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071526837 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065771825 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088732669 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079421707 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080717249 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107024431 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076213915 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068354184 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09665123 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132689934 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066532716 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06992529 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070322129 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079345692 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068277912 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095432286 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082274973 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066679781 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067384914 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068178136 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06823282 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08264061 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068443554 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068889062 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078722298 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072775485 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086671035 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07192349 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086545283 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066745759 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077612185 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068053549 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068346101 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065624007 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100793121 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073677606 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1180583 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067806834 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065102903 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079008058 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077876681 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073155469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067227718 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085028665 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078428888 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07060703 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078259597 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069685377 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070233892 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1014695 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066522123 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066055182 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064889263 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069626307 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07014051 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067725412 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080351769 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066067886 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070426054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081440336 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067006612 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067254566 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069401456 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068185404 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066604465 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079294686 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070957536 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06831031 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078852065 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067819498 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070407342 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080937335 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075117243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066341899 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068290501 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069816746 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069007317 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071403721 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070261202 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068332654 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072381681 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074333822 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072154508 seconds)
  done (took 10.890977171 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163534255 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153542444 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069272688 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147279798 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075432002 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.072435893 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14687816 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086862877 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067767475 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068972963 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066951522 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.096120844 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092534817 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1024422 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.072436329 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068249926 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090582248 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099992849 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150184971 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14529675 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090933668 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074837539 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069958493 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069103333 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068788725 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07619337 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083092899 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07576411 seconds)
  done (took 4.446310627 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077170768 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.094034897 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071956815 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.079724935 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087610306 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068248897 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069437228 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069280248 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081660792 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076036669 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067775551 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072074134 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071355419 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070387023 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068738698 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074195879 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074724204 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066441559 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070828486 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072698689 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078646605 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093197226 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07209542 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067398402 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069632767 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066997826 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075732625 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078395707 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067676192 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.082743947 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064680185 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071611814 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.0822609 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068263418 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067169446 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067924433 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067653537 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067535064 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068621488 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065502169 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065438529 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072463058 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066327887 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074716485 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081290738 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074711765 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069138449 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069946572 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069793581 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064285599 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070698148 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070274022 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069776565 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075348304 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071168218 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069609931 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06855692 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092299037 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073698532 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066761366 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066556695 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068716873 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.06875604 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077359508 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083898455 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068970554 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066052526 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06753056 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072842517 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081202767 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066583152 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071957032 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064990322 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067535071 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069950768 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070429694 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068660221 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065928185 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067015159 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067349117 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067981741 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067522534 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06700083 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070256612 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06511449 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066074442 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06817269 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068673501 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075443973 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066187151 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07112595 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068797725 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066256409 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069839005 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072890255 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070693585 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082076228 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07759431 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067806957 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065469268 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081756288 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069999617 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066601576 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073680327 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071891318 seconds)
  done (took 9.321356284 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091040625 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068987559 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086967836 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093393904 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078153911 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073300326 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079333542 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06846138 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084235894 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066486594 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076706891 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066725742 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07862292 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077354127 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069410694 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07829767 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070147419 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087524379 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082494179 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066496758 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076443852 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080014069 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080650322 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084250433 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084460112 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085427858 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07954195 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070629091 seconds)
  done (took 3.994009542 seconds)
done (took 38.965880191 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.836409724 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.01029682 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.829887383 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.008510604 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.08379238 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.85211613 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.03347029 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.823658326 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.050735506 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.880151659 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.116692817 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.195436589 seconds)
done (took 66.546412134 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.893651809 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.991575724 seconds)
    (2/2) benchmarking "String"...
    done (took 2.076684081 seconds)
  done (took 5.829261396 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.986471657 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.442112968 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.096910604 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.827776745 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.8335054 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.28917523 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.619144995 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.277350498 seconds)
  done (took 31.149006258 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.941653301 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.06316561 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.508288705 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.538924209 seconds)
  done (took 15.85574853 seconds)
done (took 64.566573901 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.866236729 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.827779388 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.901097139 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.86781474 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.8352183 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.829890607 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.829112299 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.830517629 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.862028443 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.842492361 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.827717634 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.836122618 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.830373113 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.882287063 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.286139261 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.87626988 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.83833217 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.840989658 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.85308731 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.888302192 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.832056249 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.827275568 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.300854054 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.9833133 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.44897117 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.956568463 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.175750675 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.235071909 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.837019754 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.828842869 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.033042856 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.038773808 seconds)
  done (took 205.713276774 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.826664348 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.866493926 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.952417094 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.839038596 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.259248858 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.004985807 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.927732459 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.339832223 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.833612438 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.835496492 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.137896735 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.829134178 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.141003998 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.827798264 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.865758323 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.92955178 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.088759438 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.123606722 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.868406693 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.978334501 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.838445734 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.958465114 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.919683291 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.08527773 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.847574007 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.844767491 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.848610727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.844195905 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.016118733 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.058249764 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.859738947 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.853082545 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.031820089 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.698161005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.832654008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.850584565 seconds)
  done (took 172.626929295 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.024387392 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.836006641 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.828759528 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.884604426 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.951192373 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.83133004 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.503170573 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.839581743 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.069216814 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.833054996 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.83176387 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.829136152 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.829148637 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.84124027 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.936493329 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.831569687 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.845742289 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.830410534 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.856289274 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.830384336 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.828094212 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.830468694 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.829596436 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.828028447 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.827602258 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.830882995 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.162001694 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.077840937 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.831864177 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.829194235 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.967132844 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.844971761 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.995555779 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.836527315 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.920341641 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.886572004 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.945909374 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.830135753 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.050060706 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.909454899 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.832726452 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.829585424 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.893810961 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.843443152 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.831049962 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.833373683 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.836894788 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.896184425 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.078250227 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.830938688 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.951957742 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.314942476 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.83120602 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.83127419 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.830588675 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.831806447 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.419420267 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.831743027 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.832501939 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.837100529 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.836310433 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.832276407 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.833498325 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.218412251 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.90107623 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.974911837 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.34243588 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.834506495 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.262079744 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.906495572 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.830213863 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.832524583 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.834745339 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.832768786 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.831649895 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.836047135 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.955996674 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.838869403 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.943612393 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.914030145 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.955665094 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.836703061 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.843560264 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.657790729 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.901134922 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.867108433 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.660560817 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.833981533 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.203331465 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.603176062 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.834149644 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.835920807 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.833186201 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.847964697 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.834346977 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.834635593 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.832890743 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911471226 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.834874019 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.83538451 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.955034056 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.572274643 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.219093435 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.833364251 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.832560243 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.842895524 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.833055318 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.914048086 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.960902837 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.835629283 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.900316065 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.841989472 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.836788045 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.937031473 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.835629809 seconds)
  done (took 407.646062952 seconds)
done (took 789.83240744 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.41878963 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.390971136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.485453776 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.406926164 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.381309927 seconds)
  done (took 13.853473784 seconds)
done (took 15.625526871 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.848830829 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.840689165 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.893776099 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.917328832 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.850723295 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.852980668 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.914349552 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.855227723 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.884023933 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.889796033 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.916894523 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.919950871 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.859192021 seconds)
  done (took 26.213097038 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.844580967 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.993363431 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.078464799 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.877890938 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.844032177 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.081377332 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.900047631 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.981692307 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.986108647 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.08182067 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.082977576 seconds)
  done (took 23.524463728 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.844408739 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.994718432 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.072802948 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.880785673 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.845198589 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.076758616 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.906786142 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.988316096 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.98905214 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.083605552 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.083888121 seconds)
  done (took 23.546612859 seconds)
done (took 75.053910771 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.84065154 seconds)
  done (took 3.612253336 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.858083877 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.007657312 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.838932518 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.837140385 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.838341585 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.841719986 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.837327565 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.839606807 seconds)
  done (took 16.67072885 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.837312596 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.839112216 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.840168921 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.841055735 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.839390507 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.839078793 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.842510766 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.840077992 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.840115563 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.838652418 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.839920472 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.838774254 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.839615776 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.839572987 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.841712385 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.838119416 seconds)
  done (took 31.206790061 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.841891683 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.841106036 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.841300292 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.841074745 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.842617225 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.843497184 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.840865308 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.843536497 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.837911139 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.840325797 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.840735988 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.843397562 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.841639204 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.84311135 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.843027701 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.842224353 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.841920955 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.841604407 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.846495978 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.840099503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.84236063 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.84219655 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.839975426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.84203615 seconds)
  done (took 45.978804433 seconds)
done (took 99.249250539 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.533036072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.557343645 seconds)
  done (took 9.86524923 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.844345609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.841762484 seconds)
  done (took 5.465006169 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.842724253 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.841460429 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.844588516 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.845653635 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.840280384 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.84300856 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.841801021 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.841828938 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.841067578 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.843184214 seconds)
  done (took 20.199912132 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.842243602 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.8428673 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.841633463 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.841192479 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.843145286 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.843693974 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.844810089 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.845917428 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.843031923 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.841452333 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.843755857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.843384824 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.844348864 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.846214978 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.842663952 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.844786352 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.843192235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.845128814 seconds)
  done (took 34.960710579 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.841933415 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.843870175 seconds)
  done (took 5.462492949 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.844877343 seconds)
    (2/7) benchmarking "second"...
    done (took 1.845524532 seconds)
    (3/7) benchmarking "month"...
    done (took 1.845391471 seconds)
    (4/7) benchmarking "year"...
    done (took 1.843879216 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.842244749 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.842917422 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.844433663 seconds)
  done (took 14.685196278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.844938036 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.999536925 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.054057804 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.707503536 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.84352389 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.849663887 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.155578788 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.847987357 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.850993544 seconds)
  done (took 20.929357955 seconds)
done (took 113.344266196 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.644479791 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.848085126 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.098295757 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.898284909 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.863549291 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.140091531 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.863184238 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.481483401 seconds)
done (took 42.616484861 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.844809522 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.841364791 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.875271521 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.873062725 seconds)
  done (took 22.367495535 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.84560466 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.199473421 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.865696458 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.655070821 seconds)
  done (took 22.360044222 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.219880866 seconds)
    (2/2) benchmarking "read"...
    done (took 2.186373188 seconds)
  done (took 6.189837571 seconds)
done (took 59.543382144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84279907 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.846925648 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.846002449 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.844068461 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.846035317 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.846962488 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.848366702 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.847459086 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.847912306 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.843790366 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.844432471 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.846777903 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.847573527 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846181494 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846967583 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845769887 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848379451 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.845404053 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84644895 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.846496618 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846757046 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846229377 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.849415521 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.849127195 seconds)
  done (took 46.096585139 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.846687338 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.847359686 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.84769377 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.846271862 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.846574456 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.845108522 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.847403671 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.847341272 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.847799013 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.846993377 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848064891 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.844604861 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.84983758 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.846682298 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84823267 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.847116646 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.85081188 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848679859 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85024794 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.849106181 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.848745221 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849065928 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.848932971 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847173073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.844893443 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848361371 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.847314418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.847784321 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848854511 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.84817989 seconds)
  done (took 57.21433386 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.849012086 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.849353556 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.850420293 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.849312425 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.850260839 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.850976803 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.850085468 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.850210268 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.848259481 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.850793157 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.849500615 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.849265205 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.851239529 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.848465948 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.849456133 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.851491648 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.850612044 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.850455771 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.848250805 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.848370956 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.849134528 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.85054949 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.852224203 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.850534801 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.849606913 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.85039663 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.847530329 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.850138742 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.849514989 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.848352411 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.850821177 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.85114224 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.850321293 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.853138426 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.852691395 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.850895536 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.8506098 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.851734134 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.851385052 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.849506129 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.852281674 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.851689842 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.850649864 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.848732929 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.846821444 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.848450604 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.846910391 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.848282876 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.85033932 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.850557277 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.848732332 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.849936745 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.847817825 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.848567906 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.84754195 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.850677182 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.848194029 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.848824896 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.848675813 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.848228089 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.84819189 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.847659889 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.85135284 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.848056431 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.849835596 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.849652638 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.849127691 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.849717152 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.849138466 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.84881462 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.848931762 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.847639327 seconds)
  done (took 134.95996192 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.850212804 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849623873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.848233066 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.849216608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84930887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848969167 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.849149222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849028236 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849510634 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849119426 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849253683 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.850373431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850471439 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849786748 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852115475 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850171543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849332376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849374457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.850402566 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851903973 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849788397 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.849574622 seconds)
  done (took 42.474628228 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84833735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.850776177 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.85242193 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.851303164 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852373923 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850471231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.849101705 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852634772 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851693401 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849776332 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851405055 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849291921 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.85242341 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850329126 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850562044 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.852053963 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853130409 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851412572 seconds)
  done (took 35.102993798 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.852183692 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.852068481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.851263953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.851228039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.851202474 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.851819092 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852356573 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.852434479 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.852936347 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.851165475 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.851594422 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854666339 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.851646922 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851912542 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852043631 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.85330943 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.852771875 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854976728 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851247423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852799811 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.853974452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850688913 seconds)
  done (took 42.53444091 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852352826 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.852959027 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.853781087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852321653 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.852942842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.853117074 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.853377059 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.853724939 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.852618543 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.852751423 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85239722 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.853037147 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.852306783 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.8535153 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.853185845 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852942687 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854808223 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853054546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854879329 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.852986219 seconds)
  done (took 38.846817648 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854100644 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854018091 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854495769 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854896335 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85587409 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.855171908 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858084661 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.85410573 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858778884 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855536744 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856661778 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.854296302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855880645 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.857479461 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856284564 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857591244 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85484417 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855107114 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855110884 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855646126 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.857052204 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85571009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856474699 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855182404 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.858241677 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857780852 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856388954 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856802607 seconds)
  done (took 53.754619265 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854490504 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.855671365 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.855900268 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.854995527 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.855043044 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.854275458 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.855491449 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.856871263 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.856321145 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8581692 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.854378799 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.855332133 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.855715764 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.85590724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.856167742 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.854941256 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854991388 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.857680671 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856858324 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857274345 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.857097344 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856101297 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.857198498 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856681275 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857604402 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.856173578 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856536527 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.856964813 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858170128 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85534511 seconds)
  done (took 57.472210012 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.877137402 seconds)
    (2/2) benchmarking "in"...
    done (took 1.879111754 seconds)
  done (took 5.54635912 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.857648091 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856737073 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.856563835 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.85680316 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.858775938 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.858718037 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.858608475 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856932518 seconds)
  done (took 16.651208389 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.856799105 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.8633795 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.857708446 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.857846574 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.858899657 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866744692 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.861376054 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.861215264 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.862099081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.86045896 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.863705368 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.863370057 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.867388156 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.864041704 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.861919773 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.859802042 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.861212675 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.864840371 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.860531361 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.858117265 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864503961 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.860869649 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.860436908 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.860016774 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.859364581 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.864698687 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.871408248 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.860543919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86116743 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.86145913 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.868123384 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.859582848 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.860878645 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861964443 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.860282183 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.859400216 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.868100038 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.860726445 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.860339919 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.858692373 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.86423929 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863809029 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.864220849 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.869315575 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.861709588 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.859471414 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.865612071 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.862142412 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.860457395 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.864917448 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.869322315 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864120231 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.859915258 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.860363692 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.864740722 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.864828154 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.861368632 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.864525331 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868459785 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.870259573 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.865685668 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.882154692 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.873890004 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.862261014 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.863727138 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871795307 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.885149227 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.863242006 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.864256128 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.861562642 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.871033737 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.864623455 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.861473675 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.86321511 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874716327 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.871465634 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.865153315 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.862537304 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.861997858 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.863344473 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865332153 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.863210497 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864102864 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.865888189 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87447141 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.888972947 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.863109463 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.862788253 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.865045167 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.86461683 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.868315769 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.867966263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.865128115 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.863454758 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.867516148 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.865541795 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.863764691 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.864079843 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.865939019 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.87341303 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.862474121 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.863379018 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867372088 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.871535976 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.864014054 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.865103015 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864684148 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.86407821 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.873763259 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.864531667 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.866157866 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.862571814 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.865264533 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.868409436 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.864376604 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867864033 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.876558744 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.872138878 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.865434714 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.868905106 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.868883965 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.870869088 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875224152 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.887833278 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.864715513 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.871204453 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.871397213 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.880231145 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.86889042 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.866975621 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.869680026 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.865486235 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.865035723 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.866391526 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.864187886 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.866227556 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.865055996 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.866078072 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.86509723 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.867141704 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.868454795 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.868708796 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.871966096 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.866434407 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.870392162 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.865608222 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.870335717 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.875574406 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.866655882 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866087187 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.866064472 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.869672727 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.86673058 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.866852392 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.864834509 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.867406632 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.867521309 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.866262779 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.868679667 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.867699888 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.867360212 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.86766548 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.871839514 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.869048827 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.867357133 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.868593619 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.86676673 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.866319867 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.868790418 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.869790778 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.870636181 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86972376 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.871995233 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.868648152 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.868837329 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.870511587 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.867572903 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.86821206 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.873217177 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.878686258 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.874306115 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.877366403 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.867861728 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.875942693 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.867660799 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.871739566 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.870261865 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.869195215 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86991786 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.870557171 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.867927402 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.874006452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889084869 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.880748633 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.873674854 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.869979011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.874651658 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.870404028 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.875366844 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.86980695 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872164048 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.871278338 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.869584797 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.868609678 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.86973198 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.873501754 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.871427463 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.871522222 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.874956669 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.871309931 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.869934486 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.870043066 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.871712497 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.874547066 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.870283009 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.871050019 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.869853452 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.87161074 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.878985716 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874228661 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.870457307 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.872072762 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873431388 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.87062121 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.871129529 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.871491459 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.876388975 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.874032335 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.871745709 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.881050474 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.874136004 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.872749117 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.871001848 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.872299589 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.872226959 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.870855134 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.875348904 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.877939519 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.875713482 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.873191759 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.879817599 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.871097472 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.874775723 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.873290277 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873875192 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.87310531 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.874429117 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.877120492 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.871318091 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.878893555 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.873716262 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.871794717 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.876208819 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.874598949 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.873273716 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.874971506 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.875079798 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875243566 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.880980564 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.878850866 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.877163549 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.878038824 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.874771487 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.871980508 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.875436562 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.872827804 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.884887568 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.882688602 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.871602386 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.873888649 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.874156043 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.875838425 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.873936449 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.875938438 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883539736 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.876368454 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.873902136 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.878568603 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.875126677 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.873313972 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.882452816 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.876088322 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.876258743 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.875580601 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.873842285 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.874821701 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.874926354 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.878041396 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.874615655 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.875227694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.879200154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.87421389 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.87519594 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.874606272 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.883173729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.875823578 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.878342579 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883326837 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.875462214 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.874118299 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.876032133 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.8772012 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.877472351 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.874582444 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.874402699 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.876360514 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.876489055 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.880138807 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.886427353 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.880910022 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.883166103 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.878089253 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887165008 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.874417205 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.874049506 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.875657645 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.879301479 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.883379828 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.874880785 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.874018458 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.884685277 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.879027363 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.877178642 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.87920527 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.875216068 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.876504702 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.875822754 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.876850515 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.880925782 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.878568435 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.875576087 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.875964019 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.875784047 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.876639235 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.881605525 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880102049 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.877524669 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.876755532 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.876017156 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.876949193 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.878375959 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.876502559 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.875278544 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.875964281 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.875708921 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.885347925 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.878310603 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.878923746 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882026717 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.875751877 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.885712087 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.877231703 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.877819515 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.878623354 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.877463824 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.880900822 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.878215764 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.878357294 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.878087371 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.877172582 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.878189225 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.890139955 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.885851708 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.880972514 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.878780305 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.877901747 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.880153935 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889009696 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901777858 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879451335 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.879028957 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.881312251 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.886661906 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.880081443 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.884298959 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.882185856 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.886913738 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.878971636 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.876965743 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.882393733 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.89117284 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.878896748 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.877943406 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.878058294 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.884946346 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.880967552 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.877362336 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.878802459 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.883276336 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.880808794 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.891982581 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.880105133 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.880052634 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.878699632 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.877308831 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.879851324 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.880033938 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.881055441 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.882335195 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.880366794 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.880471611 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.881667017 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.884530599 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.879100431 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.883487931 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.891019236 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880849826 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.880043879 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.88434183 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.881070637 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.882749489 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.880183724 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.878763528 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.882315899 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.87983379 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.880682527 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884178302 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.889602086 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.881833184 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.880218907 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.880507857 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.884500572 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.879328825 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.880503376 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.882185076 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.890750338 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.884950727 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.893293797 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.889781373 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.880971095 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.88220927 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888954158 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.88997946 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.882105079 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.880973999 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.882215681 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.883804621 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.883978858 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.884552542 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881198314 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.881849509 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.887504942 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.880525082 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.882814015 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.881759798 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.88224776 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.884312498 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.883610187 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.887825821 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.883515892 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.883654106 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.881286356 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.884080006 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.885397333 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.884751054 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.884206522 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.882095101 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.8849455 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.886723944 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.887858093 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.88303637 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.881979411 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.888694394 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.883682608 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.882395357 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.881461288 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.88232555 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.881962413 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.88663006 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.890044513 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.882101954 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.884131992 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.883636094 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.886726069 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.883579467 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.883193768 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.885990086 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.883092001 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891572604 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.883770267 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.882898971 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.882787912 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.88415062 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.889373317 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.885153626 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.890550608 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883517933 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.88419468 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.884104877 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888236147 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.892448441 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.889647523 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.887539092 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.892322026 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.890532775 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.886771975 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.883546631 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.884599396 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.884566205 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.884895559 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.888680665 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888048867 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.888237263 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.886563567 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.8883189 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.886190843 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.888573283 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.885173217 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.884657701 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.889328662 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.896808792 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.896771285 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.887482553 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.888906536 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.886973266 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.890233522 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.897576845 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.888054643 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.885600109 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.887713003 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.886577426 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.88664942 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.894614542 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.894605427 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.890309758 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.887096001 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.89246834 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.905535491 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.890410131 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8978739 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.918553698 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.88847549 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.887544238 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.888329118 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.886898069 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.886826428 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.888853 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.887754418 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.895388982 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.888100838 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.885876184 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.896516356 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.888807433 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.887166983 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.887927107 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.889457001 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.892422426 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.887653958 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.894729216 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.8897681 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.887557882 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.887730165 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.891518676 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.888351546 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.887595593 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.887192836 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.890649928 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.887780036 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.890516928 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.897984872 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.889536121 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.890364206 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902015587 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.899554445 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.890257241 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.888003101 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.891683054 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.894659225 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.894791547 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.887988767 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.896197101 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.896058099 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.892508057 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.896214641 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.891636759 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.88999918 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891087476 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.888142495 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889161314 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.903385269 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.902867541 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.891420372 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.889487553 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.897096036 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.888775781 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89791807 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.89760766 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.88846762 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.891208984 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.887950122 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.888088503 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.887458762 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.886607973 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.891351079 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.895545732 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.887121069 seconds)
  done (took 1120.639700605 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.887899008 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887161071 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.885648979 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.886699578 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.886190001 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887180036 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885541503 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.885680356 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.886955693 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.885897173 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.887911135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.886969587 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.886954687 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.886896181 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.88762941 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.886406869 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887739232 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.886611935 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.886465354 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888450909 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.887369086 seconds)
  done (took 41.442028497 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.885200023 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.886075459 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.8858124 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.88503199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.884845553 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.884794588 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.88400992 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884029496 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.884442887 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884901284 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.882515517 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.882645579 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.882380056 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.884182177 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883707748 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.885959774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.882448483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.882654341 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.88406863 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.883830919 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.884249176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.885243181 seconds)
  done (took 43.271699103 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.886968465 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.886971383 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.887030595 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884397594 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.884867987 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.886311739 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.88747368 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.886316553 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.885461315 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.887090145 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.892851691 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.893187108 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.883724572 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.889494129 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.886370094 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.886114824 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.034200464 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.886865394 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.884148445 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.883581414 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.886375592 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.894043874 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.884618114 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.885506159 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.883750225 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.885926839 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.884548237 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.887058447 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.886906543 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.888499635 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.889794233 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.886406048 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.886234179 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.889161295 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.88689302 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.884389414 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.88996176 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.88477343 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.882654294 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.885598938 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.89404439 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.908926535 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.883736573 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.885343152 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.893476377 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.884436405 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.88221398 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.886557985 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.891353357 seconds)
  done (took 94.443412459 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.884558642 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.883011755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.882588987 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.882631421 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.881125491 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.883938438 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.883078734 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.883024016 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.883203574 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.88471503 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.882905193 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.884076694 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.885086345 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.88613713 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.882204967 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.884038146 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.884459221 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88424422 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.883892149 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.883985988 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.884455609 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.88548162 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.8850604 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.884099391 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884221102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88450267 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.883504552 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.884785408 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.883199432 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.883343301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.883685108 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884385875 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.88624893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.884993782 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.886508644 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.884239666 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.885886966 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.885575056 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885207283 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.885130337 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.882778523 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885792368 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.885677861 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.886182873 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884433487 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.884566312 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885490501 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.884985917 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.883990305 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.884852384 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.885827015 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.88584536 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.885930761 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.888117806 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.885540482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.885164884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885292756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.88618801 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.885195344 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.884542523 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.886076002 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.885347292 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.886333499 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.88640988 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.88662131 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.886499311 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.88451081 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.885850223 seconds)
  done (took 129.976732287 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889093845 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.886276958 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.886524552 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.886969988 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887868704 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.886132918 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.886663895 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.887155034 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.88732835 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.887729587 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.886694939 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.884989801 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.885907044 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.887909842 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.886612736 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.886831776 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.889331936 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.886792478 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.884423636 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887510092 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.886873529 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.885580989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.873906732 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.872856608 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.874158146 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.87219285 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.873739567 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.876778088 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877240002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.877296493 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.876653503 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.876860766 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.873056699 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.870956717 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.871923865 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.870250321 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.872210982 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872280275 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.869497837 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.869663623 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.870514994 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868592191 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.870629106 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.870629695 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.869362572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.869843752 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.869080898 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.870355824 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.87179268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.868748615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.868761858 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.869966181 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87152186 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.870058462 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.867158958 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.868405817 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868444788 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.869171014 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869310448 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868853321 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.86844672 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.86795439 seconds)
  done (took 118.179707246 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.868517721 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.869972948 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.868443469 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.867843133 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.867750852 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.868885433 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.870976425 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.867883871 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.867548267 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.868731257 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86851788 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.867815672 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869076275 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867012291 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.86847351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869085233 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868265721 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867040312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.867205516 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.866665845 seconds)
  done (took 39.16304011 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.866933275 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.869021522 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.867750153 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867110389 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.868891723 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.869219814 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.866652234 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868712297 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866928037 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869200209 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86780672 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.867362789 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869445048 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.866164117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.867845492 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.867181284 seconds)
  done (took 31.684231703 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.867880666 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.868084517 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.868933612 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.867731453 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.867227786 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.866370013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869583734 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.865848314 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.86612288 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.866845383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.86919229 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867488032 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.867544707 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.867864478 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.867371068 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.867262857 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.868416152 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.86586812 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.868616274 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.868247155 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.86709004 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.867762482 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.868754076 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.867068622 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.867352512 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.867509972 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.867525374 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.866548573 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.867063166 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.867008754 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.867031419 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.867057026 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.86806546 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.867857456 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.866719071 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.866597777 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.866331135 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.866861587 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.867441092 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.866069929 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.867082591 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.867120243 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.867294434 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.868040536 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.865957824 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.86524658 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.865059059 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.868499238 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.867080346 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.86739333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.865670355 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.866183637 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.86686848 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.866103647 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.869267552 seconds)
  done (took 104.498013667 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866062293 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.866082904 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.867904104 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.86419886 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.866247291 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.867525733 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.867297776 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.867018145 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86618371 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.868568491 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.867161105 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86731245 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867249974 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.866415229 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864265014 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868056132 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.866745567 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.865154711 seconds)
  done (took 35.39627979 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.866235071 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.868558631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.86560521 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.864907077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.864788757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.86652178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.868774546 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.866846738 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867154885 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.864705202 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866074791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.865201838 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864594108 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.867065394 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.867007563 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863430538 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.866390719 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867254593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.86540822 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866861051 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.866670618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.866462949 seconds)
  done (took 42.85031257 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.864605047 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.865814975 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.880255479 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.885263562 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.885174434 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.897882363 seconds)
  done (took 13.073796245 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866614626 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866474445 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.866481566 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867398904 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866568349 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867120316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867090528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867825427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870276509 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867293222 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866606132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867245524 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865126959 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86761757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867179405 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865955004 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86836856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866386244 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8662641 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868143601 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86610266 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867104197 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867537055 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865836829 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871510108 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866722006 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866488665 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866702835 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866206108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866473696 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865868946 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86635104 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865456045 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868207495 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864004296 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86915572 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865444808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866487295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866367461 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865675939 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866480242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867274324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866432774 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866804295 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865873288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867174301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866452497 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866132588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866710104 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866651342 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865748142 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868374376 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866174412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867290099 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866714045 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867378964 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868276817 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867150062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867467739 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868380098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866865411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868908345 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86959078 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866326824 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867106936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866095009 seconds)
  done (took 125.016623767 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869395187 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868667545 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867466255 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868484545 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868872472 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869642201 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869560316 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868710759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868349173 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867865898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869253911 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870150183 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868374655 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869512083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870660417 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869161928 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870804981 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869776882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869507715 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870128129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869994251 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870929853 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870687115 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869213302 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86932603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868937039 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869512833 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869276398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870520537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869260954 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868741146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869154293 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8705504 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.868127125 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86913061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870492729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868974034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870894447 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870502508 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869794974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870120484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869602922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870268132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872750843 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870336963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870400973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868709934 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872089381 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871896527 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871412247 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871431576 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871300197 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870102034 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871024524 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872512864 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872083842 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871715984 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871298776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870217296 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871229056 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870308824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873298619 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872108481 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870243315 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873760142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872248548 seconds)
  done (took 125.229759418 seconds)
done (took 2597.306625734 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.917455883 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.158105895 seconds)
  done (took 15.875877868 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.047290026 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.000090002 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.884618385 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.895864083 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.885181141 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.886284763 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.90797668 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.886003672 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.885079045 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.885337599 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.88562495 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.070430968 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.941774666 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.886440123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.88579927 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.979751611 seconds)
  done (took 52.628277517 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.891324218 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.88887143 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.901215114 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.890207377 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.889741214 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.906152686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.921555263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.894547771 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.950729708 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.903589078 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.012626585 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.901412783 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.892133258 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.95698321 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.906339742 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.907137008 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.991683402 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.96809682 seconds)
  done (took 36.385580359 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.970306511 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.900994415 seconds)
  done (took 10.693120203 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.903339116 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.897301343 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.898747459 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.915936403 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.886137248 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.909353956 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.893772079 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.888660592 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.896448603 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.899656989 seconds)
  done (took 70.805676588 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.89239906 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.889610788 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.89110356 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.886128004 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.884087185 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.889547805 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.887921607 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.88519279 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.590830181 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.927943888 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.899453391 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.8981984 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.887774007 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.888679184 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.886151165 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.913857075 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.996286704 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.883929589 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.885074071 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.893750909 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.887462148 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.939092162 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.90406938 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.888019845 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.921220198 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.579980055 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.899175915 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.894455835 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.996798533 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.883237725 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.888741667 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.073225175 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.895334567 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.347621142 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.181833592 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.895416489 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.9005329 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.896477944 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.883846151 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.003518574 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.889686516 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.893667354 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.837138934 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.154422578 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.991959637 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.936168249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.241476646 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.893186383 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.888576455 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.924157218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.891547931 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.889636683 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.906705743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.406489539 seconds)
  done (took 133.978109916 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.887028237 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.231676673 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.051453065 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.889375051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17153552 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094051638 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.889768768 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931520923 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.89053568 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.119753086 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.145016614 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993610003 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.889100835 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.884584632 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.889047113 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.886078633 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.027704198 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.959391464 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.891151579 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.887277956 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912900393 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.131739721 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.010345098 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.89143542 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.913151706 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096247969 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.00872234 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.992595206 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.654355641 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.886121837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947909455 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.891112133 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.887543279 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.886005973 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.045423993 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.980327764 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969941915 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.889865495 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88774877 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.887401703 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.543033123 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086595153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983075587 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.006756767 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137631975 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09143376 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.665067017 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.888113429 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.617909675 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.048384471 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.1162706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.12200442 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006697696 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.888775848 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.415873641 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.887728643 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.889409937 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.137376848 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109657941 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.984223182 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891138303 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.888450617 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.890472181 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12585583 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.891544995 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.982712949 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893063329 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.889703904 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983683104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.986590977 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118594114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103083694 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917752568 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.226073108 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.396637499 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13659724 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.954498478 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136572491 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891644789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887846312 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966516463 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.721790669 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140519108 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.129199912 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.134817005 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922946642 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.608522901 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.889018942 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.114717128 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.109896724 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.138823882 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.134034918 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.126719321 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.204135118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.892245519 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.889500873 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.218297988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004055545 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.896364892 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.234561923 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120664633 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.532564095 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.916148117 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.194652389 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020201101 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.894266718 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.517312672 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.893716809 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.111162442 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.928684529 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.893328647 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.890517475 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.108740543 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.864016682 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890519839 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.753396556 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.950583925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.892730439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122798525 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.89576692 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152573282 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893305507 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121052435 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.349396119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.921345905 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.122336913 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138047555 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.895559146 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136098796 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.128355083 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006174251 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.161690052 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.775589656 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.892442154 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178069918 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.894063107 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.890119652 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.059762499 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.891945444 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039635645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.897933958 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.17413076 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913611377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124416143 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.895584981 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.147501382 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.925045744 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943505401 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.896176337 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01610247 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895339265 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.733052784 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.048910183 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.895354695 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.893028994 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.6901495 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.894865416 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040586547 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.11570146 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91405636 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.962792151 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.557260802 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.893481443 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974290189 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914857173 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.280833164 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.895937751 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.146841426 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.896576807 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.895194004 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.89537698 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.127618736 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.127849085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.895994479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.892248309 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.788765578 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.895202587 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.895222428 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.074152757 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.235926212 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.895408814 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096299109 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.898781358 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021669076 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.898702473 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.957336449 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.232193292 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.895264432 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.8951559 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.895063197 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.897046096 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.895389092 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156844973 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.920181784 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.413642223 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.030816132 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.16211202 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.202958337 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.133584464 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.937785805 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.898272512 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149112327 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.899306587 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.957272594 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.898983055 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91538096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126774366 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.898472062 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.155950212 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164896053 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.752364374 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942890175 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.896955511 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.896528107 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.896576576 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037883449 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978101994 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.898723517 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.898219465 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011437891 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017094681 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.103072289 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.900123954 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.96404653 seconds)
  done (took 908.536537656 seconds)
done (took 1230.707125409 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.896531117 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.899822454 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.900925857 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.898811065 seconds)
  done (took 29.422196672 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.900381627 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.898861536 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.900970353 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.897597882 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.899616748 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.897322719 seconds)
  done (took 13.222304191 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.915432409 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.898219487 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.899450878 seconds)
  done (took 21.535494791 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.974177695 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.310210111 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.045732584 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.332023247 seconds)
  done (took 10.49023805 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.899302986 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.901164106 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.900353057 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.90066415 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.90279748 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.904183227 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.89850236 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.901417799 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.904360658 seconds)
  done (took 18.93944161 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.990406626 seconds)
done (took 99.427570665 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.995053656 seconds)
    (2/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.648591457 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.965246666 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.823277321 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.004585972 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.203172481 seconds)
    (7/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.97645717 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.924714869 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.201223699 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.996361745 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.046887146 seconds)
    (12/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.001815617 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.082565848 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.08340938 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.919415884 seconds)
    (16/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.998801388 seconds)
    (17/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.029395084 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.900079964 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.958656512 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.005587594 seconds)
    (21/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.233507048 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.745817674 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.923238915 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.001559433 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.057241186 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.904308529 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.92248117 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.669207895 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.562533717 seconds)
    (30/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.684561544 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.985336189 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.210002959 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.111065087 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.901638949 seconds)
    (35/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.014706301 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.00908733 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.196144385 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.084386459 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.980976748 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.115298631 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.287758355 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.902532115 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.133426106 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.901022867 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.031199758 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.995380057 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.039029165 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.904292339 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.233965924 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.014990603 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.157133503 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.902495339 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.256685978 seconds)
    (54/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.235040213 seconds)
    (55/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.321314424 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 2.118503102 seconds)
    (57/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.052074579 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083727476 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.922564923 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.904402078 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 7.483089641 seconds)
    (62/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.928569193 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.156676067 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.903473615 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.505867167 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.921269243 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.901661426 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.934830287 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.988597988 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.829587071 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16839437 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.001982049 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.90659269 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.967772332 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.003858909 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.193859404 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.902490334 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.922337277 seconds)
    (79/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.675964074 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.985565308 seconds)
    (81/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.298920956 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.004281227 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.651886145 seconds)
    (84/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.993011237 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.899885155 seconds)
    (86/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.276441661 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.301030668 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.236659746 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.374049369 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.90041903 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.760155694 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.217914672 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.011909252 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.002553237 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.917451766 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.907521468 seconds)
    (97/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.126354154 seconds)
    (98/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.114074962 seconds)
    (99/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.379992364 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.905775271 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 6.902685173 seconds)
    (102/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.67232353 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.702708066 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.510423684 seconds)
    (105/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.215146548 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.905449624 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.077959838 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.927176186 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.919929909 seconds)
    (110/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.907728948 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.009537776 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.905799429 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.14438692 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.620080444 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.201840774 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.540656839 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.286333838 seconds)
    (118/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.370561248 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.061683437 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.097644076 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.032070025 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.164476089 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.285351042 seconds)
    (124/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.531167707 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.134756599 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.226480747 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.092399576 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.934679579 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.904720145 seconds)
    (130/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 4.367711331 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448888792 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.166584346 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.229557857 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.213997193 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.932557707 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025023309 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.90775155 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.861883223 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.968672702 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.448850238 seconds)
    (141/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.942192156 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.556110362 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.997437491 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.544296229 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.309485262 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.03095205 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.376716812 seconds)
    (148/309) benchmarking ("sort", Float64, false)...
    done (took 5.609922801 seconds)
    (149/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.042158442 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.439454243 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.042614778 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.556102228 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.132775206 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.170216642 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.160169152 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.152636355 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.176688117 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.914228075 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.221653862 seconds)
    (160/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.054210897 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.226858895 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.321018995 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.936072843 seconds)
    (164/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.660057368 seconds)
    (165/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.932555774 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.986750737 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.924002881 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.224647481 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.020484178 seconds)
    (170/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.299592769 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.227557001 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.941785541 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.243628716 seconds)
    (174/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.985801835 seconds)
    (175/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.231624641 seconds)
    (176/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.91030453 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.087602123 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.110155079 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.870393888 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.398104667 seconds)
    (181/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.997151167 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.912538974 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.909704061 seconds)
    (184/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.987285757 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.909248047 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.122400878 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.018147987 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.988812783 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.031886198 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.912503968 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.381271632 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 3.932681516 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.719140417 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.253016572 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.91591183 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.987927669 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.777209132 seconds)
    (198/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.011611067 seconds)
    (199/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.369268394 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.045509259 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.934678252 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.578483335 seconds)
    (203/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.097475728 seconds)
    (204/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.914004591 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.040488047 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.676521436 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.918248465 seconds)
    (208/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.991797262 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.775928739 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.914547801 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.044790601 seconds)
    (212/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.787848422 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.996625587 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.017072518 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.039438019 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.13803641 seconds)
    (217/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.418914041 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.045992656 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.998981166 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.911754395 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.249040525 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.056792052 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.171831269 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.304588847 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.612461055 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.308789015 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.237421854 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.970951013 seconds)
    (229/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.037360602 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.383407815 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.919655257 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.997413001 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.09665824 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.915774572 seconds)
    (235/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.304677791 seconds)
    (236/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.078524761 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.087224104 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.943295055 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.043048259 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.197416272 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.914960167 seconds)
    (242/309) benchmarking ("sort", Int8, false)...
    done (took 4.876369122 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.925083667 seconds)
    (244/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.222893915 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.999856125 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.167631814 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.628955821 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.336195826 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.940235017 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.30420421 seconds)
    (251/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.047291106 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.911879081 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.190936208 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.051427508 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.833332933 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.311698395 seconds)
    (257/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.915812278 seconds)
    (258/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.159433303 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.101151457 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.571862313 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.254045858 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.121483863 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.925931982 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.233298996 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.311465867 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.952906578 seconds)
    (267/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.387444343 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.322483172 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.057492447 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.253547635 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.657185813 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.133135252 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.316289635 seconds)
    (274/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.916037326 seconds)
    (275/309) benchmarking ("sort", Float32, false)...
    done (took 7.511459149 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.912739772 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.960151587 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.167566043 seconds)
    (279/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.953153369 seconds)
    (280/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.17086254 seconds)
    (281/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.278616627 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.074957946 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.407706 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.974029476 seconds)
    (285/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.695543214 seconds)
    (286/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.121669542 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.935473451 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.936762114 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.975569132 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.717780838 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.908632419 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.037998394 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.005118027 seconds)
    (294/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.213116753 seconds)
    (295/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.392841462 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.950693478 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.207548524 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.226881725 seconds)
    (299/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.928390447 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.034876405 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.562592863 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.921240431 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.089029165 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.240512895 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.129122521 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.94021624 seconds)
    (307/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.36455351 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.945208555 seconds)
    (309/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.120056266 seconds)
  done (took 1023.421514619 seconds)
done (took 1025.328185319 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.943389508 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.939134613 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.919310068 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.94391681 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.03081196 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.963263811 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.93331734 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.923475447 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.971442563 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.968629474 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.920727925 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.961870388 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.923357492 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.923408403 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.921194831 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938215071 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.220391228 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.94716723 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.94019017 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.931778713 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.942831127 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.923132195 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.973885286 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.961817757 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.928656186 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.92701354 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.926465612 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.944989669 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.035046787 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.926819044 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.929546878 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.933618755 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.221681146 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.945261315 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.921128206 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.945027519 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.935572074 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.937485112 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.927790479 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.954758438 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.361529591 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.925656523 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.926922803 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.922265919 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.92519363 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.929758767 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.924969745 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.935316566 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940199072 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.94056351 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.354397338 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.94437451 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.924832385 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.921663123 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.940681856 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.92490438 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.929606506 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.942041334 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.942420405 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.943907371 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.216454875 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.954498476 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.927900283 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.943707419 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.934834601 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.391949962 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.927314443 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.931673437 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.359458455 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.939865156 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.391515318 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.936293063 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.928192275 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.941589901 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.959218351 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.226096862 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.947491637 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.926207508 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.93582724 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.922905487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.937519806 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.941469538 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.930422706 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.925291329 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938280488 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.970075448 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.939872664 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.927038044 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.939158542 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.94645283 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.936378386 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.939951295 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.928604565 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.928116789 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.942819305 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.933614961 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.929606674 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.928493275 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.931123369 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.939829205 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.362259474 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948689059 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.925231607 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.925998686 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.929608747 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.943006685 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.362163852 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.932091352 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.950672656 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.979863767 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.927466357 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.218946882 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.955810325 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.945376758 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.938522381 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.927298391 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.928062721 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.215473075 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.384077635 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.94808093 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.929108329 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.927184712 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946326177 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.929793555 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.924993557 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.229937228 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.955883332 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945828483 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.053069348 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.940385052 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.960558302 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.92908062 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.932165237 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.974899575 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945706596 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.962455068 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.933518968 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945119243 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.944817516 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.927398648 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.941582119 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.944196804 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.92994724 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.938169298 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.927235391 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.973789011 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.945005265 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940498925 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.948294064 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.050838917 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.927104417 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.213529148 seconds)
done (took 302.605751536 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.005792833 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.92730477 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.045376895 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.924792211 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.019058377 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.996673593 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.929789142 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.926719471 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.924310542 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.457554915 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.927919536 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.930507863 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.925525749 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.926034966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.999717584 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.927200589 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.926420563 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.390369597 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.930142962 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.006813892 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.925926016 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.932134659 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.930203485 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.433308916 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.929423917 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.928971619 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.016215982 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.926529725 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.377996993 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.924405321 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.925194966 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.381246031 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.015292796 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.956233633 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.935938481 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.934124533 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.016402801 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.937686168 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.994495487 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.996004135 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.045032742 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.963860877 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.926868986 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.926770166 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.929311318 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.931658892 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.929050113 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.959627008 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.928304281 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.932577447 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.373797491 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.936071667 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.934337376 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.928403404 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.928441747 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.95803417 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.930642004 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.930844061 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.01430075 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.930640513 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.996941277 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.434187905 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.448204292 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.92694019 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.928453668 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.930846835 seconds)
  done (took 189.318294302 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.99494503 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.001748173 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.993578434 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.93000827 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.976806584 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.997911455 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.931665593 seconds)
  done (took 15.678938034 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.936371751 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.932496417 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.979319703 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.978861666 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.933124493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.115930306 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.940281658 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.934810671 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.958475652 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.932718563 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.593647691 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.979998412 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.938655673 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.929841068 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.944339317 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.985570208 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.931030808 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.931580237 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.043430212 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.079241629 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.9364458 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.936423062 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.9584328 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.945341033 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.929994752 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.933230782 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.930741578 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.942041255 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.929982838 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.932364488 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.930963421 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.98236163 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.932672159 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.932178589 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.930883581 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.931915708 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.932307384 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.932409787 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.930069615 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.931741463 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.934082626 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.931404062 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.930302291 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.930953749 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.934168831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.953650728 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.931791396 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.93145607 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.931167995 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.934073475 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.958091147 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930933081 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.932044132 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.938164515 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.979672023 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.938746547 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.933731559 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.933624889 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.931674243 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.933021989 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.93267471 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.08244663 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.985051413 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.93408192 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.98185969 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.090585719 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.933098972 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.932337749 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.935124863 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.022390319 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.935775151 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.982532728 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.932221541 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.046827483 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.93640428 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.114753855 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.957820737 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.939436256 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.936079076 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.935814203 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.941503096 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.933097011 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.936738444 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.94324446 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940432335 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.932475777 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.93381732 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.936021304 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.940029716 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.933246003 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.983533865 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.936131314 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.936971799 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.068681627 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.935266874 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.046054893 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.960741276 seconds)
  done (took 212.136843787 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.942517668 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.941657108 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.939568768 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.950023626 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.937088207 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.935642551 seconds)
  done (took 13.503974424 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.93975951 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.94077879 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.93855674 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.937295359 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.935209388 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.934433034 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.936906807 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.936023964 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.942703657 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.935372342 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.938152194 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.934265312 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.936294731 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.932951288 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.938423966 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.934943933 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.934822134 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.936490727 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.935296423 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.934812104 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.140728463 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.937106108 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.936886904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.943515859 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.942468209 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.937867496 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.949683827 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.937377736 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.938447193 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.944001519 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.94118983 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.940330017 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.942926765 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.943914975 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.942045896 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.941142175 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941627551 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.938568637 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.939608636 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.939197092 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.937518503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.937224265 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.936478349 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.938752947 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.938928256 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.946883253 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.940769458 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.952167948 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.939484839 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.938345429 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.940530302 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.935854058 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.940485383 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.939169889 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.946163211 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.947018185 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.94510154 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.938767033 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.940859881 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.943465796 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.944607785 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.939230873 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.943613142 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.944799654 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.947589118 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.941660651 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.941823709 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.945355025 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939149221 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.93887038 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.940293217 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.940784206 seconds)
  done (took 142.745113649 seconds)
done (took 575.250888914 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.971807635 seconds)
  done (took 8.833747213 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.063605002 seconds)
  done (took 9.020348669 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.510823564 seconds)
  done (took 10.375492636 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.953345885 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.968418385 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.944496775 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.937474295 seconds)
  done (took 29.676122214 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.239501704 seconds)
  done (took 9.10177511 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.953108081 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.943658607 seconds)
  done (took 15.832525645 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.972173158 seconds)
  done (took 8.838419219 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.1790235 seconds)
  done (took 9.052655064 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.955697817 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.947623035 seconds)
  done (took 15.789100168 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.943806034 seconds)
  done (took 8.808711758 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.432057404 seconds)
  done (took 10.383991472 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.956031373 seconds)
  done (took 8.86647616 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.98996847 seconds)
  done (took 8.854161854 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.165768466 seconds)
  done (took 10.028396002 seconds)
done (took 165.324410655 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.94397168 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.94326186 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.94254919 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.943331418 seconds)
  done (took 29.633902925 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.978689843 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.97745395 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.983612277 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.977666324 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.964992189 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.967779334 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.975307747 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.980024854 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.967582098 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.992140258 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.97841821 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.973460752 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.990507927 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.986049116 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.983785457 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.985348397 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.975235875 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.975648174 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.979145927 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.983471844 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.972874966 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.974806278 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.940917304 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.943571134 seconds)
  done (took 49.272854092 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12660315 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.006848463 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.097104557 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.987532033 seconds)
  done (took 10.081611649 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.938751479 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.006555663 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.992301812 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.998786789 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.990153827 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.04360699 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.99405108 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.079353464 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.069593638 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.069151939 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.947305024 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.963266413 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.968511149 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.991879795 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.046618418 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.944898202 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.943196824 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.139949892 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.002875274 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.131225947 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.941482563 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.996359317 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.994263485 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.99405133 seconds)
  done (took 50.051253051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.946241793 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.953976028 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.948402086 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.945373811 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.944613177 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.94757052 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.95192045 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.94471108 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.966087732 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.94564957 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.942589229 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.943571251 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.950568924 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.942522617 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.943631505 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.956931436 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.955758477 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.944015615 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.948646391 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.954002373 seconds)
  done (took 40.844727881 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.943418787 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.788257865 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.286118695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.194470095 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.943081644 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.943463975 seconds)
  done (took 31.964951503 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.95469693 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.946434568 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.942879501 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.001355445 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.07924732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.947315358 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.946482136 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.955261285 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.986026257 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.006325861 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.961361022 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.972380505 seconds)
  done (took 25.567537645 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.945545977 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.946999985 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.945398814 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.956793557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.954018744 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.952028711 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.954338054 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.943999345 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.95688447 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.962482651 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.952321206 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.957108725 seconds)
  done (took 45.300004602 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.64963002 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018670024 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946505815 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.820100459 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393841668 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.493736611 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.839719876 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.68141524 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41536245 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.872208929 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147681459 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.946236199 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031077203 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.9453533 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215991948 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.329993337 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138198415 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187665508 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318248801 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974646192 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.149563711 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166832195 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.237489021 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944355936 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946450502 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.05616724 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.252757008 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.765742467 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981818126 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.95134552 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187969503 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893198543 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002022437 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.950274022 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.95921435 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948485424 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952718494 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217901987 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.056422256 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077867632 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020239308 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191020127 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951551612 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365051559 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.653682294 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.272127288 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.062294948 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94737966 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950907072 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946303213 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.875031794 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028643321 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.947391003 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951524093 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.64878647 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.946850922 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023824011 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.949532376 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149725535 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.755041739 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632466547 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.948924675 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951404589 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.504836825 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.05669981 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.060458454 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725074678 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32525732 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377564485 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.047258944 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.947769897 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94967733 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.955859517 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913747368 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721970528 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989001886 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.088801118 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.965339221 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589657401 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251342196 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.391480613 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50796586 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865904844 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224038398 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365188494 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929559008 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163665957 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.811134442 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.875538174 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17099928 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985424097 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953347045 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213196546 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683792141 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060642331 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.959467842 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383448095 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959734043 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.954150215 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95297235 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.162538557 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.962935215 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980457683 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066799884 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965733592 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032313727 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876540655 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.962335981 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.949296154 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.852736032 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.952499692 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858476783 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.995745563 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.239697395 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989989466 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.891112953 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95434877 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.060982602 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99421868 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.899175512 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199624207 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.255231098 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.627782018 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876837466 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.083494797 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.357924795 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178345267 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954780965 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168477296 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478860188 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.376406153 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996987935 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24498841 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.011229398 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254920533 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385291007 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027651344 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.745846252 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.578888151 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.166974248 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965575742 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.952345172 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954473998 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957535551 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888371139 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.636096696 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.353143337 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.120907698 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.16492284 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.315108566 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.933344133 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873213252 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258754582 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.089580818 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.963107676 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.609659673 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.051006524 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.790594478 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.981240198 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963643511 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994502248 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.91314234 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964852823 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028062997 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969244111 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.964679071 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.313512605 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314869301 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.955038783 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.955406755 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.908390978 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962719834 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.956351545 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.487221135 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924585386 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.955494443 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.966584311 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.82711056 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026714828 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955592936 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956785421 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.48941449 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457610817 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.957257179 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.550209679 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.06784156 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030941854 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226585488 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.341021218 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082637636 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.653233505 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.382969361 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.067924431 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.660577204 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.879393732 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954569188 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.894966018 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958807448 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959972971 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962121775 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.150627811 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234272609 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255639101 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.412042635 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.019236083 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15798432 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.688479454 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909805212 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.955502273 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96118811 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.959561585 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955632941 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.46280753 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.19575063 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.071050977 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98853861 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960653965 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084204619 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.966061253 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.88607444 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.956245241 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959686065 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273351197 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980431227 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.903958171 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.277423234 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.862727485 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078941308 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003380188 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.967314977 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961437842 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.691350651 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.997758526 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884389951 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254348848 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985914775 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.757920095 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447065531 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.51728778 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249532599 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278370483 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.283100184 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.028418438 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.172088733 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036080598 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013563151 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045086022 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894187448 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.879459924 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.615722334 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284624561 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220962392 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9667106 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168983563 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743963518 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187875404 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98634351 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.252512187 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259691653 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931840889 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97336855 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.320803777 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061668759 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042326272 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961401996 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.906609271 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287986186 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997349803 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.658319769 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968779149 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303997641 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.255817709 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.023056521 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.347564429 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170964242 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.963421002 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296841187 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.030337 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989863737 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.960371503 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.946103293 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.172753142 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538050537 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.826436969 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961444101 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.97305219 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247129846 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.860828503 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.955895317 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.967540475 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212270965 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95334586 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.310476195 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324342917 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.066575281 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018326648 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185603188 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.350878053 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259805799 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.51242412 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.445264221 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963295893 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.878328625 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.654359394 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.1551295 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.959159971 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912367314 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154711841 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187353344 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627084376 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160369316 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185645706 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.957702834 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212780438 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014743015 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.038108421 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.269585928 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.395653439 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.209534757 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186883344 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499508283 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174785363 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415175086 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.127147971 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.961035292 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164981722 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176394936 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.178114096 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.360076122 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130088355 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.67043821 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.963073895 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.165790887 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256639309 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018906878 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.354973174 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132591493 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.04139059 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966751112 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023509256 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963725667 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96956044 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.35508997 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487191805 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.974058756 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037671313 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.065313049 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.472702923 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.964497099 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.965330424 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233489942 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328103499 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291537021 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946440276 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.962421662 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970471781 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089475365 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.887540935 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965950384 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231504638 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.967855739 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98109078 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.106893673 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979089577 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.290277618 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352025269 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352866908 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.925823325 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96941187 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18336999 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269447372 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.012387661 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075231763 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237997256 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296269389 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.001658513 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.364328063 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208479103 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968527624 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.167623512 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96711001 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092185854 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.159092418 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239264098 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.536292763 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700269363 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233419938 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.814673871 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967500579 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.690254386 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233331026 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238763478 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.018917956 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031013316 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972419295 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267040469 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.69313437 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097872238 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.844447433 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894606814 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.11228383 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186453569 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.205097257 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.677240045 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967705504 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246945838 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265227023 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235201432 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.018273271 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.816833167 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181516224 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968813157 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.974819907 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212815347 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179116981 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214648977 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970963665 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.975578492 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.775628887 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894783622 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.969966394 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021746353 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194992586 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988424963 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.482105199 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.667189281 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247468954 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015720634 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969965662 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244684209 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.471282266 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.524151949 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973312909 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172108464 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.915088745 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266141578 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.970625606 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268992204 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27062367 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.96892717 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.986337717 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.211127762 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226731995 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902995267 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978709194 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183245922 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.824284382 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.969984887 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.950799801 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276301803 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201006584 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.704822029 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527244521 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.97225916 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.973353677 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.268169762 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999045483 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295253518 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00146498 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985091147 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489456831 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.668866572 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.259614201 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213241645 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.986255622 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.563721428 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.976623636 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.972523343 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976660751 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89094504 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147639249 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.160439041 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244516384 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001406667 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27700186 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998542756 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.331455979 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085647851 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990177413 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010631002 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.498115943 seconds)
  done (took 1677.807386631 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986765075 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.98837467 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.998686579 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.981516858 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.965649734 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968527978 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.024257984 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.999368804 seconds)
  done (took 57.809473075 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.964611585 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.977426325 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.968046381 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.964426256 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.966000564 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.965036567 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.121517439 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.970679584 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.96560701 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.967659732 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.962165711 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.959754531 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.226855892 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.979338501 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.976688505 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.966076548 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.959235729 seconds)
  done (took 75.751835772 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.962190318 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.144795251 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.008027048 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.95632679 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.853810447 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.96456393 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.858775322 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.978793005 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.950623103 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.14340169 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.240148679 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.972808935 seconds)
  done (took 90.916291837 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.948344695 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.940833268 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.94007375 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.940701577 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.940301606 seconds)
  done (took 11.578839284 seconds)
done (took 2198.482922031 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.182524401 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.997515968 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.034597042 seconds)
  done (took 5.893459143 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.085324831 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.129636262 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.243885612 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.009409439 seconds)
  done (took 10.33870615 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.229210454 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.322397489 seconds)
  done (took 6.412285699 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.292261483 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.947266098 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.309330292 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.940351978 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.936536046 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.937433801 seconds)
  done (took 22.680991827 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.931913668 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.93239902 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.932575258 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.933796285 seconds)
  done (took 9.58564567 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.929270041 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.647501252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.926843375 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.943669155 seconds)
  done (took 21.302012643 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.0747392 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.047559035 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.072277017 seconds)
  done (took 8.047739969 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.081242999 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.76576928 seconds)
  done (took 6.699322792 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.072029268 seconds)
  done (took 3.921979633 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.956846376 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.198415373 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.410558567 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.473520501 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.591194062 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.676981996 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.241271315 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.166329266 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342337466 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.362188438 seconds)
  done (took 25.273848012 seconds)
done (took 135.754511615 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.277477129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.939643234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.13598697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.290582265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.152223977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.134997633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.14792173 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.274840069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.952808238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.941751914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.283555282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.149646613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.095921812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940405881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.096249792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937111559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.147490642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.278517036 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.967666203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.185047325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.154804771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.9298649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.130962175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.942134717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.147242567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.045247792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.474850916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939786691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.117658144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.482441244 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045063106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.333304975 seconds)
  done (took 169.92657877 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.927731059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930546487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929931235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931324817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.281484686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92933501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.93034679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.92867696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.138158338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.122828774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929259273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.26380057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931428067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927877562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.927556121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926787953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.290103104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.930500766 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.929795429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.927391174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.929255001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.109486012 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.929335833 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.132625581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.272201722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.929410245 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.928233509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.929255281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.929758771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928368139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.931963776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928552583 seconds)
  done (took 209.770830739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933221218 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930364715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929563493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930129552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.931238688 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92875495 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931142982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928551699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.632576581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.61899566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.922533041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.918907444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.918590954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915336179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.917309295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914932685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.918720443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.913908067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916453768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.919447196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.922205049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.7171638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.920790955 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.731952563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.924024324 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.919742051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.918720542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915749213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.913917976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914323795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.913812732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.915499275 seconds)
  done (took 222.357513191 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.161751601 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.917236163 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.916670984 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.968879899 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.914721058 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.91289825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.925249687 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.163051666 seconds)
  done (took 19.723395696 seconds)
done (took 623.647138653 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.297564929 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.764412797 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.098875545 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.938563096 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.211801848 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.98944393 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.934740655 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.005167777 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.871850749 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.009512358 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.600458117 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.955725008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.692753126 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.957885893 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.061233437 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.988013972 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.530325782 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.63202372 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.069834095 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.998947121 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.117239271 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.869985252 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.010830142 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.82870435 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.607002346 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.916046788 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.98623868 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.529635152 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93542624 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.088637518 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.626009188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.236368527 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.939930886 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.922029899 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.97762839 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.954907047 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.165131597 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.931680392 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.048868354 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.650814694 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.992593431 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.681086699 seconds)
  done (took 105.463974423 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.910312158 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.912264735 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.904144793 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.901863991 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.914133525 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.902143927 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.900515578 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.892858617 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.890949649 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.892685527 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.892134702 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.90481131 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.890077972 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.900029177 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890477344 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.887288486 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.891347311 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.899611465 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.890333316 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.890748507 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.889415521 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.890765658 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.88924756 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.892848167 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.89177806 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.889795148 seconds)
  done (took 51.145365352 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.88728257 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.059308424 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.13621274 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.911263433 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.889161838 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.888329062 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.907608109 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.891747829 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.887218243 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.890954513 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.98047801 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.891969783 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.908120951 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.132998345 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.910526776 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.890151474 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.883099416 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.890094548 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.069115422 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.903188307 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.9077739 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.893049707 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.908032684 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.899239288 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.892085303 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890603511 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.895166252 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.385771898 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.896486904 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.982352085 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.983510138 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.914452029 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.303472986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.142352174 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.95357124 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899485743 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.885647317 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.989130852 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.893014955 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.890325076 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.906942785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.895123235 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.1347067 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.421705876 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.907867284 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.88643059 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.391441307 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.996856295 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.930591343 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.901010782 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.141320895 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.90983173 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.89065172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.892677339 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.927579624 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90736981 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.890730754 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.251416423 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.900708071 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.907219883 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.895107489 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.890776881 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07574535 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.897272256 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.062966015 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.899566302 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.897789284 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.893218583 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.14121108 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910204282 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.438504889 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.908429753 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.889759082 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.984079403 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.067541697 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.424205637 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.901884174 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077889072 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.319664516 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.913698351 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.900917056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.374628812 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.917548974 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.897697846 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.895217699 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.892086602 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.889091112 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.936960904 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.907100547 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.34663195 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.430369925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.271526785 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920070219 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.901954364 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.892120994 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257172892 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.900568974 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.892507498 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.129399369 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.441077278 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.909086267 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.899152526 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.412445267 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.909753333 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.91090827 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.902616319 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.147678621 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.908642827 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.937587284 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.891807975 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.897831736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.895644854 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.909315734 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.901458026 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.894480077 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.398742744 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.006368201 seconds)
  done (took 235.237513209 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.89314887 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.891218351 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.888117446 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.889529824 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890355729 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.894058292 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.892774498 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.892670198 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.892253486 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.887680453 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.895590172 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.890664933 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.89412002 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.893559904 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.93998213 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.896950655 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.381304928 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.890559063 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.893581551 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.892888187 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.454341581 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.898500027 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.893225088 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.891858353 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.89416148 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.894107621 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.89656224 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.9372811 seconds)
  done (took 167.962793254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.894556702 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.00571729 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.912877805 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.924158929 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901292365 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.893997237 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.989808159 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.912086817 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.902838887 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.893802648 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.894499281 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.95291882 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.910819774 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.992130567 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.924816842 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.00089969 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.99927996 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.90275779 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.89574936 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.89256068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.922608316 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.904837397 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.953796606 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.020231051 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.918169171 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008628022 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.915966673 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.895955428 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.892233752 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008868334 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.91076586 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.951625853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.922401809 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.910199045 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.01133974 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.007538977 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.994112092 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.993457979 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.895422484 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.890113229 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.89019614 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.889362982 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.001003664 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.906484883 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.888540792 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.003148983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.90254374 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.885138002 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.885859355 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.885484511 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.900382092 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.901898512 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.949195732 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012355868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.918139562 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.90622535 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.977320192 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.001077584 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.881317386 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.974992049 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.88818389 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.990760672 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.898528655 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.879937401 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.880249779 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.883971608 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.908942547 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.98428258 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.980675572 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.883810814 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.976572173 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.916372618 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.88670387 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.87888858 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.878120417 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.990393534 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.998183414 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.912502881 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.911865323 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.90683961 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.887448187 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.880664053 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.876904203 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.892506355 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.881261166 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.987412874 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.992548965 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.883945646 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.877805237 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.876432001 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.877393856 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.902419877 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.000217871 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.912955721 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.983014036 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.941080442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.950229822 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.890931565 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.890076051 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.883239439 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.939014579 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.891307348 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.886671821 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.160367112 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.937027567 seconds)
  done (took 204.426541774 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.274061096 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.919637591 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.933868972 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.195349686 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.251205463 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.84502861 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.92363544 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.928033439 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.956756171 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.147190729 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.999219706 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.94438695 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.911454763 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.896921672 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.918835183 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.96025557 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.939590743 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.279105979 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.153792948 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.43889358 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9142166 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.21046777 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.267700975 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.537512468 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.975895102 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.321164116 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.544772234 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.086446426 seconds)
  done (took 63.484639662 seconds)
done (took 829.563028645 seconds)
SAVING RESULT...
DONE!
