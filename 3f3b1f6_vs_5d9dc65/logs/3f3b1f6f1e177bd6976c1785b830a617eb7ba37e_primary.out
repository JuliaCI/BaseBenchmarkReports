cset: moving following pidspec: 18337
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.232726228 seconds)
loading group "string"... done (took 0.466970429 seconds)
loading group "linalg"... done (took 7.625014059 seconds)
loading group "parallel"... done (took 0.174496664 seconds)
loading group "find"... done (took 1.16919262 seconds)
loading group "tuple"... done (took 2.119948305 seconds)
loading group "dates"... done (took 1.34510354 seconds)
loading group "micro"... done (took 0.24775535 seconds)
loading group "io"... done (took 0.661658822 seconds)
loading group "scalar"... done (took 41.767368981 seconds)
loading group "sparse"... done (took 12.543623103 seconds)
loading group "broadcast"... done (took 1.107616302 seconds)
loading group "union"... done (took 13.778053359 seconds)
loading group "simd"... done (took 4.849401416 seconds)
loading group "random"... done (took 9.647643569 seconds)
loading group "problem"... done (took 1.970053357 seconds)
loading group "array"... done (took 22.453032813 seconds)
loading group "misc"... done (took 1.437477436 seconds)
loading group "sort"... done (took 3.580416375 seconds)
loading group "collection"... done (took 19.403011921 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513939856 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137279291 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133444573 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147553363 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202562105 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143279179 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157130639 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113494982 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.96853623 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185598708 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153291107 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511785646 seconds)
done (took 5.118020964 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223984998 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095104503 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103040008 seconds)
  done (took 0.870417316 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077066669 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144983588 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093190205 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078030704 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094806453 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077711686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094678997 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076646731 seconds)
  done (took 1.338888318 seconds)
done (took 3.196984949 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730791408 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278003131 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202075329 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461752654 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196407478 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213743129 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679930765 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356314594 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252934619 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09959733 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143856174 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386577423 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135551512 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68910605 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090480833 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123582393 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179598306 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460932167 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083076061 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10997973 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116761698 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141414657 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129301273 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0899839 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184180787 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081693693 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193780307 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107713103 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080200254 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289726722 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201147969 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685439707 seconds)
  done (took 10.892501311 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110743409 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132617125 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097157858 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137557437 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13388895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099075147 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084395483 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095841634 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120776436 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174842251 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115054101 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136666856 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09455752 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082279442 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114661511 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242975257 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121113844 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103882517 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100139185 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103235258 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121884316 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112383312 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108895152 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092785826 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166183238 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221303264 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113369692 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125809671 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096439664 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11492554 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145277989 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14159982 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096010563 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080513463 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171432426 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123311242 seconds)
  done (took 5.134877671 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188232588 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120967829 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167819966 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162621772 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139830422 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159394817 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113085975 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24490198 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112408769 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164699085 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142449251 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115937554 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07994018 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097757768 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153262187 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096223782 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.626010477 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162970725 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134813866 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115581668 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102751932 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083780775 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.389677459 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103008214 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080157623 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098210405 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065142414 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09414586 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159636907 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080740214 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.159178976 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101119878 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105600727 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132410222 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193335681 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126090662 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117346609 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096822848 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077890366 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193717971 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087590382 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096644043 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102680026 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134791912 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133734403 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097687117 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081429015 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217669356 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079738665 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113215036 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.950048421 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182503945 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090629873 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095550628 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321362762 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100480029 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097292944 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077961106 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280205975 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184316501 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097687057 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079811432 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096813437 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080320069 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397364993 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080440589 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.84629269 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082226967 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105662682 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082841639 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096427888 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103640102 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086825527 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114449836 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079027578 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099075972 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079280215 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095787346 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081474732 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108142164 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101453781 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080269423 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164564734 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081770209 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114774431 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126497927 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083612854 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094884764 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129789911 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078676338 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097465299 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080121821 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132898493 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098600689 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10741063 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082992713 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143013213 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096591659 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076346353 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187353724 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080439819 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1260125 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099254496 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114709052 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111565464 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097827429 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08368801 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094993459 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076806609 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164557306 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081951308 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097640697 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080631699 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110070273 seconds)
  done (took 22.677826332 seconds)
done (took 39.385214144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326776632 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103833381 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101629071 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100869605 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100214429 seconds)
  done (took 1.494490386 seconds)
done (took 2.225413485 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28917425 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172552766 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095349159 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167452168 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092640335 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173591371 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159004552 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110791983 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21842218 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0769558 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164163522 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0930728 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076054372 seconds)
  done (took 2.638811701 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094731679 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114815616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082361144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110439934 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076466042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110880562 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092817436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118859471 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108740939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084009903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0929197 seconds)
  done (took 1.818912447 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093468225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117100892 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081803467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110040838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075898568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109731102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108886927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103833543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110358008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084287555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093871856 seconds)
  done (took 1.821180231 seconds)
done (took 6.992982527 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090937296 seconds)
  done (took 0.818566464 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920466167 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.977174286 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112834397 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.14979032 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316154341 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176821975 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483167539 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125274851 seconds)
  done (took 11.194643437 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.116249833 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099989224 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100442095 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081668269 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.114017388 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083068832 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099495403 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101316815 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083899882 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102430881 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08682674 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101429732 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101840073 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083829052 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101556664 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084649154 seconds)
  done (took 2.32880031 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119531694 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11773813 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107106058 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108205411 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086817037 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103869372 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105065636 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089987 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101524624 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10320487 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089965191 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105295425 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10322887 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079684799 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105756748 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108543628 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085887416 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105621708 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107033459 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090829883 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106931552 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095000653 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087566832 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106490143 seconds)
  done (took 3.255891005 seconds)
done (took 18.330021626 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159697566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107988336 seconds)
  done (took 0.998445679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094890019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112695749 seconds)
  done (took 0.942324974 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097941815 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095198649 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122948932 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108978212 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07958578 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095728095 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119210424 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080729326 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096221499 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080633304 seconds)
  done (took 1.716428482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081490343 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109586481 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101501113 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094436253 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104720202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094905098 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087888935 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098727078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109694676 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076934247 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102104308 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114579318 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085647339 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116249656 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10468135 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0833337 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102774775 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098660452 seconds)
  done (took 2.508908548 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079842798 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097221212 seconds)
  done (took 0.919483341 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081933951 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09400732 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081772288 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096809052 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093802299 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077238186 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094081392 seconds)
  done (took 1.358420478 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469687279 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135736537 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253134777 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085480263 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120477312 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303216766 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098105222 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084982705 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103261741 seconds)
  done (took 2.450269457 seconds)
done (took 11.630803483 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092951039 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11764348 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112813028 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46709743 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107370722 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097579868 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160937662 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250204281 seconds)
done (took 2.155483669 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152012526 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324252514 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113587272 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067664194 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09615176 seconds)
  done (took 1.348751554 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07925864 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099859487 seconds)
  done (took 0.920914442 seconds)
done (took 3.165684854 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08075427 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128657922 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080326248 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096494302 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080881409 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096098254 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077486129 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098495482 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08004847 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096230495 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.09642548 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080672947 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093874411 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077906585 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096992312 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077922752 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096558866 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076996758 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096475192 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07727829 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093570405 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080454216 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094922435 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07791764 seconds)
  done (took 2.910931779 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099717502 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099060459 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102915147 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08476052 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101791052 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086814877 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101982976 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097327436 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085961007 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098630516 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100509061 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084205263 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099216429 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084126942 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098961268 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101121522 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085959729 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09784442 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0831086 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100190091 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102005481 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080522652 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100727195 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102702057 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08388865 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100535339 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082832197 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097102864 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103378538 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08387486 seconds)
  done (took 3.578119422 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084003361 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094301636 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078993721 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102297893 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077953478 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097725061 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077581614 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095270365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079004249 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094289219 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08025135 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094102565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078148777 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096059375 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079825498 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097620737 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107490788 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077976634 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095211442 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078560423 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098672017 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077615459 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095084052 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077507106 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095082391 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077921767 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09502814 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078421124 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095438616 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078794751 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098529951 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081306277 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095041873 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085815601 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099006819 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078031336 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098940646 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094468051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078762256 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095228479 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078710066 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094973138 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078250069 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101767451 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078648184 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097326783 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078905702 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096269068 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078863239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098873775 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078040672 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095158839 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080106989 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095778466 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099176772 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078188438 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095908195 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078174656 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096438318 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077516551 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094049846 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077158441 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096338702 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078522821 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110098671 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084605976 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09469455 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079172832 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095617667 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080596233 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096759239 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108765269 seconds)
  done (took 7.144232295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083217256 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106835767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080209637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097701753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07676707 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096002279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098231114 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07898141 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096788656 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085873037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095732266 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079352854 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097795098 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107458122 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079153995 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096820335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085445537 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093985484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078953723 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098922169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079194167 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100821139 seconds)
  done (took 2.745238838 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208811245 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104510261 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141180814 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10663265 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083136 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10732286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101921769 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086952899 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102162544 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083218034 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100352934 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101464473 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083252569 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101072818 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100567345 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084883221 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102537548 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085383009 seconds)
  done (took 2.643183837 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093494043 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098958376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101367918 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098411686 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098055005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083155648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104076392 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108142264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083334743 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097867947 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09122861 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100362463 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100653936 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080704683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10105838 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080789313 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099933732 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082738008 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10786837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104267603 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103407482 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090811566 seconds)
  done (took 2.873868456 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095950929 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10022637 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116833946 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08392865 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094836361 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079383869 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105972409 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080885991 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105927097 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099860131 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081999449 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09677283 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08790034 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097238971 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104090798 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081864121 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100868349 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081598529 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100706946 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077541423 seconds)
  done (took 2.633984802 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102930075 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100302534 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099987823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09278109 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099772375 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082538744 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109138091 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099451067 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083221266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124730279 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099651102 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082106407 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109094703 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105245426 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099901253 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092171649 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108643502 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109023779 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082299624 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101012752 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125427934 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083094492 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110021196 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208543013 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08317801 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099918637 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100077829 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089208122 seconds)
  done (took 3.64591425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080645498 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098495357 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078784289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096967714 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078711554 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096512225 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079066838 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096295121 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080228028 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097201241 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08067849 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098051095 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08138739 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098519692 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081183891 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098838669 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083708926 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0958358 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078853237 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095958848 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081576426 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09792372 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081221273 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09587645 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07887297 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098310258 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078509185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095842457 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0812655 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095807035 seconds)
  done (took 3.424739268 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090017219 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10552623 seconds)
  done (took 0.959553295 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078719364 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114661668 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078600636 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102607257 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086331215 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09930403 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107386568 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086373756 seconds)
  done (took 1.520660488 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096564636 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110638538 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083412318 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111986483 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109679356 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09509988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159711748 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100280888 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087034508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09741296 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112971788 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08064581 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105509441 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081426688 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105003326 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088088991 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096717351 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088343778 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102814325 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098502926 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083907147 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111515387 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08477107 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095807979 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08429251 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110205419 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10832101 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08281153 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10260743 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108442257 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087759073 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093511641 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082625763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100244637 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080792538 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108578282 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112108297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084855318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107628705 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083384301 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110533901 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094563187 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08685201 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106262669 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092075822 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099569529 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082647412 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094448209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097029702 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084778812 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095048868 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081880273 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094337 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08973185 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103910608 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112101388 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080742418 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099976738 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084652958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102885688 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087682986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10141116 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084040402 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09916235 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106520917 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086201316 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107081697 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077117654 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093576005 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080053815 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107675903 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122061124 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090446648 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100224791 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083413507 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097589469 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10328864 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083443466 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106863479 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08995148 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099716722 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106404218 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090627676 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100163545 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08391671 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107450602 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098144428 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083921861 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097726715 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096087647 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098912431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098410669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080656297 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108564822 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086453032 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100608131 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079844628 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108079741 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07645171 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104729483 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101032808 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083170541 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109094383 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08818267 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107049371 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107072042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089216307 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100072898 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08555324 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09725035 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082957356 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102617627 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107233957 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076056873 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103110636 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084335376 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10089782 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089731737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097997223 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082722049 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107878313 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106765728 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080291896 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096263095 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084853886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100014052 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104063037 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089310075 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098674778 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078521399 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095773663 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086253734 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101080631 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088028374 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1061738 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102636374 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076195915 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098480317 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086699249 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107520798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099264859 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082890031 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10422937 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082775854 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100350598 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087353604 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101592189 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080626754 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104031601 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101965734 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07826957 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104708082 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085217597 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099380547 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085134713 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10351826 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102021614 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08352706 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099587814 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087962015 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102184305 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081444373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099785457 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098307533 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091251973 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101818211 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07771753 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097122707 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090010202 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097847278 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08259222 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099487112 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102276216 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082784022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098549306 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082578589 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101755247 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112019232 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087426127 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102121789 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088173976 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109907783 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081556413 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102065471 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100090333 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083136938 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101977392 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090162749 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105596336 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106574543 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08523481 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097063299 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088914649 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108073986 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082166208 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097900618 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08107746 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104387284 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107629004 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086301693 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101165652 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081056773 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101298694 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104494603 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085018744 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100560385 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081252796 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105467925 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082534116 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107487113 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101931207 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092064237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104449742 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078078066 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104758942 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099115074 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088769881 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096049098 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080573027 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100282193 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083556517 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099658586 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085093056 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095016647 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089503075 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108888544 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100521311 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081842482 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101126399 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090762584 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102619952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086747686 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104191671 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106149469 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095740129 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099942251 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085690575 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109726116 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101259987 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076896678 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106168785 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081605263 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100728895 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081790999 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09884781 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085639532 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109741808 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105651757 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077103947 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103070363 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081213697 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099178868 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079172489 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107609366 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104793046 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084789842 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110428127 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08399658 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101735198 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104576621 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082578635 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101505963 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084718984 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103841733 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084621529 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102923159 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081830164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102769042 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100242247 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080448591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102839703 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082936895 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101548798 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089098159 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103052071 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082927874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10451973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102564 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084256379 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102158337 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083217113 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104691857 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083976154 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101587336 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086443906 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09756304 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10824538 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082690018 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108907405 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082509629 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097627205 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088438247 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104636219 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10733262 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083570661 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102694281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083827477 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100553809 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085775667 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110355113 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0991524 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092361982 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107406182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083565562 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104349165 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082014275 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102712129 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100379603 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084762214 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101916478 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08435756 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10076557 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087511906 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104225283 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082812535 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103496066 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102527173 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082854446 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102463541 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078271516 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100569601 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082699369 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102032278 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090385776 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103487687 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104186431 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08187451 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102502248 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082351701 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098532986 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09166906 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112227651 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101985677 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091668281 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101310704 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084661932 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111809612 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095264339 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081940845 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099959153 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080929737 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109302054 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08518359 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110365555 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101053236 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083209498 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097868398 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084256499 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100471952 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077976973 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099932211 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086095694 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104123968 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081865807 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102534596 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103740622 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085094035 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109337264 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082808255 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103168729 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083976685 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.0990914 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081535107 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100770394 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105031047 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085598366 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099838205 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080640644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101819818 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084503154 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110677934 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084129465 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103674643 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108719355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083569102 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105258121 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088014552 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096125857 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087007212 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101368261 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083222989 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101325713 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105396195 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087950367 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103407317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09056239 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101663487 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083858687 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103039975 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099526661 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084268516 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102317658 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083180112 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101685807 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084724868 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110095455 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08200284 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104237654 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101632051 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083079595 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106319125 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085267719 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103721446 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109602782 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086968963 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103500443 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089840192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105395455 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087257466 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103192089 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103180024 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090456295 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101120016 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091519451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101219524 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084251066 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103462185 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080328394 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102512338 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101562217 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082482365 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106885383 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084432314 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100995175 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081745283 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100064353 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084971315 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105453437 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109666491 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086348317 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104738368 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079391265 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09894569 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085525227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099900948 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084385154 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103919662 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108073138 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085829789 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101811292 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082314348 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109165552 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109037332 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089028694 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100291058 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087890343 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102796811 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085868376 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103725621 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084113638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104658501 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107915227 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085946331 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101574319 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092519632 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1059453 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085487088 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103399969 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102602672 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084033696 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097296003 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084531155 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104059367 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089703102 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105444374 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102107657 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09319239 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101175498 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083143753 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106364083 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083424605 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109359625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097630552 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085482144 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103189292 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085383452 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097775411 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082639933 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100239828 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0868641 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101353194 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07812757 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111732372 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109854307 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085924634 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100905135 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082623403 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097616668 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079525454 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101922791 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104102428 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086182218 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110932766 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082822701 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100870479 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079744784 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102790922 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086848796 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105168273 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098633104 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079212865 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10143818 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08630041 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109654873 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082721553 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101481346 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086121106 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104900068 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080462378 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108210413 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098495968 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088206506 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112588167 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084333489 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103160142 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107130696 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091898303 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102868167 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080715058 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103310838 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08636748 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102598686 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102717061 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084711975 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117651632 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08706966 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101492584 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082473652 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104472265 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101490721 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091293121 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104707257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085787584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107625587 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085576995 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11201388 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105153183 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089550742 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10469981 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085201819 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102012573 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10197614 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082531125 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10118138 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085277719 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104381433 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088740041 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11100461 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101866228 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093824239 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111312189 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088827768 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099367572 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083079807 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102134372 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078567762 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103873143 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100745078 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082313967 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100924983 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083066062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103322469 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08960945 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105661882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085112242 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103175936 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096559364 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086358116 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104855285 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085193507 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099631644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085039978 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104086381 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089673019 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109339838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103034164 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086681235 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104580702 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08480007 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098828232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09078599 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101909871 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085801314 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103350181 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084529568 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104881707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106353313 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089736945 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104012054 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086296686 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115052886 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105097386 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081575635 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099912634 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089572055 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100675307 seconds)
  done (took 57.673764112 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146047635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08083393 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099175563 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079148785 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113400564 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099418682 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079134507 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09878904 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081560506 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102855977 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080512194 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098588628 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108745527 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124844134 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093971179 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104056098 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097312882 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08067134 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098461948 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081050971 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108701452 seconds)
  done (took 2.87179934 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105232048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117313416 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114620443 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119196392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089790042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114993584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114680015 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115703099 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099387079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110369409 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11762473 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114783273 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092253738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110639069 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110426782 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092834838 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118797175 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108498851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116392229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095224724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112706236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114063358 seconds)
  done (took 3.219761858 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084746464 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101876754 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085701841 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097236731 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084206849 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09762653 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088467662 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100430697 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087964589 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102473698 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081846274 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101702086 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103795181 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078973313 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101856033 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081998225 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151118894 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106812461 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082998889 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105172574 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098567294 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08536705 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09874304 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079136171 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101418298 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087812872 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103453868 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081362361 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10265119 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081962843 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102877478 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081572262 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104098201 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102933369 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08265541 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101255782 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084102457 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10257536 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079281386 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100605812 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084798809 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0987132 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08464329 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103739743 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081733062 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100866943 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084459044 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103170033 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09744104 seconds)
  done (took 5.445740126 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105174724 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159948934 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085556839 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142699302 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120758753 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112440528 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087759276 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143156883 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102278116 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082216088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121302263 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119558536 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103800997 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089644701 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108078672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103589331 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086767948 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103724715 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089036246 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10363699 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107988936 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090150353 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119842758 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117299078 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108378598 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083526663 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103449111 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108868511 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098030547 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109296536 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109123383 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090513799 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120563401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109061938 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083205612 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106545574 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122509096 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.1041791 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087390821 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101550912 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087535277 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109098987 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109975687 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101952909 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104983743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109310091 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084777413 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100910857 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11796724 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087308208 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112860853 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119792437 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107988427 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084678163 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109396912 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119994778 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084675438 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102011135 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088222086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116760537 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100738429 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089192694 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11902197 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106357082 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112285344 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097995111 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108553498 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108548179 seconds)
  done (took 8.110763116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093635057 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111630259 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12053097 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121935666 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090956038 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110778663 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111296368 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090724733 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11064184 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116936043 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11064556 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133012359 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086158219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114263351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111052257 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092041412 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11129141 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112118706 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090973027 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111628535 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111679346 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120582914 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092027278 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121614401 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141590932 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105836696 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091484783 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111033934 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120143471 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111361382 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124244461 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092556523 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111163477 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121288794 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123512768 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09182822 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102979476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109776413 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091827511 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11172845 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106429801 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120693184 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090315306 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105475586 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110645627 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091838614 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122370041 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124067072 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114878942 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097730368 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111300567 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120474828 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110046452 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092162383 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120616308 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146811787 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120323005 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121994989 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111736868 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120613639 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101474303 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128807125 seconds)
  done (took 7.677633223 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108155362 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116188468 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117772626 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09995395 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082834268 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109490554 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082138308 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102692186 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114227642 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095447537 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11729559 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10951487 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11249855 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09829336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109274717 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113297072 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088837327 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11016831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115036822 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10903122 seconds)
  done (took 2.941042314 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093802402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124221823 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085042128 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112915756 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107934255 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092317967 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107658273 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107806597 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086843928 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108101746 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096431178 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116347328 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105640561 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09209705 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11610622 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111282101 seconds)
  done (took 2.492413602 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096618867 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117492692 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121387421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084625514 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104286421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080851208 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105632666 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100346254 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082080856 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120245837 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084944017 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109235442 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104924201 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083361651 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101172868 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088670095 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101873373 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082594526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105766939 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121624318 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095471708 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104779373 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105065367 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087932206 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105201609 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090764138 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105861265 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103014984 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083969579 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104702728 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085785216 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113339999 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101826248 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084311241 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103034768 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083332626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104958724 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08574302 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108239735 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104641292 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08449803 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104688578 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085282651 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106420484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081559461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105840948 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101634469 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091345004 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103292762 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085705737 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105455987 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107842405 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086743227 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116023542 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089423667 seconds)
  done (took 6.249960409 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099504028 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108848244 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080722615 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103236412 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087933858 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107941471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108729352 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088216729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106386778 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083326695 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107283824 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089257943 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10798884 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10837293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08803063 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108953076 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080604394 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106289273 seconds)
  done (took 2.610135826 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091293691 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104643037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092934627 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106223131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084613684 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108822416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080997595 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105143231 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103708466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085662928 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105563521 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087194685 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10295318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087705852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105707191 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085247844 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107829881 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103911078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086045867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101147215 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08865611 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104612609 seconds)
  done (took 2.967474203 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11836796 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124673823 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092833058 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228664676 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10514576 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132786097 seconds)
  done (took 1.641870016 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109150513 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120753892 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106463146 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107351652 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115383129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10733482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087938825 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108084386 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118629316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102981825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108209126 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11794707 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1171685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097830253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115396994 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114373344 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107634687 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088986745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106197854 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1296056 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088755194 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118364631 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107552232 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088003264 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108670338 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117885259 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118011632 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122586707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089146407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119113505 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115207981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088831576 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119392592 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1235826 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109916968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097843626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108132674 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129670324 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115029632 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098373724 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109583811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116287894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097921635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1148876 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118601383 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107562846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094315621 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108403609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107628127 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135830175 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095148048 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119055431 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114726047 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119267623 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117969499 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136801795 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10254098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117718997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115006843 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123389712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11847416 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094770119 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117819171 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122645411 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11518099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118317487 seconds)
  done (took 8.174055368 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102471276 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126195156 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109290454 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12462543 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098072112 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108661962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108353219 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088684539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108944075 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107465649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152930341 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088563728 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117774644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117779267 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109134 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089173968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109494584 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118484539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087879101 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136332871 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109117698 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117974411 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117636572 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09854154 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123930447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114804483 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109031905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088664574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109178725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107720405 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095356707 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108847239 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11895353 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087321008 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118372653 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108069469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088716867 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115050973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108843153 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115643794 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098187976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128658896 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109546753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10838992 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123661821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088814521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10875079 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086791688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109524924 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107126809 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123128991 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103080509 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122930841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118956358 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108904456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087807512 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108749683 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108273894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087749248 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116644408 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118262349 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109379836 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137039331 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088354306 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108877795 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119310089 seconds)
  done (took 8.053879834 seconds)
done (took 154.952669146 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098500819 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136350817 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096574841 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168372852 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106638636 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119498212 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138631292 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097754321 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106432825 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086167132 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106703608 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087546867 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17167247 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08538828 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107302634 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108270756 seconds)
  done (took 2.666042635 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200228708 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254374021 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102755244 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106491577 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089808544 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110572932 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105497255 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091151224 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110603808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086528536 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109191347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086565549 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105866266 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086815278 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110581555 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088813087 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106732272 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088292092 seconds)
  done (took 2.892078917 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113127216 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153061878 seconds)
  done (took 1.121629576 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118840238 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181072173 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294735876 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154727954 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118826534 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127425638 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156916808 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131444875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198135874 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123772732 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122257113 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097951687 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139759903 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11624613 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094734189 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118287611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143060788 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093465931 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11545593 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115932536 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118070626 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107537542 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116559227 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093551354 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181902592 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120035976 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085379615 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107427786 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115533843 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095061986 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113341177 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125798952 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098814668 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174653942 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103143808 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17568431 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098958241 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113438949 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115013908 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09204278 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119628998 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118817427 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104500121 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118510669 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087440685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118695036 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105959306 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085991872 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115540899 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09723575 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115719027 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113454387 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156041714 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119181005 seconds)
  done (took 7.544537193 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792699629 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16411396 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09095082 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882247577 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139307825 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104653885 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779638362 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134290805 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234096057 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759046167 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135012704 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122971715 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22690924 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235457129 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926727049 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308201311 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673374752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103146799 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15069465 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153930359 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119127131 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13769801 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13135533 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452634424 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096392702 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113763512 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117726685 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100097348 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160004999 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.1271789 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114689933 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179784412 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267836773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184046952 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116875915 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090012565 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113166184 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169423666 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26767739 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214866534 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181738303 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087656544 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112057852 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12216301 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111085203 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109352312 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165296041 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195818619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173026043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093049336 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123410601 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120300247 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121450555 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16494871 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120915669 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288378993 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321454979 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112884761 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120857953 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106828587 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264676603 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123857359 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224217663 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118062183 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214000461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111164783 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778301231 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191822288 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090245799 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119324635 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119152824 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095269078 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121831817 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171861108 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393431808 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124372263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094365927 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111567198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205744654 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126718899 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112274519 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164049402 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115778006 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099644969 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125793151 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123266292 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171770167 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229591961 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125152123 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119522884 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095348623 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126300783 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116911103 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215057089 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218868551 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164280287 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208825707 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124135373 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185788555 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168861729 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097790588 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193950242 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098408642 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12682055 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123100468 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216398783 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146057324 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122779643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094621588 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119875315 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14873014 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127808328 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098347053 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191701287 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484429023 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167184965 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110376085 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127613946 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098940546 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181206527 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0966954 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262889576 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122600004 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169887987 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120738556 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088744951 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122429564 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165129146 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124203513 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121019406 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102058439 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119876771 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231868091 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218949071 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124450407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222711862 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184536076 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120319271 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17265243 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122721737 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167528339 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120699845 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121859444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095448997 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787236772 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124622978 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098869544 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11746585 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19559846 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111764648 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103859097 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125882307 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108831974 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755759441 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128082365 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122957374 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101958492 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11979506 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122023558 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117559963 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095027656 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162417067 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232350766 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122403834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121091022 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102564443 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183360833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095922844 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126216415 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126075264 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125010222 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101144376 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116430455 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124630271 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171004864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163233897 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22147318 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597897497 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091372094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125537287 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229974719 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089942829 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290343451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119978397 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224627964 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166562085 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121646793 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31749272 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167729208 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197621397 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127025996 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1744006 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087840314 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119621508 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165445362 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113012301 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118491058 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163571562 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126287758 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102186698 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954868236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113502124 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22659475 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109002458 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173439209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116004738 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100465073 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287642145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11226882 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108126186 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187145451 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093887377 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126757877 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.739032349 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105173538 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12314776 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118964498 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223179601 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165184042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119118796 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098657316 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123045935 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164751609 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208676777 seconds)
  done (took 44.188489064 seconds)
done (took 59.262830873 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277241249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215942205 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259252656 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169477411 seconds)
  done (took 1.878363836 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170004712 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149081722 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120907135 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107658565 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151811066 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085699915 seconds)
  done (took 1.665877564 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353764497 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271110675 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240459524 seconds)
  done (took 1.750583032 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289606362 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253473044 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354844651 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420524357 seconds)
  done (took 2.322397416 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209763486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132383184 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112022768 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105740968 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197967005 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250665275 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141862554 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202871936 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122889 seconds)
  done (took 2.409602539 seconds)
done (took 10.91401931 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.124732125 seconds)
    (2/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125732145 seconds)
    (3/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117455987 seconds)
    (4/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.26348772 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.236996615 seconds)
    (6/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.124109781 seconds)
    (7/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.216684566 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.124179147 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.251777605 seconds)
    (10/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098249598 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.132523601 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185832103 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137309079 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101345784 seconds)
    (15/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.252345018 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116491593 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19251437 seconds)
    (18/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.151304117 seconds)
    (19/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.190000059 seconds)
    (20/286) benchmarking ("sort", Float64, true)...
    done (took 0.232659373 seconds)
    (21/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.135473039 seconds)
    (22/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.204483412 seconds)
    (23/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151459158 seconds)
    (24/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118617224 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086466825 seconds)
    (26/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.200467232 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151046963 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115979348 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.257929929 seconds)
    (30/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.139620964 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.225725411 seconds)
    (32/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.232220196 seconds)
    (33/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118290342 seconds)
    (34/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168110572 seconds)
    (35/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094790914 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120085666 seconds)
    (37/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.119705273 seconds)
    (38/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135705136 seconds)
    (39/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136262064 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117110918 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101565514 seconds)
    (42/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119749295 seconds)
    (43/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092282128 seconds)
    (44/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.15384372 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.15237135 seconds)
    (46/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163128651 seconds)
    (47/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122086078 seconds)
    (48/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.212823486 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117174793 seconds)
    (50/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06738706 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135579989 seconds)
    (52/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.202497803 seconds)
    (53/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121147256 seconds)
    (54/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.204927631 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132740638 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.197011146 seconds)
    (57/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109760394 seconds)
    (58/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06678043 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120492848 seconds)
    (60/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.187944469 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156327664 seconds)
    (62/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.094420442 seconds)
    (63/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.128984578 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113125348 seconds)
    (65/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066471199 seconds)
    (66/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234020307 seconds)
    (67/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184075091 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.170117218 seconds)
    (69/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220770377 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.220556133 seconds)
    (71/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066223575 seconds)
    (72/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.152198702 seconds)
    (73/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095494665 seconds)
    (74/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067681701 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182237136 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121024413 seconds)
    (77/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.149045462 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121107327 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138423573 seconds)
    (80/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148095017 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137498957 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136094054 seconds)
    (83/286) benchmarking ("sort", Int8, false)...
    done (took 0.188719384 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172450249 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.087786156 seconds)
    (86/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.188310778 seconds)
    (87/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094986922 seconds)
    (88/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089540308 seconds)
    (89/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184560794 seconds)
    (90/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094079522 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136610636 seconds)
    (92/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067556948 seconds)
    (93/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.150907362 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088128579 seconds)
    (95/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174435427 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08650859 seconds)
    (97/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100899829 seconds)
    (98/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.123883173 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092326625 seconds)
    (100/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091454544 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135957458 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150621513 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087376087 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066226631 seconds)
    (105/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11173772 seconds)
    (106/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.118628095 seconds)
    (107/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169073792 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108635879 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10983154 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.189592945 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117457128 seconds)
    (112/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095233014 seconds)
    (113/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100434805 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118248893 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109773582 seconds)
    (116/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098087977 seconds)
    (117/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195103354 seconds)
    (118/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.090258921 seconds)
    (119/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066664299 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123677833 seconds)
    (121/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06807866 seconds)
    (122/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06811813 seconds)
    (123/286) benchmarking ("sort", Int8, true)...
    done (took 0.222898459 seconds)
    (124/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090424245 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093517202 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066878282 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.18100983 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120389735 seconds)
    (129/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115646573 seconds)
    (130/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094903553 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116875154 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093544965 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132559715 seconds)
    (134/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067052162 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108864452 seconds)
    (136/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.143625968 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11944592 seconds)
    (138/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115940686 seconds)
    (139/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089842205 seconds)
    (140/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124802689 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068705372 seconds)
    (142/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06877626 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109661385 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068200314 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118274487 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131527695 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097606498 seconds)
    (148/286) benchmarking ("sort", Float64, false)...
    done (took 0.172117035 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101467042 seconds)
    (150/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147513205 seconds)
    (151/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082949761 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120099394 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093628219 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090684015 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097143336 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115496395 seconds)
    (157/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095845663 seconds)
    (158/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120997545 seconds)
    (159/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068053408 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125374654 seconds)
    (161/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092439725 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09073493 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132762059 seconds)
    (164/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066708357 seconds)
    (165/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088347226 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16464769 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11695147 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087199119 seconds)
    (169/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163925628 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09775491 seconds)
    (171/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113878288 seconds)
    (172/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085490488 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140239901 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185093524 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136245013 seconds)
    (176/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067629892 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174225282 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114572071 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091706265 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.120438251 seconds)
    (181/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.191712927 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110597986 seconds)
    (183/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076963662 seconds)
    (184/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067940642 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.223749862 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117280465 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08667413 seconds)
    (188/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111358497 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165615347 seconds)
    (190/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075846996 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13771105 seconds)
    (192/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088392467 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071121316 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176816406 seconds)
    (195/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173619266 seconds)
    (196/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067993017 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123700837 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097253638 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119392695 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067922037 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110989215 seconds)
    (202/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078997647 seconds)
    (203/286) benchmarking ("sort", Float32, true)...
    done (took 0.234051973 seconds)
    (204/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125628118 seconds)
    (205/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1618623 seconds)
    (206/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091832217 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094848091 seconds)
    (208/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091412776 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094447635 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101457765 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087540492 seconds)
    (212/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067549178 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.342202797 seconds)
    (214/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095489028 seconds)
    (215/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109407284 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086140429 seconds)
    (217/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11158885 seconds)
    (218/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077178269 seconds)
    (219/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.100358076 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090836065 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109157591 seconds)
    (222/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09432653 seconds)
    (223/286) benchmarking ("sort", Float32, false)...
    done (took 0.173488299 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067101949 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138386518 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121651119 seconds)
    (227/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067779256 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087519356 seconds)
    (229/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119722708 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086423036 seconds)
    (231/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109696046 seconds)
    (232/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232443009 seconds)
    (233/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.1212594 seconds)
    (234/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100324369 seconds)
    (235/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090275599 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09343316 seconds)
    (237/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076259612 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090816766 seconds)
    (239/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096190311 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119526455 seconds)
    (241/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077424217 seconds)
    (242/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111707153 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100413797 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11293275 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066747746 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109776808 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085896442 seconds)
    (248/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121287039 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135480429 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067882818 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087047475 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111230817 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067678848 seconds)
    (254/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092190757 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068136465 seconds)
    (256/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110620149 seconds)
    (257/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067422557 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127656693 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094855718 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067264626 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108999877 seconds)
    (262/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085682137 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109369055 seconds)
    (264/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076267933 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10894682 seconds)
    (266/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067602564 seconds)
    (267/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068487357 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119000473 seconds)
    (269/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187243884 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06855131 seconds)
    (271/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09171833 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09303771 seconds)
    (273/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113359857 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087983399 seconds)
    (275/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118757984 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087338628 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111637027 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067565337 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116744805 seconds)
    (280/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089932415 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10994345 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100802023 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11129104 seconds)
    (284/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111637536 seconds)
    (285/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090777888 seconds)
    (286/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066485062 seconds)
  done (took 36.161743441 seconds)
done (took 37.051450347 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10060394 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147800975 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096493363 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136655332 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12441864 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091664293 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119511053 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098328703 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12461272 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125597026 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098283479 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093693109 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096927153 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121104439 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096865279 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139278553 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123869024 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093872178 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119893581 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086327422 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119114446 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086486486 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11186471 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0700685 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121444483 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093363773 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115910196 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120694945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08672489 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11031869 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093611142 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116932459 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087253541 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123754569 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093279683 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118522906 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097438078 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120637167 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112447163 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086492765 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118110268 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086571822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117719581 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095437445 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116746543 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092807064 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119275686 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100552292 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138837322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116818783 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095251695 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.144784447 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09829982 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118118248 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090945892 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11953006 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091904798 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139950809 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119573049 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092666143 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11866527 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094667652 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116613947 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094890918 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118777377 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121317554 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098460991 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116713346 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098257445 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116526813 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086395653 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119896224 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090228226 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11057488 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096269731 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122207854 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109455595 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093061092 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118043137 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09188052 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110000312 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089600244 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112438976 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093770407 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113519314 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070200284 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11440144 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09278418 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110197818 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096448368 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117744846 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093672273 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112888092 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099285273 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110737836 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09257397 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112326207 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087272329 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114063261 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09155252 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110568633 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090283281 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.1207478 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113635932 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09349463 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124227665 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087441071 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118019203 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087008295 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110607782 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10217804 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122296383 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088177904 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116827252 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086597357 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118424343 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086750305 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110812889 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110359346 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087423094 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117172793 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086869522 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11412972 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094844865 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125343853 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086594278 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114274871 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089697376 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111325716 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09381837 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111668908 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088313102 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112590263 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078623357 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114128768 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088018221 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119423617 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090154274 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120444549 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08958324 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120574175 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092574157 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117610173 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117511017 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086372718 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074692606 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116757779 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090037308 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113610571 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08767646 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114114607 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087672219 seconds)
done (took 17.004345074 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088010191 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18407457 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151651626 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143097359 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10767321 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111989827 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122349775 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119115078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114255882 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143922932 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111481569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132678963 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148520987 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086418596 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112571808 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091894812 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113530144 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103404003 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146402684 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133401115 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164342773 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086689053 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148883243 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136330519 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12174667 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115619941 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112984566 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091925161 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115722172 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102903909 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133710746 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115880225 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08833902 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134306229 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105098245 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121251239 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088061021 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119072929 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087551981 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112326425 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141412166 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134161396 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092764862 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118633362 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091831376 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115046549 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090836631 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121483667 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098664006 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117302383 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12685943 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157236801 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092023665 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122918175 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087063138 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122561703 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121911916 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090937645 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112372087 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091436229 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112041813 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091659308 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127092181 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141816018 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093191695 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122299444 seconds)
  done (took 8.650060545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104906301 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140124686 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106513459 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131838472 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112594255 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088275606 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113157572 seconds)
  done (took 1.748414967 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088989771 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135507105 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111642503 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136707142 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133161557 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112942371 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123417375 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088983153 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133761949 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090339133 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13502011 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150947261 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090208535 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121440517 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138925561 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088777754 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138490626 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090043586 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116784998 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113011241 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117454083 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135481098 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091460563 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113644762 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103514673 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114674135 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163739545 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093686124 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115215902 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092860632 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11225121 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152002725 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103542361 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124774362 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089109381 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130801833 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129334994 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08738109 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126737731 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094671757 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129141977 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090824574 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115542036 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08743241 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11869157 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10012734 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117463065 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090187052 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.134495873 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134218987 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089890712 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128759242 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090066246 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119064376 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091038275 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120205937 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098353895 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115113665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1334973 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090805543 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132958542 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105870332 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12926278 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131258589 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092271053 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128311722 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103074339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117422438 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091983158 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117806509 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131277428 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087443548 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115565612 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100440985 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116795034 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11334322 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137980862 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116232552 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101019776 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114550283 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090817983 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114414043 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112589664 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118298816 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089537683 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118049762 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093067455 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112833822 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089147245 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118059018 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08778942 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115814022 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117337657 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090430844 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116901711 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106665818 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115623344 seconds)
  done (took 11.872765463 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090792524 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114765789 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093129363 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114572145 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091150209 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115595237 seconds)
  done (took 1.581205046 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117166118 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118593748 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104725822 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121842844 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156579472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104607512 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130023907 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124741558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108338881 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127235225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130193219 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105869041 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137174974 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122766261 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105427205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120894679 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105086165 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125456634 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127627476 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097591536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137643475 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121469862 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097685262 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132055013 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118827932 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096499261 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126101343 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103939731 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127194867 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123581086 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096060865 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1182636 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096965373 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123137543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129839272 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096490253 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120991586 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119947594 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10062799 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118596452 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104982801 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122807751 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126941992 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094697927 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124771274 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121204916 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094325804 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126249094 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10458874 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119334106 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12257376 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095368036 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120778537 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094020325 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123680313 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124630849 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094534921 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129868508 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121344957 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097511872 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119495997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094032705 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125030952 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119079338 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105080758 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119049911 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121750809 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097138031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123852087 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095994358 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120358571 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094093461 seconds)
  done (took 9.261039525 seconds)
done (took 34.063438601 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685494192 seconds)
  done (took 1.64471605 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.831134008 seconds)
  done (took 1.798295423 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.824825771 seconds)
  done (took 17.819650299 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493467282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.578524531 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987027209 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177324262 seconds)
  done (took 3.199120344 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943120226 seconds)
  done (took 1.931713464 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283331794 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234967675 seconds)
  done (took 1.488140699 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780823698 seconds)
  done (took 1.761043306 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.333636906 seconds)
  done (took 2.307236165 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32530874 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185255963 seconds)
  done (took 1.493485966 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546607826 seconds)
  done (took 1.528920952 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.988465272 seconds)
  done (took 10.971284805 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267514085 seconds)
  done (took 1.261825145 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300609491 seconds)
  done (took 1.282285735 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.486124302 seconds)
  done (took 4.465511531 seconds)
done (took 53.92509954 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098699673 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127186025 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101638855 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124575019 seconds)
  done (took 1.427612184 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1011342 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122278163 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101818358 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121426172 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126780217 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095660357 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123689421 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10211849 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120780165 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09732795 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120775 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120004561 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09907188 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123213276 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094604821 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125173675 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125531155 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097680625 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125931451 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097362594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119246327 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098943997 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124529705 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094238609 seconds)
  done (took 3.664162664 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100212627 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11941165 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09718901 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118668375 seconds)
  done (took 1.424713467 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100296605 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131664639 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105808812 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125989949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131954781 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106797541 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117581814 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092780672 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120336946 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.10093372 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116856533 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13996884 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10684351 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125456237 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102200563 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115230437 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09237974 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132392773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125014834 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100787717 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119404393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100263669 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115929807 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108670592 seconds)
  done (took 3.721140511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171319549 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128147684 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139030029 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095804417 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160700645 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141984975 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088286286 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141716532 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088254517 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1313802 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118443024 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133492203 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129930545 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089074068 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113998163 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088002651 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130195032 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129341062 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091467405 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128996438 seconds)
  done (took 3.432269448 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098273554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118014375 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088871166 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11719751 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099390377 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12175365 seconds)
  done (took 1.633841226 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091138825 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115110953 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090501673 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114747428 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094806086 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114773443 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088648176 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115636387 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08999104 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115719851 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089944642 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11333639 seconds)
  done (took 2.224901019 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505899276 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121028869 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121098493 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089812843 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122850135 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090019774 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129488897 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093055394 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14225085 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089682706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117135393 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093983962 seconds)
  done (took 2.705447239 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238957874 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125352491 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285105434 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365092847 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158012674 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165393079 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279240259 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161940691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199182228 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150073121 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231399243 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199557437 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153083666 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192296317 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138136548 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145684196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190258119 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251520845 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153799596 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21333342 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208405504 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16849552 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181883198 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154228606 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112374388 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19366566 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09602553 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131239099 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233684925 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181055279 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191612086 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162175554 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148046187 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238509948 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249475214 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196682912 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279965004 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135038971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16727577 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143593902 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267839414 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140324907 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235933396 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156310298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10572408 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222215174 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167420986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178371941 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145948497 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140532066 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199985372 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243057158 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194433701 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138985879 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298417344 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149684679 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159163753 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191034695 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252517777 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227941582 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19116918 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12158377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188725679 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193269572 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212759292 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153327181 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183963973 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14908215 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184196581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190992364 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166852775 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206230934 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181455974 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140388874 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172296393 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173296784 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174128893 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25975905 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18599986 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124264208 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171228754 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150088113 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131902312 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169318649 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12643111 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216822297 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144221625 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164136404 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210969291 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159715222 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162463358 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222167012 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18632869 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150298756 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083747236 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153758858 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155935445 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178421392 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140991235 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159669058 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158447232 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131009185 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171354577 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097451777 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212839192 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091919702 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173297682 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211251491 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100744015 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162132464 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154351339 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152296194 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178953245 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199017631 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141821284 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13426439 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210632056 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180328225 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142396676 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177452325 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229387614 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117664547 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150201924 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228837327 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245405468 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113907172 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230847676 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153737767 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109294905 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134425924 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182079466 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156665379 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16325768 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133897258 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18429483 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233804413 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099467351 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13959121 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197355617 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135280437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133194272 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155449753 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147767883 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110997363 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143259769 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146491381 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177750561 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180146127 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156006869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167751726 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151135464 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250502525 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14122744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151961928 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123179149 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122617231 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194270144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227734274 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104394013 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23424656 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172329176 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225780546 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171093071 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10822742 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178158682 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131237257 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120048612 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195724984 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169034229 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163806277 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196450295 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224729886 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18145473 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210790476 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166696234 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175458172 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165605546 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156770027 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110571195 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160498807 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158564517 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124053425 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139766653 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108210935 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1508301 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144009124 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133432695 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19737667 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172131946 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218010395 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159630014 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149411754 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181609059 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102938703 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204481137 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179520366 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145874001 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199883009 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194056461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215036276 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118639951 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229628438 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095071462 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126793435 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144167044 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172068951 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135222174 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108813089 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163277032 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208374466 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182939322 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172824164 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233052436 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177490804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193465458 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095695656 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168695852 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184835873 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203761161 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154435729 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139365359 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152686453 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178870005 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156766371 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256732781 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169022263 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177517142 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237096976 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124783919 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132214688 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150814892 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179389181 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153368428 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176615037 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148582948 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140149215 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161302241 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104473306 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187434507 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187203693 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165805864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187719419 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150172805 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213742643 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101039304 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16206764 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161621681 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166461819 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109601694 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176122681 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203788819 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148351986 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168137357 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21598854 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104552111 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307975376 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2363582 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195629992 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138554591 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156810896 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162322871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164286786 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171592856 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179892747 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15947717 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187265717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161553498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136755897 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139198348 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123678819 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152488703 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133709924 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148681363 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17743984 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138833143 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189979709 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15637375 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160604592 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173631709 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15172406 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144454265 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122976251 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245194991 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184069445 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240442197 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150546613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178999395 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206544905 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127535135 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132007699 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106370765 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178529388 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136685422 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191236337 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215091775 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200236778 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207724597 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180027039 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139594866 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093563752 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158832232 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170995252 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230320657 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149437813 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.121507043 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232341558 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109887918 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134044833 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166818597 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289623155 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145474973 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19594457 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10848003 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281902914 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126454274 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106435083 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164740893 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238122609 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135776642 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152016087 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168332537 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162401549 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163285489 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150238943 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219046237 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212440134 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227956227 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184632158 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106094721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157668349 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204613472 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193592054 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15733525 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138044272 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207467717 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195468122 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223691646 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114342703 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195844988 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168859446 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131381707 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214946192 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135559293 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208680185 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136127614 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193250837 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153030945 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139258238 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177943173 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215023985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114727163 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216066102 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18438612 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135858156 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105748707 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166349134 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207174001 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153774904 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100297773 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210685623 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098852891 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192174211 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263743703 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134594874 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155944702 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147464106 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109058832 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155202492 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157986333 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140240957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163556222 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204537811 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135915117 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192829472 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230884825 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172801787 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174867105 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145115135 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693528516 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131215004 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196217643 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14888019 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207082396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152606964 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174783436 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160003379 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17038573 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223066903 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161375272 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231483311 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193636886 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179505481 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13404095 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158858883 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15710719 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145165306 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15328672 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171061464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161420408 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145573033 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181085523 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165539199 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13493378 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113906349 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227931243 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120824208 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215201769 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181109477 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110787505 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202400329 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187622758 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133976303 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183178748 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236920717 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113780919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149936549 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135550495 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15184 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263690348 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097620541 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218838667 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186266003 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160371661 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170588561 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147620279 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194042376 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157543197 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213262748 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115896557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158914857 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158219662 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139252218 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130593758 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156214179 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167945847 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122066502 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187446022 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13897429 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194577428 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125400434 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144987337 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28374295 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178389249 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24513791 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108416761 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137306988 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164867136 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150279766 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178824722 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179544112 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136636797 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135398089 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109393981 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156284412 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111789161 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157574416 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19068742 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164605731 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237411754 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13631584 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277074696 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113884397 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155605428 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115237848 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105653557 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150060562 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146399843 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15568425 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193796309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260836756 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147733412 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132886635 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121899455 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127724829 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13532044 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163360824 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165981235 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181335179 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144986057 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081264945 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156376896 seconds)
  done (took 82.803786639 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172970754 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148619996 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165056108 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.217682436 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195122154 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29012587 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.225902847 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27300261 seconds)
  done (took 2.767553442 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094680924 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146162122 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157398656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132970252 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092813617 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119385466 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342532952 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133830824 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116621168 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121708869 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173742937 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096668864 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550251373 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092019091 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119842978 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107630349 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092891788 seconds)
  done (took 3.767520352 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.237770455 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499361676 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.044399047 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195777308 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160910039 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118308713 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708014315 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096058121 seconds)
  done (took 12.146252014 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116861453 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13700124 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124132109 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153810373 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142407707 seconds)
  done (took 1.771109206 seconds)
done (took 124.473691435 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098440242 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12891207 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098361692 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131248433 seconds)
  done (took 1.533980932 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094915617 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071096951 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101024201 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075667143 seconds)
  done (took 1.42862462 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190639312 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.16833325 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384177382 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073034539 seconds)
  done (took 1.574566609 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116360459 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133599827 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104404145 seconds)
  done (took 1.448718152 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107435129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130616418 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103619971 seconds)
  done (took 1.43269204 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106282758 seconds)
  done (took 1.196668387 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108589774 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138307065 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110339832 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137314324 seconds)
  done (took 1.585906743 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098989221 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128744625 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110294601 seconds)
  done (took 1.428228722 seconds)
done (took 13.075985587 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104105136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424636418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412945137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111586078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724638801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380843951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.072044427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14645443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166934348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094170446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139568764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67467706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028273491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37951812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985741528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377098774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698530716 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121981355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092513024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122853324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.057174427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093992711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122044876 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09360341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721625643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39926709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123361476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375599473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093003303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126586024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383492921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123203895 seconds)
  done (took 17.055044745 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096732893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173989732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09927284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124162305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123643519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095659183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124603072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095175865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180723317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123473559 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111123773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12254726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125359053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095026727 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142339731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096050463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125555574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093848778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122452094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094772406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140546705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120501947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094700457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121838643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094266141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136159589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095032861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122282649 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120581992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100061996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12835061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095838894 seconds)
  done (took 4.834481687 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142749718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183541423 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128959511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1280633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170452946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124844015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200041026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118767856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184109556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122799755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140070512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092936174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157022968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122270603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115118831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121638903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097670613 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122911784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094132866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123728766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140547903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093623356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122749121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09422999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123832761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109360985 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124643754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121901885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094392469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126981265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100837771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124308073 seconds)
  done (took 5.168988608 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097716193 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126795389 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109954008 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138476456 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095866527 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12580692 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097355018 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125157513 seconds)
  done (took 2.015824901 seconds)
done (took 30.169680564 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111688172 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127441687 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107971982 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134894227 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103134305 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132920836 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09261236 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134340449 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134505979 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102922967 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137787833 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092532745 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122689119 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093246563 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135483179 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098067909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132935924 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102765911 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134927957 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132786735 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095794928 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13340645 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103929398 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134266769 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105308774 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133484147 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138479063 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10113856 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123138621 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095127548 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124574345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104236632 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125092988 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105888049 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128188756 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098058458 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124537495 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095696094 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133772166 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133597919 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101258357 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134028839 seconds)
  done (took 6.028062623 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107746317 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140249283 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10559986 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081708917 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117642963 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081170172 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138089595 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079489417 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11060071 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108675019 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07449391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107412134 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079567118 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102455289 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077696902 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075881194 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108773339 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07610363 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076748231 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106559554 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080409869 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073063604 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108479666 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079509619 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075086565 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110938446 seconds)
  done (took 3.591006978 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101818686 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134797101 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114880044 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185310687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162942132 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101566796 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133432036 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139933698 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110094805 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121213327 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096972877 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150369488 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110262814 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130275615 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093078355 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138142234 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136595073 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095611876 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130069307 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113811065 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139565402 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103779262 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141255818 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133890012 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09359391 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124171691 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098108697 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135978299 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097899442 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13203858 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098193089 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126226993 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123502413 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106181418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126491197 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095316829 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142722842 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103794927 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131472805 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122172417 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101759375 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122667233 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115016414 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162589442 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092901117 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1302694 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125066722 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104359828 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121617548 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113304669 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131996867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093264878 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126314784 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092452341 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122481579 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10780417 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125172596 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095023902 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132401983 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127179075 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106757766 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125943227 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110114024 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122785919 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10133471 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121988662 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09347333 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121255155 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144078556 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095415197 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163006751 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094241263 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125097554 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102171192 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13091959 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129381066 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094525441 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139432949 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103664882 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126704099 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.104004563 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12734116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09615617 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141111918 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124484238 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096122217 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123435109 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101215271 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125165046 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095748892 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138319637 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093088469 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126080084 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111049604 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122669356 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123299054 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10058765 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128222131 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094103299 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136929776 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100278244 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123842858 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132631827 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093740101 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125116904 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103882084 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127586443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093242281 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128342181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100411619 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123889269 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094784591 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126489658 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095352293 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133235969 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129851376 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099620397 seconds)
  done (took 14.930947461 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229789026 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216961201 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207778041 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293853965 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136104479 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115805325 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213471088 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157050574 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124352103 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160863581 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172047178 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182870415 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139770232 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.21248652 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171770976 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094663326 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143565179 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135728768 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24624929 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260667315 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145588428 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102550343 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165629074 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161031508 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138114733 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132943463 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112058317 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135242303 seconds)
  done (took 5.83580248 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111043151 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156580086 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099591417 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146167303 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149215328 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0935582 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129240021 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096024839 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136864171 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136635344 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093610928 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130491496 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101727439 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133444137 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124792016 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104250987 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133400484 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095671897 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127887518 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097649692 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135453961 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10211692 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128620643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122213596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104623359 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122448025 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087594291 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143401718 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12385429 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116542312 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121947764 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103668016 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138109718 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094505575 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123937175 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096397923 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126714265 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096310067 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126081908 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092330008 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123375272 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078569307 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12331743 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138017738 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100733484 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081012473 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130902185 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129118073 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095917001 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122022754 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097712776 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126446821 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097736961 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131592584 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097381066 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125681578 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097270724 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11697679 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100840296 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125616787 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085449091 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121948585 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099667835 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119194763 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102520921 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129013679 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093666335 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126992513 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098027132 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130528718 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096549327 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130692999 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091681367 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126478117 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097278503 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130623689 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127094024 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093645455 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123043899 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09470152 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075893625 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124769057 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074867118 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127242807 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092525068 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123438463 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097079676 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131635888 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139674854 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096520259 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132901415 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095132942 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123174425 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098129753 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114584317 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097750263 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141511926 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141713497 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094944297 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122995641 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109595028 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127696799 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09404286 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107015864 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103532249 seconds)
  done (took 13.081854033 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132272516 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155537759 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125501585 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113024611 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159285614 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158582238 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10175696 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131582187 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096433325 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144386291 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094382508 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132930667 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094851111 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138779594 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157782404 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104672501 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126466305 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109628232 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129193816 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170289217 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112446115 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143980128 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111769658 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125268013 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129232177 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111685736 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162987499 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108252017 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137597326 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143356642 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109617045 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16207085 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144032507 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099622992 seconds)
  done (took 5.521535972 seconds)
done (took 50.08643846 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.231798915 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.42964182 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199501134 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.088733783 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.261017966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223220258 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215819736 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203843008 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.86103773 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206146632 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.465968471 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.767780401 seconds)
done (took 60.281851615 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.283093666 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332339255 seconds)
    (2/2) benchmarking "String"...
    done (took 1.371849781 seconds)
  done (took 3.840760413 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.496359093 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.132746417 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458808031 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199166562 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.201420487 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.493651991 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.897081846 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.56151619 seconds)
  done (took 28.070878915 seconds)
done (took 41.816560057 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.222633356 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.261509851 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.249773749 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181477441 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.312877227 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.225891395 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.390451108 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.366362224 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.223775482 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182283978 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.234878554 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209488512 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218958879 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.384672242 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204311435 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.213776707 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.269318419 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.912732461 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.609484612 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21504082 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.224252388 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.26662478 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.208780552 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.203492998 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.275791142 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.203190261 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204360666 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.20894693 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.769147588 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.207648905 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216615497 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.647902529 seconds)
  done (took 190.855176424 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202396899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.284140069 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.388686585 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.251400772 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.667576191 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40356592 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350015861 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.744387423 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.223786183 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224592102 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.440333808 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208321917 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.520108645 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.175647212 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231954884 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.267697125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.399448082 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.530016431 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.2427314 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.360827874 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209130067 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.449143994 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.344526085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.406246123 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.237744234 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234493619 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.21221796 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.214139568 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.391937442 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.329707677 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.269945445 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.20905458 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.832848841 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056651398 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.227080226 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241778916 seconds)
  done (took 150.110635669 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202570071 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203732179 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203716847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235357734 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202795526 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78903708 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791569544 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.758468493 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.585593262 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.619058811 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522855606 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208753919 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296881889 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217539475 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205594125 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206122443 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219673217 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247823615 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210589844 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205403254 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790574308 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.22145881 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.239470143 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.385288895 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22114314 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237016406 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596003712 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204982169 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204766565 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238484892 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540834086 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.256768689 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20555327 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601759159 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.617257591 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321288753 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207791065 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238068575 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207058139 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48699038 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206749164 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207377064 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209762572 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90290042 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21164131 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791139627 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212755605 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171250669 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206946032 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207559735 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.900892681 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.929805494 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.2276429 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.20742258 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210492776 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206827326 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207648192 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.239588196 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.792130097 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305808199 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226279458 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211230033 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240014961 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207834926 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.647139939 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214151272 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.21543733 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.268126296 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314846446 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795036111 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213571428 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304647483 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331526274 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209218732 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208840376 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209549215 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20726789 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321846243 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209312238 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.633737715 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386258563 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227088711 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.619481112 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308938682 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20858316 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626811995 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21301495 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209525582 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968445434 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.2105331 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305751373 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209518519 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209475169 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210089564 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.634049255 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796560127 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50072802 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215477567 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210049879 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.782184309 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.214827604 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.649454419 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.773414416 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901926304 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214137172 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322857456 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385982193 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227459979 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210900089 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.63000715 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21446413 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269937516 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209167385 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609139452 seconds)
  done (took 368.923073946 seconds)
done (took 711.015724605 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.820647925 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.815450082 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.923671476 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.800903603 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.767668167 seconds)
  done (took 10.261659783 seconds)
done (took 11.398262387 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399539954 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.399349415 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272778002 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.404467609 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246108058 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.420940054 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38229448 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233340446 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317533654 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.29536081 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320071324 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265877751 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248223099 seconds)
  done (took 18.338156817 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534854062 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541996835 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276157876 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543711864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253631805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537164292 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415660624 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434026481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431801377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246698961 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227111957 seconds)
  done (took 16.578348784 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547163853 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.574466532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281130698 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547711919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25554398 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5435181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419539403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431962904 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435547123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248092602 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226730806 seconds)
  done (took 16.648938918 seconds)
done (took 52.702089044 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.224224797 seconds)
  done (took 2.354505761 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259449593 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421321705 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243315281 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231828152 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222461913 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224892384 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232296732 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223943812 seconds)
  done (took 11.198379537 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220555563 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.220809514 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221094687 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220110646 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224012364 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.221848095 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219977522 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222980029 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221867443 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.224216315 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.225232218 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225085721 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223211723 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.221588545 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.224120459 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.225064402 seconds)
  done (took 20.702531973 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.224127483 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221420952 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219364485 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.223778225 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222180216 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223253157 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223272158 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219771999 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223225383 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.222950154 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223407274 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.222305843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.223258358 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221903174 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.223724861 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222700494 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.223675464 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.22163899 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226883775 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.223873856 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225332377 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221861627 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.223464979 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222909469 seconds)
  done (took 30.490075679 seconds)
done (took 65.883146134 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.862979616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.969314482 seconds)
  done (took 6.969212216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.225964896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225069561 seconds)
  done (took 3.596470996 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224561392 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226053627 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226917768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225832522 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227271077 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226047417 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.226104186 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.22793136 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.226470575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225296294 seconds)
  done (took 13.40281115 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228674106 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22774705 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224484326 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.226304842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225897835 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223842204 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.225519567 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.2285102 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225687301 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225075251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227430858 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223181163 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225924782 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223646885 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226936549 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225110194 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.224641684 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224497948 seconds)
  done (took 23.207434283 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228705978 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227450592 seconds)
  done (took 3.598641078 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.224683894 seconds)
    (2/7) benchmarking "second"...
    done (took 1.224302264 seconds)
    (3/7) benchmarking "month"...
    done (took 1.225883107 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225248116 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224270756 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225334048 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.225501929 seconds)
  done (took 9.720541935 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227735957 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404843002 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486008644 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821969946 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.228974704 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.23319731 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.107981855 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230848842 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232880556 seconds)
  done (took 14.120774559 seconds)
done (took 75.758535606 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.257156666 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.239720144 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.507516529 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.236474078 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.239192887 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.566129894 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.252317429 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.350873142 seconds)
done (took 37.796056614 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.240873313 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.211840853 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.015163996 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210619064 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.316737341 seconds)
  done (took 18.893734605 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.284927946 seconds)
    (2/2) benchmarking "read"...
    done (took 1.559642257 seconds)
  done (took 4.986542212 seconds)
done (took 31.265745938 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229928168 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.227094527 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.230229011 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.22739123 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229109848 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.225298119 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227416452 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227791728 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230740133 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.230467485 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.228770591 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229906149 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228702414 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226949251 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230363349 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228053261 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231048654 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227113877 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231100632 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228743047 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228717457 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23075563 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227146766 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227517483 seconds)
  done (took 30.633308907 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230250873 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.23061913 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.233080173 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231440992 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229358998 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230716012 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229479082 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.230285156 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.231633467 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231491603 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230168041 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.229118364 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231902484 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227076816 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23055519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230371672 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232070541 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229142948 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232517231 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228948194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231912181 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230368881 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.231025884 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232255777 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229303611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230248448 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230372648 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230014268 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234096345 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.230262975 seconds)
  done (took 38.066238991 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238846239 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240446762 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232209252 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.233462907 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233804883 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.234997007 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.233823469 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.234018621 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.235091969 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233865166 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233524842 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.23269757 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.233625966 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.234201455 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.234432697 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.232869568 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.233774421 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.233436739 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234435862 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.234608458 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234529927 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233960898 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233864916 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23405902 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233808467 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.233059769 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233883869 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234583644 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23346124 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234243417 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.235306566 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232953642 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233003355 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233841793 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233780292 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232797012 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238222636 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240877505 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233173626 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23428679 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234640003 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234490872 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233730965 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234906304 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234277925 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233440336 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.235610184 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234476404 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233683785 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233227308 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233402828 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235182045 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.234076756 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233057013 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235101443 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233966664 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234789618 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.234656427 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.235052292 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.23481532 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.235480752 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235103669 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234501058 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235657575 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234590545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23576512 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.2354036 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.235710375 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235197672 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.236470688 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236449368 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235145367 seconds)
  done (took 90.038678291 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235817927 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2346533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234665449 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233978065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232573433 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235071077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232661286 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237189596 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23408157 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235817763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238015637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234565564 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233079299 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235930642 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236278381 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233459481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234837419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233594988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235859752 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236427555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235206112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233271793 seconds)
  done (took 28.320187775 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238648484 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23875969 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234349599 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237234248 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234130575 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238001665 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236765156 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238461871 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237600966 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234733423 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234591139 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238167076 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235274567 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235330531 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234560507 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236220096 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237191116 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236247725 seconds)
  done (took 23.410672913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235695841 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235883507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.238673531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235655438 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236106471 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237769551 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237175593 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239540494 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238270149 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.23751223 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239413221 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239047196 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.240114977 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236865854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238543298 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237198381 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24025641 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236796831 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240488697 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237249613 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236919066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240279837 seconds)
  done (took 28.390710663 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240478039 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240565424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23770366 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237717663 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238239791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239769573 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239780227 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.237318539 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240977152 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240385678 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236708852 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239893641 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238918174 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239555247 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.239060297 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238472477 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240973349 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238980907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241584821 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238075483 seconds)
  done (took 25.940608183 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242176196 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242964508 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243745541 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241980195 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242072327 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243419243 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240892721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242821753 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243381069 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243591395 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242125194 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242882683 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242954165 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24357577 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242671172 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242392318 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24452845 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243672098 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242757657 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24262028 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24490957 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245264554 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243633923 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245217769 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243473322 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243828963 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244570039 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24444717 seconds)
  done (took 35.968943935 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243774227 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242761251 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240944293 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.241258468 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.242075734 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241611177 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.241654634 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.241295365 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243759417 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242120624 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243605084 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24331932 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243675611 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.244831122 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244709806 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.244370814 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244291279 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241515147 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241221705 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241422146 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.244470221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244433356 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.244779423 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24087371 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241656934 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.2447411 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242701332 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242618548 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246196351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242235433 seconds)
  done (took 38.449331104 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.265040106 seconds)
    (2/2) benchmarking "in"...
    done (took 1.264069597 seconds)
  done (took 3.690972072 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244210099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247037308 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.246072657 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244069463 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243098831 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246221862 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245978524 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24448504 seconds)
  done (took 11.122814204 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247067991 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246205706 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.247350839 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.246195079 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246555021 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.247213595 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253165527 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.268132229 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.247427346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.250031378 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254548574 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255411138 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250561365 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247116391 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246990804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250758524 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248192891 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.24673995 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248877567 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.248983117 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248968828 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250074288 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250219238 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.245040248 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.249834215 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258085848 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.271143709 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.24830867 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249283062 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.252532135 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.249165737 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24787068 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249067932 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.249611938 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.25076197 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250453998 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257646429 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26904342 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.256603518 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27070367 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250102774 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.24844702 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.252196803 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250938107 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252185665 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250796772 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250295219 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247294676 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250905379 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.254370899 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.257204702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249309547 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248900703 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253838624 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.2521318 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257244828 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268912168 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.255439304 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.260630485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.262544869 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.283202946 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.278092287 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252963445 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.251234516 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262292229 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.276405028 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259105467 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.268284419 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248952064 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.253339867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258435123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284734022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278214553 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252946293 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253759517 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.252411815 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253390269 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25325667 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259560805 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.274388932 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.252399781 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252237291 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262700778 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276538843 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258595184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.253797799 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.25267514 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.253747873 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253234847 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264663295 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.274035238 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.253076075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252363978 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253963157 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.25410792 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253075898 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252416778 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253589133 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250830498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.253228518 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253610777 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257149709 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.264661379 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25386898 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254295296 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260282361 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.27376277 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253447909 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260521993 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.253422038 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253935742 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.255656128 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259957787 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25269078 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257580588 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262003316 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2556085 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255435604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254577158 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254850818 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265527499 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281837912 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256079114 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255131829 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.260245515 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.267977547 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255750062 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257576117 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2564374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.252787825 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.253292829 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25742384 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256304497 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256703472 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255952465 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256397911 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253735622 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.255561862 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255494398 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.257465992 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257112641 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.257719573 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257398695 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257869935 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256487435 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257336381 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262823872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276770463 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257392139 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.257924284 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254945397 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257540992 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257011781 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256613759 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.257219823 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257198602 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257261654 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.257920915 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257980097 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.258535624 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25752765 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.258385509 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262332915 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258496518 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.262406862 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.258423921 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.255985967 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259609144 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258825144 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.258113922 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26061605 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.257240791 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.263006322 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.268239079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260258432 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.260032265 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262622005 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260415547 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259861435 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260947349 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.26293105 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.26819161 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.260085326 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.265924058 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.280537835 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260669631 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260875634 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.259515413 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.260292026 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260147006 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.263904165 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267726267 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272949884 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287187207 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.261415706 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264747677 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.261054747 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.265033025 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263232889 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.260133978 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.261284128 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26244027 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260624315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262607929 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.263061552 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.261408795 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25978955 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.262227193 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261079101 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.261567294 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26225121 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.261947736 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263317194 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.259645272 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262412669 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261815567 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26085754 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.258877336 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259892655 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26135073 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261370504 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.263201948 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.26628457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260220255 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263806699 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262886607 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.262439907 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.260724981 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264314107 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26867194 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.262631076 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270047148 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28337416 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.262880293 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269119677 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.281995681 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263617068 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.265505541 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263394903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.261860186 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265570897 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.272613836 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.26471225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263236033 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264229171 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264366645 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263893129 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.269354617 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283098706 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.263202474 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.265030198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.266522351 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261043272 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.264136617 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.265933323 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268218031 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266791034 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263669861 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.263234781 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265708272 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.265088387 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.265580853 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.265556089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267267237 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273458995 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26901471 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262312229 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.266489769 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264936398 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.270487807 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26597144 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266434121 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.265457366 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277633989 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.293119383 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272215784 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285710492 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.266633637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271731782 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.286847944 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.269773721 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267252879 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265419675 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.266241218 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265695459 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.264614533 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268403406 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.267244986 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267434616 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267378595 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.272249203 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.267175833 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.267878604 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.266698746 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.268566255 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267092223 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.267559271 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.268675177 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.270100574 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268959377 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.266022839 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.267513215 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274319497 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289316195 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269193623 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268014591 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.267614874 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.266744635 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.268412632 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.268095921 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.271990838 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276850945 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.271869453 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.277353833 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.27147919 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278473398 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.270653029 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.271529242 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276434741 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265044272 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.267442724 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.269368115 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269798234 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274848155 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.290602637 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.27074523 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.274676003 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270192301 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269465177 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.271356074 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270656544 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269682512 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.270913792 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276696459 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289978614 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272909475 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272016459 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.268633562 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270889342 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269999905 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.2699948 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271178439 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.270731871 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.270507242 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269422164 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270285638 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.27110937 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.272197564 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271935042 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268860048 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270175491 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276993318 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.290588645 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275583582 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.272676977 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278017407 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292002933 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278860108 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.292939478 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271892142 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.272087936 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.272215011 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.273639601 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271412391 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.27320544 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.273068378 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.27312264 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.277498222 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.273176064 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.273935079 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.273293516 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.272963351 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.272185692 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283732677 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297637832 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.274722415 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277388227 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26980324 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.274601095 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.278142375 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272964765 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271909588 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.277403367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283947775 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28103118 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.273233967 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.274134312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273976877 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273669782 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.272724994 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273650878 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273519962 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272877069 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.274121076 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273905141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275648782 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272979658 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.273665271 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274611471 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.275936631 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.283535443 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.295729288 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.275429638 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274840257 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275514833 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274213413 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274496726 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274467491 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273249352 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276182515 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276032517 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282296834 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.282004926 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.278045644 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275165122 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276025719 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.27465507 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.275459893 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276311542 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.275816295 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276466387 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.274949851 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275868178 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276406288 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.274210404 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276482579 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275678179 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276758918 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278623434 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.284575257 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27555678 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273195598 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.275556969 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276867685 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.276163336 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.276327803 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.282754951 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302333245 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.287812795 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285656148 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283629573 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.276924215 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279473663 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.285254804 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.275776122 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.278040612 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.277400773 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.277849988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276846066 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279923252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27766348 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.283283095 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29798689 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.276852021 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286222078 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297540695 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278028651 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.279687698 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.282262136 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.278859821 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.275342877 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.278395834 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.277617692 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28383851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.29791245 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278127043 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279931188 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.277243853 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.278894122 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28433774 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278621217 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27979771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.275725887 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.278668576 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278831477 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2787345 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.276653413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278151368 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.278719664 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.282154435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.287448647 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.276147412 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281676008 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.279559773 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.279078592 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281330174 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279939861 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.276538257 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276841657 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.278721135 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280224364 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277414164 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.281258246 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277158863 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.2807 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282496733 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281023544 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281749177 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290161059 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.288157303 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277726409 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.279386495 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280546898 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.282791339 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279691246 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.280621916 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28066571 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.281915483 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.281208247 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280947169 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.280249416 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284372294 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295461303 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300760216 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28079791 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281706597 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283509291 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280490383 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279637404 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281475484 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282744101 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.285490325 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.289660353 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.281517926 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286375481 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300977724 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282292814 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.286367438 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.284832652 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.290561118 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284017604 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282030329 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283259805 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.286891593 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298960114 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282129885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292970666 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314408928 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30223335 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.283650887 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.284090769 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281884447 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282943349 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284304624 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.283345799 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283861045 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283782695 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.283676339 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.285574709 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290024605 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.283870972 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.284481617 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.284082647 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282329157 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.286116337 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28182122 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.285256591 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.284961819 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.28440628 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.285933872 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.285214798 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.285410062 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298327679 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.313512052 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.286153756 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284738443 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282932809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.287893633 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.288569381 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296272585 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293580975 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.285683723 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.285893458 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.286482271 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286586242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.284133137 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.287053115 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285379307 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285065345 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283155811 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.298473302 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312968722 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289882142 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284375609 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287682006 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.287342586 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285991184 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28752393 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286162288 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.286901889 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.289665338 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290802949 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.287149589 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286842678 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.289937289 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.294705976 seconds)
  done (took 758.283782557 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284626301 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284574434 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283716875 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286046504 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284242566 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286030806 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285041782 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285573157 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285217476 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285120381 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284831993 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285159688 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284702568 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286759879 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284883108 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285181039 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285161653 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284934843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285504681 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286864486 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28483187 seconds)
  done (took 28.188332065 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.28816013 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.28686039 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287918416 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288263686 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286502581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288467068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2858543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288729571 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289351415 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285755074 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288942536 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288729703 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.287377162 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.287262469 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287202385 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290051344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289847627 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287301273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.291175595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287640923 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288250136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286176739 seconds)
  done (took 29.537636149 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.29032242 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289936792 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.289000339 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.288447204 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.290222279 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.2887987 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.290917573 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.291166022 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290894809 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.29002934 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.289185553 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.292134154 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.298161325 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.296418271 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.292048852 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.292359145 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.43562895 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.291517749 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.292294175 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290933853 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.287740168 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.295549226 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.309688867 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.287776008 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.290046103 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.292036261 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.291015858 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.291881406 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.291385911 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.292984952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.295158143 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.292092655 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290625283 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.293499017 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.29114421 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.293756982 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.297478497 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.292983382 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.289249719 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.291938801 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303603652 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.315006898 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292954327 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.297685155 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.315801553 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292482635 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296268195 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.301858926 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.29148216 seconds)
  done (took 64.73869451 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.292592547 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.293371613 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29100179 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29446183 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.294152007 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.293383125 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.293112874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29398625 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.290937136 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.29052495 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293639934 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.290431638 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290613404 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.293830786 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.294357825 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290801066 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291728508 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29223376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.291933924 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.292031654 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.291368404 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.294031639 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.295062683 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.292217292 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294323257 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.291533946 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291449943 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294516489 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.291235174 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.292200632 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.294784408 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.295045257 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.295633218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.292691405 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291841854 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.295934077 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.295369208 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.292115694 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295974926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.292831766 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.295639961 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295366575 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.296011897 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.295426555 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29412181 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.292980991 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292826241 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.292217402 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.293034545 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.29583302 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.296240569 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.291948742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.296747924 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293288075 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295435365 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29657061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.293610319 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.294628473 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.297603147 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.294698963 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.294296195 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296519189 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.293119894 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.296806718 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.297300506 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.295910145 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.295408821 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297190934 seconds)
  done (took 89.188241055 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296836585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.296100486 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296430127 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296089282 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295041518 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.296738713 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29634961 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.29645476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297048558 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297185877 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296816637 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29737152 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.297385021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297875033 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297831586 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296870756 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296730412 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297018903 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297147895 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297659565 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.297440377 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29809751 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297226733 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298298293 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.299219818 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298240703 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298154057 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29880515 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299274932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29853825 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299359179 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.299552076 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298105179 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298248112 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.298932741 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298590852 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298736764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298880749 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.299032952 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299448402 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298724486 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299566095 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29895009 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298938588 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299212209 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.299087527 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300049146 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.300698635 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299391655 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300492912 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.300194128 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298412861 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299518336 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298636337 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299617327 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299570924 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300318634 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300223336 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299882303 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300259312 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298677454 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.30045679 seconds)
  done (took 81.710210219 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301599354 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299823183 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.299259361 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298417712 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300881325 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29808584 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.301193185 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.300982546 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300925279 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.301736824 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301064719 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298501413 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29812011 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302016807 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298781468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297440776 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29856742 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299750991 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301245375 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298909405 seconds)
  done (took 27.209778456 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.299717539 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302335257 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299737181 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300089195 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.303614973 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300167944 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302943174 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303026158 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300066134 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301687731 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302065848 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30231138 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299914168 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300109336 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303399134 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299856512 seconds)
  done (took 22.034430511 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299921182 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.30307321 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301956151 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.303198892 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300907824 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.300406277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.303494725 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.299693177 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300875885 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.302611803 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.304425801 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.303762887 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.303378484 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304428616 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.301450963 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303604658 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.302052116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.301652836 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.304195029 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304016916 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.303092189 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.300962379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.303855499 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303635354 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.300960609 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.302192656 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301383249 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.302262988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.300715722 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30525099 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30221679 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.302162653 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.301186982 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.301440679 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304180739 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.302723053 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.305437859 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30408688 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304995096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303664687 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304679932 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.301903737 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305812977 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.304077398 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.301183684 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.304541897 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301986817 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.302997363 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302719035 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.301295764 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.304704001 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304106061 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.304652362 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307286407 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305544634 seconds)
  done (took 72.878902021 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305034712 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306790435 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302645686 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306789212 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307005773 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.302092375 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304524684 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304973995 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302821167 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305131117 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303853162 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307224831 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303988417 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306226294 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302864111 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30616975 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.304355642 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305494024 seconds)
  done (took 24.704427754 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305201874 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305830236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305694534 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303041011 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.304237525 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306801718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304044524 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.305694821 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30612586 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305043903 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3048438 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.307924403 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307126555 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.307672732 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.306960827 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304208047 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.307834411 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30702349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.305445961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303663504 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.307354433 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307355791 seconds)
  done (took 29.946956701 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.304350258 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.305487154 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.306301745 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.323856955 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.326835856 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.329522873 seconds)
  done (took 9.113969126 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31545231 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307052792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305267816 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308212037 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307294426 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304667652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304763491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305312133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307875525 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306235663 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30475049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308338232 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309159855 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305823768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309439358 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308499123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306069835 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30653941 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306168751 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308544555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307392632 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309684675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305836953 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307153566 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304754556 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306258927 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310442451 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307179579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306944097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308936787 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309922275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307973572 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310054193 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307932624 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310818725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311005913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307268184 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31045535 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309675673 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308009913 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310053016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309893781 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310176942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308827892 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311462384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308579255 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30905876 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307242008 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307893172 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311284131 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312019312 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307400808 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311990988 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311002733 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311218189 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308920317 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307527771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310359843 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309140191 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308589521 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311827492 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308864068 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309582958 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311544779 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308629786 seconds)
  done (took 87.612018348 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308951826 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309370144 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308926632 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310099973 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308199158 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310235105 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30895468 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308683591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308802445 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310290612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312278416 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309470123 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310288545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309680246 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309026352 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310326255 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30995262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308912709 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310742294 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312406074 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310751046 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310097453 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310414192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310068457 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311247762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313043402 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311149827 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310390266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310397681 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310989814 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312007669 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310880196 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311363274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311360786 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312626269 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310533232 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311795654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310544023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311660468 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314854647 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312252619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316762563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310818652 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312600482 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313303701 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311526878 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31273199 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313121599 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312087612 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312404837 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31316398 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313229416 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31385078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312323831 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313266342 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313114596 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3128519 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312734866 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313541933 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315946105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312998674 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313556469 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317361159 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313898039 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313331338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313505591 seconds)
  done (took 87.792029396 seconds)
done (took 1768.115226866 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478629219 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.430719135 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.31367825 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.33639379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314582238 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.337654179 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.308300341 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313322042 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313937942 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314657749 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.315835606 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.500419952 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.310552039 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314618565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314048035 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410705399 seconds)
  done (took 42.855547396 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344505929 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321730536 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441081842 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343856504 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343366806 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517481339 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.382015349 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319798282 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505607946 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.36309599 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.004690957 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.344886675 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319824548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.517228333 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33768714 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517201007 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.583829364 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.008872967 seconds)
  done (took 30.743517412 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.80966984 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.310486748 seconds)
  done (took 9.347995056 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.339679896 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319892682 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319748419 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318708174 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.311056373 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312133643 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318753558 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.313859173 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.345958882 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.458816404 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.3254874 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331716856 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.34249335 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319571696 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317709611 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359091686 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.523112125 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317892686 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.317506614 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325834824 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319137299 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.415099238 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.364850206 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319003575 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.458286617 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.366126805 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.327060436 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328215011 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.502969078 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318049609 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.320104432 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323071463 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320110675 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.286478657 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.775887852 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.336945658 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345359738 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327866812 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.31822415 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484097255 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321510958 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328096298 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.31398026 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.791894281 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.461930042 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.445349253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.660494596 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.345367895 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322243303 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.385272811 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322148271 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321030938 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.369882961 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.123087874 seconds)
  done (took 112.142273961 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355866459 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.706777453 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484483202 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337827462 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.973903099 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.992488832 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.336198077 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.630697524 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.369807744 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316789766 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.624689169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850092473 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340482944 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.342384269 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.946632169 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374112768 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319556943 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.081866489 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.336021773 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.322076887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842031184 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324247357 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.333205759 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.587092065 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356483227 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797444154 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.916333705 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.792975434 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335745334 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.317857494 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806361702 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.340743371 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.332805228 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320838586 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.591459224 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701624912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699982557 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.340866017 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339617459 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321066497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.348188355 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794717371 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.7026545 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.350827549 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318726708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79802339 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.33701377 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.325283978 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.324510086 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52305385 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.960583996 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.320079906 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.902747566 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.324623362 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.635444582 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382379133 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369653047 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828879626 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338776206 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.439991005 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347252577 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.320206903 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325819093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322055499 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319107627 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694703955 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690263141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319402718 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691524245 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821521479 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.338217036 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868062351 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.236127295 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343527927 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.394563972 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319333808 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.900614513 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837456757 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.370050819 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319452334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679166636 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338732371 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.61610511 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337311391 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338499988 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852479132 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327433697 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.378001059 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.334080688 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.321332687 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.942686369 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32425341 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.620241634 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.350949085 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32247829 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.321519358 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.346192243 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321307823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321433681 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.327683965 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871858624 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.340501219 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.450277377 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346655506 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326606138 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327090972 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.322075434 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324562002 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542471405 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.800152107 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.353182726 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320151782 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.321214787 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.329792368 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.588205199 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.322713572 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.656160841 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.343182365 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322582311 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323394735 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.037297109 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352478905 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323137443 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.328864291 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.22946695 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.535904013 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.343398449 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323839348 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325326221 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339598225 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.726009228 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346953817 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.352060725 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.32450034 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060779669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.372715316 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.343673442 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.626909149 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324163888 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334453849 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330932784 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322880677 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635433493 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.60852946 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.501141011 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324841917 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.343383893 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.042608308 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.363040615 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463648467 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343185094 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.417682196 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52387225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.485864405 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324538126 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.937310805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.325787805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54078275 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324050418 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62812202 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83736318 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.342852011 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.328487807 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.054137437 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.070807229 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.143766114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.326905219 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.616922197 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.338645419 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.80492811 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.325402659 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.326091328 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.76621084 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328312951 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331405325 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.326511033 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.326150422 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.471107376 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501172527 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.973696141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.328461064 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803649638 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366387695 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342498669 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331359061 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.332438122 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673189152 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386532617 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.329693963 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.360401009 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.327606041 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.330604418 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.825171394 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.271840076 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.326640431 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479843484 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986118454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.346087839 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326737604 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.942068833 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.554829517 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865747594 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.389617747 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.663509664 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.349001733 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367794661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931311739 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.355722713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826203386 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347817213 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.329574565 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94277615 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.345807285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405529508 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.326695417 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32927225 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881026019 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.346797641 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.329507142 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.670692164 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352214678 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580583672 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329615163 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.341116101 seconds)
  done (took 1110.902484352 seconds)
done (took 1307.219444153 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.328609565 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.334585369 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.31379251 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334793884 seconds)
  done (took 26.556669007 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.350057701 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.337011172 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.34049386 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.338835191 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341615685 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.338168387 seconds)
  done (took 9.297048534 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.53122804 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336680959 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338057706 seconds)
  done (took 19.454495903 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.56065904 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.709226375 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.693352281 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.718844276 seconds)
  done (took 10.931910792 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342746255 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.341910386 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.341999225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.345410535 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.35143987 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.354075221 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.343173334 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.343966571 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.35227144 seconds)
  done (took 13.366382956 seconds)
done (took 80.851667929 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399254875 seconds)
    (2/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.339335006 seconds)
    (3/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.423514719 seconds)
    (4/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.199525767 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.778640241 seconds)
    (6/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353780273 seconds)
    (7/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.314574195 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.362445046 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343094421 seconds)
    (10/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.348255041 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.621825259 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.369811388 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.31814139 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.377462225 seconds)
    (15/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.002421478 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363974005 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.31578306 seconds)
    (18/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.45197767 seconds)
    (19/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.422671943 seconds)
    (20/286) benchmarking ("sort", Float64, true)...
    done (took 6.334982686 seconds)
    (21/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.364898648 seconds)
    (22/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.334040188 seconds)
    (23/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.323074881 seconds)
    (24/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.335395518 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271165574 seconds)
    (26/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.524213624 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.353164664 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.869166018 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.367023387 seconds)
    (30/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.336679109 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.338235391 seconds)
    (32/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.577747026 seconds)
    (33/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.383351497 seconds)
    (34/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.318031135 seconds)
    (35/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.344279569 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.463245609 seconds)
    (37/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.524704995 seconds)
    (38/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.098132897 seconds)
    (39/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.121069492 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.174389805 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.424834112 seconds)
    (42/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363387361 seconds)
    (43/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.162211423 seconds)
    (44/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.027468506 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.022139736 seconds)
    (46/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.32472511 seconds)
    (47/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347375814 seconds)
    (48/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.318814003 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.465684239 seconds)
    (50/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.370211156 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.371014284 seconds)
    (52/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.323141777 seconds)
    (53/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.44504565 seconds)
    (54/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.506510619 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.622885891 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.419167646 seconds)
    (57/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.370748791 seconds)
    (58/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.32722748 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.398104762 seconds)
    (60/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.032711369 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.192596824 seconds)
    (62/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.340325583 seconds)
    (63/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.766532392 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398429116 seconds)
    (65/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.909902267 seconds)
    (66/286) benchmarking ("sort", BigInt, true)...
    done (took 6.339656412 seconds)
    (67/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355776965 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.32014945 seconds)
    (69/286) benchmarking ("sort", BigInt, false)...
    done (took 6.337384148 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.319841057 seconds)
    (71/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.699499317 seconds)
    (72/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.166918015 seconds)
    (73/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.319247954 seconds)
    (74/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.26557865 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.432155378 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.425700982 seconds)
    (77/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.317937877 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.874654035 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.087339625 seconds)
    (80/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.320108999 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.442248721 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.332970801 seconds)
    (83/286) benchmarking ("sort", Int8, false)...
    done (took 4.438256203 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.320262374 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 5.589113623 seconds)
    (86/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.878816539 seconds)
    (87/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367493185 seconds)
    (88/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.122050297 seconds)
    (89/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.324358247 seconds)
    (90/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.469053619 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.355805541 seconds)
    (92/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.582450861 seconds)
    (93/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.737160064 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.347240669 seconds)
    (95/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.806077506 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.832715538 seconds)
    (97/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.9479515 seconds)
    (98/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.321776432 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.399791102 seconds)
    (100/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405340357 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.910762398 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.907897375 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.153839875 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.152313541 seconds)
    (105/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.495942236 seconds)
    (106/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.057455536 seconds)
    (107/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.320932797 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.725583873 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.596524463 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.322532374 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.147683509 seconds)
    (112/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.367035984 seconds)
    (113/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.332614729 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.225825742 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.341243314 seconds)
    (116/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.351126175 seconds)
    (117/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.591754495 seconds)
    (118/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.529452109 seconds)
    (119/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.202225631 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.7957599 seconds)
    (121/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.026005011 seconds)
    (122/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.333552945 seconds)
    (123/286) benchmarking ("sort", Int8, true)...
    done (took 6.344470298 seconds)
    (124/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.346688664 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368771824 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.320362138 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.875525979 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.384133036 seconds)
    (129/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.885061172 seconds)
    (130/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370967014 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.624144537 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.17198079 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.603035479 seconds)
    (134/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.320106569 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.24629606 seconds)
    (136/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.276279942 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.443081809 seconds)
    (138/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370521345 seconds)
    (139/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.446784712 seconds)
    (140/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.430143657 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.325473924 seconds)
    (142/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.350952597 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.199900959 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.959957958 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.385800268 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.952329536 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.767861759 seconds)
    (148/286) benchmarking ("sort", Float64, false)...
    done (took 5.724202082 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.512994949 seconds)
    (150/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.630638099 seconds)
    (151/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.87834444 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.367514368 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.359902308 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.323456152 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.370977249 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.578371082 seconds)
    (157/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.467041657 seconds)
    (158/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.469932316 seconds)
    (159/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.863978097 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.812210449 seconds)
    (161/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.43080314 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.324563627 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.12797207 seconds)
    (164/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.130961735 seconds)
    (165/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.373442785 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.371999704 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368985216 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.759373662 seconds)
    (169/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.363954891 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.405004206 seconds)
    (171/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.344411803 seconds)
    (172/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.490502009 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.923153578 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.435809941 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.371103021 seconds)
    (176/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.747165566 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.657030975 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.362499645 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.3862585 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.028695939 seconds)
    (181/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.045575511 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.350641754 seconds)
    (183/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.76295047 seconds)
    (184/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.243531505 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.51279318 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.389073402 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.403318379 seconds)
    (188/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.377944284 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.393950409 seconds)
    (190/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.732656426 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.941098634 seconds)
    (192/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.343338975 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.354053801 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.324888768 seconds)
    (195/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.347424919 seconds)
    (196/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.327398942 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.37290164 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.979172168 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.569043306 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.327520021 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.356216378 seconds)
    (202/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.377214777 seconds)
    (203/286) benchmarking ("sort", Float32, true)...
    done (took 6.388841534 seconds)
    (204/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.978875851 seconds)
    (205/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.328875335 seconds)
    (206/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.063026726 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.480278903 seconds)
    (208/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.891413949 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370447677 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.089529082 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.307040863 seconds)
    (212/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.563023044 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.394430784 seconds)
    (214/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356325612 seconds)
    (215/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.616426247 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.407379267 seconds)
    (217/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.359353995 seconds)
    (218/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.783924577 seconds)
    (219/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.771593843 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.458251688 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.246909825 seconds)
    (222/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375195683 seconds)
    (223/286) benchmarking ("sort", Float32, false)...
    done (took 5.3831942 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.860173796 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.23434439 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.060475396 seconds)
    (227/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.330790216 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.383028509 seconds)
    (229/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.383873958 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.5761315 seconds)
    (231/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.913663768 seconds)
    (232/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.349617953 seconds)
    (233/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.486494013 seconds)
    (234/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.36515338 seconds)
    (235/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.626563696 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377084624 seconds)
    (237/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.912879294 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.655655362 seconds)
    (239/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.433389886 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.731647583 seconds)
    (241/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.797148584 seconds)
    (242/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.435005231 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.098554538 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.440960156 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.675364673 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.153160955 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.475362468 seconds)
    (248/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.437639872 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.366483215 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.389206007 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.004084877 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.722836288 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.350180212 seconds)
    (254/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.331821406 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.292084432 seconds)
    (256/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.355545744 seconds)
    (257/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.76210527 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.837542791 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.435212772 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.331470137 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.43278072 seconds)
    (262/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.189698578 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.469814387 seconds)
    (264/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.732757768 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.026731704 seconds)
    (266/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.330856689 seconds)
    (267/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.346048707 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.172713102 seconds)
    (269/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.4489886 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.331606037 seconds)
    (271/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.446031526 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.391935268 seconds)
    (273/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.41457507 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.352858173 seconds)
    (275/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.368193598 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.353964501 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.404067818 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.332066945 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.39584203 seconds)
    (280/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.476897726 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.776541377 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.85210261 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.470827478 seconds)
    (284/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.234810639 seconds)
    (285/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.352198725 seconds)
    (286/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.164255951 seconds)
  done (took 952.503669201 seconds)
done (took 953.755426627 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.386948199 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385789037 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.364594331 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38378521 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.482311926 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390177636 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372902924 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.363283437 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.411295037 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.41242168 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.369334042 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.388725278 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.36832454 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.367569503 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.363598978 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384625954 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.512262071 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.370178205 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.385526431 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372312863 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.387050851 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368982684 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411239508 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.387279483 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.365774683 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365771953 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.372465456 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.390562727 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.482627354 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.372895656 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.366573649 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382287887 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.511066805 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.363176168 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.357396873 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.392325577 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.383495546 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.375556291 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366517207 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403929274 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.957138324 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.387676512 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372122294 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364749586 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365897705 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367086143 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372883658 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.372039394 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386022592 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387070987 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.944357234 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.404792419 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.375225515 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364926755 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.376583919 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.371140433 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.369889066 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387981907 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.390989514 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390200508 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.495734404 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.369292676 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.367569223 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.389075842 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.380116431 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.981342759 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.378856353 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369441904 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.954198878 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.389048286 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.980665762 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.399847069 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.368801846 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.387667456 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.407259862 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.512854311 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.361343042 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367845143 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.382915049 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.372422877 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376577853 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389802016 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370810877 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.368014504 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389763235 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.394607098 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.379260183 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.374114998 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379364987 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393034101 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.381299635 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.385005493 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370996269 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.362889927 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377547838 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370968518 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.37798556 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.378597955 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373229404 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379519065 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.955934217 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413917145 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.3654233 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.364603473 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.367667097 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388512173 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.959162889 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.394892613 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.390546504 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41642886 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.369032515 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.501413275 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.378700727 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394727469 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.378851345 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372901088 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36543179 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.499227466 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.95075507 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.409962212 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369497497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375238027 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397345988 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.369554587 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.365662656 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.516741979 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.372301537 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391987053 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.499698288 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.381727549 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408852283 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.373830097 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373397844 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.391997554 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393443332 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.407889249 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372844585 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394049259 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.393066696 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367198802 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388632052 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.379342487 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370112059 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.3777121 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.36373319 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.392309372 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392044406 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39095304 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.391165518 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.49785235 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.366918784 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.502460577 seconds)
done (took 233.184724795 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.4303926 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365080114 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.459898618 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.366666597 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.470407253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.47129379 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.364528149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.364345853 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.364932147 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.765214971 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364635148 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365832487 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.365268413 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.365468166 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451345922 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368442247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365273964 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.708838259 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369860069 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440754249 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.367077308 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366170206 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.36816915 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.747980781 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.364032919 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.359751663 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.44118452 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368490268 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.7127376 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.361363916 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.362198163 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.714813162 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461523362 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385359533 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.380848004 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376445012 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.473034636 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.391363251 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.449773188 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449811381 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464185909 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406831566 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.36244127 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.369998214 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370464027 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371448926 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367466001 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.397736229 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.364166361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368643733 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712005985 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380182548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.379383687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.370012625 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.370996101 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390410878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368610353 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.370464759 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461818183 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370988338 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.435649717 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.75022467 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750249647 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370846605 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.368187604 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370580467 seconds)
  done (took 150.8300256 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435727663 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.442794694 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.489904289 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.388287061 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421401985 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.495027551 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.390176594 seconds)
  done (took 11.34041243 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378112031 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372613349 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.421326514 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.418969464 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.373786786 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.550975948 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37275058 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382950966 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368711408 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425192921 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373682581 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372828651 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379451121 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.367552935 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419906766 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383194143 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48762164 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.373217116 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374347083 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.531938556 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371851441 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379707007 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.423624721 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383482861 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.373185155 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378619796 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.198682275 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374159889 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371594091 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373961477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370835367 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.452032888 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375026867 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.370629134 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371937686 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489769789 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.374977807 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371416138 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.37415356 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.371245822 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375104227 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375882125 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374988743 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.37194778 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374796168 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.397519461 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374090875 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.376042492 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.375869957 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376505743 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424506759 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376449403 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.37281234 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.375018384 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430141398 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38202881 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37667719 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.374046261 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376281645 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375135742 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.537562421 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42185034 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.376411777 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424651722 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377251516 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37579914 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377084972 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376367221 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431072062 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.376205842 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423853071 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374295056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.563238303 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.398104893 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378379848 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.378810154 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377441446 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376968273 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.37141564 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382831455 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.37654504 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.379510799 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382728129 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376056092 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373600782 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552421679 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487735002 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.374590267 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.389844245 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.383835052 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375121603 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430075856 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376519628 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375053193 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429292015 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492329962 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.430888563 seconds)
  done (took 157.682495215 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379933441 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384466471 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3770554 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39244381 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.3756813 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.377008849 seconds)
  done (took 9.57025379 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380608164 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.378983311 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.376768529 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378596369 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377891816 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379244023 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378012819 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379320123 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.383323102 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378651848 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.379826935 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380672498 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.37984583 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378128573 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.378849873 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.376418688 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378322163 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374596529 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37752507 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377665318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.472673135 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37929487 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37751818 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.378893158 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.386046423 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379486095 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388374085 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380586998 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380092236 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387434673 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.40124837 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.381665067 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379897774 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387096137 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.38389342 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.380710975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384036593 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.384276182 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37731326 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.381574692 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.382417115 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380989485 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380345335 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.384452545 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382654008 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.385647205 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388388024 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390011744 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.380681014 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383510504 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38384905 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.381340148 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.381496941 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383924689 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381767237 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404135867 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388737781 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380989675 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.379673871 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383297375 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.38383609 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.382108443 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382477401 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.385983992 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.388764065 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384815286 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.381790372 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385766443 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380877262 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381823569 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384586745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379670118 seconds)
  done (took 101.900323537 seconds)
done (took 432.595728528 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.548290358 seconds)
  done (took 7.835714995 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.544248184 seconds)
  done (took 7.836643749 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.949330204 seconds)
  done (took 24.240599382 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.416938783 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.458301854 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.39960826 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.385604503 seconds)
  done (took 26.947704413 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.423918003 seconds)
  done (took 7.710607912 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.375753589 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.388622714 seconds)
  done (took 14.053356435 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.570891003 seconds)
  done (took 7.858973791 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.307216225 seconds)
  done (took 8.599705995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.391570617 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.407855659 seconds)
  done (took 14.097371421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.35671798 seconds)
  done (took 7.645036234 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.94585076 seconds)
  done (took 12.239626544 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.379600741 seconds)
  done (took 7.668960362 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.385432871 seconds)
  done (took 7.672753446 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.159980837 seconds)
  done (took 10.447620196 seconds)
done (took 166.143636592 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.373868427 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.375849854 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.376343259 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.375242546 seconds)
  done (took 26.789273375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416667753 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.417173399 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419627967 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427975195 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.420154735 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.417983144 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.410817884 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.410044326 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.428255232 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421667646 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419705666 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.419080225 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419020636 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.41153517 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.425089338 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421036449 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.429537035 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.419380493 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410652365 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.421878887 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385480632 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.430934516 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423900296 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386059572 seconds)
  done (took 35.301895111 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906189985 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456128437 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540724113 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.439825824 seconds)
  done (took 7.633429812 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.436979823 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438649304 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453467202 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497167943 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.516413001 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448426625 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.411411958 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409404695 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.3926764 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.44006454 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514937388 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.45585071 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.528835668 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386566319 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.605164334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.386717092 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385812322 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.43830837 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489227988 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.508434106 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388620066 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439320109 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.445292105 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456702092 seconds)
  done (took 36.165214285 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387589981 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.404824063 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386513432 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.386170288 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.395252601 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.38591672 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.386826041 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388943533 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.38798292 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.391472748 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.386895963 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400195408 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387298176 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388230042 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.393415166 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.388301738 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393529966 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.38712619 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.387718371 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.393944131 seconds)
  done (took 29.101023258 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.381522724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.235774278 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.73340209 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637543514 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.381023088 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.387064283 seconds)
  done (took 28.048245073 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.469205245 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.637371453 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.389082087 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.795322659 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.88734871 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.407837438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388915144 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.655541467 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.023018085 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.022600368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.459857813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.46496031 seconds)
  done (took 20.899283594 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390961922 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.385832603 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.398886901 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.40598764 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450836102 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.412191684 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395644258 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.383786668 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.457592015 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.474449256 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.411659776 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.453805531 seconds)
  done (took 38.316658997 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471876464 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435240653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.454699127 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452419536 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115937621 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596469234 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388964268 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185720914 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.41240336 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659696549 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385266819 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474811344 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644506377 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396976817 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391565553 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.463739923 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632108304 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917385235 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387566686 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.867513705 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415963141 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397899698 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.808173283 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652312519 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626625247 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369424962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.645336249 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.1598877 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711777867 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406872883 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397544803 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386941906 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658188548 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100504084 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507078466 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631155382 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425597767 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935943959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.378931852 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.847998515 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406086555 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395501995 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398740211 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387711223 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320951421 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394930929 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154623386 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.415498682 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.098036801 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388271686 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684650003 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490073357 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392717171 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.974761055 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402394188 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.366948118 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392649695 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486997597 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977330607 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.170053611 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409368566 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.32295733 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391792439 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.746203753 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064122462 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.412701467 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393794896 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393021216 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322248016 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.83810101 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414232865 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52811219 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.415140639 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051383757 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159377931 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423620445 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322005236 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983267842 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392332864 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331650201 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619176361 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165766477 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331529614 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.337711257 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325563979 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154235003 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399011495 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.889334191 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414627783 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.210747701 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663614949 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438921304 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415814282 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618397461 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.274604133 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394488767 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.393569827 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508700711 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415338509 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145258175 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348953511 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396364556 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64978963 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60382105 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403389604 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.489649598 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960304667 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419871979 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.412451492 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405441697 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639078557 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.074733643 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436303512 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.170826279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41934795 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177600902 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192489825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398436835 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399280858 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398121515 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690984531 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.209904184 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297770436 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459740988 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402531373 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393538007 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.891887187 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.244783006 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.277146864 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.623678361 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42655916 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403282236 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.394419893 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35522633 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.392210408 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407576374 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.180297318 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617114406 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39475966 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669214956 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328439532 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530712743 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412449423 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61794246 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.704509785 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.418954845 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656046711 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409060716 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400610313 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406009616 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413048869 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495681365 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417612242 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.395368375 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674370682 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398519833 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39971993 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.783009539 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173152026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402999669 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401419426 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40885983 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042077813 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387855726 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402198556 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287845392 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407827401 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461168353 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400481532 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640503414 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.877913724 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427838928 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399724684 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.403853947 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618187124 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40446971 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.849851163 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47961295 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.911759185 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062209246 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428199658 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.331829843 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.107144681 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.087755859 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395572907 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594590449 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395735449 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641963449 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436431326 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395359583 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042013737 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417256263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.88974337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.409297824 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408160239 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.400758405 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396455253 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.862952084 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209621587 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408922727 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407343977 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538930561 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41162425 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330868914 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914098937 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402955069 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397326296 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.171657765 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43113811 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.761675967 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250052578 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681140369 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406356769 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69385525 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.001805464 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.440499456 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.407984241 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398483871 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412944005 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.40486693 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405737522 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.408645509 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.766542278 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.847054316 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966835999 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192339271 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008586173 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.909469566 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.439805175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.29616836 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207618537 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357610873 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059328507 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662016954 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177740687 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378098337 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922534841 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.73954076 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290405351 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707582972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631973836 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.872293142 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.430962648 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699864192 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612944969 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434149329 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413958809 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32882048 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.852497662 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002158942 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434513452 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486234239 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215803924 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430383991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.180444423 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.433821875 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.266059761 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869006331 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.059073506 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.800939286 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400646009 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420315353 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263803906 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43010363 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931550979 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080776379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426808154 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.947421417 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36700129 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652528693 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.439031214 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.400106823 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.182884891 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.401021611 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660286396 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701828973 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342365576 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417043384 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997591133 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.280208809 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408716966 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402934993 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206293364 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405395757 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726026954 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.421699787 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.873046712 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426207448 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337873377 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337282726 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.095916169 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405623884 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375119982 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939501811 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.405385036 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418216502 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420332023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251965876 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660949495 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41660012 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059877787 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656564584 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407227422 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42647438 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.406923323 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403487011 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.391443952 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.305822039 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639324117 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486921699 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.65666361 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.494072699 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.304911851 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478399589 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107472334 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287507625 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411311174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684390684 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.143766684 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.422762008 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183270599 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44919864 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413556993 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423961892 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42557815 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426615182 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49604581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65553597 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.441355486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418726193 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877153316 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441777833 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409122443 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420276877 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49870887 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.056959623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.88628417 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.180151186 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065580162 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235475673 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085250534 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725626833 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408968195 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410488514 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341795247 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555888362 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937094822 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681663059 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527630606 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.428927266 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430960474 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406924981 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435254604 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627091872 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684129794 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.283455054 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409120492 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093044643 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.289827516 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418187804 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.619898115 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950589766 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0113142 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533360437 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420659976 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213571547 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70649578 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501402717 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409350659 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003989103 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.412623526 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.242495226 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.412797112 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410089089 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575959012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708820397 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134688839 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.444332056 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.563655687 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.183037053 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.801658499 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667185224 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.961516484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.659621713 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089851761 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.208345176 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676022464 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48068599 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659830075 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.545640502 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558386317 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.409361989 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291943435 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411356504 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258967877 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.119844156 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.420736804 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067337932 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695655316 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412063991 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.408689909 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432883 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.419320416 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634236447 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188036413 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634799019 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421362052 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412480618 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.402325452 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072297023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731878212 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348535121 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.414481711 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689476792 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675238906 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435507401 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.862801146 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.121997509 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012289631 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.386251038 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432308843 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411928149 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205863717 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067042881 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.920330422 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973522484 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073559853 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426491518 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691339021 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.416797749 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429208912 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696815722 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.416131423 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411602763 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66363852 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.092909608 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299400423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.418948734 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.83452056 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.350691338 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64908877 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48134414 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352322377 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41739191 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.897933563 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44310106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534372503 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425750348 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.412082914 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42848226 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.177095533 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706717805 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.422090153 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.401875347 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.395216077 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.455040293 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510701962 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026783517 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444208329 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.090428027 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.768721959 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675014049 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431295751 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.396055565 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419412606 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416002615 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140645282 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39674516 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417617052 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019798816 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.419917479 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.431633659 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420566348 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.63234281 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629027765 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41574775 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689773933 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453703577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437560627 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.317079218 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.190682497 seconds)
  done (took 1705.836301947 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455446577 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.457668802 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.44028187 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.493952315 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428616296 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.50281709 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.459665847 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.55661573 seconds)
  done (took 53.122387197 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.416273146 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.579105227 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.449895731 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.434145232 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.426194677 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.433804572 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.930909842 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.44337648 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426398364 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.425176241 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.41623545 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.425008621 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.147951589 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.426862331 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.420391024 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.409250372 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.425471896 seconds)
  done (took 66.970188118 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.096147994 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.58124308 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.920653594 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.450450542 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.420888043 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.438578936 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.034943548 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.43791921 seconds)
  done (took 55.708805436 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436130974 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435774262 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43497819 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436604435 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437177832 seconds)
  done (took 8.508410198 seconds)
done (took 2113.695439006 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42401027 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.425945158 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.422840024 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425613697 seconds)
  done (took 7.025182454 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.399788715 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.153505765 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.404594046 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418146548 seconds)
  done (took 18.703253098 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.440440564 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.449572378 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.223954745 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.141124791 seconds)
  done (took 5.694949927 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.170789609 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.183521928 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.167831341 seconds)
  done (took 7.857713535 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.421237414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.424985147 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.425915562 seconds)
  done (took 20.600716826 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.727123907 seconds)
  done (took 3.062456256 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.56863771 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.617924398 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.796868685 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.760646262 seconds)
  done (took 8.072256151 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.808792302 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.801103247 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.616616246 seconds)
  done (took 6.556735813 seconds)
done (took 91.791298675 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.699908618 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.444632883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.624775642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.671322001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.646900464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.624544144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932159571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.640563335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.179453558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.166986065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.673159011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.648030757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.663522633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447073741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.663405584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442452508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.706876697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.730657374 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394172166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.431644332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938005246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.304259619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.49871196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.32030435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.728407064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.579030269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.898254319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.444092429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.422477795 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.918941162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.578663994 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422322016 seconds)
  done (took 199.815193236 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.422175188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437878646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.435933155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.422425325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421700413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.431245117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.422365232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.441405402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.445849083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438617235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422817726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432794578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.424135734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.442794835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.423934201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.441980838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422896819 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.439756737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.42309261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.441530683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424492944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.448043087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434804132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.436210613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.426772471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423693616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.443748997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.442605048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.422862065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.422713802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.422667205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444012055 seconds)
  done (took 207.159693023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.423687399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443928441 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422740574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.423252901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422948851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.445069481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425398614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439564056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.430691231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426878675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.423583243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.433334717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.427330655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437525688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42548719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425564847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.444610024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.429244813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.424726206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.424925642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42577631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.425074933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.424986229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433659382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.426075969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42500616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.431455424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.430897303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436985106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.424858231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.446395951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434496367 seconds)
  done (took 207.100152643 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.623062833 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.432837472 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434665436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.372371486 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.433257417 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433853981 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427533924 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.630811961 seconds)
  done (took 15.123559414 seconds)
done (took 630.528569811 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.86582354 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.566929216 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.643301425 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.45420058 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.31014524 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.475542477 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.454431934 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.643464404 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.397566115 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.653574522 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.82009216 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.471950299 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.975481862 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.452501195 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.731706106 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.562113328 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.41369972 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.544313954 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.796026394 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.070904463 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.733130284 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.004275783 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.666756166 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.394828096 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.993172822 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.009843726 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.277556189 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.399813222 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.473240932 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.807763721 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.263176923 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.539504791 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.526567175 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.524958802 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.582195039 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.562275325 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.519190629 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.523188184 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.667359133 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.762521553 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.076818821 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.208162759 seconds)
  done (took 98.157034792 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.418340502 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.419251989 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.417846375 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.418921401 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.420239653 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.41836495 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.418458775 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.419033705 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.419491433 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.418413324 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.41816247 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.419868303 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.418262796 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.420535539 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.418546467 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.418944179 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.419524337 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.421844582 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.419429499 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.419028023 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.420565049 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.419837757 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.420799345 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.419393621 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.419860282 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.420566713 seconds)
  done (took 38.241840963 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438908441 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.699540921 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.884590191 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.443761472 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.43902047 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441985114 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.528434877 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.439509326 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.441812659 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443382244 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.601372911 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441071828 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.477466084 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.914064668 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.441544776 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440724143 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439604536 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.439461498 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.709474744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449047667 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.553945936 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440639704 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.530136592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.449590227 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.465291331 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441050528 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443787435 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.035078291 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.4627726 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.604127242 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.359555439 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.530170909 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.972850592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.916446871 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.364827219 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446439548 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441932776 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.607878998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442749719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.441125352 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.529704875 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.440570749 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.894923307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.130825329 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.461822834 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441348511 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.057383257 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.629471026 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.723934934 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448906475 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92321555 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.444500447 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.443411103 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444151538 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.723393303 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449367537 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.442156426 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.075501072 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.469088081 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.5316355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443463008 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.442095364 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.718931217 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442572541 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.707514428 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445101932 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.451085082 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46452576 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.90002083 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445523202 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.159830598 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.462977659 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.444041775 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604763773 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.706450236 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.096301423 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.468918505 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.722287111 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.987040471 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.549937201 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.446453828 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.026632558 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.554898632 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.447465966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445754698 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44621008 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.444759909 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.49032569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.530950828 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.092616488 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.169646137 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.10499055 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.556027172 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45796994 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.444514235 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.07824626 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467498317 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.445184223 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.893247763 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.15994039 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.466994278 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.453132165 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.161837359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.467598392 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.535350982 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.450824489 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.906349757 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447176532 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.49144681 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445446121 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451942336 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.470335613 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.535315568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.44949783 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.447125832 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.128682253 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635427437 seconds)
  done (took 190.865306819 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.439666645 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.45972785 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.439244272 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.460053647 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.43880236 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.446963988 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.439979926 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.44101908 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444958582 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.439924362 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.439289279 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.441818414 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.440461013 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.442756274 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.451533848 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445726574 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.09449634 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.441715038 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.439493836 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.44109136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.277957548 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.443619296 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.440480327 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.441597656 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.440564447 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.440779837 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.468047404 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.444518207 seconds)
  done (took 155.27431114 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.448654212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.08954901 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.469316023 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.597892685 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.473217072 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.446502191 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.596221546 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.514003568 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.469856837 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447082678 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.446757042 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.791611992 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.450178032 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.03644037 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.670366649 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.617864346 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.035246435 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.46922598 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446397772 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.447246857 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.599567541 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.456595475 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.793170987 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.092599174 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.470596292 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.094095772 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434948265 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.450785611 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.4487188 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.095412335 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.468627332 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.797111066 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.537502831 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517196182 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.114950218 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.057869669 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.058364054 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.620207988 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.450050946 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448504009 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449086172 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.433313352 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.099003818 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.471545173 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.451533861 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.087180627 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.473978401 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.451706488 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.456609267 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.448504913 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.517870671 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.538634777 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818645394 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.10350805 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.558902777 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.463779674 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.600117566 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.841384859 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.454194354 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.039152415 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435417343 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.141334159 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.480192234 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.434726131 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.451621326 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.456786426 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.622941794 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.602691241 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041546637 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47152623 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.040311843 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.643374751 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.450671077 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.452415106 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45316113 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.140544565 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.066694297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.643642338 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.606499985 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.678081984 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.437524147 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.452137377 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.436242243 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540212251 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.451621819 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.144059018 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.066332511 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.474584358 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.453094483 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.454691066 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.454430276 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.65653628 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.162690085 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.566505935 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.032346019 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.841053879 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.829539641 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45926483 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.520995536 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.47256422 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.823560844 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.459846925 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.520253351 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.910614638 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.824594279 seconds)
  done (took 174.84102918 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.718079434 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.759882431 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.55077715 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613172963 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.11964915 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.05042717 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.806796853 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.602740087 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.576276578 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.734445222 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.727171981 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.544474552 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.688463461 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.538280884 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.245887645 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.551190739 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.577015026 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.610764809 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.622010478 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.537588999 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.200887963 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.77718203 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.668605907 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.471661777 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.5545885 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.331187663 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.055372967 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.988076862 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.639746688 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.906553021 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.019959571 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.675689668 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.565372327 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.231564325 seconds)
  done (took 70.619525364 seconds)
done (took 729.335074677 seconds)
SAVING RESULT...
DONE!
