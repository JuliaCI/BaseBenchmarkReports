cset: moving following pidspec: 10108
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.254397953 seconds)
loading group "string"... done (took 0.468361095 seconds)
loading group "linalg"... done (took 7.645946572 seconds)
loading group "parallel"... done (took 0.173843038 seconds)
loading group "find"... done (took 1.172870253 seconds)
loading group "tuple"... done (took 2.134295386 seconds)
loading group "dates"... done (took 1.343598965 seconds)
loading group "micro"... done (took 0.249162812 seconds)
loading group "io"... done (took 0.655144983 seconds)
loading group "scalar"... done (took 42.250718085 seconds)
loading group "sparse"... done (took 13.106987762 seconds)
loading group "broadcast"... done (took 1.144801622 seconds)
loading group "union"... done (took 14.464528065 seconds)
loading group "simd"... done (took 4.863493508 seconds)
loading group "random"... done (took 9.71959557 seconds)
loading group "problem"... done (took 1.991627626 seconds)
loading group "array"... done (took 22.450160126 seconds)
loading group "misc"... done (took 1.440993072 seconds)
loading group "sort"... done (took 3.577055125 seconds)
loading group "collection"... done (took 19.49181053 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520793659 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136825014 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132059558 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147351301 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204622332 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145425416 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155905116 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113308952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.963231461 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181072693 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152622445 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510817672 seconds)
done (took 5.122105494 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.304055245 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096924827 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105520247 seconds)
  done (took 0.884851013 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078714389 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147428737 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096026155 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079770689 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096558467 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079165632 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096468493 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078287607 seconds)
  done (took 1.360701501 seconds)
done (took 3.322948237 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732339132 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.295533868 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206316492 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463869273 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202123685 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219444598 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.730792206 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335425068 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251649857 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099879248 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144057837 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387064745 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134767998 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685803896 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089431921 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12371501 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189607708 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455508816 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082195881 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10943125 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116082301 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140847542 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128913426 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092379331 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185300661 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081762212 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193221631 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107143254 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080516512 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289042983 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20262289 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694123959 seconds)
  done (took 10.979072772 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113700971 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13727176 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099739591 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139914961 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135418176 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101154781 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086005507 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097730449 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124104839 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174840391 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129948404 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120643356 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095362865 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081840129 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115781043 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246107383 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12170516 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105064205 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102630415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105033135 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124027221 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114189221 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110799085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095393126 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168504814 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219491266 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113268934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125159493 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097204617 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114328762 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144761582 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142158017 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094159873 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080026603 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172618081 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126639792 seconds)
  done (took 5.179513051 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191568293 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123749981 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169271181 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162870183 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139343875 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158212052 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112281219 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242698605 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.10120697 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164867772 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143015722 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116306637 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07970575 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097224769 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09699113 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.620422064 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165033151 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13622547 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114818479 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089487226 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10107999 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.724561346 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105591541 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081510429 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100584054 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065792799 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160714168 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09793827 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140024772 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120280916 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082351598 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141140349 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129967518 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199369258 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125593293 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12217313 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11669024 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099612938 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096851578 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181336925 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090139825 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098719011 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10366007 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09600771 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134957279 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097918602 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083356023 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208569244 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13806717 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095548438 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096372153 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.968044307 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182360699 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092006823 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098459185 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330447262 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101287666 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101325958 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080003018 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281670169 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187644352 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100747369 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081786728 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099162023 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082733488 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404609978 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081032325 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.72909894 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085011963 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109135496 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084561532 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098953902 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107173677 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08932717 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117496863 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080662782 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100649423 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080219773 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098921262 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083606682 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112148338 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103408614 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080619467 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166407661 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081342516 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117180656 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129608238 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085804546 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096918211 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131855758 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084735208 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099214904 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135998604 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083181566 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096368938 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111189983 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085019337 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145072935 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098654222 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177854449 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079822313 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127647948 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101327097 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116010888 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115468336 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101163477 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087057559 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098243961 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079097212 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167723953 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082011156 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09975499 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082473943 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113707016 seconds)
  done (took 23.106626864 seconds)
done (took 39.953294454 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.333286499 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103929773 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102381211 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102033215 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100015483 seconds)
  done (took 1.504956795 seconds)
done (took 2.240312473 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290457296 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171915605 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095456848 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166695465 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092928166 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173609235 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159764019 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11090924 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217859818 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076998587 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162330301 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093749165 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07656874 seconds)
  done (took 2.65217242 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097526277 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117533008 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083672122 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110719537 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076089007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110841919 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092210252 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116912495 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108459773 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084678214 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092300585 seconds)
  done (took 1.823082277 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095062167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114926919 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082768818 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110915878 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077039982 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110158702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09206428 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115751181 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108694179 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085562297 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093096412 seconds)
  done (took 1.816714086 seconds)
done (took 7.016286415 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092590062 seconds)
  done (took 0.820149296 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920517099 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.863453247 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111563464 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148184634 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.303498607 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.196129338 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472412579 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12673729 seconds)
  done (took 11.083825554 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.147990447 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085330231 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103260793 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086743596 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104566779 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085894971 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101545576 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100799196 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08549609 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098039071 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082915402 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098586596 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099735855 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083527611 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099549643 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085596241 seconds)
  done (took 2.347496042 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120762595 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118361272 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105143524 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108761439 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086223337 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103442137 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106375157 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088307698 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101744415 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103489147 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090308008 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104143541 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103409891 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079621105 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105973966 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106772526 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085920288 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106228443 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106039644 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090380379 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106781753 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095142875 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087415227 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10572339 seconds)
  done (took 3.25849755 seconds)
done (took 18.239543638 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162567373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110816315 seconds)
  done (took 1.010224583 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097095658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115025282 seconds)
  done (took 0.952205156 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099846529 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100155459 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124974659 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111838426 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082041216 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098660009 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122911227 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083057063 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098406613 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081763078 seconds)
  done (took 1.746970296 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084274453 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112071875 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104124168 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096817068 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107281902 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096984479 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089352825 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101438877 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111655995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078827366 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104241597 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116321868 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088359132 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117994738 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106757877 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085244184 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10602689 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100144139 seconds)
  done (took 2.55275293 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08086515 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099263731 seconds)
  done (took 0.92416281 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083389039 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096538334 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083385755 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098850318 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096376881 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078412482 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096280594 seconds)
  done (took 1.375945542 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483464676 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138284438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25921371 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085737331 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121430857 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302826428 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098110426 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08489596 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104057721 seconds)
  done (took 2.477359572 seconds)
done (took 11.780266755 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094292661 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120310137 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115465416 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468405922 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107078427 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097357983 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162139976 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256536013 seconds)
done (took 2.168892517 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152984461 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329228098 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117037548 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068853754 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09840025 seconds)
  done (took 1.365782345 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08200075 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103141801 seconds)
  done (took 0.934027248 seconds)
done (took 3.206025361 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082959513 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099495018 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079939881 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099198997 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.080242664 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09688826 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.115667279 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100566062 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082242352 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.100454256 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.101242573 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082077772 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097470515 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079179352 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097007413 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082532701 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097582751 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079888884 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098726796 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079384364 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097559148 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081765957 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097047422 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079460207 seconds)
  done (took 2.976530185 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102971266 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101817986 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106014966 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087475292 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103726999 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088569044 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105314191 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099395257 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087894861 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102158889 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102835996 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086151612 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101809863 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087276752 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101127093 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103272018 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088559522 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100414254 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084330404 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10258183 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105660341 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08265129 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103273922 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1047722 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086049905 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104157735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084647909 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098880514 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104859159 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085567832 seconds)
  done (took 3.659045864 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087193073 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09657647 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079970855 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104217546 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079979231 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100287608 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079773517 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097882003 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080156125 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097113986 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081515985 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096800391 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079872226 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098398046 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081204942 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100727141 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11049064 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079757609 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097254333 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079662786 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101722641 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079636488 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097969847 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079282656 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097125896 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079044168 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097322823 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079952473 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097458518 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079837074 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10023413 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083003217 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097496246 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086245714 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101627687 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078793889 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101574143 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096744759 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080069319 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097364572 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079890331 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09734936 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079266602 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10360802 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08000285 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100225702 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079713405 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09904591 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081172141 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101045081 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080136785 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096933459 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082278428 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098528933 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100694078 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079602475 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097705771 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079424715 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098418059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079623434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097317566 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078797801 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099490606 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080414978 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113201145 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087044133 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097101483 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082058405 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098553942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082862926 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099034919 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112732297 seconds)
  done (took 7.304262644 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085515799 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108677715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082672506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09919957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078048585 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098261583 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101580072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080550984 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099504966 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086445682 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097803281 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084423051 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099409219 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110292462 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081010479 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099695589 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087146341 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096140709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080639575 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101306986 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081268427 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102199068 seconds)
  done (took 2.80256791 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214017473 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10736412 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145074712 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108749366 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084503181 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109116126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106130687 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087930608 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104783455 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086599492 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102114974 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105477461 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085322939 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103412831 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103254188 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086739975 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104584003 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087138657 seconds)
  done (took 2.69749566 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095231077 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100772423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10504593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100927565 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102090724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085471618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106439384 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110279231 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084614323 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100381283 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092596916 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103044462 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102557785 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083456713 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104057819 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083570755 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103355745 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083044744 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110733088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106753258 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107689033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094009759 seconds)
  done (took 2.93311528 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09889908 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102747153 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120799164 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08596059 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097222508 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081756103 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107652994 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083197623 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109578511 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102516363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082946431 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099748909 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089860186 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100579553 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106021672 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083439026 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103563295 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083921397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102684975 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079101587 seconds)
  done (took 2.691205699 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105480295 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10273125 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10187631 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093386914 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103134323 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084561159 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111729926 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101892247 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084334795 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127092042 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102303881 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084765224 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111592193 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107244816 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102530487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093866844 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111635542 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111563403 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085157321 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101707753 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12808833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084686153 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111152522 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.21492622 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084340712 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102732583 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102720882 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091004141 seconds)
  done (took 3.721526664 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083046495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101310898 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079977945 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098872294 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080269152 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099539795 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080735419 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098485403 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083365487 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098240298 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083139915 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100347631 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083506187 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101088724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083221568 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101041445 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085710107 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09898844 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080758535 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098823852 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084361421 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100901025 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083949839 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098425624 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080651355 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101685627 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081460909 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099567882 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083886737 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099585589 seconds)
  done (took 3.508164386 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093733593 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108988143 seconds)
  done (took 0.976756577 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081097576 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117939726 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081023461 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106508659 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089109045 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102533857 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111389083 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089570405 seconds)
  done (took 1.55253735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099204405 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116356246 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0859967 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115289809 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112902395 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098171174 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164040414 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103699831 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090462218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100193806 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116459171 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082978189 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109118746 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085023298 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10868309 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091046608 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100318709 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090641285 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105016486 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101298761 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086028476 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113060253 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086474965 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098646794 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085683808 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114436481 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112570077 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08487699 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105466886 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111655296 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090256967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096791499 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083932493 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103567443 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082316437 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112344341 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116095972 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087247258 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111264429 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086320573 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114907494 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098220796 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089807789 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10829295 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094790031 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102692391 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086149696 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097394558 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09950667 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087436676 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097787456 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084928863 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096399113 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092143845 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106277734 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115747912 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083167193 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104231207 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087075044 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105511896 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09148001 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105149016 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086577009 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101751801 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109492419 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089052361 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110308629 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079231838 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096740367 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082203956 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110843093 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125364939 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09256362 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104499204 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085402963 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100537625 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107161045 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08682293 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109795232 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092684148 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103091157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110993884 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091841504 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103196978 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087275964 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11097169 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101499216 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086630369 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099925565 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099108858 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.10181152 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082030806 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100438697 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111170022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087210825 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10262038 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082107176 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110776473 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081770008 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10471373 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086241166 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103686264 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114381327 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091065576 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10977792 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110988594 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091686561 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102995132 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088183716 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099188038 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086611549 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105841718 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110139216 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077675174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106776137 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085968217 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105040181 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091933675 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101861159 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085626015 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111582995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109779873 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082909791 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100103475 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088326814 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103072192 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088878206 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109381022 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101569944 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080116353 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098176616 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088407896 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103291939 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089810632 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108595554 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106078314 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078993616 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100855163 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089678205 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110138868 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103386317 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085850402 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107467132 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085900481 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101880655 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090355833 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105204561 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084550808 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107526071 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105363586 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080327336 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107431166 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088197856 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101958363 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088904601 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108297914 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10690356 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086304753 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101827159 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090864777 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104865569 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084147745 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102400484 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102035565 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095332692 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106131904 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080363633 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100855286 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093683674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101862004 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084718287 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102219226 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10689473 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086841708 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101393948 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084586977 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104569483 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115847326 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089262781 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105110642 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090489416 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113789637 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084948672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106751699 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103619713 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086206294 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104757189 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093390249 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109077432 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109687913 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087532719 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099912491 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091304101 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111375998 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083493563 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101399674 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084033732 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106822808 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110653516 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088693014 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104923061 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083285832 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103753557 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108084229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090025977 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103646321 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084236105 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109368164 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083523907 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110729897 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106140152 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094150093 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106742806 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079686397 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108044246 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101724727 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091318175 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099200321 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083190383 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102371543 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086498713 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102179545 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088147962 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097773932 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092647671 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112657711 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103945475 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084724801 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104704 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094882247 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105873536 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088208224 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107293183 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110070542 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098114102 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103520086 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087889233 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113417913 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104742378 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079036256 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109443991 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083602355 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103764081 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084564292 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102145563 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08882598 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113375279 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109079235 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079792428 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106822365 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083880654 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103541759 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081705096 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110440237 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108218775 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087527953 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113270111 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086928074 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105134415 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107864791 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084988289 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105963351 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086511387 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107433177 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087434574 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106662116 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084149387 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107049086 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103511724 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083524234 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106539839 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085642605 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104953184 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091877536 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106284705 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085979047 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107525777 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105973522 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086895426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105518765 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084811053 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108627838 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086272072 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105084324 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088658661 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100229055 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111630501 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085308667 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112216999 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086591696 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100534244 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090760337 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107989455 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110758509 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087467286 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105662222 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086791384 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104229749 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088662548 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113800352 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102442343 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09442846 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110415212 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085939355 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107279182 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086044297 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108001051 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104207403 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086993408 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10564448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086216694 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104188162 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091653505 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107464805 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085933995 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106878094 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106025676 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085728286 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106054704 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080628107 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104359039 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085422637 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105154486 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092918314 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10681372 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108127341 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085096815 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106573211 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0855515 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101773423 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094350946 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116311395 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106123285 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094827701 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104460935 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087371185 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11459803 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099130199 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08363224 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102788852 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083255005 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112968552 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087610404 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113751878 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104924245 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084645636 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102215578 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087007332 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103633485 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080751897 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102977846 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089068398 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107954832 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084802865 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105820338 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107292473 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08761627 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112870098 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085431404 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106527348 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086618879 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103132297 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084839764 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104237122 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107798104 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087460176 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103123873 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083219006 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105504535 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088124015 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114104182 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085640183 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106259783 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093398964 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10530724 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107780715 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089566788 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099472376 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089256974 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104993991 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085784035 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104760683 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109273534 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089731503 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107142169 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093930616 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105800231 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086459826 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106148755 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104094695 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086585675 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105692847 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086112666 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105095409 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087323312 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114120338 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084168974 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108120524 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105557375 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086608583 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110490348 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087728541 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107711879 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114237377 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089560647 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107132222 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092428806 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109054327 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090630777 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107378263 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107055669 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093316868 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104516908 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095166807 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105874223 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086921885 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106989975 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083879306 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105089009 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105814666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084627253 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110376454 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087689233 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104525566 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08557521 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103674699 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08735652 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109224359 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112952187 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088542968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108636024 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081941775 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102295866 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087195195 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103576506 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087727158 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108939017 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111391972 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088395616 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105434128 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086085488 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112981084 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11198285 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091490159 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10376594 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092045873 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106649587 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089265765 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107483226 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086320302 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107597508 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110972422 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088182407 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105105049 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095420359 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109637083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088587071 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108050893 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106377984 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08685422 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101215986 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088082961 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108204653 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093010845 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109001986 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10551935 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095858868 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105341728 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087481598 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110558712 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085976365 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112744368 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10115362 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087781715 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108051577 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087971188 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100841213 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08589974 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103521002 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08899694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104719906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082364867 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115816389 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113915911 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089311826 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104583869 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08607664 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101230436 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082187651 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10651344 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107874003 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088689886 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114894051 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086290747 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105037357 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082725904 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10686888 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090021092 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109734792 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083276187 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101426119 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105286023 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088893461 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113468943 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086479382 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106443445 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0906538 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108122896 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084465164 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113170251 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103145206 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090758098 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116954856 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087543875 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107660937 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111999431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095065215 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.1072757 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082652349 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107554772 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08908703 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107089459 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107581135 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08812303 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120045022 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090026704 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105308512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085956612 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109410551 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.105759107 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094058634 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10762274 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087580797 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.11150209 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088475037 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116855344 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109527192 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092430221 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108791508 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088394764 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106256957 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106597344 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085878646 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105566037 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087988401 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108614314 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092414392 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115248608 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106044628 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096849605 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114093438 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091857424 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103724169 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086884706 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106454836 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081943841 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108949339 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105188016 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086285335 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104066875 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086338386 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106812024 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094146665 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10812086 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087912504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107429898 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100533413 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088861233 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109035703 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088205734 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103420643 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088021907 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107884905 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093508593 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11310375 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107271839 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088919268 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108495941 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088235745 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102285173 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094389108 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105791181 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089384203 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106130813 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086953448 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108276866 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11034149 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094207932 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109387269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.0893694 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120045563 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109390537 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085138627 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104437408 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092829175 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105769604 seconds)
  done (took 59.599518107 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151240107 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08346425 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102673475 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083882933 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117395021 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105607052 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082586955 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104322693 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084018458 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105886464 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082591107 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102298202 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112972126 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129618364 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096707852 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108071513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101288845 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084043664 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102754134 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084520311 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112877629 seconds)
  done (took 2.962858008 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108100238 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120924921 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119172798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124043504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094022579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119977259 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118486305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119183368 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102468498 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115409984 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121449803 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119925596 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095134453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114188518 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114096957 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097746106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12433719 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113531305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120664441 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098169808 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117362197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118943707 seconds)
  done (took 3.321251514 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087762822 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106187379 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088183843 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.102451209 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088051907 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101854617 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091826888 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104836223 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090580893 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106534741 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084299303 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.107308529 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108558944 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082351583 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106735459 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085603039 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157730238 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111906248 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086416053 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109565235 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102453943 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089507762 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10204178 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08333247 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10614104 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091777443 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106257407 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084530335 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105960729 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083848256 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105986138 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081124288 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105211681 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103107913 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083864836 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105103074 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086670115 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106654415 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083424451 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105300751 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087963864 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102904764 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087957708 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110186107 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08432844 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106216744 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088305077 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108069486 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.101065568 seconds)
  done (took 5.634482113 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108214484 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167611848 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089145503 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147951962 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125295953 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117976937 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092197005 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143179452 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102671385 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083623821 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123757827 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120297349 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104178878 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090463393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107794262 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103950875 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087380561 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104476531 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090170226 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102973649 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109534854 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091040302 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119948563 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119087852 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108949466 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086206227 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107392262 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113589461 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101654521 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113553665 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11362727 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094783109 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12559299 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110193384 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087222141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111571603 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127118866 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088405826 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111724912 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105701479 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090915386 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114442134 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115805188 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10688823 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109312432 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112958843 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088840621 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105564972 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122680036 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091389383 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118463031 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124918916 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092542477 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110302087 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113416705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125189439 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088552556 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107343133 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092153172 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122522749 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105569565 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092403992 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124852353 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110980489 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117457912 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103311033 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11452622 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112068819 seconds)
  done (took 8.372453965 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097811604 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115814198 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127064013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126378095 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095139194 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116323349 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114750506 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09659338 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115442467 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12047606 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112712141 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134063486 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087121333 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115753253 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113781978 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094946943 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116020294 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115639855 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095233266 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116199992 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115316855 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125244207 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094870576 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126720034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147412524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110897421 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095674458 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116093157 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125551265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114749964 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128491019 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095554136 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114768851 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124373776 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128080828 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09320383 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105871775 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111828491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09454576 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115427003 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109031158 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125243665 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09650442 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111239996 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115424 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096289395 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125816429 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129961875 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119002352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101246658 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116446518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125182135 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115021639 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095408294 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12492981 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150683408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12546455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125520432 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116353594 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125547997 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105689062 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134244219 seconds)
  done (took 7.937855686 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112200014 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121848303 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123051728 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105792612 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086366721 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114080788 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086700631 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10778174 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11969633 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099355928 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122439587 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114400726 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117182858 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101687993 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11378408 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117206385 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093433605 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114449493 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120042074 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114531709 seconds)
  done (took 3.045210046 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098644242 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129548269 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089696863 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117197009 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113481998 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095677521 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11246335 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112512658 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090069911 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112234697 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101331758 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122230817 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110165268 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096247412 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121409067 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115993664 seconds)
  done (took 2.581508936 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10139307 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122869078 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126257665 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088689326 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109193877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083777611 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111152662 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105399695 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085434954 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126094274 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088873174 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114240458 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109762661 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086560204 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106140019 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092131362 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10619986 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086360961 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109828403 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126308791 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100210963 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108926784 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11065291 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092067256 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.11050523 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095183374 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110693303 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107765123 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087314451 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110612122 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089383732 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118154326 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106912845 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08863049 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108475501 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086586434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110259348 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089668151 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113069867 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109758811 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087448736 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110377313 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089454486 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111297991 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084891372 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111329744 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105747556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095835033 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108240923 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089204677 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110395714 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111914409 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090232406 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121061922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092684038 seconds)
  done (took 6.505436537 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103743967 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114826892 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085017582 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107964734 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091942516 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113170501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113171505 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09204823 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112193773 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087833836 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111847917 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094110927 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113380178 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113867571 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092297895 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113553889 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084622019 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112518383 seconds)
  done (took 2.707429856 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096097092 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110574301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096858371 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110251543 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088933595 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113199333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085027755 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110117385 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1081627 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09004834 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109569844 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091511778 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107819425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090870344 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109809574 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086878493 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113398307 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107088986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090534988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106516511 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091906875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107646993 seconds)
  done (took 3.07086458 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123096874 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130181967 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097152661 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237227996 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10481386 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.1356999 seconds)
  done (took 1.676103061 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114731 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124968551 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109250249 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109346718 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115423188 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107919886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089730054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107394673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118474736 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102878389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108578737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118915696 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118458511 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098959167 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114851934 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115010167 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108806814 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089584522 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106808061 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129396343 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089406393 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121150975 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111264579 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090056424 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113327897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120689099 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121668651 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128502071 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092106965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122435355 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115159604 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088187247 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118599026 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122241572 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109570564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10005771 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111965089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132799735 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11971586 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101989353 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115003142 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118568998 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103439972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118314035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120764687 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111452812 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096859057 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111822398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110732996 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140498162 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098483888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124463374 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120929693 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123517252 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123806278 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14032626 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107894768 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1228401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120771132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128620488 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123339624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099333078 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122990254 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127890983 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120902129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123891132 seconds)
  done (took 8.371232371 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107666969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131950826 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114062066 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129293522 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102629425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114358976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113355732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092439055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113934622 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112972893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159016884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092304463 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123039851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123493145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113799107 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092639088 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113998237 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12279381 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091226886 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14206179 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11417154 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12352946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123358338 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102361977 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129159752 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12055192 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114082073 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092878359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114063642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113392889 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099158487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114227076 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124145733 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090426008 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124521632 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115207595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092879144 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121309521 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11428832 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121329337 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102541713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134654727 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114504343 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113878208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129071356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093308496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113827036 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091836339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114289116 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113460111 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128155806 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107348134 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129024546 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123934032 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114036176 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092629174 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113874465 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114270449 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093106478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120987082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123839705 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114054441 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142308636 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092977163 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113323113 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123507738 seconds)
  done (took 8.397724273 seconds)
done (took 159.756632718 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103440878 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142487878 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101923833 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175348036 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106673553 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120033067 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13846763 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097875007 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108011806 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086024415 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106498088 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088124157 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171733912 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086117946 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106994717 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10826203 seconds)
  done (took 2.70241404 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206624698 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.261277139 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107223966 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108862696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089980004 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110481226 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105474922 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091413578 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110110975 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085613168 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10949893 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088311974 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106955231 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086027854 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112495142 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088304594 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106748556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088599007 seconds)
  done (took 2.922555981 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117415898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159796618 seconds)
  done (took 1.142650593 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124732874 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187496483 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30518628 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157176294 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121568636 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128967409 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157289258 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130736924 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19784513 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124116866 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122527263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097410452 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140452825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11631599 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094394624 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118872276 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142535985 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093355826 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115996681 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116239917 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117557646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107685524 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117624676 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095227949 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183000139 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11985078 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084919952 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107242617 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116332104 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094938654 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113328972 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125819378 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098156797 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177211047 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103316583 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178486335 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097939684 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112727015 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115462047 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091919042 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119156283 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119394852 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104954098 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119539094 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087582719 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118674743 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106234728 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085952501 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117069618 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09757355 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116033881 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115082438 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158034369 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121357241 seconds)
  done (took 7.598040702 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800920662 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164544756 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091170686 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882998835 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138990223 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10380434 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784183589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133729503 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234889197 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760189198 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134332615 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122854819 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228355467 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237959704 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926535552 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308214806 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670980268 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10238035 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149872495 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154113889 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120310342 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138432719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131063268 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453222976 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095223694 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113066868 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116451398 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100912718 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1597434 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125404517 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115462701 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179235777 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266612727 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187045801 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1171092 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090605666 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112182909 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168929623 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269058563 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216365131 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183021218 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086876601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111937988 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121825551 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111069006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109054739 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164060183 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195177916 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173524541 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092543708 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12292271 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121324361 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121656324 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165695109 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121372064 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288391468 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322715871 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112331963 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121690415 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106042881 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265704829 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123992127 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225115891 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117750784 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214628059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112593268 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766931428 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19189233 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090301597 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120756501 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121224347 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098602214 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128678232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174577627 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396777851 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126267663 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094499792 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114608228 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204918891 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127566331 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113139883 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165263655 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117162321 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101095373 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12807484 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124964603 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17492984 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229305201 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124835909 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1213318 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095674334 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128289131 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118092991 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217180458 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220295692 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161856278 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211326012 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123846963 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186487498 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169471331 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099830152 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194610128 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098698143 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127221962 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12449173 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219027651 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14648064 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123486327 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094433558 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120559274 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150226747 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127059667 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097849668 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192042956 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483133447 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167658507 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109751478 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128013987 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098584307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183100954 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096729564 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259808691 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12273289 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170083596 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120986524 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088160982 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1213351 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16569547 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123372544 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121873423 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101734488 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119824661 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235180747 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219911783 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124090214 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222243528 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186074362 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119455022 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174511755 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121807258 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169705767 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120697725 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121423075 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095076874 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78393022 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124583073 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099712718 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116985115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195468508 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11171443 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102635458 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125692776 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108792217 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754366806 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128051432 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122642197 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101747012 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119880364 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121601987 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117525262 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095556961 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162057465 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232271891 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122611873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120168985 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104272555 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184890459 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095592534 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126475077 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125724718 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125777505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100251743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116420898 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124474398 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170476776 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162532742 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220850781 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598569904 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091302963 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126672122 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23072917 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090079078 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289123529 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12045943 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226048811 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166197597 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121274951 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319604385 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167688178 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197592081 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126783504 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175369793 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087166065 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119935776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166676469 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11310185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118457742 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163148419 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127587651 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101755354 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.946666837 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112815445 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227372176 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10914912 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172681389 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117187456 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101490257 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291979782 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112383151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107983903 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18761147 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094250227 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126691926 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720838498 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105270797 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123532539 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119314298 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222279351 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165106798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120533961 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097705802 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122720897 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164957745 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207734705 seconds)
  done (took 44.246168074 seconds)
done (took 59.47176501 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28122132 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21702294 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260034325 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17430793 seconds)
  done (took 1.900594535 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179024138 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154748278 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12042544 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109616224 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149504817 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086011665 seconds)
  done (took 1.687953071 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358305604 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270450708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239682125 seconds)
  done (took 1.763919079 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.296543163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252907833 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.357408125 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419347744 seconds)
  done (took 2.339178051 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.218471488 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137128681 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111696866 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104301513 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1973141 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249530742 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140896842 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203472681 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123258815 seconds)
  done (took 2.429365705 seconds)
done (took 11.016275495 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.257788966 seconds)
    (2/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.260021956 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.235149154 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.167480396 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.246523508 seconds)
    (6/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.128948203 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.25187952 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107931753 seconds)
    (9/286) benchmarking ("sort", Float64, false)...
    done (took 0.173821494 seconds)
    (10/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.253122938 seconds)
    (11/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.230389865 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.180698197 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124016234 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.219867246 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094919909 seconds)
    (16/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.170145505 seconds)
    (17/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11743816 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20147587 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.214513649 seconds)
    (20/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.172099572 seconds)
    (21/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125332027 seconds)
    (22/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.184435865 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.153045196 seconds)
    (24/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.205469546 seconds)
    (25/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.160000089 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113586621 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.226045294 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185469286 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.157791464 seconds)
    (30/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.183824148 seconds)
    (31/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066228509 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119401213 seconds)
    (33/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10097289 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137620284 seconds)
    (35/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.207183191 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06755818 seconds)
    (37/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183510981 seconds)
    (38/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.177456109 seconds)
    (39/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.117843639 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117010492 seconds)
    (41/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.150200838 seconds)
    (42/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175234984 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134763347 seconds)
    (44/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12129477 seconds)
    (45/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091104749 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067310711 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117955772 seconds)
    (48/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186528542 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086977088 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113437334 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.190204526 seconds)
    (52/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.147053284 seconds)
    (53/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10057071 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087898373 seconds)
    (55/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.183103059 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086954536 seconds)
    (57/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195843076 seconds)
    (58/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186673104 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122335303 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09694014 seconds)
    (61/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110267784 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.150125131 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094912431 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124366142 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.088763246 seconds)
    (66/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121712468 seconds)
    (67/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.104014002 seconds)
    (68/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.125304551 seconds)
    (69/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154490999 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122097293 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116030277 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115470503 seconds)
    (73/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089004301 seconds)
    (74/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101537137 seconds)
    (75/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.102145577 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114526864 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11000297 seconds)
    (78/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234309562 seconds)
    (79/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072372902 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111804526 seconds)
    (81/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083994597 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137007191 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.08725303 seconds)
    (84/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173767885 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191470685 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172570291 seconds)
    (87/286) benchmarking ("sort", Float64, true)...
    done (took 0.232921494 seconds)
    (88/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098466799 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137990617 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088517389 seconds)
    (91/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.123032472 seconds)
    (92/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066656463 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132471751 seconds)
    (94/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138929353 seconds)
    (95/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088038758 seconds)
    (96/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.164175323 seconds)
    (97/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186821807 seconds)
    (98/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10045769 seconds)
    (99/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116993898 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093677252 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108937363 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067298656 seconds)
    (103/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118708066 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092985879 seconds)
    (105/286) benchmarking ("sort", Float32, false)...
    done (took 0.173637178 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133525769 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087350843 seconds)
    (108/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.10182273 seconds)
    (109/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067633158 seconds)
    (110/286) benchmarking ("sort", Float32, true)...
    done (took 0.232079228 seconds)
    (111/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221147429 seconds)
    (112/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122850998 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072351103 seconds)
    (114/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175246881 seconds)
    (115/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190142861 seconds)
    (116/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.129306664 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13388277 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067334174 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118462891 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.163056734 seconds)
    (121/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119017359 seconds)
    (122/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183649142 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.181961344 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09638502 seconds)
    (125/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.094766342 seconds)
    (126/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.123937364 seconds)
    (127/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15769767 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134088179 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10420809 seconds)
    (130/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090422622 seconds)
    (131/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088907458 seconds)
    (132/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11987555 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093743474 seconds)
    (134/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.186396247 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120250887 seconds)
    (136/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068887821 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094054425 seconds)
    (138/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120687844 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119769382 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068282932 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123837537 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116757095 seconds)
    (143/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116476469 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086813193 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117403196 seconds)
    (146/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068158558 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119811547 seconds)
    (148/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.07830157 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121848148 seconds)
    (150/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069122698 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069278246 seconds)
    (152/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112574575 seconds)
    (153/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067497284 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119633177 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096043619 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125962048 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.167934612 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.142477747 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.115751053 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121294167 seconds)
    (161/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148362622 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137160001 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083102844 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137719761 seconds)
    (165/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088181802 seconds)
    (166/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11347026 seconds)
    (167/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116633991 seconds)
    (168/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067018253 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102844324 seconds)
    (170/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090673676 seconds)
    (171/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088342562 seconds)
    (172/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091743469 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093683852 seconds)
    (174/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091681888 seconds)
    (175/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140522526 seconds)
    (176/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235232223 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120817813 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172669463 seconds)
    (179/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068328398 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087047613 seconds)
    (181/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114580344 seconds)
    (182/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194133835 seconds)
    (183/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093256477 seconds)
    (184/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090694355 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.224249682 seconds)
    (186/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087561125 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110167561 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068682465 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067857931 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136487073 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140696865 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067936262 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110562622 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093683213 seconds)
    (195/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116076249 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097224889 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118474708 seconds)
    (198/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.121124662 seconds)
    (199/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092048458 seconds)
    (200/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090505334 seconds)
    (201/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188848598 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137313608 seconds)
    (203/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.165733041 seconds)
    (204/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.096509096 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09241417 seconds)
    (206/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.103095417 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097740251 seconds)
    (208/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.111988534 seconds)
    (209/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.130822098 seconds)
    (210/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111182343 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086017385 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124204812 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087863201 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.346000348 seconds)
    (215/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087025599 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121109085 seconds)
    (217/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067035571 seconds)
    (218/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118552071 seconds)
    (219/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10175843 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120994804 seconds)
    (221/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092328533 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090647246 seconds)
    (223/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094714948 seconds)
    (224/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101696606 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067667625 seconds)
    (226/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175269546 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09145483 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137309122 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137167862 seconds)
    (230/286) benchmarking ("sort", Int8, true)...
    done (took 0.223687548 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107015346 seconds)
    (232/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110160165 seconds)
    (233/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125585862 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 0.189999544 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110063829 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086726273 seconds)
    (237/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092495016 seconds)
    (238/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068901032 seconds)
    (239/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091934267 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094630921 seconds)
    (241/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067540658 seconds)
    (242/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100567015 seconds)
    (243/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068211805 seconds)
    (244/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.091162353 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112978966 seconds)
    (246/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112545683 seconds)
    (247/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089552849 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118085643 seconds)
    (249/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068272722 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111480322 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096675026 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090610892 seconds)
    (253/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068160465 seconds)
    (254/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089648031 seconds)
    (255/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119788905 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087427152 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129729717 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110452786 seconds)
    (259/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086958437 seconds)
    (260/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067671157 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.091113589 seconds)
    (262/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067979601 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118711588 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086028953 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109417027 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096057238 seconds)
    (267/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091379518 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06852174 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068695385 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11003017 seconds)
    (271/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090116222 seconds)
    (272/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100764852 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09348726 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101302739 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091053454 seconds)
    (276/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067748235 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117226746 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067872201 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093309797 seconds)
    (280/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090243653 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117313615 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088705359 seconds)
    (283/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090992244 seconds)
    (284/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.133802996 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095447752 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089295313 seconds)
  done (took 36.396419436 seconds)
done (took 37.293153116 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105946265 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152996785 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098299212 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136982418 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124277296 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092611212 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119187547 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099037468 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124217254 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125745932 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098769657 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094284242 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098115378 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122102598 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097660265 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138923829 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123968611 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094053808 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119789968 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086280694 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119091083 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086794444 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112193353 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070975369 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122671541 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094092322 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117042329 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121702382 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087185858 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110988001 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093686028 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118732261 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087256449 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124795844 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094569375 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119394977 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097809479 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121395677 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113369796 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088060613 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118592493 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087885011 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117769783 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095419214 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116703734 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093519717 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119330703 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100596989 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139825743 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120248492 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097515816 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123445479 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097269922 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118752177 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091010776 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120035954 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092317987 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1413069 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12274408 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092169033 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120682299 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095588363 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116973782 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094863489 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119321719 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121798446 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098651503 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116480219 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096826291 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116187764 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086849508 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120047182 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090046874 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110539553 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096031005 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121905349 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110532424 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092506667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11733678 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092482361 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110018413 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090501782 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112635338 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093502516 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113658079 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070050803 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114745658 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094158321 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111085091 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096205868 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11665947 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094436129 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113154105 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099426889 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111277415 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092881402 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112131509 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087783971 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114641339 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091553539 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111327703 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090335307 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119947966 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112898091 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093802781 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123757839 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087673505 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117498589 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087013556 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11120088 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102096635 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122329282 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087303851 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117081797 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086803406 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119694615 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086528244 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111464358 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111571316 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08737441 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117214913 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087727943 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113819993 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095046539 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126069876 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087988118 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115374294 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090723525 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112752247 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093680163 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112199486 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088144579 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114200224 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078094348 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114809997 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08845177 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119824415 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090580607 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.123143873 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090279228 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121743754 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092053417 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118013206 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118096995 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086753307 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074577724 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117284623 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090577204 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113397498 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088303127 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113591205 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087777023 seconds)
done (took 17.058978517 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093092398 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.19181868 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153878017 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142359653 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107985229 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111950895 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122971586 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118943851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114016146 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143458101 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111372896 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132290925 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14841948 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087801224 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113659794 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092287026 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113783323 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102540165 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146201478 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134546658 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164468889 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087072372 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147039592 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136096567 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121478112 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115051028 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11309112 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092705768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115555978 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103017261 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132711159 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115757053 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08853648 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134162339 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104705294 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11996705 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088201152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119272522 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087699736 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112447762 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142422966 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134108101 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094340095 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119631581 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092539336 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114440037 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08945054 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120988185 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098680085 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116862314 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127801593 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156943393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091427534 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122368262 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087717542 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123895447 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122723924 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090542844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112466377 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090724752 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111904162 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092248555 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127754071 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142572261 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092533877 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122518534 seconds)
  done (took 8.667429618 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110594334 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143956303 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10622138 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131487068 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112580152 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089175181 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1132854 seconds)
  done (took 1.764565478 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094135079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138234293 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112152035 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136268892 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132802429 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.114051976 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124058553 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089446484 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133884331 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089604605 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135356208 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151121996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091114623 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121448985 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138607903 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089434211 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138588259 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089779327 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11715009 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138119998 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092040831 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13582201 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091816539 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114015053 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102979214 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114745299 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163365804 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094285844 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115774061 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092597424 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113438338 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152196013 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103544702 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125211989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089414822 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130902123 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12857601 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087165044 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126215295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094118864 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128875298 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089515823 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11574476 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087735295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119038977 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099377867 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118689646 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.1332012 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091784387 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133843284 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089855586 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128006387 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08903403 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118030398 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090920459 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120213055 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099020895 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114611454 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134348117 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091350866 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132188379 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105785728 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129065027 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130578339 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091963766 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128195633 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104635193 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117229062 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091573605 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117976887 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131132336 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087234788 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115798702 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100083161 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116636668 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113722295 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137490988 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091116468 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125205634 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114899657 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090077975 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114556906 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112935366 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118687571 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091184076 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118533334 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09271159 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113298961 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088508983 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117841657 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087437584 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115894498 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093079134 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115638281 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117348547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105999005 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115223718 seconds)
  done (took 11.888342924 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095511226 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117931537 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093090522 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114356427 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090664483 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11557899 seconds)
  done (took 1.59462847 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123602617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118615497 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10469621 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120657175 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157221415 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104666915 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129944549 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124392418 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108993274 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127575737 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130010393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106093293 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136360101 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122265765 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105418598 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12097948 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129530075 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10046553 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127325231 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097746926 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138072576 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12232625 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09702475 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132797867 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119815356 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096351982 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12593405 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104690894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128400993 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123449229 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097367104 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11874243 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096669435 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123966337 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130444047 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096207991 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120891889 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119660454 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101504201 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118100018 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105072573 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123712099 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127740994 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095434764 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123646104 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122403659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094942303 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125546781 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10475674 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121262728 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122058942 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096689256 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120733505 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094817024 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12211975 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124279089 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095016519 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130277979 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122018441 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095936911 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119283413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09347533 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125064127 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118689913 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104812503 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11965338 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095889032 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122672768 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122647438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096021366 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120186849 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093460039 seconds)
  done (took 9.280275384 seconds)
done (took 34.151679311 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694824856 seconds)
  done (took 1.663260746 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827569127 seconds)
  done (took 1.799832784 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.930338277 seconds)
  done (took 17.932761737 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497790334 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579770322 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98566216 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180236093 seconds)
  done (took 3.214228564 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.96189262 seconds)
  done (took 1.952340545 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28861199 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2366363 seconds)
  done (took 1.502666218 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780508285 seconds)
  done (took 1.766003807 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.365248074 seconds)
  done (took 2.33965992 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331728754 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183797641 seconds)
  done (took 1.497912426 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.556340615 seconds)
  done (took 1.540601819 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.058548957 seconds)
  done (took 11.048056834 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272068066 seconds)
  done (took 1.266986038 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307205483 seconds)
  done (took 1.293827341 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.505135384 seconds)
  done (took 4.495636094 seconds)
done (took 54.295053381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104555383 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127478551 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102474189 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12446971 seconds)
  done (took 1.443410402 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10592635 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122124081 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101373731 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12148389 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126825288 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096617549 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124097488 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101991633 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121183318 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096573749 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121815574 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120573292 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099565897 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122374861 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094337255 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124150358 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125165828 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096379977 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124591659 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096085894 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119025474 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098177975 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12523645 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094758398 seconds)
  done (took 3.673871742 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10566866 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118830799 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096421744 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119024681 seconds)
  done (took 1.436843827 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105885905 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132099436 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105867566 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125714585 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131766272 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105809527 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117815411 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092156408 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119867813 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100106709 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115904909 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140079354 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106442255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125207049 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102265046 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114305747 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091453072 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131858175 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125230614 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100883848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11880546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100275164 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115640765 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109566601 seconds)
  done (took 3.726538444 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176561093 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127528726 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139231391 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095763662 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160300776 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141739889 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088598666 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141255725 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087752631 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132813332 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118465606 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134388824 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130123542 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089475288 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114879695 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.089535448 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129632769 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129918239 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091320782 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128119253 seconds)
  done (took 3.449757031 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103140209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11887615 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088643713 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116728703 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100303333 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12141346 seconds)
  done (took 1.649174413 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095861068 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115090594 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090731039 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114584232 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094658072 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115406487 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089958921 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11533446 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089545259 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115139041 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090037027 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11361099 seconds)
  done (took 2.238645318 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.512103945 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120472123 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120755912 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089170227 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122742093 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089843972 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130390078 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093761606 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142783154 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089684062 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117233496 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094122334 seconds)
  done (took 2.721994882 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242741817 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126458733 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28494651 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365011506 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155975106 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16569578 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279075816 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161593425 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197431863 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149500782 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231017271 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197629965 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152309794 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191704351 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137756314 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145933249 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191279708 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252278071 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153362165 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212859649 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206405956 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167333512 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180635331 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153329891 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112870963 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192987992 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09523213 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130889885 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23479043 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180010164 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1901741 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16206616 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14738893 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23855752 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249022031 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196009089 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280725463 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135308545 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168021862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143272607 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266264937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13881529 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235544394 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156451896 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105536135 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221836914 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166458641 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177492015 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147067114 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139795374 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198229912 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243438213 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193823347 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139642403 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297516203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149120839 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15831557 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190292353 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252877616 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227979895 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190075899 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121171755 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188496762 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191751463 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211072865 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15254355 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18392927 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148591831 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183489236 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190548477 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167193964 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204887612 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181227159 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139703245 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171516497 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174136723 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175821008 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260688559 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186388949 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123546156 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170455062 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149325206 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132590592 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169155753 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126409738 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215985241 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143802043 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1645628 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20996456 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159991348 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161706127 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221862431 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185227288 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149071007 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084579485 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153809496 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155813256 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177755061 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14189413 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159168753 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157662949 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130849202 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17094405 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096998327 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211807942 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091797377 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174434728 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210915291 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100654155 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162009014 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153572426 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151517812 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178829898 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199522327 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14115064 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134699323 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211159846 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181317374 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141691412 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179637222 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230335392 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117371628 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148929643 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227578913 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246256267 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114226908 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229343652 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153368134 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108749589 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134455332 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181537733 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15746215 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162883818 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133571328 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184368775 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233584504 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099517707 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139306065 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197780046 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135976639 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13290687 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155294278 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14839062 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111605099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144082373 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146090959 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178358209 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179354976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156311527 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166697183 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150342925 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24864591 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141028827 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150458171 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122244028 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121650447 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193590025 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227086098 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103699658 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23436525 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173224407 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224853021 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169898498 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107606125 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178142186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130881781 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121068699 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195640253 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167987052 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163428737 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196712952 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224640878 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181509118 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211144528 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16664893 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176098261 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16526614 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156507247 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110932034 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162582278 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158813474 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123990011 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139823062 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107579443 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150301807 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143193656 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133739752 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200191836 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170451776 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217775406 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159302454 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149377045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181592277 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102845294 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203967008 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17921169 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146218978 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200721934 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194424545 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214721958 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117209026 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228862421 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09402331 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126819424 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14191307 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171297949 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134592004 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108159957 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162611114 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208385618 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182408277 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174324495 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232974755 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178351065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193368383 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095497946 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169055452 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184040103 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205448794 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15572194 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139155849 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151935234 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179412781 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156659102 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25744294 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168426831 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175662736 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235612871 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124145618 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133113822 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151899872 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177982473 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154939418 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17614192 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147000197 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139972935 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160942659 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103538535 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187829053 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18600627 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164341463 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187833199 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150246925 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213386212 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101447079 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163028598 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161225945 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165693063 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108787648 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176477315 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203017357 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147433537 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167195502 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215535862 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10479249 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30976262 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235389839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196154499 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138975276 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155254444 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161580675 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163693097 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171402231 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180540128 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159523169 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188596848 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160069217 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137495058 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13974954 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122724177 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153663162 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133385181 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149432439 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178609673 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139461367 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18884203 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155849152 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160750672 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172961562 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150118961 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143678035 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122705383 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245214874 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183908112 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240932476 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151772315 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180160112 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206911664 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127657064 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13167097 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107548951 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17946071 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137306093 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190817555 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.21515566 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20101019 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209229611 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180482167 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139397169 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093209107 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159072725 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169987022 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229759059 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149283858 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.122136231 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231701805 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10924451 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133654949 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166725099 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288607679 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144546197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223389193 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081224914 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279758934 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126346697 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105514368 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164201054 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237283485 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135769484 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151732937 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168418504 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161923597 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162729704 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150011481 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217660199 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212342469 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227834212 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185556794 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105046298 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156918343 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204758288 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19423882 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156376819 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138372028 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206933597 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196152928 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222666908 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11406166 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196916147 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168355068 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159352454 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187943598 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135410046 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207856329 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136362752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191961158 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153675014 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139497976 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177204507 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216015278 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114635826 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215597339 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184338665 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135125211 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106099843 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167009131 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207128159 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155044653 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100233362 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210880376 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098783766 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19226049 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263485947 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13502308 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155544856 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146539604 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109182905 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15540453 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158425584 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140240598 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163390927 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203427597 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136312763 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190738563 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2304481 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172613318 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17513081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14705918 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694183937 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131072478 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196067926 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148489837 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20704806 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152062197 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17496653 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161065178 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170011946 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224476184 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162033957 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2311028 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19462091 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178694366 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133675784 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159637588 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155977006 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145335273 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153911999 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16923747 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162173951 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145265533 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180118484 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166291162 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134807337 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113293456 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227126365 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120474077 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214232355 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181636107 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111334177 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201801509 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189406916 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13336182 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181214306 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237343924 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114770374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150252137 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134856097 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151780417 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262700879 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097283642 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218526427 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185659627 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160329139 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170622814 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14811942 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193992191 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157923683 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214025563 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115494027 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159289551 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157517126 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13863292 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13069481 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156854495 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170555936 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122878905 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188298833 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13935244 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195424431 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124984787 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145210805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282942576 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177959996 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245240804 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108849466 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136712624 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164431756 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1518825 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178446391 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178424299 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136801811 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135740127 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109075229 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157095436 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112214985 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156446961 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192341263 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191231095 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208399912 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136571622 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278440663 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113202241 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155802956 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115741191 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10619365 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149705989 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146198025 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155764296 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193541605 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26186033 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147576632 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133335924 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122022226 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127610244 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136208656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164730144 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164454531 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18073152 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144185718 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082412991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1569721 seconds)
  done (took 82.747818261 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178119217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132591807 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147824904 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203961147 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176349863 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269182954 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210037079 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252887019 seconds)
  done (took 2.662332548 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100247392 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146281183 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157380217 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132753471 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092786691 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119791891 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342716776 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.1324722 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11727954 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121141664 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173201625 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093639529 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550351804 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091414156 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119705338 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108900737 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092150398 seconds)
  done (took 3.775962368 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.23329584 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499762348 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.962631236 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194725125 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160210125 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117377495 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.709775683 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095583376 seconds)
  done (took 12.066403042 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121193178 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136299993 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124535293 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153112326 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141139971 seconds)
  done (took 1.777745671 seconds)
done (took 124.357908892 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104215953 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127866032 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097416085 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130683151 seconds)
  done (took 1.541378779 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100666062 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071169345 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100522505 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075430443 seconds)
  done (took 1.440978882 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189736154 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167853544 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389276812 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072397984 seconds)
  done (took 1.586008213 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121180859 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132215937 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104757797 seconds)
  done (took 1.459520038 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113183853 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129952531 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103320021 seconds)
  done (took 1.444108138 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111839915 seconds)
  done (took 1.210259726 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113582537 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137397304 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108968248 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136845999 seconds)
  done (took 1.594347136 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104532525 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127100188 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109503103 seconds)
  done (took 1.437602191 seconds)
done (took 13.163613561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109833949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419317314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413111458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110673279 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721397848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381851506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.044393711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14639354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166111147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094064348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138851606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671610544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034882961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373470897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991595966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371552201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.688162893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121849489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091943704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12232284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027515451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092444283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122828109 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093222029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705961131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398339684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123889844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370914417 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093167597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12685846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383827168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123336499 seconds)
  done (took 16.96371574 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101143119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173631084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097851169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123650526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123832752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095096217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124508549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094327571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180906402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122960566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110879299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122439323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125222421 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095656896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141062561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095203593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125062266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093550692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122024678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093900133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140835821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120518855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095004769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121782591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09452721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13653235 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094685553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122115015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1202107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099176832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127106262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095289724 seconds)
  done (took 4.827685816 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146181677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182122489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128791522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126819651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169126259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123898071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19914754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118205554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182855303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122407757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140546655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093027459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156963946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122446049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115534021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121322726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096972475 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123110603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092428431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123629549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139440368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093277323 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12236157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093897957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123148074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108697548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124725052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12169287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093441538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126694206 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100066345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124055014 seconds)
  done (took 5.16337936 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103073477 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125621292 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110016129 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139104637 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096211283 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125919911 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097393635 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124877967 seconds)
  done (took 2.023696609 seconds)
done (took 30.079962999 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11713659 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126691511 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107461292 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134769396 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103572791 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132615435 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091705828 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134079518 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134464556 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102144938 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137345048 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092230127 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12261948 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092026503 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135939267 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096938318 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133726323 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102442357 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133772216 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132009229 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094865351 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132856583 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10361064 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133650036 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10481809 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13385488 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13765522 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099436056 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122344547 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094138531 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124327465 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103596916 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123599867 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105783165 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126484466 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097463946 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124025989 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094166438 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133649371 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133555017 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099749032 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133766665 seconds)
  done (took 6.016431021 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113833746 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139540027 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105252656 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081289872 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117290029 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081127331 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138200835 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079543169 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.1104911 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107963004 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074111596 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105752817 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078646945 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101635616 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077338846 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074874799 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108434997 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076237508 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076014021 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105996913 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079968127 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072692445 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107976946 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078693069 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074756155 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110169004 seconds)
  done (took 3.587676999 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107652574 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134095281 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113507082 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183577375 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160943305 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.0993359 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131582682 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139767578 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109471068 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12078615 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096691498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149317475 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110142347 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129885125 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092540173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13771355 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135514069 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094358045 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128566767 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112405904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138847565 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103642077 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140645906 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132998275 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093115749 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122892147 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097851648 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134536387 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097993755 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131579975 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097063264 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125663176 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122882228 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105185088 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126398247 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093947129 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142449678 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10268714 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131095021 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121281078 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102087262 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122060166 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114003346 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161879985 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092450054 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129669887 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124670332 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10382903 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121338003 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111244456 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131485364 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092264393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125735782 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091482835 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122423009 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107419087 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124343489 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094456683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131644878 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127181723 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106471253 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125292923 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109044136 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122125095 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100625735 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121498167 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093302482 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121555828 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14478241 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095286896 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161649498 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094567513 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124405982 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102556302 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130877233 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128584217 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093465011 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13871904 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103009742 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126746514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103644287 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12664915 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094964387 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140365079 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124379972 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095441524 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122461991 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100499855 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124579431 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095297002 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137034114 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092142729 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12556216 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11120094 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121791798 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123428059 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100173939 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126237044 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092716981 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135352435 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098897341 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123078835 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132031786 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093579614 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124118372 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103303861 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126658619 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092396804 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127786397 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098986741 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123614903 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094093306 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125590467 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094422337 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133144047 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128383822 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098269306 seconds)
  done (took 14.856516809 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235383625 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216072427 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206691084 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292909057 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135615158 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114779033 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212305606 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156819697 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125191971 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160016411 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171927354 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182597717 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139327697 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.214067531 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172260337 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09392274 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143364325 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134514706 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245164202 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258620844 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14436001 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101068192 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165097512 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160516114 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137145107 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132652902 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110082274 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134411014 seconds)
  done (took 5.82425623 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114552502 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155883952 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099617218 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146010157 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149705473 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093113365 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129385221 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094519749 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136602914 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136544378 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093784119 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12975372 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100229596 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133142057 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123904501 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103832275 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132409343 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095968612 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126544501 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097696121 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13375164 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102691508 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128186508 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122659123 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10323787 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122423245 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086984856 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143517525 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12297173 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116569715 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121627131 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102568848 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137710779 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093843977 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123778755 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095420773 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126044911 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095474679 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12526512 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092089383 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.1233578 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077627344 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122686301 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137169175 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100915152 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081461297 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129670443 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128266007 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095363259 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121081601 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09671013 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126395716 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097545837 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1313759 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09594047 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123693714 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096490384 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11619263 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100621013 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12590658 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085201527 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122222834 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098208771 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119126332 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101349499 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128717274 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092498704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125793678 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098404584 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129766791 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095529617 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130383899 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091503456 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126541396 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09592667 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129829914 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126399929 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093104414 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122457604 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094551341 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074957652 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123730227 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074401291 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126336963 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091820925 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123244677 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096435973 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131160516 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13943288 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096055572 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132736963 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094569987 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123727134 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097074551 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114050911 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097031269 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140442918 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141864941 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094711865 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122742111 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107942445 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127139542 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093150583 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106936719 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103263337 seconds)
  done (took 13.031908782 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137925873 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154533587 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125353554 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112255577 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157205506 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158180283 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101145345 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130594221 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095368758 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142276412 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094100179 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132881034 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094004694 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138540038 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15803633 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10414936 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125724351 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107956783 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12850773 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169552046 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111237896 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143742568 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110764549 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124568752 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128859513 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111231992 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161652923 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107648423 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137342343 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142768898 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108494383 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160631887 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143754911 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09848027 seconds)
  done (took 5.502592902 seconds)
done (took 49.922933299 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.217520205 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.447936182 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.206568583 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.136051011 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.264525314 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.214017932 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214381427 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208573469 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.770934527 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205909356 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.454398011 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.78462008 seconds)
done (took 60.25602022 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.305984288 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.384945385 seconds)
    (2/2) benchmarking "String"...
    done (took 1.523116068 seconds)
  done (took 4.036867426 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.79408124 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.16606633 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468581666 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.209063533 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.225706523 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495092533 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.940440806 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.60474687 seconds)
  done (took 28.239061486 seconds)
done (took 42.508751787 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.214374182 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.238841447 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.239107154 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.184771178 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.317149929 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.234893196 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.537078756 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.25613362 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221960002 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187032078 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.24120957 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203328582 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215555478 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.502321212 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.215398487 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.219581026 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.27298531 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.725794913 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62828289 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21935132 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.239063003 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.220278589 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231490292 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205842073 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.242608141 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.220751233 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21077414 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209037871 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.839802165 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209612346 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.220725782 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.686489098 seconds)
  done (took 190.941088096 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.209913725 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.268076329 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.340012126 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243639746 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.834082172 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405051615 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.354146751 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.74817773 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230229944 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.236333375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.551283629 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207771232 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.614838403 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.201125326 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.243254019 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2805858 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.514673818 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.589365162 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244015621 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.371696964 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.230255559 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468358382 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.380680434 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.468253749 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.239730653 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.238614252 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.248502183 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.221129487 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.401798246 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.444253874 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.227796991 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.264669508 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840422379 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065754542 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.240431857 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.222565822 seconds)
  done (took 151.022809034 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21366656 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211836175 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213125663 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245671068 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.211808766 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802174279 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805431019 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.72828684 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.674246685 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.638914464 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482487802 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.207661433 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310914036 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224018542 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208837701 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228933176 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.254824519 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214863455 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213027102 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806410439 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227183461 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.425070786 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403911181 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224251709 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246196342 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607017416 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21073382 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248364274 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.550292235 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259739705 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209679309 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.618017999 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.21545659 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.607956369 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331568801 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212022911 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215359836 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248984201 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214845986 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.501413465 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214746212 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216470557 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219163183 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.214567826 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21372863 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805062805 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217494537 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.163230785 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.914917287 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216515035 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215213957 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.361320137 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.932505636 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.229203503 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213645855 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216484394 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.212704983 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216306766 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.249048761 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.350878012 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311444391 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230783756 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217739077 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246791061 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213818315 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.33432912 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229239119 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.549878925 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.285330093 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.319189666 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807024577 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215700101 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314037915 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332983797 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211226137 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215018831 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214880953 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213361949 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327271387 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210969746 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.63481014 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.388802388 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229315239 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.658586178 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313335711 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210868319 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650386547 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216529504 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214274922 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978914481 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308503992 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.212745031 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.217085487 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216025529 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213753209 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.633518677 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805711114 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49821716 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214864048 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.443293772 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21868861 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.652265962 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776042088 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.880605061 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214470621 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331335884 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.390548639 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229951988 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.216225105 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.637925111 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217295854 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276000141 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21233172 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616536746 seconds)
  done (took 367.538758352 seconds)
done (took 710.634500607 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.802813508 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.797616741 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.917281684 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.790819739 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.753440302 seconds)
  done (took 10.198817459 seconds)
done (took 11.337482672 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409226889 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409754649 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276924143 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412470289 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249266076 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426034754 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387449759 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237081272 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316199422 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.299584645 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321242343 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26950013 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25344687 seconds)
  done (took 18.404178339 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54224141 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523930272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279588208 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550624249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257343735 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530508114 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422267639 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.439381244 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43965313 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248014954 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23075731 seconds)
  done (took 16.600796958 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549741588 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.54848447 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278941362 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544647634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255093381 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550015658 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422463698 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.439709102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432374421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242908371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225835587 seconds)
  done (took 16.627115883 seconds)
done (took 52.773347886 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221455532 seconds)
  done (took 2.35494593 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255394932 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416044723 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239492165 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228569502 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220432152 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219230891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.231289326 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.221790008 seconds)
  done (took 11.16689616 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220838922 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218702343 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219600992 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.22124941 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221749096 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223091862 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22157515 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222842898 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220953264 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219244947 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219345215 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219118628 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220193086 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219595879 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219556279 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222291422 seconds)
  done (took 20.665983971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222650866 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.21966617 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218419236 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219266557 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219805611 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220357189 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220743044 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216364691 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.21912802 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219482897 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216320343 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218776456 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219956839 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217949979 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218101201 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220521597 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217997069 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.21761793 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220432118 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216626679 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219483759 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219677372 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220630202 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222472434 seconds)
  done (took 30.401230029 seconds)
done (took 65.723946765 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.830388215 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.844871624 seconds)
  done (took 6.812481757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224579968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.22313658 seconds)
  done (took 3.585033639 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224405555 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223657244 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222361328 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222955851 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221984643 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.219612772 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224592292 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224088026 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.218661937 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224091998 seconds)
  done (took 13.365586947 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223637365 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22421742 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22075569 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221851141 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221379773 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221914863 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223868849 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222806442 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221042102 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220963802 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224372637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217363815 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224063741 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221473363 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224798143 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222388472 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222057617 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.221429812 seconds)
  done (took 23.139482245 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224437389 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.221916126 seconds)
  done (took 3.58544147 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.222045565 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219430277 seconds)
    (3/7) benchmarking "month"...
    done (took 1.219646303 seconds)
    (4/7) benchmarking "year"...
    done (took 1.219363992 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.219231971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221002586 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21776076 seconds)
  done (took 9.67816511 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.22601526 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408989324 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.4877302 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.819922573 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22572829 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224972351 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098711976 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224629835 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228218614 seconds)
  done (took 14.085207828 seconds)
done (took 75.389629333 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.245719215 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.230036859 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.523523094 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226532926 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230630972 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.557190918 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.262987348 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343339512 seconds)
done (took 37.76085731 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232300121 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.200508682 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.959853773 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.209383367 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.286458033 seconds)
  done (took 18.797507314 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242564993 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550901689 seconds)
  done (took 4.93106942 seconds)
done (took 31.100441844 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225578369 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22146666 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.219572863 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222132232 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.217085182 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214823011 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220116983 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217407191 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216730593 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.217949139 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.217749554 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217212302 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214034715 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213523363 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214650315 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218469142 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214747646 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213765845 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215242527 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216049184 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216507498 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214870223 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213364428 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212556962 seconds)
  done (took 30.342965301 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219120119 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216010366 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217545227 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219508488 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214583691 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217015236 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217019536 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213872229 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21605925 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216220909 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215243227 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214856801 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219313503 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21517093 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217502952 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215675077 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219207589 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214291075 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218639407 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216145836 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220640712 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213355742 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215066512 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218472647 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.215614454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21580847 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217941374 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216393728 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222971226 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216671542 seconds)
  done (took 37.639849183 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.223820892 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227557225 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218595501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219271517 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.219821622 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216527207 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21965664 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.216812542 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215739006 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216800867 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.218040813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216644867 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216425987 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216728183 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220958084 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.21831464 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.218090985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217578416 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.21841889 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220983255 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218572353 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219010277 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220349085 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219587848 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219273995 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220620848 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.22081401 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218818763 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22169267 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220737775 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.222221405 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.219305489 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218219222 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219511126 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217839602 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.219068273 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227374031 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228322728 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219613268 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222075046 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220056408 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219995004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221725993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.219680002 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221728368 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.221534861 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219378224 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218693186 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.219356082 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218330929 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.219275485 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.219139208 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.222544325 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222918556 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219135399 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.220420886 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218821575 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219580368 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.221326658 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220178777 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220087326 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220018476 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.221722487 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219741251 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218016557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.222174114 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220792364 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221900898 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220894042 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22045092 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.222823414 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220812789 seconds)
  done (took 88.978510651 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.221970543 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221079475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218398167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219381475 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220120314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220208155 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218692232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219530471 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217676699 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219965916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218516357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21816249 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218529133 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22012253 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22213559 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217726899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222092669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217942586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223005869 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222718408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221623403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219449327 seconds)
  done (took 27.974115543 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222494707 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221836645 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218555592 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22255476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219654166 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221662037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223126918 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226143872 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224288106 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223209066 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219809722 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221775419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219695567 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221227158 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217982431 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219569009 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225051352 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220599838 seconds)
  done (took 23.127218435 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220347564 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217871751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219680334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216703823 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217218699 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225484094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218929236 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221861821 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.223638149 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218351738 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221239329 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223821395 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221800806 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217156898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219380349 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217568044 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222066284 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218282988 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227174255 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224179408 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220747133 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224005164 seconds)
  done (took 27.990505447 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220616631 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222766306 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218868184 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218461963 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219471236 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221753525 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221234361 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219067248 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221603844 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22019463 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218662715 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22159171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219766492 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219379769 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219942346 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221517414 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220907902 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220687409 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224445305 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217507211 seconds)
  done (took 25.54527739 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222396013 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222096614 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222457257 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221835624 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223038898 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223347361 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223100105 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221750049 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222743123 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223875535 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223121713 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223668045 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223266253 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224329034 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225103947 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224461837 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223785217 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223050865 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222903556 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224130379 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221227092 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222559976 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223191145 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223910299 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22103051 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224548538 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223112405 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224293802 seconds)
  done (took 35.386765907 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223499291 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22272121 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219371534 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222581569 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.218610265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22218727 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223775536 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221744993 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222374753 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218012133 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221240758 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223145722 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222584245 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224162259 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224039239 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222444966 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224239251 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.218796057 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223617098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223006394 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222977462 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226124898 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225044371 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219755954 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222660122 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223219104 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219934089 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219171322 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222826406 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224580764 seconds)
  done (took 37.804909498 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243377893 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242774565 seconds)
  done (took 3.62554626 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.218835094 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221721745 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222326253 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221106677 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220120791 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226064367 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223905052 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221983538 seconds)
  done (took 10.91472706 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223476901 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225018115 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227169638 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226088073 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22804696 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.223288322 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23224572 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246129601 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224108705 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226711003 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233010566 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235868971 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227926406 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227925665 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228313462 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231004288 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228504236 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227018332 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227534899 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227616049 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229375536 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237098197 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237466546 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230074804 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234743037 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244124548 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.257729246 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233507344 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23240802 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238149966 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23255026 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228560974 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230542262 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228691704 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231153639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.22907461 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238213716 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255484508 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.236748465 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248203659 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231106676 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.230866649 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232694024 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23010481 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232937844 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232071364 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231036758 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228528396 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227395123 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233095537 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232556947 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227899709 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226313248 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234622938 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.234806317 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235363282 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.249619231 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237244532 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241730368 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238513393 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257359475 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.24896938 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235798896 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231483286 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243916305 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.257094638 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239467097 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253556225 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.232473732 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232166244 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.237958346 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263721635 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256564307 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234934959 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232798712 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232207357 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232716127 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233470454 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238858004 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256699821 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232514608 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233937915 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245704189 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258737835 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231870211 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.235261377 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234856661 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232475127 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.237500726 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242056292 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25600792 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235179966 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233888695 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233467438 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233940778 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232419478 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230962652 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234272972 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.235396429 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235252044 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235144581 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238766272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245788086 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238660149 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234430421 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240133481 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249175562 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234529141 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240684426 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239595517 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236473905 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.239836997 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242660526 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236038262 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24099714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.244280829 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.23730285 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.238696744 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.238450947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238662472 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246886312 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263519865 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239852905 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.239365991 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.242892364 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.250839307 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238952091 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.241097521 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.238692314 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237019743 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.236703336 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24053135 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240471007 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24025505 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239415126 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239979139 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.236990663 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239650525 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239724618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.239628665 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.239140673 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238405078 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.240933019 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239435166 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23988272 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24160859 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245912589 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.257630949 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.240450095 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.24146147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.239238122 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238905866 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.239919024 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.240168079 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241245272 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241090643 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240997953 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.240011334 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242434966 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.241029651 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242310302 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24336148 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245072811 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242051556 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245040098 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242467638 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.238966821 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24150608 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.241547015 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242628675 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244020094 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241887314 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.244843352 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250942833 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246784425 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241051786 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24423451 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239965774 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243025185 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242887355 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242636093 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250402066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243510153 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248329983 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.260860241 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242221794 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242215155 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242405295 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.242590322 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242929582 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.244884261 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250245664 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254417778 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264141285 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.242956627 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.247833346 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.243277444 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247340459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.246420431 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242738823 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.243817836 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244363135 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244083845 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244227417 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.244119542 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.244272824 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243313913 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.244722699 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.244135516 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242097892 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245585101 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.244801522 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244509428 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.241918465 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246670463 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244298425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242831643 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241168591 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242635152 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.244532601 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.244416174 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242982316 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.250241921 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242448167 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245722819 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246077847 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.245223333 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244731576 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24567644 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2452901 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.245698911 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252863128 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262660976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245645463 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252278956 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.263423182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.244506259 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.246227599 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.245850072 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244263738 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.248315586 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251561924 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.246794179 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247137667 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245600822 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245940065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246679024 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251057694 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26146725 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.245678699 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.247683926 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.246909558 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243263048 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.247899705 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246077816 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.246894266 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247703838 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247654198 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24682942 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247885544 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.248117815 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245580283 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246607203 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248159607 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253047795 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251965671 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245727604 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.248354693 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246701659 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251347954 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246961308 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24737208 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247543774 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257105559 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.269512881 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253083373 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.265086083 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248161838 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253005124 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264676505 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.251001934 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242069516 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248585514 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247897758 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246405002 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245736899 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244959862 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248323093 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247811279 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248789301 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24950131 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.247305179 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247784474 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247388136 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247529045 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248017928 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.247131722 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249075393 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.247240796 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249242374 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.247192394 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247663604 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254500382 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267442626 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.248657212 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245979758 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248195788 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245809634 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248142353 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.246767721 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252868167 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.25139253 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250419167 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255036747 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247137762 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254889285 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.249391909 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.251652353 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254116347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239952183 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244128023 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.240855217 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.243047182 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248326981 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266804005 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245173023 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249488775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246729679 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247016336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243952702 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247511944 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248191912 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249822078 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254757839 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.262372509 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.247791859 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24847454 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244363618 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247215484 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.24582276 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.243390904 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250607533 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.248298799 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246283067 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244553262 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248345499 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247274657 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247618851 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.247322538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245362993 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247132707 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250807078 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265088519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250009434 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247677137 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.251408961 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265392308 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250893139 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265250115 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244788264 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248127362 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247496887 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249441191 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.247386819 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248859483 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247179199 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247756947 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.249089968 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250851551 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.245991217 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249071096 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249492127 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244011024 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258128519 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267510032 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250225305 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249974405 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248844548 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251159845 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.248177188 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248354265 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244210143 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248254788 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25571288 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250972246 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245459229 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252985178 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247237839 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24561421 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.243779752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.246561564 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246833472 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245187247 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246561256 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.245791454 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247425221 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249165567 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247306281 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248064778 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246389121 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258496815 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.260770351 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.246809771 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247997773 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249621864 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.246848555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.249220392 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.246486346 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245896999 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247264463 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.248010162 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252508184 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254463908 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.247907664 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248619155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.248508108 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247643188 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247052063 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247219296 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.245744906 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246310083 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24866912 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24984643 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.245951337 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.244183228 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.245944685 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249512639 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248809361 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251480885 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255556687 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250799751 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245293684 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250040997 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249757587 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24942012 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252271932 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.258601554 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26862886 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.25719188 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258000867 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.254286702 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248294806 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252395754 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255025592 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.249464165 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.249715453 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249155951 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.249670536 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.251146834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251433904 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251193218 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254207734 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266383352 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248104019 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258722896 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270424715 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250815313 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.249245734 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252146984 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249949071 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.247932223 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252950108 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.250047806 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258225526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.270400244 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251303179 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250794651 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250460475 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.252224044 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252610436 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25191253 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.252122224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250656915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.252240125 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252611884 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250282942 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.248812207 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.25206185 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253285839 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254653576 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258441795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.249740786 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255300757 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.253595874 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.251716892 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252921404 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248913012 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.248639517 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.248785889 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250818707 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250264904 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.250469236 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.25456699 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253258345 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.252407704 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.251391287 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254081409 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256697284 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258582476 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.257419934 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250252773 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.253350235 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.253262056 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.255487243 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255992868 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254290852 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253901781 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.252723885 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.254075028 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253595015 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254895632 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2570458 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267550771 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.274049358 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255193914 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253672095 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25637836 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256530564 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.250553116 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255010653 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255499911 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.257218581 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.260219784 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.251081248 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259715665 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272001359 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253497088 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.255948368 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.256286665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.256582777 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.253893864 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255038919 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.254671893 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257890739 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269838692 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257006562 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263324065 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279466442 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.273091636 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.255652554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.255274807 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250109537 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255021169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258302053 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.259199398 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.25407355 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25664568 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255297923 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256532319 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260971591 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258635888 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257886975 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.259714788 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255192137 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.253790467 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.252129313 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257668298 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257283164 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255534776 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254392558 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.257004379 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.253097741 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26911345 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.277105621 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.260432621 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257685675 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.251106779 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260428959 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259559928 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266478207 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260069829 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257824066 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.255767813 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259966866 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258474211 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.254291803 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.25822624 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.254971533 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255641337 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.253167831 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269557196 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277350878 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.259236446 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.257236497 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255346492 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.259176429 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256737631 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258979814 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254316139 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.254473452 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.261261352 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259508669 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.256460027 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.257740055 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.260957157 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.262996176 seconds)
  done (took 744.685021256 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255721219 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25589194 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256701711 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257996224 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256331627 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256068468 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258606837 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256486125 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256655582 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259865066 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256544941 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25725457 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256553312 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257813276 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260291003 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259411822 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256969156 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257446171 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257138872 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258405149 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255778077 seconds)
  done (took 27.56965035 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.255603191 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.256627805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2575918 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26160763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260406101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263290531 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260043897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259219438 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258569446 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25850815 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259899199 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26408185 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258360238 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.262052957 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257326855 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261665662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.262797751 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259372865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260179689 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26130552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260321477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257237993 seconds)
  done (took 28.882413022 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263214586 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260295578 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256824967 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25850862 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260956132 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259971124 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264367385 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263742891 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.262570248 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.261633838 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.260377238 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.262145156 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269110798 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.262182316 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265386757 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262208358 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.407085715 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262905171 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265474129 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261040312 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.26072537 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.266998292 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.276133842 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.258142437 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.262342591 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262759285 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.258830881 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.26240649 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264419033 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.258931683 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.263530111 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.258871889 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263574727 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.260898954 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.259590073 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.263103775 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.262597877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.262424485 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.258962329 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.266293478 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.272932261 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.277929194 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266276239 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.265853356 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.280446699 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263190665 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.26789357 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.268042271 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.259876766 seconds)
  done (took 63.234194537 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.261140728 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.264906823 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.261893185 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26583913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267378107 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267456072 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.265456733 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265341121 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263230674 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.264941688 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266047748 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263939952 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262797544 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264209559 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.264743764 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262151491 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262906933 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260750252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.263487012 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.266733804 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.265243544 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.266901735 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.264838388 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264541851 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265766743 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263540128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26776413 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.26566883 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.264339493 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.26413414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.267675872 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266124044 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269606983 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263743883 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263394163 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.270074716 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264414316 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.263358575 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267373106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.262559182 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.266590795 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267306154 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.266453333 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264709695 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263767868 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.26426492 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263585847 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.263380667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264584084 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267349738 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.267746461 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264763656 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267709167 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267354916 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270002825 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.27070314 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.266708146 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.26447256 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268373628 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.263814631 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.264822171 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266714257 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.265197488 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26902617 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268576616 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265496006 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.265858137 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27124074 seconds)
  done (took 87.235575172 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265597895 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.26899529 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266508294 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268172643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267231049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267103246 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271181871 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267280245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267608916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268194382 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268307723 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266974239 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.269641103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269023405 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269553928 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27057954 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267351242 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268677104 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265341275 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27206647 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267967464 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267905587 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265869776 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26619625 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269068143 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266428439 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265016118 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271230949 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269953954 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2708228 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273574135 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.267256966 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269256104 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270055512 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268423643 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.269818684 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271309545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271542128 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272613831 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.26721823 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269267906 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272686669 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270561982 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270890678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26815481 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272487627 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271429931 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269848854 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273739418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274741465 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269112183 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272232698 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269202203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268079687 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269596781 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.268871076 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27431404 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269840583 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271216241 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274026424 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271737639 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27244163 seconds)
  done (took 79.887611435 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270316765 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273352522 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271621969 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.272968323 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276615375 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.275032325 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275092672 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278376513 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278882066 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.277268688 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275008198 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274002087 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269123346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276667508 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272003154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273710897 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273447287 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27331944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271094977 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274670664 seconds)
  done (took 26.662459175 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265870975 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275837025 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.275500941 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272385481 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278523382 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271795462 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27392558 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276211688 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270237517 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277129907 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27504761 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277820146 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275034216 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276356542 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27998668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274933267 seconds)
  done (took 21.578062132 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.271031187 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.276266319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.274186793 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27151466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.273814008 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.271943201 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278915926 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275258265 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27482122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.27331383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277410664 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.278993825 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279080085 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.275705167 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271917405 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281153925 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.272406729 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.275960381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279264207 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277370282 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275077266 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275678673 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.278152113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277600043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.277540174 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.274118313 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.276559308 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276926871 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279373505 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.280657989 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.275880192 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.27520327 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.27305477 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27417789 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278517218 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.274488047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.278120338 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.28174635 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282151846 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281939077 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281663652 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.27337701 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.280246014 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276185905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.272483609 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276306849 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279095078 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.276145708 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.279461529 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.276496062 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282503363 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.277368065 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.273545081 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.277365394 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.279288626 seconds)
  done (took 71.399773533 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272747945 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278998695 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278281262 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277214613 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280106386 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.27724839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283027362 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27815481 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278190635 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283441645 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281394637 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283632579 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280795363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280821179 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282155387 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283058418 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281212365 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279795704 seconds)
  done (took 24.231939442 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.276070134 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276796348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283617271 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281939553 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283195234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28439978 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281203204 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.280729948 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283713205 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27967821 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279186793 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282671999 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285074455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.286778474 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282525088 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279143932 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.282298565 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286294687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28285169 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281173548 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284770096 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284658143 seconds)
  done (took 29.39878696 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.275578615 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.283519808 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.281702135 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.297113576 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.294790575 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.298698369 seconds)
  done (took 8.922041498 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285747411 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286723112 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279876985 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285363132 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285787835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283666692 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27979018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282962048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28581255 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284264744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282101424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285668168 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283064218 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285371576 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284772498 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285159101 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282853827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281583723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285489994 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28131544 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284812123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289322931 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283043836 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281114794 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280293006 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283016672 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283629441 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286643242 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283441257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283873248 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286629474 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283860432 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286049381 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28189615 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284170874 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282534549 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280217124 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284258027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285887439 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280740251 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282743713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286776846 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28419038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281831535 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28289035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277293954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279796992 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281436821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280834032 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282588445 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281763509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282934151 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288570071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283253507 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282446194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283545114 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284776864 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28381695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282313294 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282774773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286339085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281093871 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281097676 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280225837 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282552767 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279656785 seconds)
  done (took 85.918182913 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27962389 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283908399 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280819585 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285254303 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283563606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282511247 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283432462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283641799 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283931629 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283473147 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28608568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283089877 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282943627 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283310331 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282611414 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28582777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282729693 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282373191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281134907 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285256849 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286074198 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285283577 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28375492 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286609215 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284318675 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290210958 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283948293 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283278852 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284624703 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285895641 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283687547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284388811 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284991247 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288535227 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284809889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287751205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284873926 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285565253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287902392 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288910814 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28548031 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289672099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290139385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28741174 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284861792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285714376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284234672 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285172465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286780088 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286586867 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285397168 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291458866 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291242628 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287541242 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288602349 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287104033 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285144182 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285852633 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288432124 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286400525 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285397827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285825118 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28931514 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285553812 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288533482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286639609 seconds)
  done (took 86.035793371 seconds)
done (took 1736.10973217 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.444327771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403957293 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28501173 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.284766653 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282752649 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.279341232 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.295059114 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282165446 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.290210692 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.285575675 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.287572043 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.470071659 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.282209011 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.284973791 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.285618891 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38074781 seconds)
  done (took 42.320950795 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.313545505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.292443412 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.393710246 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312283468 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.312865737 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.465838637 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.344679563 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294351668 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.450508125 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.333413111 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.780883178 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316634272 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295191248 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.352902853 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.311064777 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46311136 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.527048784 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.774167956 seconds)
  done (took 29.528313194 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.700412214 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.291830721 seconds)
  done (took 9.187745035 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.307600003 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293664541 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294692218 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293041963 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.280274414 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.287467774 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.286971229 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.292957225 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.713028299 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403844291 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294857205 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.303431227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.313959451 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.296228437 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.286533596 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.334238001 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.490494932 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.29258494 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.294737671 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305047097 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289432039 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.376177228 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.333292595 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.295216594 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.408853202 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.678135655 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295657808 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.30047255 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.4789704 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294796082 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.293113634 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.292503193 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.293798717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.184302392 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.717748069 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.306607783 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31528235 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306027858 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29097398 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.446085431 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29771963 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.301459634 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.29224693 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.711933064 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441271857 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405786517 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.421647825 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.310904563 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297124037 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.35247517 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.301254724 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294542043 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.336300161 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.044243147 seconds)
  done (took 108.884445023 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305995945 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.67399301 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449788027 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.312712263 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.889419037 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.919853461 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300849607 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.551905252 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.326610164 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285759525 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.569786483 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.767174844 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30398069 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.302679626 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.981968033 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.333282943 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287370728 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.004256533 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.305692934 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.291361325 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768773725 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293139483 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.284439361 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.536405895 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.3217045 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720577564 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.596358498 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.707515259 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30870073 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.285991589 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.730540895 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314642091 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.298818493 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288130049 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.539492732 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625225443 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616688384 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.301573559 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.312182771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288941494 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317484718 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715203632 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625770651 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.299681864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.291627335 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71990806 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.30310596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.293023376 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.288287679 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48664879 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.920913445 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295513408 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.591229519 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293675931 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.576879217 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.34458864 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.346017102 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753295101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303573056 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.348467745 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319605567 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288373773 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291343698 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288324095 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291027568 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.621361333 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.598091289 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.294226083 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.615766191 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.738465375 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309241452 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807758692 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.193903012 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305797909 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.357992467 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.294363916 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.81414646 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763977862 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.335033655 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291316517 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.605537548 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307004819 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.563958072 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308638918 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293107475 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804024744 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.301952528 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.335015398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.295772209 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.292625604 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.906822487 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291677541 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.56350364 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.354938016 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289243834 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.292626672 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323993698 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306450902 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.294314532 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.294875445 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793774746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.316218177 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.395042893 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309807859 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298904662 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289785845 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.293550579 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.293349329 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507606792 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.805544923 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.309527362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291824092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.292957129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.292156696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.551506572 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.300705485 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.589368681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311643764 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293527177 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.300119215 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.93916749 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342246179 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294587942 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.293667396 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.16225407 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.500937377 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.308048544 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.295515217 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295769684 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313365199 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.445654217 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314300284 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.332918502 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298620659 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975500306 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346833232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.319529336 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.581406673 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302872288 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.105412195 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318360428 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295286409 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597316971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.563480845 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.475187591 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.300159722 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.315563493 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967989666 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.3250158 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434124643 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3176159 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.373294763 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494669959 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.489313441 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29930446 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.913111657 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.29821853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509441244 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298253335 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603992808 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772364766 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318271881 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298144082 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981348837 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.022213377 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.116748986 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305505708 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567628653 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.271771225 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.782500983 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.302427607 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299805336 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.732125554 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301354614 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.299599007 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.298379451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.300937473 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.44953452 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469900024 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.944304956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.308717545 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.730920763 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324766852 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300133161 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306366966 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302922805 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.640510897 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.394920804 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.299075637 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.322237633 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.299512506 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307036803 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.750354409 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.23678594 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.303049705 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.451693028 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903726802 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.322227869 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302080233 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.929359165 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.544306889 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787629417 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.311765193 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.587776881 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.31350299 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.332337148 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.846956267 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341466066 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752092983 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316312143 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.299105515 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874361898 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.32170114 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.36491856 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.300439491 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303631387 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.811214596 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.323710708 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.300968266 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.456311866 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318182973 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558123817 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.299894069 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.304192689 seconds)
  done (took 1100.808923823 seconds)
done (took 1291.924312679 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.296963402 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.297999387 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.285447702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305342621 seconds)
  done (took 26.397528428 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318892971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.304832391 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307928682 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305678668 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.310073612 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.30479077 seconds)
  done (took 9.065897958 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.343281068 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.298236127 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304965891 seconds)
  done (took 19.160031977 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.500197464 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.525040779 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.618728055 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.372139454 seconds)
  done (took 10.229271218 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.305456453 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.307261547 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.306771691 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.308365383 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316031562 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.315916517 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.30850265 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307983064 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.316909173 seconds)
  done (took 13.005907722 seconds)
done (took 79.071226396 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.020363606 seconds)
    (2/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.965876914 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.305442226 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.051875612 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.279682423 seconds)
    (6/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.422726078 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.957385794 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.553384589 seconds)
    (9/286) benchmarking ("sort", Float64, false)...
    done (took 5.575564265 seconds)
    (10/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.800916858 seconds)
    (11/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.112331614 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.724030176 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357058767 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.289059509 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.352488916 seconds)
    (16/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.002074845 seconds)
    (17/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.76905105 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.383310297 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.301877121 seconds)
    (20/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.493114623 seconds)
    (21/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.315526045 seconds)
    (22/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.496475922 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.329512878 seconds)
    (24/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.694350156 seconds)
    (25/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.682411809 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.427637697 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 6.306760796 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.396150382 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.580244972 seconds)
    (30/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.235368434 seconds)
    (31/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.71287206 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412970755 seconds)
    (33/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.318931701 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.334304949 seconds)
    (35/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.28950998 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.290654775 seconds)
    (37/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.288742572 seconds)
    (38/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.883903955 seconds)
    (39/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.488413913 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.432021215 seconds)
    (41/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.663342445 seconds)
    (42/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.874469798 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588727579 seconds)
    (44/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.317522111 seconds)
    (45/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.373957604 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.724938157 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.323001198 seconds)
    (48/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.29438836 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.319601414 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369602242 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.789181006 seconds)
    (52/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.285790705 seconds)
    (53/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.118051242 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.304778747 seconds)
    (55/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.677701713 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.650466976 seconds)
    (57/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.299841508 seconds)
    (58/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.449030196 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.640092229 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.388981486 seconds)
    (61/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.310901604 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.325615382 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.339951617 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.435652541 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.645353629 seconds)
    (66/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334141511 seconds)
    (67/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.321566 seconds)
    (68/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.397316449 seconds)
    (69/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.29300157 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.393140033 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.324285287 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.838181822 seconds)
    (73/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.5205647 seconds)
    (74/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.34773002 seconds)
    (75/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.652169512 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.390840043 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.646325882 seconds)
    (78/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.30682048 seconds)
    (79/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.28678142 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.045464861 seconds)
    (81/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.298294549 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.18259387 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.488028046 seconds)
    (84/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.682827286 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.295901763 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.288966306 seconds)
    (87/286) benchmarking ("sort", Float64, true)...
    done (took 6.308054666 seconds)
    (88/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.307695322 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.358040735 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.322194658 seconds)
    (91/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.326170081 seconds)
    (92/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.266895163 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.725649501 seconds)
    (94/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.324727518 seconds)
    (95/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.315704972 seconds)
    (96/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.735758554 seconds)
    (97/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.324473303 seconds)
    (98/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.332590391 seconds)
    (99/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.417527631 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.338800295 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.744730175 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.112831612 seconds)
    (103/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.399092369 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.512204526 seconds)
    (105/286) benchmarking ("sort", Float32, false)...
    done (took 5.295527513 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.536133525 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707594934 seconds)
    (108/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305641082 seconds)
    (109/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.31390114 seconds)
    (110/286) benchmarking ("sort", Float32, true)...
    done (took 6.309754391 seconds)
    (111/286) benchmarking ("sort", BigInt, false)...
    done (took 6.309621592 seconds)
    (112/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.357278038 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.295803305 seconds)
    (114/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298162884 seconds)
    (115/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.866840689 seconds)
    (116/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.653028598 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.329430705 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.474112618 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.341966454 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.295256753 seconds)
    (121/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.344673626 seconds)
    (122/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.332257464 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.831389784 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.358234833 seconds)
    (125/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.295043196 seconds)
    (126/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.141428028 seconds)
    (127/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.349461757 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.590861005 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.635993145 seconds)
    (130/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.295372332 seconds)
    (131/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.363466909 seconds)
    (132/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.328409208 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.053494531 seconds)
    (134/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.308255424 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589473364 seconds)
    (136/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.816518363 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.114058206 seconds)
    (138/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.343976619 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.446729525 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.102152833 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.472439985 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.143475163 seconds)
    (143/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.364677056 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.059768337 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341511833 seconds)
    (146/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.114855285 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.720386701 seconds)
    (148/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.535917521 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.417168704 seconds)
    (150/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.817149448 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.309107253 seconds)
    (152/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.330571091 seconds)
    (153/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.318837215 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344481313 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.419242186 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.635350734 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.059839425 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.312678757 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.664800546 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.889743634 seconds)
    (161/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.475452264 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.158518844 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.316694888 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350193096 seconds)
    (165/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.419080806 seconds)
    (166/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.444868906 seconds)
    (167/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.144064508 seconds)
    (168/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.323877795 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.506627137 seconds)
    (170/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.500370758 seconds)
    (171/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.33727771 seconds)
    (172/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.296442044 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340523543 seconds)
    (174/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314559607 seconds)
    (175/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.322628165 seconds)
    (176/286) benchmarking ("sort", BigInt, true)...
    done (took 6.320661314 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365674828 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.297973634 seconds)
    (179/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.823945691 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.943168515 seconds)
    (181/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.316971043 seconds)
    (182/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.474423352 seconds)
    (183/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.470700169 seconds)
    (184/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.672625769 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.479328539 seconds)
    (186/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.369323839 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.378424163 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.298985144 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.302875779 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.740146396 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.31952208 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.317841511 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14077246 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.340702654 seconds)
    (195/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.430349561 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.944446466 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.524382379 seconds)
    (198/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.896357086 seconds)
    (199/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.309178807 seconds)
    (200/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.399398555 seconds)
    (201/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.297843221 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.628987143 seconds)
    (203/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.821133463 seconds)
    (204/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.294093207 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.918311346 seconds)
    (206/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.55029667 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.340735864 seconds)
    (208/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.398293523 seconds)
    (209/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.550702012 seconds)
    (210/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.319220496 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.380520511 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.018217011 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.962478626 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.345103521 seconds)
    (215/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424888092 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452902023 seconds)
    (217/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.094523913 seconds)
    (218/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.36104959 seconds)
    (219/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.426751255 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.151054348 seconds)
    (221/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.418870703 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.764855969 seconds)
    (223/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.453491149 seconds)
    (224/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.298381885 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.319212872 seconds)
    (226/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.294777039 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.406319563 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.775950808 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.608639478 seconds)
    (230/286) benchmarking ("sort", Int8, true)...
    done (took 6.315641701 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.20667428 seconds)
    (232/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.030635031 seconds)
    (233/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.409370202 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 4.39385103 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.526111463 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.228164264 seconds)
    (237/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.299261522 seconds)
    (238/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.322076784 seconds)
    (239/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.928715586 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348533598 seconds)
    (241/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.308075695 seconds)
    (242/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.042186046 seconds)
    (243/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.297094089 seconds)
    (244/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.148680713 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353136548 seconds)
    (246/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.345061842 seconds)
    (247/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.385316682 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.346600741 seconds)
    (249/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.803204915 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330391392 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713981859 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.332171643 seconds)
    (253/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.304398866 seconds)
    (254/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.376591923 seconds)
    (255/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328003854 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.710383115 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.648236346 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.916255655 seconds)
    (259/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.563573822 seconds)
    (260/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.314316588 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.304758376 seconds)
    (262/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.581542428 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.421218125 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.405658522 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.436955372 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.153138474 seconds)
    (267/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.509876832 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.991857744 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.315588387 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.213531172 seconds)
    (271/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.384557337 seconds)
    (272/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.564749163 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.360581754 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.689696165 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.352881542 seconds)
    (276/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.903139895 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.348270573 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.527497347 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.314755622 seconds)
    (280/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410926174 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348256572 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.224146466 seconds)
    (283/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.552294946 seconds)
    (284/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.423643643 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.094893889 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076419753 seconds)
  done (took 929.183683505 seconds)
done (took 930.399306333 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.35222831 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358170648 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.33291977 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.355426644 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.450400591 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.356559169 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347133823 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.338658581 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.384047494 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.38539384 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.340917841 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.356680714 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.341278158 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.33650118 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.330424323 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354721281 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.364623388 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343340021 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.354371391 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.342826902 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.359762495 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337451844 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.38102555 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.361523905 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.341785213 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.338093522 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.345897184 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.358265183 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.451297292 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.342386795 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.336259251 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.355744576 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.365472214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.336942132 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.332599749 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363834112 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.351800165 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.341902721 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.338809007 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376388326 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.739698127 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352213706 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.341548185 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.33809234 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340119582 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.345603318 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.349826888 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.341353715 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359659768 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35535302 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.722630559 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.368462306 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.345371375 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.33438647 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.348719948 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.346702336 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338243291 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362710562 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.3605594 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361907794 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.352318953 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345821897 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.341850516 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36084687 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.348181161 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.762067059 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.343250923 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.344136607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.743478463 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.353156887 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.771534849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.365243716 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.336746061 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.361856167 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.373969895 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.368298964 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.337511984 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.340108472 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.354027866 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.342048782 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348144407 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363612386 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.340064269 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341356075 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364816321 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360712531 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.351830601 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348168865 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.345826947 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366286171 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351266949 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.355935507 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.340214628 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.335945545 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.350679769 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.344863048 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.35217724 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.351234711 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.342202114 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.351832383 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.744603877 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377869689 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.33619177 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.337727787 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.341325334 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.361706343 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.742662379 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.359573538 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.359427784 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.38628623 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.345092056 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.362024067 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353516937 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361360457 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.350236541 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.344846614 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.337844256 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.365553419 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.736282857 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373459661 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.339769109 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.345290175 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36320344 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.34026397 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341140482 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.379670233 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.349123968 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365872346 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.469606111 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.351893878 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.38294772 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.345542973 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.343660469 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.371630382 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369166607 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.379084911 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.340628527 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368241974 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.363521628 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.34027711 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.362582081 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.350857834 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.345252994 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.352150396 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.340570121 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.367492356 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365047917 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360341491 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.36103881 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.475030278 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.341286774 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.366757671 seconds)
done (took 226.406555583 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.397814504 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.334182847 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.430980695 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33674232 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.43504928 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.437064175 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.33502732 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.338581875 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339242008 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.720511752 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.337285372 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.338855296 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.336028809 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.335820948 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.421469214 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.339156369 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338783998 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.68339713 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.338907946 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.411153125 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.338434324 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335608843 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342092659 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.722478824 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.330789274 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.336106928 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.409783784 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.343247833 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690782307 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.333162305 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.339387878 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.682831794 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.432706224 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362414059 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.355126178 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.352913552 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.440795923 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360556544 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.425261779 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.420533502 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.429214741 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376462012 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.336309222 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.332737411 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.345963075 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346364488 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.337267979 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370477332 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.344479655 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.337582702 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685920312 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.35175909 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344731923 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340911802 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.344355379 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373914057 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.339069377 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.348312488 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434071646 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341908161 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.411099811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.723093906 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.720725876 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.343345865 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.346541201 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.346412609 seconds)
  done (took 148.935319341 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.406069904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.417607051 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.451046939 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361493285 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.389866663 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.455524014 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362265813 seconds)
  done (took 11.090642653 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.349519284 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34271256 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401146478 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396516126 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34386424 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525803431 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345978964 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.358874861 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.340214999 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414122053 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34618337 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.342191821 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.353125158 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.333036981 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394809559 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.351763938 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.45596473 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342592289 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34315284 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502625567 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341589136 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354580258 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399254186 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352246719 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.346152669 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.347923797 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.168447855 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344677389 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340306946 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.347876266 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344002624 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.426364166 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344402387 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.347583997 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341074517 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467207905 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.343617966 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342746175 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351513337 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.345943155 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.345665935 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.347746924 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.346869589 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.343627461 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.34791217 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37051502 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.344368347 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349236709 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.348194047 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349434569 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.412101525 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346275443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.349635471 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.350455592 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419779046 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353800892 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.350207655 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343242372 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351060695 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344955578 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508339465 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.39776443 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.346064609 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400615227 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347526835 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356482923 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350950744 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353715074 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411203515 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347675637 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40255402 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.343034162 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.564587501 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368764316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347186576 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.354311212 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.350553559 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349061718 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.34124784 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355884228 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.347545503 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353541344 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.350721482 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345906407 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348940471 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.541312223 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457965216 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.34851678 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365961168 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353582361 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.34380548 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.413705921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.347350326 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.348470856 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414798978 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.4619697 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.401987444 seconds)
  done (took 155.089979365 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.35438925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358291152 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348550528 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.36313897 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35295595 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347833653 seconds)
  done (took 9.378506298 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353860188 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.350126347 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35213869 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353731 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.353590535 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.35120197 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.350099889 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351559213 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352967698 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.34978734 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.356829919 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.353842237 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.351437401 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.349944915 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.350344079 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.350695693 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.354742618 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348447668 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356700462 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357803392 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.456409537 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354703708 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351172346 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.355299266 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.357605445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.355872858 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368493311 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356154123 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.35524097 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.361894033 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373531691 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359438312 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.354867947 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.360913179 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.355452882 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.352442037 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358844258 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360795509 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349321813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357447805 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359565811 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357078903 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355615326 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36236147 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353761125 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.356776781 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.360831879 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.360883348 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.353656065 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.359109447 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.355560461 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355141344 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.358372683 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.356637391 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.354539092 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372296439 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.360481374 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358665494 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.359749275 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.3538278 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.359217526 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357212864 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.355814545 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358426422 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.352163692 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36283897 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.355743286 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361467376 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354803546 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358037557 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364728016 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355173763 seconds)
  done (took 100.021938763 seconds)
done (took 425.759047369 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.690936973 seconds)
  done (took 7.949486767 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.443186495 seconds)
  done (took 7.706941231 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.478948943 seconds)
  done (took 21.75011886 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.373679998 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.370834495 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.377215682 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.354661437 seconds)
  done (took 26.738532112 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.662287426 seconds)
  done (took 7.920113834 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.360507657 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345113649 seconds)
  done (took 13.967788866 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.956186151 seconds)
  done (took 8.217452466 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.059385192 seconds)
  done (took 8.329737988 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.360168815 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.36918893 seconds)
  done (took 14.25875956 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.330282642 seconds)
  done (took 7.591831673 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.462084755 seconds)
  done (took 11.72327651 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.362791952 seconds)
  done (took 7.626726162 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.391066414 seconds)
  done (took 7.650019774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.216130522 seconds)
  done (took 9.474992276 seconds)
done (took 162.1737971 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.349617128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.350363166 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.349325681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.348051142 seconds)
  done (took 26.655552115 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40304878 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394556967 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.393530594 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406636364 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398072155 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.396874071 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387602433 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389425996 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407808243 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399533201 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39890872 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399834776 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.397886801 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390022918 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399454595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.39936429 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405299601 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.395120634 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389630441 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398364772 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365932048 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408456034 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.400427621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.364395398 seconds)
  done (took 34.749804451 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.880235693 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.435087807 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.511347517 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.409400052 seconds)
  done (took 7.497095595 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.409904324 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.415088768 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428329018 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.465596422 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496317991 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.425001692 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391384226 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.383285119 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373155477 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.414844524 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491047749 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432904646 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505282577 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.364755336 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582236493 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.361567607 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.361515802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.414094105 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.463140229 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484248203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364409046 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414034476 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.417442131 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.431595869 seconds)
  done (took 35.553437749 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.359177587 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.380308838 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364928526 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362901119 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.372010239 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.36122696 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.364814802 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365963763 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.366044702 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.369818668 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363069601 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376628156 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.362499581 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.361819584 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.367128862 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.362528609 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369231826 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.362306279 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.362030489 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.368535806 seconds)
  done (took 28.586102126 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.355166618 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.207423857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.704979376 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.60834308 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.354013686 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.361372074 seconds)
  done (took 27.85586586 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.429279623 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.57941146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359716104 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.707047469 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.797985966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3753199 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365740429 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.602057436 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.905367716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90676337 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.417505068 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.430245658 seconds)
  done (took 20.142091439 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.368823901 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362367048 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.364246115 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.377542948 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.41495906 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.378299129 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.369241547 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.35564888 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.420786323 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.433862853 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.378024061 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.415466449 seconds)
  done (took 37.906623568 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443965513 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404299416 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.311534539 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397262506 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.095426989 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569127568 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40323603 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08405994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.37915641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635328627 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365643585 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452510574 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617242974 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373682102 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367138174 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.332853729 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599469489 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828019721 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359937956 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.307542231 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382215615 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372248176 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.375568909 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.585004284 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593228507 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.337379149 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.619378445 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.136340049 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63891452 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379173395 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36912106 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365181957 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63326677 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011817209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473610982 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571262259 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396978557 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911857469 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.340343339 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.288414565 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375314518 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36162609 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370745756 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359863437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293533547 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365685679 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075342445 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.383994634 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.072276422 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361911786 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61475173 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456130114 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.369880232 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.93406999 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453151804 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367098906 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.365447643 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457719979 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949796507 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.565656869 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382354934 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.301893967 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369791512 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.302181425 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968085715 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.384183234 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.365196057 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365985869 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297114615 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.29747171 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378334842 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511835603 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.387050579 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014175017 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037482483 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38132139 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292707653 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895746911 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376908885 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.306019392 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593140632 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138330277 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301217402 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.313721925 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300599363 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051310769 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370753311 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.752799918 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383640602 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081582963 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589493673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408368948 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389583624 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588599071 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.247353763 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369552103 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.370435083 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492127914 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384897585 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065461258 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318138311 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.369978044 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621976033 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579131621 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369186777 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.344149671 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851286956 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394986722 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385693583 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368657296 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604417309 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.958008016 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400812052 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.573911891 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395507321 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15795972 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090242125 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370456909 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395623477 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383146942 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639432526 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.105436403 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258398344 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434752365 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377382294 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367773472 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461073586 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.219931799 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.248765591 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.564010841 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405613534 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.385217942 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.371268792 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31391092 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.381984711 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377392519 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.156758471 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5967021 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378946314 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649664607 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309864897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545995633 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378402811 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.591135967 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.571242572 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.400734734 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634060137 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376939228 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377898479 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388578323 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39197482 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470731523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395219973 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.373426852 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633166968 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.371159938 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.377806114 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34414488 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147421498 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374966132 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37408903 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382522434 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96503087 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363876213 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377689824 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259459798 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387225674 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440846825 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378841925 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58689773 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.584308493 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395073524 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.377476317 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.384649455 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593077747 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382564908 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.340303557 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459201312 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.853908181 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964441877 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405486174 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.308909363 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083814481 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.0712133 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377808323 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.569279521 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377951488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57906068 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410547286 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39715011 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953227226 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399625815 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.335636656 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384781714 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388713155 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.380570162 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37875087 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.582986121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.59767542 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386961765 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390774618 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522032963 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.389815312 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311567128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.89396121 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378913934 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378182261 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.148686712 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407896291 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.352139221 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179811502 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652024312 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380981111 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633683562 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.437885557 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416566148 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.384210341 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380577084 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380611831 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.406175433 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386244783 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.38533859 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.353295744 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.816589983 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944432713 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096437986 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917870476 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.725525889 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.403891867 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.280168741 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081034704 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322632478 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034969041 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612653142 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123067781 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335419445 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862235183 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.59496823 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155374046 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632333137 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610309865 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701348088 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.407463337 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641482242 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600481561 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41198363 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39013535 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312590314 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.658040262 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931229642 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39649999 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48577448 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092636137 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40225957 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164579442 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.40183059 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.096025018 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790678362 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.033040732 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774469641 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378537623 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382812054 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182079003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404164652 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90636803 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998065351 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405075898 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.852985851 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330969522 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587655594 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418618659 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379286611 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.906667013 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.390117535 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630979376 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638714092 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313100964 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380960206 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910736255 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257381017 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382037507 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379910216 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109366698 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392197339 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670546334 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396671811 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.599972659 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398734523 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311630838 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314240921 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.074774993 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394388088 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357667331 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859646784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.396248187 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390609896 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409699086 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234414956 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63929201 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39581736 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95618833 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625309743 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385859843 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430698075 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.390824737 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385139461 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.365688708 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.282406217 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622214171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463433359 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607518975 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.34669069 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.296254435 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.861812365 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612409582 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.26461696 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38724307 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631792084 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.118759231 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.393000058 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103455158 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436370915 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387440968 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399549083 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39675066 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409255145 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472782164 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599021493 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.422451204 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399201858 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79058328 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42172274 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394793788 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398167091 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479572449 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.626192466 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.608109527 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.154047035 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960500003 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131465638 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997416647 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668447364 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395866493 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390774827 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315238824 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534629765 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911318585 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660412549 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518996036 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.388695036 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416140103 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390981244 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398055819 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621547356 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663078284 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259088434 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398645649 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053495826 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.27088821 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401329158 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601645583 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877070704 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935157258 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507612421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391415797 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113427768 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677674851 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.480746929 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390151426 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9766186 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.397504407 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.112470431 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400601396 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388387959 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543805891 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644258856 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062444135 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424601219 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.551525156 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.16083638 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399582895 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651341135 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.855284734 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609956102 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99218557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104800962 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660390265 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459129932 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602695042 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.520119089 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537204947 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.396948097 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277869486 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390089017 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233195031 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.097944877 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.399885233 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970087696 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679670496 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.391259911 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.396588076 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420174908 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.401938844 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608448969 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089893593 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614558896 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398075767 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395891678 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.380745649 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977832599 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677442823 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334699522 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.393972186 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632220592 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651854081 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415718476 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.845129484 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.104937804 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932722034 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.362100094 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414111049 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39916032 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095873686 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978932577 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.629096836 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897008712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.053180395 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407747901 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675425296 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397300558 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402002779 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677078532 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.397080011 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396069576 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615926079 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.9935879 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173883754 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.410161844 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.455074102 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.337041227 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.618876919 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405015778 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344116398 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390538298 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.80941337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420795586 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521104113 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402309735 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.40076725 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409115764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.15093788 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673999771 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.399729273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.378857026 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.383676049 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4054335 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493201051 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952884043 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413923808 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.06492201 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744058962 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652817033 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397333783 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.382562073 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397001916 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396828731 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113595405 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364152585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392894244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962543938 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.403945608 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.4129317 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399135574 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.616457078 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60697313 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395491451 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637251804 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430074433 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41586019 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.38043511 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191575447 seconds)
  done (took 1678.134676513 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430892047 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.445690136 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.444158 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.456531058 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418008269 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.452031059 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.490578033 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.535711938 seconds)
  done (took 52.978547448 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.394167205 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.576958781 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.434325131 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.401343792 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.405397849 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.410691999 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.861015232 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.421404668 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.40407671 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.407314653 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.39942346 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.409359507 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.059741036 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.405181056 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.410480797 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.383413694 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.403634033 seconds)
  done (took 66.504806922 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.498690248 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.795986183 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.227810406 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.458025294 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.417631402 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.405247793 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.957599667 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.414491793 seconds)
  done (took 59.48298564 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.414551684 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416618002 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.416741308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416459904 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416183732 seconds)
  done (took 8.389053948 seconds)
done (took 2085.700135991 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.400674755 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.405923891 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402144477 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.403677583 seconds)
  done (took 6.919400032 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.378197401 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.104331965 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.381256193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.4014692 seconds)
  done (took 18.574516986 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.413507537 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.415348054 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.088712984 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.005903331 seconds)
  done (took 5.40287251 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14837699 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16290455 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.142632771 seconds)
  done (took 7.762072942 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.395406925 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.404077045 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.402979616 seconds)
  done (took 20.507679289 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692404446 seconds)
  done (took 3.00061346 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.545782083 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.596321968 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.717434076 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.721613874 seconds)
  done (took 7.886864012 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.794637124 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.780593934 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.591349906 seconds)
  done (took 6.476582453 seconds)
done (took 90.670804236 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.176238636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406361606 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.609528712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.145187683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.622678309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.60674413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.602558885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.115018657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.657052177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.645643125 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.152358133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.623698216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.548643669 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.407002163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.549688928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.404338837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.69473761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.227084157 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.83747655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.038677968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.60743694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.785258115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.982589966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.808318053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.676936134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.557376132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.38087343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40236263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.006176139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.400444731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.556344058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.222593865 seconds)
  done (took 190.768561464 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.398699415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399132314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401469242 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417246923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.399501241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.397264723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.412488384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413768876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.431922318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.401666234 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417167082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403176108 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.402276248 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416909604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401533143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424259946 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.398325742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.400865468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.4015268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418613221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.402527201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430520075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.400771134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.401670588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.400863554 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.416982464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414381041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40079129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401107885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401734605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419639384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.400959134 seconds)
  done (took 206.35797712 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.401657178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400798386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401447497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.401302174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431231947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.403178122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404768508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.406332376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415518271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.407179386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.401208241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419679913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.403187427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.401904148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.422361933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.401903391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.408453073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.408096054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.405359286 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.403749032 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.405635134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.41053362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402820325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.420038978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420192551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.403932022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.402327149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.402957531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403693356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410056154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.407954712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404231159 seconds)
  done (took 206.356506761 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.598379366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.416689669 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.418048056 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.350193694 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418939971 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417204083 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.412013841 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.613416181 seconds)
  done (took 14.959456859 seconds)
done (took 619.766919855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.717829272 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.442226041 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.61909609 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.432952236 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.176420012 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.449233417 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.432797309 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.603084787 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.325284542 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.606551446 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.63488113 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447822877 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.780535526 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.429740158 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.681424747 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.532331473 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.281748147 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.399323043 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.74568626 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.925718435 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.689702132 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867045036 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.620067085 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.319417888 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.794282193 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.870906381 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.152117806 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.276905012 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448106722 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.754183941 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.03190951 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.387844183 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.492564176 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494022395 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.548628483 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.536029634 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.364237821 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.490194418 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.634623943 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.638909854 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.9638911 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.155143275 seconds)
  done (took 94.511128984 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.397443334 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.399622365 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.398750126 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.397381397 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.400030262 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.399778283 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.400777592 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.398189448 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.396413898 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.398079339 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.400809622 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.401566256 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.398855968 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.39909766 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.400676933 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.400373134 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.401511769 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.399236554 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.399499674 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.400795024 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.403230284 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.40207747 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.404135744 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.403876833 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.402743519 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.401679495 seconds)
  done (took 37.72612532 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414400682 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.664783432 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.833970406 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428527248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.417016942 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.421400873 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.489676738 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.425313499 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.422214729 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420427102 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.573835141 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.425993038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455741998 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.859312762 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.419958733 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.41947992 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.418904167 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421805217 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.671614799 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427972909 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.524016383 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417317798 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.498925847 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.427910698 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.443375046 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419562127 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422799936 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.989052235 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.440549568 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.57238049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.207441292 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.501002714 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.964060074 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.859544056 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.207375448 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.429180482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422891155 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.57974726 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.421680841 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.4192973 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.497800537 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.419597838 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.837047869 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.089105928 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.436461252 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.419060571 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.013951939 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.595895399 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.66050736 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43389701 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.862169573 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422817855 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.423703824 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.426160294 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.662102779 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426935702 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.419488998 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.021469662 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.443469283 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.500167931 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422047902 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.425653762 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.682548293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428846745 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.673000137 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431098651 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.428417863 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.444459978 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.8417521 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.421665234 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.113810384 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447411574 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.423075053 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.575363359 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.675649093 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.050853155 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.451128446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.68365723 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988167697 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.521472446 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432352862 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.980141046 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.526812316 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432645045 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.423836444 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.431197101 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.424628975 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.477221374 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.502843521 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.053590412 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124308067 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.054474178 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.519569048 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.440886668 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424901572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.022440284 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.440283755 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.42653711 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.836441742 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113310248 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.440290073 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.430657927 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.121841357 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.442393357 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.504902273 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.428861753 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.847710406 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424234768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.477620675 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.42239304 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.431988609 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.448376077 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.504174293 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.432559369 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.427441118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.084690185 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.599043417 seconds)
  done (took 187.225161603 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.427638081 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.417342615 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.429507838 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.415942725 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.417356956 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.424834545 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.417640428 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.416060108 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423876085 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.420708854 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.41787585 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.418899607 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.419000934 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.417992174 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448584862 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.42709134 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.072232238 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.422015574 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.417903142 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.418625739 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.215385866 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.427576967 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.418137442 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.418577513 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.419128306 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.420251564 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.420798502 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.422156803 seconds)
  done (took 154.580866823 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.425369716 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.981639564 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.445560949 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.555189029 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44637247 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.427949161 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.557641419 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482939981 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444837419 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425590073 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425664478 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.724845231 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.427930394 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.943854238 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.62311855 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.581377222 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.942745112 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453162081 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.427737434 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.42846618 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.559878043 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430064066 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73219697 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.99695529 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.456051973 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.995273039 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418964465 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.43527531 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.430631418 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985526715 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442748064 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.72916165 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.503822065 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486661659 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.003923951 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.951298513 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951507139 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.57460567 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.427776209 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.428872558 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.43135659 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.413515197 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.988518571 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449280031 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430585215 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974789127 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447214993 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.431894908 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437462556 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.429707876 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.48885454 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503985729 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.756211764 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.000979958 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.532290795 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.438375266 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.561368009 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.791124324 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.439901683 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.935211485 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.413398485 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004891397 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.454717399 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.415881716 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435393792 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.43826153 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.580453995 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.558984915 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.936932015 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446448029 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.938596193 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.59548164 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.428906206 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.430500734 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435184857 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.00641894 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.964430597 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.596776329 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.561632364 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.621609619 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.42267729 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.43158466 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.41730541 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508380461 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.427766201 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.006028205 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.961884965 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449791698 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.432063019 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.435037602 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.434013679 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.606924396 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.029395603 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.532833582 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.928192048 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.756820284 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.748571276 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440492614 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489694149 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453013483 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.742830413 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440677244 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490435102 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.863321309 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.748693914 seconds)
  done (took 169.791387817 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.665927725 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.600485016 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519083853 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.590354907 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.03528142 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.995882151 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.74925656 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.576977495 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.546079814 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.687554001 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.573563539 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.522278097 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.645932734 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.50704888 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.174163804 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51953671 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.544046391 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.579158758 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.584601766 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.424126386 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.106025613 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.725904762 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.620920193 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.320582405 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.52326874 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.227500951 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.991717823 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.985327278 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.616519742 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.738763887 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.979211848 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.557588269 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.410689635 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.15933963 seconds)
  done (took 68.34044124 seconds)
done (took 713.490504354 seconds)
SAVING RESULT...
DONE!
