cset: moving following pidspec: 15445
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.261112699 seconds)
loading group "string"... done (took 0.559371701 seconds)
loading group "linalg"... done (took 7.328645907 seconds)
loading group "parallel"... done (took 0.158348701 seconds)
loading group "find"... done (took 1.087490678 seconds)
loading group "tuple"... done (took 1.796127989 seconds)
loading group "dates"... done (took 1.218830352 seconds)
loading group "micro"... done (took 0.224052109 seconds)
loading group "io"... done (took 0.919668489 seconds)
loading group "scalar"... done (took 37.557975012 seconds)
loading group "sparse"... done (took 11.525315382 seconds)
loading group "broadcast"... done (took 0.956429453 seconds)
loading group "union"... done (took 12.590105817 seconds)
loading group "simd"... done (took 4.681808166 seconds)
loading group "random"... done (took 9.202479212 seconds)
loading group "problem"... done (took 1.894229488 seconds)
loading group "array"... done (took 20.457023363 seconds)
loading group "misc"... done (took 1.7723088 seconds)
loading group "sort"... done (took 3.202692706 seconds)
loading group "collection"... done (took 17.635722783 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480390233 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122443521 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113073299 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117703831 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.130770394 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114090427 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121661142 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082962923 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.805516036 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143331193 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118196024 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412798261 seconds)
done (took 5.067224201 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170888358 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083136471 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081090798 seconds)
  done (took 1.291267952 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06560793 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119896392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066383169 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066191429 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066592388 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066895838 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067832849 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067704434 seconds)
  done (took 1.64890335 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073317962 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068686849 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068932062 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068207867 seconds)
  done (took 1.407104486 seconds)
done (took 5.720763937 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761614438 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201395876 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182613884 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398593321 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128336316 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154026709 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642133088 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.308462926 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184842316 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082622584 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106185748 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316851254 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107485162 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639140178 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076416656 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090062751 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136026814 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433163195 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067112744 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082120981 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088409132 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127485217 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087941075 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073911405 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143355821 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067497253 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129863321 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080169474 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065757333 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207075991 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172318711 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.643482894 seconds)
  done (took 10.151766732 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096127953 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097176178 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068850532 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136582815 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098034151 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069872243 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070527236 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067081349 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087020208 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127661209 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088099517 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100865214 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065070318 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068833084 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084914045 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204395984 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082359969 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081670516 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070124917 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075378275 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116078944 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078963193 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078499319 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077253115 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128225889 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180327227 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099503531 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098904824 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06912961 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082592816 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117144159 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128909313 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067359525 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067948763 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125394724 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096157891 seconds)
  done (took 4.614627215 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.291472732 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1404244 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092562893 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133388545 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066179633 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108134704 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083932803 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081442919 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.206272598 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.29079048 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067563642 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584929285 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110937435 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103493571 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068070954 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06793156 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066753909 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.352081329 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.111076672 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104216855 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081888581 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070479642 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069441313 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342138458 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070291213 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064626882 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067791459 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057949057 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123389809 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067706707 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.91803315 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124112393 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066390758 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10020131 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162897152 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088973488 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0890088 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140166945 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066443242 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063104176 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1469437 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.068792669 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067170988 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081230855 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102045141 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110111041 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064273524 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065526313 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158847539 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062521709 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076424416 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.944586501 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152453623 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076659095 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0630005 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.236678092 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08324298 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066803707 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06228972 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.161525185 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130360079 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.063923952 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.062993524 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064924721 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066107803 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.344044874 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06255544 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712162134 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067117901 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.072203345 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065248608 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065211582 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068377539 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068511944 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.080727361 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062686287 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070195485 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062366542 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062804166 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063068464 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.080638259 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.339384751 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.062865448 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064853796 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061054643 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.081868073 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09280477 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.062947487 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.061786562 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096799259 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06514075 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06297483 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.321553853 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068772994 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085266846 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070473672 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114808329 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069165996 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.073869112 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068217238 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098152224 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070616199 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099133994 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08179771 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068471921 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398483489 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064576071 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064495274 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065624545 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065328702 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068482116 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064673026 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0681054 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066676459 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080647807 seconds)
  done (took 20.575868346 seconds)
done (took 37.760388519 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.275360945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079461937 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075956592 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076126926 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076022452 seconds)
  done (took 1.835703269 seconds)
done (took 3.082660598 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120086503 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099316625 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064887401 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095857802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064776156 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100985996 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099623075 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081421817 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100122313 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064974683 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096833352 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064934297 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064634483 seconds)
  done (took 2.372228199 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08339864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084190675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069885195 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082898511 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064370247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083056685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081142115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088955547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081069018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07268334 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064116248 seconds)
  done (took 2.083345016 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082193425 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084018388 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070293186 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081868224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0640489 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082122595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081458747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086696331 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083505381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076292109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066330799 seconds)
  done (took 2.077941759 seconds)
done (took 7.75481599 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077366455 seconds)
  done (took 1.289415853 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591943625 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.070695416 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081823201 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112802771 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185854378 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120894665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278357623 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087462658 seconds)
  done (took 8.925176924 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089329325 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082573725 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073270159 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070874984 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070003111 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073245997 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070322392 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071102606 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069209449 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072336032 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068892772 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072063774 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071710097 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070010803 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070129745 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069189456 seconds)
  done (took 2.445223956 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093264919 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091718635 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074132475 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075857305 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072493354 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072707507 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075118628 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074321805 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070939054 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072309889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075189939 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074074629 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072163579 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065761661 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074202565 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076364839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071265022 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074693491 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075980908 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074953639 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075008564 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064907716 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072012319 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074773457 seconds)
  done (took 3.114501361 seconds)
done (took 16.995370308 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112724785 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072042573 seconds)
  done (took 1.405134818 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081067654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084082435 seconds)
  done (took 1.392058155 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08306395 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066298592 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091754381 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078733789 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066885285 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066469579 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088212158 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067019461 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066427946 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0663683 seconds)
  done (took 1.969094311 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069004144 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07874356 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071017355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081648189 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07402908 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06490092 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073219354 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068143437 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078564268 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063533469 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071618218 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08308388 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072076392 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084827662 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073509091 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068977362 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071730207 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067916036 seconds)
  done (took 2.548378604 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066495902 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067342221 seconds)
  done (took 1.366300604 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067663305 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064255086 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067352726 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06699179 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063407656 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063166143 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064078523 seconds)
  done (took 1.68617226 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389881187 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111795952 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306534207 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074045893 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083879498 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257319918 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066155598 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071657142 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071481374 seconds)
  done (took 2.705222642 seconds)
done (took 14.306090079 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079171232 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086276685 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095973219 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368508777 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092545911 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066570632 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114887068 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193470896 seconds)
done (took 2.34144184 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212322553 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618373045 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.394215401 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204567645 seconds)
  done (took 2.458467483 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327257318 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08741778 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059492307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06685803 seconds)
  done (took 1.78979734 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066203545 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069034031 seconds)
  done (took 1.380938027 seconds)
done (took 7.086684646 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067275421 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085675684 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066960874 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064968962 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067033819 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064308923 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064221697 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066493659 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066535454 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06370275 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069255111 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066751495 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066625907 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063916997 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063994505 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066226245 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063756639 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063825986 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067083362 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066887143 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064125844 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066904952 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064248103 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064131015 seconds)
  done (took 2.875967984 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083211664 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06698535 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072865648 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070952385 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070638402 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071557698 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071721673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066738389 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071513302 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068835415 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069961876 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070229808 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068584687 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070419099 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068800204 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070815526 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07208531 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066916904 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068440921 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070510207 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07129203 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06667914 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070521863 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072005037 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070300523 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069829773 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068872291 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067221291 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072146539 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070358664 seconds)
  done (took 3.364402166 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070309373 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064334074 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064783849 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070751435 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063922367 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065815539 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063794743 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064824592 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064631369 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063885566 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065486432 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063938822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063948345 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064909079 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065329672 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067327131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080485908 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064340037 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064089627 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06510686 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067237854 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064106645 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064097824 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064100801 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063974756 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06400301 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064726975 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063984918 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065178891 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.177777312 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06839572 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068644172 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064377529 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070323992 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067273263 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063305157 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068017485 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063478176 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064438949 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063790504 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063054159 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064267606 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063513383 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071113978 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063869077 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065785954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064683796 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064963736 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06407601 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066612954 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063320506 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063693267 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065804606 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065273608 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067488805 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063685581 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064338521 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063193649 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064292455 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063530518 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063112008 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063056446 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065805868 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063994142 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078268442 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070531806 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063368902 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065613878 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064658061 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066397826 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065223187 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07647508 seconds)
  done (took 6.104055355 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08774832 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087866261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066157723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065931829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062178715 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06455644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067959342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064751771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065764186 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070047456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064697823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06578718 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06631171 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07696098 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064459428 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065910559 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069779872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062529808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064507919 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067474139 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064389742 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067740165 seconds)
  done (took 2.76744114 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155104107 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070675503 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105979621 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073570243 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068223384 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07323128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070292391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070382158 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070503757 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068830026 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068276477 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071325119 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068287798 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0685662 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068719499 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068516223 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070299619 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068463699 seconds)
  done (took 2.639678396 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077604984 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066999844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087173265 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067058817 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06590677 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06924024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071084016 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074681806 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06868821 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066367816 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074463114 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068419749 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06855528 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06643177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068631566 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066662763 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068532439 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066332127 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074593988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071178843 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071197477 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07469413 seconds)
  done (took 2.815993689 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079669801 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06858057 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082319048 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068761196 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063164137 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064909133 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070825906 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065990812 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070636255 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068111429 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066615984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064620308 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069743292 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066037012 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070047972 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066297544 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067991159 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065997459 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067859846 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062257076 seconds)
  done (took 2.633890492 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086948667 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068672707 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067624271 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076683627 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068167014 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067480602 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075667457 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067825127 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067832543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087756628 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068280875 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067856156 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075979551 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072492808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067620281 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075667838 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075123337 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075758673 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068199607 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067706203 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08774959 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068473637 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075311157 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06765725 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067639688 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067845116 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068076852 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072469862 seconds)
  done (took 3.289779076 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067028399 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067162811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06457406 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064275553 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064527653 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063977508 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064188592 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064280208 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066300385 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063771826 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066415144 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06649136 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066248794 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066963011 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06651453 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066596388 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066987622 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064598002 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063937361 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06397166 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066861939 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065916469 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066581591 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063870325 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064260879 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066199592 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063858201 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063691976 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066412776 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064114723 seconds)
  done (took 3.22909131 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075950161 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073406379 seconds)
  done (took 1.418546332 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063354429 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080894304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064087444 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070130333 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070348504 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067391244 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073995313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070108926 seconds)
  done (took 1.826015548 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082533353 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078271543 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068510098 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081045186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077562759 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083514583 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132980417 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067955356 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07385502 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064958654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080112808 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065714961 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073754884 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067415022 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072797174 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072695882 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06430706 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07282301 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068973659 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065485921 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068217058 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075915679 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068855113 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062702187 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067578483 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088067987 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077594884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066504949 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070023098 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074407296 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072549556 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060732571 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066218317 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067226554 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065027111 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076251415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081876602 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069533559 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075103921 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067542429 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077189927 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061813067 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071003035 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073226045 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076364228 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067047687 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067455337 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061401351 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063822767 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068431195 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061805579 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066316904 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061035691 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075152018 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069616124 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076765777 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064882634 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067622299 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068865625 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069534734 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072814386 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068043973 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068793946 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065733352 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073339009 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07100572 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075392881 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061501158 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060478558 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064722885 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076006991 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088861453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072744798 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067123103 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067278084 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064391851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069764837 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068269159 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072559831 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073076113 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067242537 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072338084 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073892237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066955962 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06955494 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075034082 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065310915 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06999329 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065008605 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082753519 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065983555 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06496602 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064845297 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07727512 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070256234 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066479286 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064640954 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073662681 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060682089 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067216266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067124865 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067121612 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077219928 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071085072 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071809362 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075512906 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073569133 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066283744 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068702323 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062988046 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066695316 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065119026 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073849719 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059933917 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068335159 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066294816 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066232014 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.19977951 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066282359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067189107 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074498723 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073575615 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066097778 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063564487 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070196222 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067303989 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070140608 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075045685 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065877368 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061803894 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062716657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070455126 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06639456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070836977 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072643225 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070281177 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06166203 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065518049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07293868 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075840808 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067590925 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068132751 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073469554 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069269617 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066664379 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073775633 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072237943 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066064088 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072648395 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068121913 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062520853 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069607058 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070566672 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065984996 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071041993 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070736171 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07019766 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068326963 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066081402 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075299276 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068543993 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06652704 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066931644 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065188884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077428043 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069017552 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062119558 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064213102 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076435999 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065279272 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066267035 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0663608 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06865903 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067655072 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065537498 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066774148 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068701775 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07722872 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071525416 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067282354 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072738739 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077845833 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067320188 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069852636 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066099816 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068403341 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067967672 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076521546 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072484423 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071060977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069609304 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063902119 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071965748 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074356372 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066165464 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06449204 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065605598 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070560327 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071991269 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070655624 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067237862 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064795595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066710301 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069499483 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068955514 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065888079 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065417341 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073156872 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064478279 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073308609 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067715285 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07655898 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069642497 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061696646 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069750683 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064324117 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0723164 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061689367 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064594333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065973943 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067253083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06503294 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068240066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060658878 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072742949 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073649071 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066771315 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065620894 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066023523 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07297439 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068016637 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070187322 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069854488 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07205614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076496689 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06584279 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068626352 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074867336 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064967506 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188354841 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073021126 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065982266 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066150697 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0657254 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065022298 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070428228 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075590402 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073577034 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06099228 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070167294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06653177 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066410379 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062631631 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071317059 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069206764 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068046977 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074177335 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068398962 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067234169 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070929558 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06741478 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068523018 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06810586 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070785212 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067615844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068493152 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065943864 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070443433 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066885505 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065197814 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069160798 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066746108 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067539244 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072404114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066951248 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066830031 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069886309 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068667463 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067727234 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067892473 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06637748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070190393 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067928268 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067167828 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070013859 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063071264 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074209459 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066276631 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074837985 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067560995 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063607018 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073969941 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069148317 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073201482 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06754199 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068221907 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068315481 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066860281 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068689085 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074077869 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064696766 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077761011 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075070772 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067581776 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069512809 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067402554 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068560311 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066004968 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068238659 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067180819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067003545 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066686898 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071645172 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069359502 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067258877 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067882976 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066863303 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066486815 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067067696 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060964719 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065367879 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06581439 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066485872 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076246836 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067375272 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066429614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065823582 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068038869 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065368325 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063085352 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074536652 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075753205 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067404598 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073561359 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065503987 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068444593 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077096716 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061236538 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064546919 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064255257 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064133547 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073624122 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067129731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075710994 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066429343 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065677171 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063987129 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067126665 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065286785 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060565185 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063895377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069350331 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064994119 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064985821 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066172823 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068183943 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067084755 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075459027 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065472516 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066637026 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065876683 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063299805 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064860202 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064726199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.200949602 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068311124 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065449829 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064532876 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06702368 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068317114 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068787855 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066998836 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069033301 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076447131 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066958126 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070243195 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07017026 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061816887 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070473247 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066887933 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067437639 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066082838 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070097836 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070963095 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068075649 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075922583 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067779672 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068375964 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067928385 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064774336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066445083 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067297346 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067265929 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066529114 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068136073 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075504675 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065537776 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069593003 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067117614 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067058773 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07340708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068197552 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069850844 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073772085 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067916044 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068777813 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074738008 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071161898 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070559737 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067757222 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068217202 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072353124 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066014532 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073327915 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066991324 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068214087 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068722192 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064587157 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066724999 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066716345 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066786702 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073224664 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067963128 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066698833 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066874609 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065107861 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067416681 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070048056 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073961302 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069738884 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070477313 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062176123 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064204413 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068125998 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06498828 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067903622 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068521958 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072082101 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068979955 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066761155 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065533467 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075143113 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072168462 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070133843 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064055846 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070277023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0670483 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06825067 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067357163 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066883125 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067506988 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070157219 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068244974 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065779035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073442796 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070222587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067619866 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06836948 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067545068 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067089611 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06210999 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067355042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068706856 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071562245 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068758672 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066374525 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076777795 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06425878 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066713766 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069818379 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065630615 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070676544 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061570329 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067744461 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067114035 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066817663 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061403271 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065454044 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064054071 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068018895 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065508397 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061384064 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07607601 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074591943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069190507 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065069549 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064128973 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061225091 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060320101 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195588375 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068336971 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06920223 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077184582 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066572734 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065816085 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062358865 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066805406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069696122 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070504905 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064287909 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062498404 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066342159 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070326014 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072455225 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065275352 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066268164 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070052951 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068958232 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065225594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071225162 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064237318 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071051818 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079683985 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067211973 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067745329 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073375554 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074660444 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068319602 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061768451 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067847073 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070045208 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067253409 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067311248 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067798757 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082266158 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070660288 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066120381 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06555085 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069325747 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066632611 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07515358 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067080863 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068187207 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070945996 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070041292 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077230359 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06948523 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074592804 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070339675 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069983285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065141598 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0675862 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064886743 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065733507 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067685362 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068085 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072683162 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075957184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066668837 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07785338 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076289656 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068746832 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063389973 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066766722 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066457919 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062702303 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067327212 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065060701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065200734 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064756921 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065597231 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067311461 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071430571 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067462834 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067297646 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066240479 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060874592 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068766195 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068937238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067605689 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062858751 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066584407 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067300505 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071106598 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069356302 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06438367 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067941868 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06814162 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066936746 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062035606 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072785946 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065486909 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068135087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065861476 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066619149 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067415278 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069844162 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071635917 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067925722 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068740145 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070264554 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06917077 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064341624 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064284787 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071793282 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064544586 seconds)
  done (took 42.808118571 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100023072 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063827541 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062121571 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06232539 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074117197 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063111618 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06184259 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063401168 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063262485 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065444114 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062349158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0627303 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071141509 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077937004 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074049969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066865649 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062115753 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06333787 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062295861 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062978176 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070983274 seconds)
  done (took 2.771393336 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074451618 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071246831 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073366922 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076469029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06716049 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070690258 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072812847 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070751804 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076274236 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067479602 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076397108 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071095952 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067302101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067156584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067381097 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071132701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075964608 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067633628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071023424 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081514286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071414579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072469902 seconds)
  done (took 2.914512566 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067681496 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065702731 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068160847 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061467223 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066355886 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062081717 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069433053 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064093252 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069081775 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06504541 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065092582 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065211676 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067368329 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061440723 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066289763 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063775117 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108913835 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069347642 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065592965 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066740157 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061798373 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067996073 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061541544 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061839456 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065063431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070037803 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066266324 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063896298 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065553938 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065335326 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065756518 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064257598 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067618974 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066759657 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064727952 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065092132 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065816149 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065879411 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06154553 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064083494 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066291678 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061941868 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065801004 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067594159 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063857664 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063992505 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067223032 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065285617 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061154106 seconds)
  done (took 4.578523032 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080847562 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109323466 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067606052 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088572934 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080194462 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076037895 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069924739 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089637574 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064452294 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064572023 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081846324 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079854545 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065601179 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070246189 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072685894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065643019 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066676167 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065018223 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070016625 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065194525 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06956706 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07276893 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080272067 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079151637 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069804823 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064662341 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065141182 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070038697 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078826801 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070296425 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071307926 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071199512 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081189067 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071284349 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065163003 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068015145 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081938898 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065507157 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06803444 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063668898 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067870367 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070088621 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07225552 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081610653 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065628112 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0708752 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065298082 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063150521 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078229304 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067631254 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073745626 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07983652 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069609099 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065604033 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069760309 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080070955 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065363001 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063843568 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068548957 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077411478 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063374852 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069151079 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079272452 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067424408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072694061 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080159046 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071087142 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069460311 seconds)
  done (took 6.386105308 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075063713 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.0723876 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081337326 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080707553 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072382559 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072819697 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072112846 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072588567 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072166898 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076780236 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072498797 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092986569 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067714783 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075288007 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073072569 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072361086 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072568683 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072472417 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072649527 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072525503 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072561865 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080376728 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072635736 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080490026 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098220176 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068037743 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071856954 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072260098 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080514966 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072260061 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079590393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072108883 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072355001 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08078849 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079393581 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071936525 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065549184 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0716922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072715471 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071867653 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067529316 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080408171 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071820901 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067362606 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0722458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072065332 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080339223 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079079365 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074548716 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076481909 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072129425 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080079659 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071847038 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071993283 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080031728 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104745621 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080303098 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079997069 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071887601 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080114597 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080323415 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086022009 seconds)
  done (took 6.062596198 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083022134 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075160575 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076835657 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061319751 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064487308 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069939401 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063895282 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064047423 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074572381 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074340036 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077034955 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070037757 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072466125 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076834331 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069674223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07331381 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069972211 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069576181 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074365485 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069414964 seconds)
  done (took 2.792693145 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073930949 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082324644 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066846504 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072483575 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068746669 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071802831 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067906625 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069125393 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067187667 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069063045 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075721391 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076656245 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067034449 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071870627 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075574468 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071413778 seconds)
  done (took 2.501920216 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075446879 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072891486 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080781579 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066615945 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064353445 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062546126 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065667188 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061411792 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062912996 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077594488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066039461 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068329779 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065864659 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064413205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063108636 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068976999 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063469762 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064066649 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065881897 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077944268 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076724042 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064243652 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066897301 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065701213 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06594688 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071158899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065292197 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064046157 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063788467 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066238233 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066535797 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069136703 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063071014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064019389 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064261599 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063304579 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065679893 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066233073 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068332219 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06581563 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063676657 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065696996 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065704533 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066223798 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061921467 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065851341 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062027688 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068121953 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063819068 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066471532 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065616981 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068153104 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065988524 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072786603 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068587743 seconds)
  done (took 5.03020168 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079402308 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070163506 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062378143 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064754189 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06857045 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067419554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069195972 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068159287 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067560161 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064071885 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06741295 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06825953 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067872272 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069310278 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06756411 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069606743 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061687597 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067176493 seconds)
  done (took 2.588035166 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071155227 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065445318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07290463 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066678585 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065802202 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069449328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062203676 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06492112 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064403328 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065958777 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066023071 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068261013 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06438394 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067766993 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065842041 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065660444 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068027082 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064786538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065792595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061781374 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068275501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064675437 seconds)
  done (took 2.820845432 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07217527 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091827381 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137856695 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083529054 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081377992 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078096366 seconds)
  done (took 1.907546574 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090790026 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079250159 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06680222 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087947055 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073467118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067850104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067673331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067889316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076115692 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076318226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068197835 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076771164 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077559578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076464715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074203 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073360992 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067715465 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06735686 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066572988 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084887591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067936012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075938153 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067769493 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067763742 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067586285 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07543082 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077154157 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076572477 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067716878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076443644 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073621402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067652389 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076596382 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076930744 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069230696 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076283595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067724109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085042323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073939237 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075707182 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069315488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073930989 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076646837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072322382 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076375336 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067792343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07264985 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067768479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067786035 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086512517 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073673828 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075313423 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073579881 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076108912 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076486047 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086526756 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076292115 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075093961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073288773 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078623933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075380947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073158478 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074927765 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07649257 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073494112 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075426284 seconds)
  done (took 6.258600621 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081993605 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087155462 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068383138 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07683465 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076053325 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068289482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068248423 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067937198 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067676952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067608763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108495713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068645789 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075801207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075908455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068788221 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067716117 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067994721 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075913324 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067242467 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086412764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067893883 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075725688 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075555984 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075798573 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076973198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073728077 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067978582 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06774346 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068148353 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067798 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072783087 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068142304 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076096155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067280942 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075860457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068034425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067832699 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07294829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06757606 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073663091 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07577543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084127344 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068105033 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067319206 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076299867 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067425424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06773437 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067449216 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067796548 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067585549 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076464053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076289444 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076353154 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075352011 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0680331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068093031 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067891523 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067626489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068068724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073218405 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075747601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067391916 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086411549 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067648291 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067743155 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076295247 seconds)
  done (took 6.168710749 seconds)
done (took 129.798405839 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183881427 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168789397 seconds)
  done (took 1.710249679 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06906967 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098749423 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07848971 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129108243 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06745946 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100264107 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099902487 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077999466 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066741094 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066296869 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066168818 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06907073 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131793865 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066761326 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066352118 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069060377 seconds)
  done (took 2.693073659 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097147905 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158831908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099448139 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065103977 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098005286 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073164165 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065194259 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075341906 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071162477 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065541637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073568849 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071273137 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06508864 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071281694 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071218673 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073170381 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065538331 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072900831 seconds)
  done (took 2.806425813 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101828296 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092098221 seconds)
  done (took 1.57027884 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160645988 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.108282789 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151559845 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347864209 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167939976 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231947573 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129802491 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130668309 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.12168714 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124560621 seconds)
  done (took 3.04746972 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098634902 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152806116 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257499641 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116171496 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072533988 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095189455 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116812959 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078208424 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081148659 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080429425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080867711 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076814353 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098726865 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073467897 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073832581 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076288339 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102476963 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072722957 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074548338 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07681342 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099325575 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065876756 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073496617 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072539357 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077483625 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077808918 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065608713 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065550961 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077019584 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075726775 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077256594 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094109539 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077558458 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107190223 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070620771 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108053645 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076776702 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074702197 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074437276 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074036049 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079369656 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07903615 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072056927 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076038313 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065137995 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076378381 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065576009 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065881806 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078156725 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066797288 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078276113 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076983608 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107100708 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066992443 seconds)
  done (took 5.992239927 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102375607 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105836735 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072100346 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10878151 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097712354 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071330626 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101686739 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091527505 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102815039 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093079914 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089136016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070897686 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082970957 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083523524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11032619 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102215512 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095510453 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071065726 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101938981 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10323457 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068348869 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095058598 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091329194 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102132139 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067575668 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070842032 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068522171 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070797128 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077461121 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078444216 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070197441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102898865 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084743327 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078863353 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068094442 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068399715 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068726196 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079504079 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098296109 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079431235 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077826367 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067886579 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068284401 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069829365 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091156096 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067607512 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078990853 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080619351 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079182053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069833365 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070363082 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06809542 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069818565 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080413579 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07793585 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080975275 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080582634 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069142533 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068662202 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072218446 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081579302 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079414076 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079175894 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092953244 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079644529 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06856976 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080544746 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084233934 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068396486 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070261651 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068759031 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070153638 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069646902 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078001479 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078636786 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070796225 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069943581 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068618728 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080637702 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078859146 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068432965 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077371917 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067308034 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068997253 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070175038 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070345648 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078374244 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079877823 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069955385 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067971768 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069452282 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068694219 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067077223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07717611 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080776559 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078924002 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078991252 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069375116 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079119023 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077851901 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069472804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078686226 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197452031 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071399812 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070809727 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078954088 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078106084 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079655089 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071059147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069396513 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079059168 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082075247 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068952593 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078725926 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081431497 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080217649 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068733988 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081264847 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069719599 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080512174 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070624273 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081181104 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069439413 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080022458 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069949451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068011039 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068903001 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080940558 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071329374 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070024038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071025393 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07022377 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080084557 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084208797 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071735138 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081521472 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078933027 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070245944 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079548393 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069683366 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08080527 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070648777 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070686908 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067781182 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083035717 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069022527 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069486326 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07069141 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081032263 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068896175 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079688575 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079135179 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068209864 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081590244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080836256 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077205788 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07997551 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070627372 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069486084 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069124797 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069892121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078559574 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080353062 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071379294 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068728118 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078409247 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079822058 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067596771 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078576605 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079023245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078776133 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069019667 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069849886 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080312148 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080679424 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078284436 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078699638 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07903983 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068488 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077751097 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078453406 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068588116 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085064467 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068620767 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082406341 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079530968 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07681686 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079152912 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081264291 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081081445 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08042085 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083213138 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068169015 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067868141 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079304925 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068194604 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069183559 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077907083 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070148617 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070654955 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08342984 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068526725 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079960172 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067538852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077117448 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066457644 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068810724 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.213567347 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070256538 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070954194 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080859585 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07161364 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079818641 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082275731 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080063718 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069019172 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07083512 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081013348 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079963445 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069170168 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069303197 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070705052 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079065521 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078437732 seconds)
  done (took 18.888285965 seconds)
done (took 38.088498892 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207902613 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151006122 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179841872 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11846048 seconds)
  done (took 2.132249555 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122055139 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101057822 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095271462 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071451091 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102222975 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064934626 seconds)
  done (took 1.968522757 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313011514 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211898061 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182591589 seconds)
  done (took 2.115584009 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199434002 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187667857 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393533768 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252754331 seconds)
  done (took 2.549900451 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142757498 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089842833 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066814961 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083167494 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13499109 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163151458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101553454 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126005431 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07775566 seconds)
  done (took 2.448228677 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147773086 seconds)
done (took 12.772624457 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.226245809 seconds)
    (2/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092835915 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.19800086 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079401143 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.187857629 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078466341 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.172769409 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075954433 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071422682 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.133368151 seconds)
    (11/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07753297 seconds)
    (12/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.173476075 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.206223078 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.193753058 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156793024 seconds)
    (16/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074142329 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077438929 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082885318 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072634521 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.155174381 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21815406 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108624158 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070819466 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104436327 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111055161 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080543719 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098875667 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184289163 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070403567 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075416281 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095712027 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117635604 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120140007 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071555482 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051894007 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147791999 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072218123 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071259268 seconds)
    (39/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072000504 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182447937 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071447048 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133763447 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.155949222 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111753915 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.160973997 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.195444447 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15038606 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.153514685 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081668691 seconds)
    (50/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077443544 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179439741 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07253142 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091402307 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 0.126778433 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097301562 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174064956 seconds)
    (57/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.148403035 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086378008 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183908758 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086017102 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067247533 seconds)
    (62/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071341282 seconds)
    (63/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.108456071 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092759303 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072907212 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159429265 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111877795 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07549534 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.204943123 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120824075 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168531242 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.20499153 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071664144 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06514186 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078827964 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155515985 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.1061603 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072928916 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05119456 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061744577 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.225229593 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153615996 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.186033659 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068237989 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073962227 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076536963 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07642924 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089824399 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.067053926 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096383879 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067556536 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150744543 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092366421 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15699889 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098673994 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051308839 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066172356 seconds)
    (98/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.374048124 seconds)
    (99/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161966482 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053218446 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075881937 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064715669 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051369328 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067918954 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051381594 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 0.126112849 seconds)
    (107/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064837196 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068801453 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13680714 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065751772 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05186207 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128765634 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071947998 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052321572 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181259298 seconds)
    (116/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108171319 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172654649 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086070199 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140737854 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052810972 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065258758 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089572975 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053082089 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051442445 seconds)
    (125/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148694175 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.134060931 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073629416 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071921333 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096780023 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067040274 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087322355 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070576831 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090981732 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071766297 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.174616119 seconds)
    (136/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079166279 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126710834 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06623447 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075756476 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120247495 seconds)
    (141/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109312814 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087175412 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.18536557 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051321497 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052349749 seconds)
    (146/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052054613 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10748479 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073579596 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100653363 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066549175 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183430226 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071617556 seconds)
    (153/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069429822 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081081072 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053626308 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088920456 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052620558 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065296157 seconds)
    (159/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052519976 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074038362 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092457455 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073901064 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05359933 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11728536 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.190694657 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140733416 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076105992 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054486905 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053962991 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177578249 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076206849 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056258626 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073592125 seconds)
    (174/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066420699 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112035216 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053267344 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054539 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074780743 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066211334 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096028757 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065407613 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053398214 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053315325 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080958514 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.11091272 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078180265 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066885305 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053764613 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056399755 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073613178 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069653209 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052631495 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066352131 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.331644591 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074838397 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052390144 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072883422 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053794052 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068958827 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051850223 seconds)
    (201/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051603559 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096117202 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066594241 seconds)
    (204/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066485901 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064414451 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073784436 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087676508 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066759957 seconds)
    (209/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119993223 seconds)
    (210/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052505596 seconds)
    (211/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.156094522 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052569619 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066469619 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087924125 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088655699 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089886945 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075447181 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092047058 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066807461 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072797893 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051696299 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067453644 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072912763 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141702829 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084475311 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066773083 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071468838 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087034089 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052849466 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074528719 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071595421 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086196455 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149679947 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066038171 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051940796 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068080958 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064630351 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051503493 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066160283 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089292844 seconds)
    (241/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069776118 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080368958 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136922095 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052711009 seconds)
    (245/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184837428 seconds)
    (246/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077030068 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051514739 seconds)
    (248/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060778919 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066156486 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075170908 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068966314 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08799334 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169321064 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053198725 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106333996 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065441572 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066008024 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052272832 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051868732 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088525988 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052004686 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05105584 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071270799 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.075776721 seconds)
    (265/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072915224 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063986636 seconds)
    (267/309) benchmarking ("sort", Int8, false)...
    done (took 0.138937499 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072847913 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051308214 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065258924 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06766801 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052645029 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065079597 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112298491 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054351155 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08865365 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069443936 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14466829 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052075303 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065460777 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149659446 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063483254 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0733826 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070410563 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064254481 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052385841 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06411031 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065043269 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066861634 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07303919 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072883974 seconds)
    (292/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067943582 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0661905 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088979131 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053160266 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067450235 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064951986 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065525502 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071026955 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051421895 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051177586 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065407729 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070588369 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136487153 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051584756 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052840677 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131490762 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067881676 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053041322 seconds)
  done (took 30.691564756 seconds)
done (took 32.112726539 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083231143 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091794659 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074257006 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091608264 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080401292 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076133662 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071900994 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077887592 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079945176 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081639695 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077870288 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054891748 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07371271 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073345136 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07489936 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09101715 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077874843 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072526413 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072916533 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064368691 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072526295 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065876601 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066973546 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054933306 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077281923 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071832269 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072060823 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073742228 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065650555 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065425553 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068575327 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072832035 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065614432 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077956959 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071797852 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072801893 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074034479 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075332299 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067162457 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065870939 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074453973 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065489008 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072330865 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073683416 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072046707 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071327422 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072727043 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077606967 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090862998 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067734091 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073696656 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075654701 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076047038 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07215981 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068977747 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072373174 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070553673 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090854013 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073232203 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067526451 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073550522 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074028414 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0705297 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072733377 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072621699 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075241432 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075119384 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070900078 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074180106 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070708372 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064810521 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073002424 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068791084 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065607958 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075476233 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076233644 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063943709 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070886319 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072367501 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070980318 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064621786 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067175589 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066878057 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070761861 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067516312 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054421251 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06882351 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070985467 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064219941 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072641429 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071644277 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071532697 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066622535 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075020269 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064691917 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070460895 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065956264 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065483099 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067106987 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068667593 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065112261 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067646904 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073556445 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066532367 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071431454 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078555256 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064778148 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07135351 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064068545 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064394947 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078981406 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07414974 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065007793 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067303803 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063901447 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072160014 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06393785 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064976695 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065162725 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065406946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072202873 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067216051 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068732121 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07247926 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077833474 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064780469 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068374013 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066440156 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064782452 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069845987 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064940097 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063961463 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200149032 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062629767 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068958531 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066316526 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073672055 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068754741 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073112451 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067391854 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073275125 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070487246 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072131919 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071695631 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064469055 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058684609 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068732297 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068444814 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06806621 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06615176 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06831289 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065655507 seconds)
done (took 12.436214633 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066444487 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14252811 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099428373 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096043173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08557906 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066838153 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076422751 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102043623 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067428216 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102300137 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086879448 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084862295 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11298487 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064643498 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066053134 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069549879 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067024372 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081708451 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100966664 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086098771 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115302218 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065062903 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094074602 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089764493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087153205 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101795038 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066748466 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070059894 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069626745 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09094349 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086920198 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069480087 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066926217 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100452085 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092132725 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083443661 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066561276 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081991694 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066301223 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065876394 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06766224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097903272 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080071305 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079984159 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070445667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069374315 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06685267 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083299026 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088844494 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078454634 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086261212 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102696695 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068908239 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065603268 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06422318 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085869157 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065436979 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068764287 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06597517 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068089031 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065782858 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068873438 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081086154 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082397778 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069480945 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080161472 seconds)
  done (took 6.81098401 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083580991 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090580098 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082526812 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083868529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065850639 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066326473 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066620975 seconds)
  done (took 2.053661586 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066498473 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087963214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087918438 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088376569 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083775461 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087289571 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075862537 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066700839 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080441649 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067572355 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08729606 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103055348 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066553661 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072907241 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090602877 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066456434 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090642785 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066610022 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069275534 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089685744 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068347353 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082064575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069859886 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066928177 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080533803 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066805841 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11183952 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070686854 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067872829 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069626043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064527812 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106636133 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080422645 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075702799 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06630769 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080953488 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080739729 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065061069 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083621954 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072850353 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082395452 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068707217 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06924965 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066343686 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072742796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078669299 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069271919 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068931235 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069986358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085887163 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068446302 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082450781 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071583626 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069844437 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06968789 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071690622 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076431471 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06813858 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087603612 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06896611 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085377668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086284134 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08311861 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085832348 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071671406 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082569724 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082911667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070974218 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070632215 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07228106 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085776194 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067038496 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070162221 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07925691 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070700912 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092283571 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092366744 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0695359 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07742347 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067481752 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066468432 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066809176 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089199647 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069015793 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066099773 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070391199 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069350504 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064839249 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065389362 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070244021 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06443374 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067768513 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069510811 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069562516 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068816384 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083311373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068833977 seconds)
  done (took 8.853260216 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068945048 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06792445 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069825031 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067620249 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068335815 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068033516 seconds)
  done (took 1.94667144 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093741851 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069827251 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080481296 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073055502 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104126868 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087219384 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087511536 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078790873 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083837608 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078834461 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086506854 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088406347 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095841205 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07569095 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08992939 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074796922 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090435123 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078552223 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08141138 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076000604 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088731366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072819636 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074125477 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081474788 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075496546 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07172732 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067565776 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078966402 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078195521 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079141682 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072692887 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075746788 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070518519 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078335847 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087240465 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070888619 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071871466 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077476267 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072559954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075954963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088230051 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075739813 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076793222 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078641765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079050606 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071670404 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078518644 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076654997 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086277377 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077511852 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076784269 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071680459 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07593438 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07674314 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07019924 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078169178 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076538771 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086830506 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072127671 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070372589 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069292801 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075223054 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078128779 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075050718 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078811627 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076865467 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070177668 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072616857 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072442808 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071847561 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07718606 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068894538 seconds)
  done (took 7.143348696 seconds)
done (took 28.309621878 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543800291 seconds)
  done (took 2.049673451 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599804219 seconds)
  done (took 2.127530566 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.575985838 seconds)
  done (took 8.103310488 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392523762 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480774033 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693951028 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130544302 seconds)
  done (took 3.271691004 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673959836 seconds)
  done (took 2.212642754 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208762788 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196771838 seconds)
  done (took 1.955208036 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377608151 seconds)
  done (took 1.906891816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.114306765 seconds)
  done (took 2.644771668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262353038 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163007668 seconds)
  done (took 1.960250376 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464620898 seconds)
  done (took 1.997768673 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.82873556 seconds)
  done (took 6.365111987 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212660197 seconds)
  done (took 1.788910686 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239821462 seconds)
  done (took 1.773872865 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70939879 seconds)
  done (took 3.246460817 seconds)
done (took 42.937104381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07981826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080546707 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080555104 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078012272 seconds)
  done (took 1.842505113 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076834674 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072490327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077127315 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073155125 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077130764 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072258902 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074028345 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076221175 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07214311 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07256665 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072267309 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071914612 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074381551 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074530667 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070704327 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07459044 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076265324 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072195871 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075580641 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071949444 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070755557 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074508481 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074829393 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071602051 seconds)
  done (took 3.308910623 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077353976 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07303291 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073666604 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071253146 seconds)
  done (took 1.83920273 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077465773 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092370749 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088980452 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077383878 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091735434 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085598241 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068649137 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06872795 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072922306 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077052347 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068254211 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095629508 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087420346 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075937123 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078977608 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065823937 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067974775 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086616456 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076722671 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076980613 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069279634 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076787182 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067288893 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08753729 seconds)
  done (took 3.421912679 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076735782 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103427824 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077253328 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087289759 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088967137 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064838136 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074176531 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088728714 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121901846 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064828732 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070259078 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064927312 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072225852 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064944395 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075496504 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104143327 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107357903 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068206728 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095063381 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06493632 seconds)
  done (took 3.184913616 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073092964 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070315114 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06501656 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06864681 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077726612 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072619391 seconds)
  done (took 1.979149694 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067508953 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066079616 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066824766 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067165797 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071579369 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067108746 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066126337 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066971706 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067101374 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06694711 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066337039 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065312715 seconds)
  done (took 2.352780717 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.42105657 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06807468 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069251759 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065353083 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070427881 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066298137 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079107793 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067918954 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090032855 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066190893 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068155167 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070507167 seconds)
  done (took 2.751713846 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206729257 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076632457 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237540629 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136226038 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111160179 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11550962 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103656323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112220761 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143339646 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101856545 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167766028 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166057698 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10659742 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138195804 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089389584 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097802042 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156659563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161621957 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103097265 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165346221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143894703 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124449733 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146669043 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101114766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105512749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121843997 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070575453 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079860596 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170476716 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131100602 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146615125 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110939425 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093437585 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176508997 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170959136 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141939958 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133641756 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083545268 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101557649 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133073029 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198976589 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088128337 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163400018 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244984103 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081152303 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134520418 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121583305 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121760246 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106224153 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089899165 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145518424 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18301305 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139833786 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087117212 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111008922 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116048586 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11737054 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103744448 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182413376 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161412039 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12835338 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071259712 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099200772 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153966029 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132748268 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108915695 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126692575 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093116133 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133577929 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154010049 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118269363 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144724908 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12989388 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088856635 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120044825 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139658491 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128014956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169682192 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124588206 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072445905 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125199677 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10356568 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081286644 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141811473 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074656375 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174366895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098639217 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105579727 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112481355 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108536763 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108461532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161370211 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143352451 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243536908 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066652971 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10385118 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119601984 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149970596 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087298705 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108539456 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115641764 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077505785 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139086474 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075026778 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123337839 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074830676 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126188443 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132782128 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075153728 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121914511 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10023482 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10107995 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133696032 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160321548 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088517849 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082469347 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167256671 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122588586 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104273681 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142669235 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156439401 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099302075 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102900479 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149978576 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180193181 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089076228 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162857274 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107325914 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083708122 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087284712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123514766 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112499277 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121957759 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081688865 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119310133 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168415689 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07457228 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095006459 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132796756 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078331525 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080333213 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102808389 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10018811 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094356835 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09969694 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104227447 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137231162 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123260963 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104938954 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269149044 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099013117 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171047943 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089121839 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100404702 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103474873 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069715359 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137907174 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158156769 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078812129 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164529926 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123888357 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104977771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119108428 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083628813 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140663861 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078687935 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070100655 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144894631 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110192809 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110678819 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150951522 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104418322 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126745967 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119413264 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135277033 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132745088 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12850934 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105275982 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087755207 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11115862 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125409327 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072775802 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091591383 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079845227 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103572313 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095384359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083081758 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142196012 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12476433 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100573341 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111119583 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096793275 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14709818 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076281262 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128948709 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119072053 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093310441 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152072264 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151622295 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13128143 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099276874 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14493555 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070047435 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073265808 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088630246 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266539669 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083859395 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084334822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118542145 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148172138 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131000034 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139500061 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111958006 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121074315 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155065361 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069309674 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116330861 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147880546 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121646947 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103780204 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089997741 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098989085 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140753296 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108375795 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183857184 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113605713 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126379654 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153049265 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098941521 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084827844 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103164377 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135500062 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105065104 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144873709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099568949 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08776703 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110018018 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073873254 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100502597 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127355904 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119548908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135887562 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114619907 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133412465 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077270944 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117059085 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120115812 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123054329 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064298133 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119399445 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161280405 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093612174 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118413349 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152811028 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078794659 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123965942 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320881696 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145998793 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084211616 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110918485 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119284491 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128729786 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12028107 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139654511 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107680163 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135008556 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110098213 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084958047 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087437383 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096663439 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105379338 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09467498 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108009782 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114347895 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094558457 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132177785 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103311538 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109161107 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117357436 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096512261 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089196118 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09650393 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175385335 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1194957 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173062664 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.0990845 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146207805 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164369521 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074717116 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078933629 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078158256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139457992 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083727197 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130920785 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097336572 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105436131 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124308231 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141836114 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095033233 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068379956 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108751839 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134592856 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112443561 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098142271 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104071157 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162904022 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1001329 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079208313 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113155496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104448675 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102200867 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172483837 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061796266 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240092146 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075846 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08162334 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128458146 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153244 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081278121 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103579598 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118455821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110895238 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127953356 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101720587 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099420302 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115489298 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150142723 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129301372 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089614934 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112455574 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12978958 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15754464 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105602462 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095790334 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172654612 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152086317 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160639099 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088788517 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114854969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130312502 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108159069 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139348297 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084267774 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164094639 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081538161 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136411533 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103986846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090001318 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129788706 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098423314 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08818423 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14838407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117592242 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082640718 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077637247 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118180201 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12066935 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105673925 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07476766 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138857077 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07247355 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131860056 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168420091 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081238395 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104291951 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095406116 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079026576 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106725947 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100305763 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087959781 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096916034 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168469828 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086309797 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145862672 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137214788 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110400566 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133223158 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097352776 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.632431544 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076018716 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147781906 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113075448 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166982793 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094518119 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114849099 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106632979 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119663171 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140410861 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102092523 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174338458 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128047875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112949006 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080833337 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100184611 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099771319 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086468578 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10261164 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109189581 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11007888 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089124372 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109987787 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116606351 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079485884 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09121665 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147345193 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110830113 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135132088 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132752985 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080657924 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1117015 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129026633 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077315082 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115558273 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141784687 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101928224 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093855627 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077595414 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096722879 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.421529229 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07514668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16508957 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121506288 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111256148 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115184422 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116191225 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13452376 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109953708 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123821481 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094811014 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112038482 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113830574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083342353 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07743703 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105947851 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113204439 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098014407 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099697698 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097672591 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151968531 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071526083 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095964186 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103566169 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145391437 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17452075 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088330835 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082727253 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118821605 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112956672 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114159362 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121153024 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078987856 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082058052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081935839 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07723545 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108643503 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112167477 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104212476 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111780718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164126406 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082581912 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224718364 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094796794 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104572951 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069173767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078706409 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095648751 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097257648 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108170442 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100367961 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170184424 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093386347 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089217299 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091631615 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072884919 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082308086 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127837564 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109595329 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266936127 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098063469 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062821523 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109088522 seconds)
  done (took 58.678118261 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10855288 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081722939 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096903497 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149795435 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122431677 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212488356 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157320654 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198863976 seconds)
  done (took 2.811477564 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06817566 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094294179 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099913018 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083000155 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066505123 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068528474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225095449 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080385974 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066495921 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088559496 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078926114 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068804403 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432968764 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069219062 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069550751 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062966266 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066971462 seconds)
  done (took 3.465783095 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363049644 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.360418907 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372781482 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072903467 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.814365607 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088633777 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075740085 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095900523 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070577663 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.281431062 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701002726 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091748277 seconds)
  done (took 14.073088088 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07631758 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070461827 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085082881 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084169389 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073206423 seconds)
  done (took 2.143561967 seconds)
done (took 103.42657766 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080816529 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394536169 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054044548 seconds)
  done (took 2.162856794 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083881018 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085954686 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084997577 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082924076 seconds)
  done (took 2.033828711 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074742706 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076715453 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.085062792 seconds)
  done (took 1.92685371 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22591353 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140238726 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087633563 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083397085 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079144583 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079815733 seconds)
  done (took 1.934656102 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072756278 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075180276 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073075443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076366546 seconds)
  done (took 1.985071907 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076509711 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053196403 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055125975 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056464726 seconds)
  done (took 1.929998834 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086980303 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079275127 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07857201 seconds)
  done (took 1.936935844 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107016825 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085839124 seconds)
  done (took 1.88418865 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082275236 seconds)
  done (took 1.775299076 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099259174 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11463529 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129183467 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110401148 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137483697 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110004511 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086446943 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087144463 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07761779 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087703839 seconds)
  done (took 2.732345288 seconds)
done (took 22.521865339 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078102322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372458761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361429928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091524556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667931375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357232018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017036386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093120519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114302581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068353614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084468432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652800299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97389516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324671611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960726417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.419557527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654808268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068742377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068197123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068442363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003228727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068414818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068327497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0689432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652118154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372719097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068911562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.417478535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068348204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070919581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356073377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06890187 seconds)
  done (took 16.461680382 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070727833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118496016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073955928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084813137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07107279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070296207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071883565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069481609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120039071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068421082 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085195536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068332152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07241996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069209581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087810808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068925756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069243042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069002349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068829722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0689557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087350456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068509737 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068749536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068872334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068729927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080455428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068867939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068499271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069210713 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070651265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071238716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069459794 seconds)
  done (took 4.114155081 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116184957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125710399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074763282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103980769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114977583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070851524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144114051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093430908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129179655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068581781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084986817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068615156 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101634271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069468255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088476645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069166455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069667264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069408975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069047665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069279031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088050262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068993636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069502027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069889247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069145536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082459878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069763411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069260411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069957356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071038676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072300676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069413876 seconds)
  done (took 4.378630538 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073278419 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076272552 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083423102 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084049691 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069820601 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072455865 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073656451 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070195538 seconds)
  done (took 2.31345792 seconds)
done (took 28.966779902 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079497001 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069306412 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072599522 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081192748 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07437215 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079236487 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068141626 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074891629 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072399927 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073719484 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075378877 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067933784 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071948765 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068185011 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073959274 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068428571 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079663134 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072849261 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079716527 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080048891 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070365767 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073853581 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074600391 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079226454 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07978051 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079738895 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077981727 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073048392 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069795237 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071066673 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077295184 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084515953 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069611565 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079972799 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068408221 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068347585 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07240689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06854499 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079769665 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077747922 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070122253 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076692332 seconds)
  done (took 4.816005308 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087856554 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091293062 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084911047 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0620541 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067405753 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065814914 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089180739 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060332521 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059982254 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087936185 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0562952 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059772355 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062986551 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054667022 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059890993 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057177865 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062337541 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056243352 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059635246 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060239246 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058493396 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054826069 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060784362 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066083722 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056886267 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062294284 seconds)
  done (took 3.42466033 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074803309 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084909496 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088907087 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127484484 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104583032 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077800556 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078768082 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093276774 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085661784 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067417306 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07172587 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094789523 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088822723 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074478884 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06807923 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084784231 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083137605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069583623 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074060275 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091231217 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084888862 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084355814 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09312578 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081289423 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067493449 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070294912 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071878071 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08221091 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07337285 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077352335 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072084184 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071452201 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069858025 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079246099 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072182785 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070125267 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091409073 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077772402 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078571765 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068696646 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071159558 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069151352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090085569 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135280605 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069203268 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074311674 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075899872 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076872117 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068147919 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086606744 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079736777 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068705754 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071813031 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067348634 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068039545 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080961962 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07072185 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072318287 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079392491 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072679187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08835345 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072537873 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083450876 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069359006 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075958248 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067446201 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06868598 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067722525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093124052 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069738513 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108576417 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071629929 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070737656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077782814 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076165741 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074084241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068849908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083205629 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078611693 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071813344 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076729245 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071525323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07114009 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088593963 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070431192 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069881053 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069171245 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074530518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070815252 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069703224 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081035321 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068357949 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071104242 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084914886 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06768333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069847619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07457985 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072986345 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0677189 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079165769 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073173553 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068759275 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076957963 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068018375 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071274988 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078507617 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074120136 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067167739 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072654003 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074311833 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069072147 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069328926 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070588874 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069968742 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076467104 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074547374 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072508741 seconds)
  done (took 10.726949465 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162457653 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155938862 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071646403 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146156123 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07803901 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082524844 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150135205 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095443759 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068308243 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06902217 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069644432 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110572315 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108974405 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124679503 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081274662 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070037624 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084225762 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11483752 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150297133 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144424769 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084115723 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.0776347 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070503532 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.0694909 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071560611 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078981544 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086711725 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077093368 seconds)
  done (took 4.510057415 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081860408 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096962978 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074936246 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090410562 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092234681 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068171957 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070643831 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070021092 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080926872 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079648364 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068174527 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.0743461 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07561995 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071846982 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069109707 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075466563 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075942447 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070162364 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071666473 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073808804 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078190096 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081688368 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072772474 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067894472 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075122927 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067773911 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06529871 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085506542 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068721966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090507329 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066656061 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075524235 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08223521 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068905801 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068130613 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068028053 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068140607 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068394121 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069999976 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066530152 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066641922 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058189889 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067362214 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080571195 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074569667 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057145822 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073221323 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073609157 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073105636 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066105036 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071255427 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071078954 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071817114 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075423787 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073365659 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073434732 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06960965 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066228214 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075979964 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068181329 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06551493 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066533222 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072848632 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066816909 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076183028 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072645531 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066667491 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067914287 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069853947 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074282608 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067995373 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070743007 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065549646 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070399693 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072356293 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069598844 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068877503 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066454236 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06771561 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068176298 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056275245 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067773498 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054077623 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071154644 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066062118 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066657572 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067898654 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072957786 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080429369 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069389025 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073792607 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069057063 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067059548 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071265172 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060530647 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070706736 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083523229 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083500342 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067972236 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066049851 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082295437 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072619621 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067059574 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056836789 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075459385 seconds)
  done (took 9.266307494 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094884192 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088677296 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070612085 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083963955 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.092713945 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086796638 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075654391 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077917161 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070157003 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082782474 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074456616 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077257502 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068518947 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077560482 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094146212 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077421553 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070576475 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077821132 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072656001 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102195405 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083358104 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082292816 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075519462 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069020082 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076314686 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08104068 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089835074 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080666663 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078893818 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076825059 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080745612 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089670299 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074800876 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072816319 seconds)
  done (took 4.493278409 seconds)
done (took 38.940215455 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.810238118 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.976257236 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.793601784 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.168817097 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.868388583 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.924079508 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.840927196 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.782748066 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.010766917 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.821525594 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.018115702 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.824090693 seconds)
done (took 65.570455837 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.853017994 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.922102702 seconds)
    (2/2) benchmarking "String"...
    done (took 2.057447851 seconds)
  done (took 5.702494803 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.07613188 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.383624432 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.031690215 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.781494912 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.789430232 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.092905976 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.59698744 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.305999305 seconds)
  done (took 30.708388639 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.966119324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.97521777 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.445230577 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.500680655 seconds)
  done (took 15.658621731 seconds)
done (took 63.798895383 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.785818417 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.825495067 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.790463438 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.767592534 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.84068528 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.794276744 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.233144151 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.888111486 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.786222768 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.773824055 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.784298723 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.219122828 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.796792225 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.364759219 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.799416964 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.79250653 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.833458782 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.5404844 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.945182501 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.800519848 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.791475091 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.94964124 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.791600664 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.800026578 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.802330715 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.787919502 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.257469361 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.797570251 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.419777855 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.785810389 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.818421606 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.794728307 seconds)
  done (took 204.884251452 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.785351756 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.974151481 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.070782287 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.834458302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.346980996 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.989433479 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922699245 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.388460364 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.79225422 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.808735866 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.901376543 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.785720747 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.921293939 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.739010018 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.795041053 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.792780094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.075212013 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.930081379 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.790781072 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.057662606 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.78974209 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.731992837 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.700339154 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.888844375 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.797032502 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.814996209 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.814949763 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.807904983 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.981337002 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.039654845 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.822981842 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.803656427 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.982846455 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.660482425 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.809023274 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.813392189 seconds)
  done (took 170.692749737 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.92898267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.787256251 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.786176696 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786725126 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.793740169 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.787453718 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.787492611 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.91044517 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.248550446 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.949256148 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91727173 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.838407959 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634540728 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.788787052 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.857294198 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.805962749 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.790255078 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.802634463 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.814535205 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792226469 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.787735853 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.914187739 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.801816513 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.927556012 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.794878709 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.789210171 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.794674503 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.158346765 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.788575986 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79404412 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.032007986 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.789462196 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.789513561 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.691412707 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.459308735 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.880118744 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.788302284 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.79087301 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794482406 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.789645854 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.00922881 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.789621083 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.789212095 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.792341285 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.976661102 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.79262426 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.915197613 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.79035739 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.298940674 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.790289206 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789378784 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.611098908 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.490368775 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.793889098 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.790480624 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.791733908 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.789388781 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.789372171 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.796258764 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.482487143 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.014899514 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.791180195 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.793518077 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803492687 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.7906339 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.907369762 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.790975457 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.829256939 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.851371301 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.904966245 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926134366 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.790649097 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.857546788 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.885967135 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.791283916 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.791245682 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.791186808 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.790975818 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.871592226 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.791603819 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.939045752 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.800413031 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.793072565 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.843131202 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.860206479 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.792129414 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.692221958 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.795105235 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.790642593 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.122986803 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862813063 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.791268861 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.792118313 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.792036207 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.92127059 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.914682115 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.588872022 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.79613058 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.578614683 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.795893699 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.934036517 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792515309 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.995957904 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.797182308 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873918752 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.797092303 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.792729641 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.792109308 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.793193611 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.792967035 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.825758775 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.793519375 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.851181611 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.797441531 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.163705315 seconds)
  done (took 403.867234251 seconds)
done (took 783.151040847 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.485726877 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.450912433 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.567567205 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.475937134 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.459117764 seconds)
  done (took 14.176046001 seconds)
done (took 15.910821543 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.882207592 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.886139581 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.817816292 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.882540321 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.814098045 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.882302536 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863070178 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.819602632 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84975738 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.819101421 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.851369299 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818824663 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.805262837 seconds)
  done (took 25.729359661 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.020183386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.029283919 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.86453992 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030159745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.84069678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.020609245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.954566667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.945788882 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.943674189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.810685941 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.80718312 seconds)
  done (took 23.005153536 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.02747455 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.034291817 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.869319686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030738631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.843586643 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.028335926 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.956496677 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.94814085 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.944443324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.810731291 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.807454573 seconds)
  done (took 23.039123335 seconds)
done (took 73.508457794 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.803679355 seconds)
  done (took 3.542122378 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.824905843 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.967442672 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.81031463 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.80616188 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.804782249 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.804597152 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.806658664 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.803851146 seconds)
  done (took 16.368189283 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.800997114 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.803122196 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.803594764 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.803625149 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.801928202 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.803868723 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.801194087 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.803389511 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.800411909 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.803247865 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.801206092 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.804336157 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.803976308 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.802069498 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.801725274 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.802306611 seconds)
  done (took 30.580545609 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.802799762 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.80235257 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.801748811 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.803334827 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.80210662 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.802405673 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.803516324 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.802697799 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.802702217 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.802270805 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.80315411 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.802223882 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.801602117 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.800723698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.801689563 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.80319627 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.803794496 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.800913012 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.805085499 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.800838278 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.801405266 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.800260989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.801840889 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.801530101 seconds)
  done (took 44.996498473 seconds)
done (took 97.224392557 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.507920233 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.248721801 seconds)
  done (took 8.495470269 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.804804744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.802974183 seconds)
  done (took 5.383369908 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.803189792 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.803012741 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.803209523 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.803636266 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.804034741 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.804187906 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.803911909 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.803401483 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.80449853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.803895207 seconds)
  done (took 19.777007649 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.802881999 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.80401143 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.800944406 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.803887372 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.804401139 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.801128515 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.80407851 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.803937288 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.803355402 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.800950845 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.803622176 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.800854636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.80389081 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.800900883 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.803541538 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.802344157 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.801661553 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.800971577 seconds)
  done (took 34.18716381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.803425148 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.803639159 seconds)
  done (took 5.346075987 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.799505401 seconds)
    (2/7) benchmarking "second"...
    done (took 1.800111186 seconds)
    (3/7) benchmarking "month"...
    done (took 1.800348372 seconds)
    (4/7) benchmarking "year"...
    done (took 1.800025913 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.800859866 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.798620499 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.79591108 seconds)
  done (took 14.335792625 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.799352113 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.953911 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025988409 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.460565784 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.799484832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.802021229 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.751994197 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.803857103 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.803312681 seconds)
  done (took 19.934404904 seconds)
done (took 109.196998227 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.634256798 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.795666911 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.130895342 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.844407404 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.848437337 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.089764021 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.817281436 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.018840642 seconds)
done (took 42.911640281 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.883486423 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.315267257 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.343700985 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.639075088 seconds)
  done (took 13.028693453 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.777845172 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.307964857 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.824730977 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.394831477 seconds)
  done (took 20.078631781 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.158325932 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147025228 seconds)
  done (took 6.041485343 seconds)
done (took 47.765029701 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797305627 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.796891565 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.796708832 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.793695684 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.797268869 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.794443711 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.795294496 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.79957966 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.798449709 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.794728424 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.796915095 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.79755439 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797875305 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794995988 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794125495 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798800542 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.795462327 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.795042015 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795712327 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.798076441 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795488328 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797425456 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.794809752 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.795159232 seconds)
  done (took 44.845005227 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.798849211 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.796950058 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.797485422 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797781516 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.796219134 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.797781267 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.79918267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.795357311 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.797955572 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.79792333 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796388898 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.795862462 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.798630376 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.796040151 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797805875 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.797085429 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.798787006 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795552215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799179555 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.796942399 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.799811522 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797221646 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.796900652 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799389771 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.796407557 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796202123 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.80070673 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.796340955 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797167915 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.7943383 seconds)
  done (took 55.657108845 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.80222905 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.806696191 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.794118683 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.794223578 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.794601357 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.795215483 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.794538873 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.794043131 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.792866688 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.792074562 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.791908904 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.792422383 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.793258379 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.791883974 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.792251616 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.791679239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.793043354 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.791860176 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.792890621 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.791211452 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.791811091 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.791262575 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.791266617 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.792561259 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.790721798 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.791114776 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.791072513 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.791403449 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.791335156 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.792455396 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.790378707 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.790976857 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.791253213 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791581822 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.791575396 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.791538865 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.796593265 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.798739198 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.791717409 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792171622 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.792795843 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.791609041 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.791813465 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.790582607 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.792477648 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.792292664 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.793142943 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.791876602 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.792251053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.79329032 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79155548 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.791780931 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.791953853 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.791830601 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.792033908 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.792164416 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.792146388 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.792410833 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.792569765 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.793040894 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.792748114 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.791762874 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.792745246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.791746102 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.793029902 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.792251053 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.791736745 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.792394031 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.792584024 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.793082763 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.792400406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.793033739 seconds)
  done (took 130.813522451 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.793065551 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790635856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790701797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789487758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790453622 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.792349334 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790541597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791875732 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789313173 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792314207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79201048 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789574903 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790654934 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.79181454 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791548616 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.78928172 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792707025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790395708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.790703593 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791521225 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791665584 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789163131 seconds)
  done (took 41.131223629 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791853216 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789212773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.7882663 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.790771209 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.787744935 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.791093259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791849747 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.790300971 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790541284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788202316 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788454363 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792251292 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.788299863 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78688001 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788039611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787824001 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790488442 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.788938979 seconds)
  done (took 33.938640654 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.787078113 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.7878591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.789525135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.788607883 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.786699961 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.789649602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786099675 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.788885589 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.789056527 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.787483189 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.788576762 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788128767 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.788715456 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786043385 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788672838 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.78603087 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.786374368 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784187299 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78719398 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783966503 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786131643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786968422 seconds)
  done (took 41.048000525 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786454944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787396816 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784351926 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785387305 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.78513693 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786597378 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.786842097 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.783887851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.787044398 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.78651819 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783556201 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787474916 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.784272134 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785036935 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.785717635 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783159349 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785954102 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.785020889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786605519 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.78341099 seconds)
  done (took 37.4331878 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787945713 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787755623 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788140439 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787900293 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788973719 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787173395 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787249008 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788354894 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787889328 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788541563 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788879215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787306488 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788056961 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788888449 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788329955 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788917745 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787899636 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78813611 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788676129 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787897715 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789339167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790420161 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786683318 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787540719 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787988723 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788047772 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788967303 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789411649 seconds)
  done (took 51.794472106 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785167358 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786562019 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783943926 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.784679879 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.784011712 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.784334801 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.784255996 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784609544 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786536252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785441809 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.786638875 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.786077839 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.78609143 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.787068756 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787147915 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.786072824 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786176821 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.783571716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783844878 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784016402 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78760199 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785273339 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.784990659 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782478316 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782928367 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786167038 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7815879 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781359952 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784804766 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782055059 seconds)
  done (took 55.268101219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.803175897 seconds)
    (2/2) benchmarking "in"...
    done (took 1.801800712 seconds)
  done (took 5.324102585 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.780246226 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782358284 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.782552891 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.780921466 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780158946 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.782528408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782147824 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780251264 seconds)
  done (took 15.970019855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.782525612 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.782692404 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.782064333 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.781869335 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.784475613 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.784886557 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790366243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.783430982 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.785697359 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.783694747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.789025111 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793504137 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.787328383 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783676725 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.783278089 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.784823364 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.784036408 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.78317317 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.784037214 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.782836325 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784457111 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784673554 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786396048 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.780539253 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.784373928 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.7946351 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.788541464 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.782144989 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78466628 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.789815476 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.783682292 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.779957372 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.784870208 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.785474205 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.781459385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.784004732 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791907607 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784493213 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.790844604 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785570207 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78290927 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.780732969 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.784893932 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.786201404 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786721224 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.784214078 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.783692742 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.781272346 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.782784469 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.786947375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.787064481 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782330671 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.780809794 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790141948 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.784570721 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790692411 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.784734523 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.786337528 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.79166069 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.794019071 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.797374115 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.790137644 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785482742 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.785554249 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792316613 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.804424482 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792337264 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.782979666 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.780812766 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.785103808 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.792514107 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797970233 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.793298508 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.785340015 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785113085 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.783329839 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78564877 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783800085 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793091279 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.78691504 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.78464327 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784683449 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792565023 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80192481 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.783283653 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.783719826 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.784995002 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.784622227 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.784428178 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794631642 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.784563287 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.783164086 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.783800614 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.784619152 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.787483982 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.786220079 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.782987687 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786408 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.781569631 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.785197578 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787011925 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786980973 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.791563592 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785558978 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785391415 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.793119092 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.783712564 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783889272 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.794299994 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.784105389 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785286313 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.784470048 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.792893907 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.781074824 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785918573 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.790520788 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.785710713 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.786112941 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.78470281 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.783929999 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792297232 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.806336339 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.784316145 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.78435286 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.787752114 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.793717497 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784926164 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.789019778 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.784619333 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.78173572 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.781226806 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.786743556 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.784568086 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.786844653 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787044853 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787509105 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.782446501 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.784776017 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.785645754 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.786790742 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.788607374 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.785975473 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786628784 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.789142786 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.786230891 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.788220084 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.794983585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.786247934 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.787444141 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.787211338 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.783536316 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786207294 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.788086692 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.786299135 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.787119748 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786894436 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.78678389 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.787157982 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785931899 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.785372635 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786136435 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.786619873 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790190799 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.788391882 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.792181625 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.785860938 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.783412249 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.786643952 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.788495772 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.788130574 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.787399012 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785827993 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.788677283 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.795738285 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786388592 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.788528705 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.791119747 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788127322 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78766723 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790062075 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.789208193 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.793548085 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.788023955 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.795249316 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.789442631 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789127336 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.787950385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.789234898 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.787419516 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788806714 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.791543559 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.79340176 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802546551 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79488109 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.788896971 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.791101463 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788383937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.792713098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.79401539 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.78894271 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.788727968 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789753313 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787420131 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78981907 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.791110736 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.789773563 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.787826389 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.789476763 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.788855347 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.790115927 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78864431 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.79072942 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792875356 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.785913229 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789104792 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.790879044 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788817398 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.787081244 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.789100539 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.79026536 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.79032458 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.790971351 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.798842506 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.787509069 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790517804 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790809039 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.790539257 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.789229915 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.789774037 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792153946 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.791065806 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797562781 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.790200701 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.792649762 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798414268 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790774067 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.788978492 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.793040581 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.789719267 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.788244199 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.793673163 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.796406906 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.790459693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.792047774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.791032257 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790643241 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792466463 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.798475084 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788017055 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.790489726 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.791209806 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.794793207 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.789038781 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.792562849 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.792787188 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.792287974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793839816 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792358067 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.791153682 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793521016 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.792617955 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.792854315 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.794079273 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793977997 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.798658394 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.796992969 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.793498563 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.796246013 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.792429812 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.795431548 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.793719506 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.793782072 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.791566767 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806512201 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.79964882 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.800464706 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.795471299 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.792642851 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799310485 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.792870271 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.795498937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792188729 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793092701 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.793064697 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.792442117 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.791117776 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79484386 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.792908674 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794209093 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793658642 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.796055364 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.792617153 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.793160433 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.794178885 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.793990397 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79379861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.794195406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.79348208 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.798233572 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795807574 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.79301411 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.794911844 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801260391 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793554166 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.795159872 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.793846535 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.794626209 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.794306997 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.795641957 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.79542632 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.796452023 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.800378248 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.795625538 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804084968 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.794813759 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803735813 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.795166162 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.796600421 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.803570058 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.792399569 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793274261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.796099763 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.79529886 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803492488 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.796911725 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.79559202 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.799569238 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795987134 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.796474178 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.795424722 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.796185379 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7942418 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.79618044 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805617984 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.796482956 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.800640075 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797832973 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.792731324 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.79623312 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.796123659 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.795480139 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802317565 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.796296487 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79752572 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.795531576 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79785216 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.796324252 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.796749968 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.795934763 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.792914606 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.796178667 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804548021 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.796091247 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801014544 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.797549039 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.807361624 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796960149 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805021457 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.797464754 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.797450517 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.797530382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.795998332 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.79907092 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.796684047 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.798949865 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.796944071 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.797515897 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.799381945 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.7996075 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80028422 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.798152303 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.797858966 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.797887561 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806017863 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817291616 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.797828867 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799230487 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.794936016 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.797711383 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.803135285 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.799340093 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.79595419 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.79997012 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805727571 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80396811 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.80005814 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.79987905 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798835216 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800140022 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.797549971 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.799294904 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.799273239 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.797819162 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.80144811 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.800259319 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80468769 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.799728532 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.800438989 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800620307 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.799420222 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.809404809 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.800527376 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799816136 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798948491 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.798496182 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.79932801 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.799059498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.800937489 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800601872 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798317327 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.799391505 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803920542 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.80342418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.803298223 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.799332139 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.8010442 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.80122572 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.800753132 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802828468 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.801343959 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801152242 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.800966388 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.801312181 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.803214625 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.799349534 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.799750932 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.801003644 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799713175 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801619643 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.806251088 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801616497 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.797534635 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.799982166 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800212499 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.799866495 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.803207657 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.811874934 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802528999 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.808384735 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.807113153 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805315107 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.800782528 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802235032 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.807948663 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.799814369 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.80209048 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.803697093 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.803997071 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.802014621 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.804828828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803070925 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.81120917 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.802007704 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.802372286 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.813171849 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.805570856 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.801882316 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.803611984 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804970782 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.802767606 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.799432958 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.802105911 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801730078 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810928781 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.805412029 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803742536 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803930005 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800345113 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.803236277 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805887532 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802899906 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.803115814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.798643829 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802880332 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80350009 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80268105 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.799414337 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.802318705 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.803896094 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.805920365 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.808045448 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.800466052 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804512121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.804477949 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.803068537 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804672266 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802961209 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.800550823 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.799921672 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.802707393 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806379662 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.804786917 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.806430271 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.80388002 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.804719072 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.803615046 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80598351 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805219035 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.812018201 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.80947236 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.801063972 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.80462186 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.804766762 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.807929025 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805407055 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.805204002 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806407625 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.8075921 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.804669668 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806263796 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.804552267 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.806196597 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820893295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.804137293 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805411781 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.805905812 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810115978 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.804613469 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801884869 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.804696585 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.808160728 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80711807 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.811788906 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.807360619 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811935182 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805528263 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.805242403 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.807156197 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.807071871 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.813092503 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.809289601 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.805764738 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.805997309 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.809012659 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.819451759 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805543819 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814555769 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830755229 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.806438092 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.807884281 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.807966058 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804919386 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.806383682 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.809293274 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.807516705 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.806781287 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806608626 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.80726115 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.807672168 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812305738 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.809256272 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.807575454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.80649144 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807139927 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.809705866 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.803312576 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.807743497 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.807093492 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.808290888 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.807553412 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.807330059 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.807352782 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821538499 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.816854674 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.806528351 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.808105574 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.803932461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.812056008 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.81033371 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814779887 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812645826 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.808714258 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.808237169 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.809985794 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80993966 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.804329864 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807976593 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.808068092 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807512387 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.806002379 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.821336118 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815331099 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.813554539 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80958389 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80933627 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.808081207 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811440305 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809819019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809086619 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811641651 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.808899353 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811853969 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.80752282 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.808037957 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.811804878 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.815411329 seconds)
  done (took 1072.237341709 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806237635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805439941 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806443964 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805619867 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806764994 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805498021 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807119119 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.80674056 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.805626136 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807165556 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.806137392 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807403287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806347726 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807385649 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807038287 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807925105 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807444339 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.806607522 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807454585 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806569986 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.80736587 seconds)
  done (took 39.685470001 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809400864 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.807712941 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807102368 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809531235 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808550746 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80978111 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807160137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809322212 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809776752 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807542232 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.810212053 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809325278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.807073574 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.806965694 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808477553 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810136749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809356431 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807635125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.809629262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808393338 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810860801 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808352855 seconds)
  done (took 41.538508262 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81183547 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.812330408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810523493 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.80879265 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.810245464 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.808561311 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.813018704 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.810995129 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810198027 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.813800581 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.810105329 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.812013794 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.816524465 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.814243358 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.815982853 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.811538178 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.95643682 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.813669772 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.813378836 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.813201615 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.810804303 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.818813182 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.809123035 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.809270771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.81089219 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.813931033 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.81195841 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.812791304 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.813678099 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.813259461 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.816394394 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.812830977 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.812754186 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.814587562 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.812466835 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.813394689 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.816541804 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.813949553 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.810138753 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.81258397 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.820900921 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.828588481 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.815390845 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.821124399 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.812692266 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.812704187 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.814718662 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.821826224 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.810537418 seconds)
  done (took 90.753818469 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.812414421 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.813684717 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.81018903 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.813099208 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.813174427 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.812550517 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812705211 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.813795592 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.811488331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811490354 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.813787164 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.808669424 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.80845183 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.812071609 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.813484008 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810131557 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810290087 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808940887 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811023863 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81089661 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.809728699 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.811724652 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.812009304 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.809663595 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.812215678 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.810791387 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.809160366 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.811274514 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.811141779 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.809522342 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.813004539 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.811780925 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.812845814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.809896326 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.810645528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.814486505 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.813573614 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.811103273 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814094153 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.810542776 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.813456593 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81466161 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.813353902 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.813741997 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.810364662 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.811703406 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811113003 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.811932915 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.811096327 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.812994752 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.814732045 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.810843835 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815388645 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.811160514 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813556409 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.81408551 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.811147192 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.812524957 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.814684169 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.811298431 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.812123226 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.813706253 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.811368686 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.815311327 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.81466483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.812835285 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.811813274 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814548963 seconds)
  done (took 124.973126015 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81710895 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.815424203 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816340304 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816651264 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816302103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.816316774 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816446371 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.816049763 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.816584145 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817562934 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817427297 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.817559011 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.818235644 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817824522 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818770821 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.819621381 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819831342 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81890393 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818891043 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819485392 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.820140244 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818822338 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.820181641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.820710438 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819805946 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.819731109 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.820324589 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819190036 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820870385 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.82016446 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.819741703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.819034796 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81983041 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.820107411 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.821032442 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.820081739 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819831158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820255876 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.820417901 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.820357708 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81992133 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819891173 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820010497 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819779822 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82096922 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820240185 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.820759171 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.821210422 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819167767 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.820562566 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.82075082 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820724509 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822143301 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820899936 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821011881 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.819570048 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821270756 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.822128154 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820867328 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.820805835 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822521057 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.819663964 seconds)
  done (took 114.55916676 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819974318 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.820067619 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.817451815 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.817465325 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820811647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818059056 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.821236587 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.820874114 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820944179 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.820853951 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820879324 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817828093 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8184737 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819548628 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818447511 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818613125 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817548807 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81711706 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820949295 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818442004 seconds)
  done (took 38.141360137 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.818621162 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.821098517 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.818086921 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818346447 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822262302 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818757736 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.821283701 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821455387 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819670984 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820522083 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822141188 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.820771091 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819299934 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819654325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821314858 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819155935 seconds)
  done (took 30.879063396 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.818915094 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.82137249 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.823355774 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.822936055 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.821030312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.81894154 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.821999404 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.819269554 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.819719176 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.824320127 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.823240853 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.822812249 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822040383 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.823541294 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.820212365 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.82394206 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819830803 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.820059358 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.823210584 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.824861874 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.820751068 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.821211682 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823268195 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.823050163 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.820499889 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821330911 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.820416201 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.821806602 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.821624873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.823421188 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.820976603 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.822103048 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.82077944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.821282451 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.825848037 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.820677774 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.823807858 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.824022536 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823768513 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.82409683 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.824086905 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.821212224 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.824054679 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.824741357 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.821648717 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.824448513 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.821523031 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.822343233 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.822227459 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.821548355 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.825319059 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.826172512 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.824959218 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825086399 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.824540795 seconds)
  done (took 101.99321651 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824046056 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.824730235 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.82197536 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824632527 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82427778 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.823026161 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.825223575 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821990244 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822894916 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824764276 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.823627431 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824913064 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823385828 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8253898 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824026 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825334165 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.822749152 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823349786 seconds)
  done (took 34.590898337 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822954435 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823352691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.826250014 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822854831 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.823230667 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.826094504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823054735 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.826459327 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826655586 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.82445449 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823885132 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.827115793 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825900578 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.826911912 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.82397137 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824259705 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.826692483 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826442631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823539898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824185181 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826611588 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827239328 seconds)
  done (took 41.91395208 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.825382297 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.825748858 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.842914255 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.864965386 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.852928629 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.826056465 seconds)
  done (took 12.799485633 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824603473 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826939952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824277767 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828062497 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826756581 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823992308 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824902857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824841072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827544664 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82577066 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825089367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826610588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827757532 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825116388 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827822443 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827586705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824964091 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825652695 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826592588 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828513739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825202881 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828913859 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826113036 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825886103 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825393542 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825892962 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828830341 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826450892 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825274169 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828062151 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828529137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825851395 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828389635 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826657777 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829458533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829266552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826658323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82942194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829860322 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826459798 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829508463 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829832524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829058522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826398533 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829375095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827394006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827309885 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826588025 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826873004 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829991188 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829840485 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826475267 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829262103 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829831918 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830073951 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830194769 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827040697 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827617832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830629146 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82883396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827267036 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829304003 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82696442 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828194064 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830116765 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82815725 seconds)
  done (took 122.376667255 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827458435 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827694201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828198184 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828828258 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827846671 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827864109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827889831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828071805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828128339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829246766 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831261867 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828748564 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828703075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828799456 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828938438 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828219659 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828996951 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829106033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828467946 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831999969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82858895 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829229274 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829782134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829039246 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829926559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83229097 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829486185 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830915949 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830478829 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829584864 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829530759 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829180485 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830204285 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828868763 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829617903 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829936475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829522447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830321481 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829586819 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832236699 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829771861 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832784722 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829977055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830043385 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830874541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830065103 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829618389 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831459477 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829749366 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830418647 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831141592 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831155444 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830963677 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830240567 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830967541 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830819627 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83061341 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830317745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831117481 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833648241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830559375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830671856 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833961404 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831738235 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831012973 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830782616 seconds)
  done (took 122.544703384 seconds)
done (took 2503.942248478 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.83895993 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.854655764 seconds)
  done (took 15.462491903 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.996956413 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.947959727 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.832426045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.879398389 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.832402734 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.852466809 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.842296578 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.83180874 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.831306996 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.831893695 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.832973658 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.021323626 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.835275064 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.832196362 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.832483278 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.924997632 seconds)
  done (took 51.731281302 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.835650736 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.837612465 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846614744 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.837896425 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.835339511 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.84738225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.869407156 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.839430301 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.869111123 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.847545083 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.902639044 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.845489116 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.83547642 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.883712291 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.846581988 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.849818331 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.921984373 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.909336739 seconds)
  done (took 35.230263251 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.911280853 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.837203532 seconds)
  done (took 10.523370536 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.863774576 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.849039942 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.861183343 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.861455675 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.840887593 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.840975121 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.886044243 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.862200524 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.833163291 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.866836194 seconds)
  done (took 70.338564947 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.842569473 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.836927904 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.838350783 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.835927719 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.829941048 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.832510518 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.836441643 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.833475287 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.506911872 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.870967826 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.842732311 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.843693751 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.837568234 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.838411016 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.835111696 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.863231576 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.975989799 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.835983478 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.834613509 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.842490833 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.837714166 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.888663562 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.849959863 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.836658398 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.866344473 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.510149545 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.845251213 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.843578921 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.9534137 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.83412495 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837238276 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.838230555 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.84026877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237856304 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.123651415 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.836721391 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.846284552 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.845560505 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.83591133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.968530139 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.839015617 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.844263005 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.817897925 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.109227616 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.919656467 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.879293842 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.196092161 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.842819902 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.840781169 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.869066539 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.840297482 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.839654827 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.852597558 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.348433891 seconds)
  done (took 130.903696094 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83341249 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.409710996 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996631931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832754972 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115091761 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075305361 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833735227 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883104803 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835468636 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082575526 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011892605 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952305374 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835874905 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.834047294 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83737974 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83333483 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98729763 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.903601989 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.83466702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.834627109 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871007012 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099840142 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961273485 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83763791 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.859433651 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063234606 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961112259 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.951029165 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.280582175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.834603689 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903190044 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836780299 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.834737937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.834125317 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00029565 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941965004 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93101371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.835117429 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834401067 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835392389 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.498256301 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058463621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.946432301 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.97248355 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.082950289 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063468553 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480084529 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.834207962 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.478072227 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03274122 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.043940477 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.08929453 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.964050061 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.838521372 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.083462101 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835398136 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834550694 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098317102 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062008109 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.949456894 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836832402 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836417141 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835625565 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.151207215 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.838761077 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947333343 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839235343 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.835969133 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947864786 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952743798 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065270363 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078119864 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.866741675 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.705197751 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.344508598 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.120150737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909122923 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099943444 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.839083074 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836687763 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931261282 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.587219134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.010276634 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.152935759 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.102318958 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878515857 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.472142098 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.836709445 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.084543733 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.08772088 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.067677425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.082182964 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.002967204 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.15252638 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.837705633 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.837754602 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.061734422 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970533996 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839702298 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.200838026 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087953791 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.577037648 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.869040887 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144032929 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976095262 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.841316329 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.465393472 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841350103 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03974477 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.881687917 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.839151769 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840648557 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084956739 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.708804895 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83898359 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.619457254 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.905492651 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841104087 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104427719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.839990367 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079759652 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839460053 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.149350604 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.315868829 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882943854 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.03165611 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.083902057 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.641125643 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.10631383 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.15209837 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963595136 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098140187 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.656229408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.838791906 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124376207 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.841241941 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.839605815 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009616716 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.841629268 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.994880645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.841544462 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100606821 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866191697 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01010398 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841672614 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.113836792 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885651111 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89244977 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.844119733 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958857212 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842917806 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.885015387 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025435906 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841295187 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839868297 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.424136761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.841337563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99171217 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138882265 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866304656 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911469088 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365952775 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840488112 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935874951 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869929026 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.44126482 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.842943635 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.011480268 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.84438176 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804872323 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.841513734 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.150532329 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06498064 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84217331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.840351922 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.636708281 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.531726975 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841545817 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.018564011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.099198256 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.499795916 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062177242 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843989416 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975068409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.845541744 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.923607256 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.193774214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843133275 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.843229127 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.843313614 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845100305 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843681278 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069058736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.872063098 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.527268482 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.980300147 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086257344 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.155120617 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.105621379 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892413807 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.844856494 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109929041 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.845450248 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.911056458 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.844512284 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86856631 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090904056 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847761122 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073588824 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.130471597 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.884868494 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895325758 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.845467861 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84307871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.845285762 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987839847 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943917852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845101049 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.844648576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961302843 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970138038 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033158915 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.440299934 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.021798419 seconds)
  done (took 897.190745006 seconds)
done (took 1213.148174165 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.844591759 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844306128 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.833185323 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.849384339 seconds)
  done (took 29.156778614 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.851380401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.850800934 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.852708477 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.855802856 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.85266134 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.85030557 seconds)
  done (took 12.898565025 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879441073 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.845187989 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.846612004 seconds)
  done (took 21.357503736 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.919224621 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.249942234 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.953238057 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.285510598 seconds)
  done (took 10.193926262 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.854356694 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.853864702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.852834028 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.854181194 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.853054096 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.855044959 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.853851889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.853663792 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.855948231 seconds)
  done (took 18.473130822 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.002216446 seconds)
done (took 97.866591969 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.734385094 seconds)
    (2/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.874022217 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.168179496 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.021117244 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.011811026 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.971027605 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.134831057 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.875939967 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.078398302 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.089477083 seconds)
    (11/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.872236829 seconds)
    (12/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.091892936 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.134199062 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.047394228 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.354873603 seconds)
    (16/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.95426756 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.885313721 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.108194243 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.876329907 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.078871143 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.832709006 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.279520956 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.120858132 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.021399122 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.213225974 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.846990842 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.559747404 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444034566 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.928574236 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.93167894 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.16904745 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.897254929 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.92216276 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.94832638 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.974554124 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.026845188 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.876879195 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.955038048 seconds)
    (39/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.931021033 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.143897295 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.252351536 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.871760366 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.975115036 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.92188009 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.84605934 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.722275582 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.054824533 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.992526147 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.357285532 seconds)
    (50/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.939888299 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.847216414 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.958083632 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.108317653 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 5.605172069 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.504919796 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.846634179 seconds)
    (57/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.188590033 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.911498321 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.023058642 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.857433663 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.913337411 seconds)
    (62/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.968038695 seconds)
    (63/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.985050866 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.738233191 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.857527588 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.134382423 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.926347888 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.758042704 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.208300101 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.243194715 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.13292631 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.841368694 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.581369744 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.502012527 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.533278811 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.443850139 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.049449519 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.93675622 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.320529692 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.156773538 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.963321254 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.134917396 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.311492784 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.057985043 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.881317324 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.156108561 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.869727315 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.864172586 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.60268963 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.198346938 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.949592564 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.949804531 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.910541904 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.965595586 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.860802481 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.639341074 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.859166192 seconds)
    (98/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.040460848 seconds)
    (99/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.004752167 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.036547327 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.982597146 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209022197 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.026800384 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.847271708 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.946793989 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 5.652009387 seconds)
    (107/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.848170865 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.562967008 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.866393939 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.263621057 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.056353793 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.955269242 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.069082647 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.9927168 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.865707661 seconds)
    (116/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.356891557 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.816846707 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.87933954 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.856569372 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.268517327 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.009894654 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.670764915 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.850496503 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.940891889 seconds)
    (125/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.954797759 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.308653848 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.883780765 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.132145527 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.339540911 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.264279908 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.861409616 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.085447755 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.507743357 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.128801919 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.238915416 seconds)
    (136/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.375059928 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.974190109 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.209695668 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.94931041 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.872491774 seconds)
    (141/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.091400935 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.789489819 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.168056802 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.15873083 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263369668 seconds)
    (146/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.195098237 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.79032418 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.992054389 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.858219401 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.867341574 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.214615462 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.080499618 seconds)
    (153/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.99019668 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.429972178 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.8561346 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.026793821 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.243682332 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.109205827 seconds)
    (159/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.458596619 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.888107139 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.905104572 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19151833 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.148516788 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.405053468 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.846225919 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.916702702 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.891453565 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.829016274 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.460604575 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.862295178 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.94697354 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.84649075 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.536616636 seconds)
    (174/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.149657465 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.390800638 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.168898227 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.734966581 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.888091182 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.96952898 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.890247262 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.382992504 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.742551266 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.241512128 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.033935238 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.14603274 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.863813789 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.127197751 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.085414126 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.847754433 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.216417514 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926134284 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.961594097 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.121340521 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.868484332 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.904629229 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.092719466 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.899616522 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.848086567 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.942092954 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.049551826 seconds)
    (201/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.230498048 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.853355551 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.174026558 seconds)
    (204/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.867017353 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940590066 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.887178481 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.94663216 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.221418043 seconds)
    (209/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.953646176 seconds)
    (210/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993615495 seconds)
    (211/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.471768516 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.001703438 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.204585325 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.135552366 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.894974858 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.555915373 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.51905005 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.0723257 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.863382836 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.894930696 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.17772539 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.264766618 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.897881616 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.88463626 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.710278346 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.173639566 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.891916258 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.786575257 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.221093436 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.895319462 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.889050103 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.797607394 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.980394594 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.256232294 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.059685275 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.970576966 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.904624521 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.850043296 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.197371569 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.675065168 seconds)
    (241/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.895484979 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.709690378 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.859817939 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.108916177 seconds)
    (245/309) benchmarking ("sort", BigInt, false)...
    done (took 6.867769509 seconds)
    (246/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.878033087 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.156813063 seconds)
    (248/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.053277764 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.959810607 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.866895115 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.863806772 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.997865475 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.886867739 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.475084346 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.853223753 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.022474344 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.170657437 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.266750511 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.311736093 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.178866648 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.025601632 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.023094531 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901101211 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.24769159 seconds)
    (265/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.879648524 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.948742019 seconds)
    (267/309) benchmarking ("sort", Int8, false)...
    done (took 4.832663759 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.260750341 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.126635341 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.251860796 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.994957 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.385036373 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.101291627 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.990031079 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.852284284 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.389945269 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.878284583 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.107074349 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.019293904 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.252229736 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.497024443 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.902805179 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.954038053 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.883317063 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.949963091 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.223666978 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.987863594 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.007742352 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.931868492 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.876995134 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.045827866 seconds)
    (292/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.932410138 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.869960997 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.525377865 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.860412796 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.301589687 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.52327554 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.208661395 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.913319852 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.864930936 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.072755131 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.873011948 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.90899393 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.869983072 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.248270424 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.177993151 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.075596805 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.868668316 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.529495764 seconds)
  done (took 1021.015107638 seconds)
done (took 1022.81534968 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.905105157 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896157044 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.880250006 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.902092357 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.992619154 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.910130666 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.890919416 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.882103652 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.929052677 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.931334563 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.880113197 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.909146323 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88308354 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.881428646 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.881170274 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895200038 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.192901438 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.912895086 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.898066108 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.891075615 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.898444991 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.880348373 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.930520902 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.910026015 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.885446665 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.883148753 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.885599632 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.901398186 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.993577468 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.885700326 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.884522741 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.893890791 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.19348088 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.911826256 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.877076913 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.901655001 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.893868259 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.891554201 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.885763475 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.914063695 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.340851603 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.89106473 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.884579964 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.882872131 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.884041206 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.887047201 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.884040989 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.88959128 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8966768 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89694382 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.336414812 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.906448086 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.887360043 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.883772462 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.895555396 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.883933206 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.887862656 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900113915 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.903736032 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89989113 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.184893624 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.917943256 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.885875845 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.900534236 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.891126231 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.373777462 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887304839 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.888595505 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.340993971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.895558717 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.373245383 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899992173 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.886734759 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.899553181 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.915657446 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.195407632 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.908557437 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.883565241 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.891983297 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.88388036 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.894251514 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898236547 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.889419921 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.884585545 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898285637 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.914308501 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.894775212 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.886016575 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.894816413 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.904043759 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.892566258 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.897125405 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.889154192 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.88202725 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.894970227 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.889942042 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.888767389 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.889073608 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.890695571 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.896848986 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.338560382 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910686124 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.882656682 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.882370876 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.886253095 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.901520522 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341021212 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.894111388 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.90883478 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.934712249 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.888168796 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.189275141 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.921158648 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902461416 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.896531189 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.890516743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.88216181 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.189173242 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.369359751 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.909474288 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.889161819 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.886825032 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902864745 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.889345059 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.88398773 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.198054833 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.918122576 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901233622 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.009932564 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.89855528 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.919568521 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.88577062 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.891039881 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.91603365 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90445847 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.919724195 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.890637907 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904022367 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.904286795 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.884311424 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.900874089 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.898957665 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.889776798 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.893949007 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.883000927 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.921569436 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901043237 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900974714 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.911203615 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.010362385 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.885659959 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.191074141 seconds)
done (took 296.469085641 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.956294746 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.885238509 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.98331604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.88430193 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.969361216 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.972952495 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.882033798 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.881893256 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.881462282 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.264823633 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.882367047 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.883067464 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.882637464 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.882598523 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.968141537 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.884842642 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.881966306 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.226656295 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.886401545 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.955448667 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.884202264 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.882916614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.885342976 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.26996382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.885259352 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.879789032 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.956302299 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.885292771 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.233021278 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.885613941 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.879794765 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.234098698 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.976303575 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.904066296 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.896484713 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.892734964 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.972192809 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.890561207 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.968470875 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.96926126 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.986570972 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.927786067 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.883043524 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.878801225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.889473566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.888284316 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.883992343 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.91377822 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.887156107 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.883532368 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229347837 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.896072734 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.884315414 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.884831557 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.884767716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.918513647 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.886868123 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.888670253 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.977101762 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.889026104 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.950390441 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.27222232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.26719949 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888373452 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.88713852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.884641222 seconds)
  done (took 185.457782984 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.952951008 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.962106888 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.955624896 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.892519898 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.940463983 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.960533421 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.893059461 seconds)
  done (took 15.375968962 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.89442495 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.888479663 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.938352768 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.937987754 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.89080862 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.037993849 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888443275 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.900088514 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.887115738 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.942501862 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.889751004 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.888387799 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.89613147 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.88957014 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.937350777 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901198079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.003372369 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.890893623 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.890496646 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.045837597 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885925108 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.896046183 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.94377653 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.900481039 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889916436 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.89490337 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.470650152 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89206552 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886380523 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.88899002 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886766479 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.93217521 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.891212089 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886433512 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886403837 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.006940087 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.891530567 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886888856 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.889365567 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.883631108 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.889857531 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.890279856 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.890228854 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.888051958 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.890904782 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.913767362 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.890704727 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.890294169 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.890246797 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.890691218 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.941667608 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.890227486 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.888009903 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.32268285 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.947373313 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897663897 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.892400596 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.887919853 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.890020275 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889220736 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.048718071 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.939552337 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.890507947 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.938299421 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.89109421 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.891795243 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.891502533 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.891073072 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.94527496 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.891051712 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.939534238 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.888742813 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.050263146 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.915881199 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.893252338 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.894158119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.89394275 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.892874313 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.892776641 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.898533756 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.889040323 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.89438083 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.898480875 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889503186 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889008017 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.004198772 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.001134286 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.889864277 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.905099661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.900355282 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.890390994 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.946512675 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.892402053 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.89034642 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945305624 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.006985492 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.948399785 seconds)
  done (took 208.285424444 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.898017356 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.901083228 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.89445971 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.909090149 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.89293539 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.892550912 seconds)
  done (took 13.212967313 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.895484517 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.894794295 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.893383528 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.893292764 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.895399602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.894277437 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.895509963 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894175321 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.898155935 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.893324949 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.894730646 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.895116972 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.896001294 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.894944405 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.896117935 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.894648004 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.895628317 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.890497173 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.893557054 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895090795 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.038002801 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.895310026 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895042754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.895815853 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.899385669 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.894359506 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.901632398 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.894338034 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.893911858 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.903642831 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.900306086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.896271334 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.896380112 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.901332452 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.90075671 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.896148628 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899623847 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.89633851 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.893040035 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.896588835 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.896821118 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897330676 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.895472591 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.89656342 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.897259201 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.900350512 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.900979132 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.902185425 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.897755222 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.89636353 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.896788508 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.895815804 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.896932032 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.897521674 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.900522757 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901405737 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.901169602 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.898521113 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.897630711 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.897487721 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.897052362 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.897628589 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.898112759 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.902781737 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.903895106 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.897378554 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.898273379 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.901480543 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897996795 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.896337545 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.897409082 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.894414629 seconds)
  done (took 139.55786041 seconds)
done (took 563.725390172 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.13144542 seconds)
  done (took 8.959606755 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.994615173 seconds)
  done (took 8.902805283 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.641423933 seconds)
  done (took 10.470064109 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.918809866 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.914758897 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.900818472 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.896301383 seconds)
  done (took 29.469064094 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.910278416 seconds)
  done (took 8.737411557 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.904800888 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.89171386 seconds)
  done (took 15.654297723 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.96855669 seconds)
  done (took 8.79662027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.041263492 seconds)
  done (took 8.872357275 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.907648261 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.891989808 seconds)
  done (took 15.639425134 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.874758976 seconds)
  done (took 8.702789385 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.521429217 seconds)
  done (took 11.35935673 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.891176031 seconds)
  done (took 8.733861915 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.899298221 seconds)
  done (took 8.728519141 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.186341735 seconds)
  done (took 10.01429937 seconds)
done (took 164.867865761 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.894532845 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.894364357 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894040664 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.891707273 seconds)
  done (took 29.403526152 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.931022162 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.929961678 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.931044825 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.940619053 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.933600105 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.929400402 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.925783784 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.924687839 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.941386203 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.932438312 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.932300307 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.932520626 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.93100789 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.923045263 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.932696521 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.932474636 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.941509353 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.931226511 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.922623067 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.933191208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.896831113 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.940748024 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.933845305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.898447037 seconds)
  done (took 48.131818707 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.097287192 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.968420221 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.051797624 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.948977035 seconds)
  done (took 9.894926984 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.94889105 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.950556391 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.962669162 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.001558589 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.050114006 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.959826689 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.92572811 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.919174598 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.905456267 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.950739012 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.025361572 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.966816041 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.032108268 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.896857159 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.083809812 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.897181026 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.89828864 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.950113482 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.000877483 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.014252302 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.897685841 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.950448775 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.952119023 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.965932118 seconds)
  done (took 48.935610104 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.895840742 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.904786974 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.902761841 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.896748348 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.89556298 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89759786 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.902725901 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.897741777 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.917982336 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.897404391 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.894832053 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.895272411 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.896171701 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.894195866 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.894357123 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.907353397 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.908249312 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.895728119 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.895475329 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.899068439 seconds)
  done (took 39.818959716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.886581927 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.739037878 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.236466463 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.140592247 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.884207445 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.887367866 seconds)
  done (took 31.600199617 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.902080118 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.955590288 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.898106302 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.945629372 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.03084156 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.899972405 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.889442846 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.955976094 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.00187468 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.96367556 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.908106641 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.917934651 seconds)
  done (took 25.091839119 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.882030297 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.8817276 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.888639648 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.89346156 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.893245684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.89228005 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.891092258 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.876184678 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.896608165 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.90266972 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.891870535 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.894105262 seconds)
  done (took 44.505388622 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965621086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.923355084 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.903370078 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560303508 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259613709 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089188758 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.566522996 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225317796 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.881362778 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151789389 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847756868 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002287947 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153655042 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479761291 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.936377371 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363652697 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189623097 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097251101 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922643371 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543291734 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95884984 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163081326 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.669637462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95208876 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110449573 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.026939625 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.158663142 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898926388 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030612011 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933506283 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909468705 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897987295 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173039549 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277727513 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001376782 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907885757 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516431394 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.611335015 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.88560606 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.640547405 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.584659518 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.017738435 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910158509 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898645963 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834381459 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.137398652 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289294538 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.904449096 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.609831208 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900397254 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909701283 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993761073 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.902954373 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.715658401 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81577217 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.900839425 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.896071726 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902820362 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471617412 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990494614 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18839383 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.880024462 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.992921424 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579553056 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275919207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.044386756 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.903576948 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90262142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834253542 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55420766 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952787738 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22889053 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.920064838 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548884912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208522042 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.982729141 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844101956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161217231 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.5134304 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.879796312 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127464891 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900935627 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835447564 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.843558836 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833312457 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153779999 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934929194 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.646207653 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936565016 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.244248923 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909298309 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919652953 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921543316 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122754367 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.782321358 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900365942 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.667359395 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046970424 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924164084 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246262326 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838993815 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.904297005 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157449637 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.112067491 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.060018745 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415128942 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060761875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.560880294 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.95711596 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.140651437 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951395022 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.159554533 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951169451 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.002607953 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9559342 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904108789 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188720811 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.588588091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.044213602 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.973055994 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032920397 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.216468158 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929952797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986511284 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911633836 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904374334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.676238646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455929857 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.904510726 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.905926279 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074776042 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955355085 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.904456199 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848761784 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.526475231 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9274028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.920455601 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126872387 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.565507975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222698456 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835023967 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231300762 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992510583 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.122215032 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.544892838 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.973696937 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159510839 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078754734 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.111023899 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952971196 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914571035 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993064782 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917008714 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.129409599 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191537157 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.896770707 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.896947174 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.656814666 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942118723 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906312583 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.911246804 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657451308 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18239813 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927801078 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913150973 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.796547068 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.920539221 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970660628 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911223322 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916893038 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.447461751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636293351 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.915840327 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.49308482 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131988969 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917877887 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.579359828 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023098662 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.995410059 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173655504 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966301926 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.840082797 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61751167 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.600062974 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904443071 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838559035 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903334223 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909583427 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911095114 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.096701315 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.173978333 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941912408 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.580410927 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.947989743 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917596975 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.911812126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907775156 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.417690798 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.029345259 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.197966615 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958864493 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05103535 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.919771877 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840401271 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909966566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911556931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909416723 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.905345559 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935260665 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.591231994 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28059587 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16279608 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.511366798 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91676777 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.628456126 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.957552768 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.900135149 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.577080426 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283064968 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.009859553 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913571228 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.913859301 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.675226733 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.608839217 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475215994 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216781534 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194861146 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331719276 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.205147236 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.93148777 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243990585 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829661001 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461051164 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954848256 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244354781 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83828496 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987156836 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541094855 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238925398 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909238602 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120643088 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283124682 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.630029916 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037680552 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103861906 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928045789 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.137880986 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860344437 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.179472617 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036999029 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592956378 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098992881 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238680664 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589380355 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.019246983 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.894513466 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.567513515 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979145989 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.604549104 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065502586 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.170305029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885410977 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371078752 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900660221 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.119966866 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235651602 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150238492 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.027348487 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831308067 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904902192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905475791 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.896235554 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.905569282 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.784589075 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.147517375 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904707831 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828739214 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.097139307 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185786439 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.844690725 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.899855289 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894426242 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185719076 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.52473406 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070914322 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.090833796 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429972006 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904868474 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829175279 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828699461 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.587748423 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900505512 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870720869 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096505165 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.99530989 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804219269 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.071569528 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981081993 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152362323 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.90938961 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162653632 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169443742 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.594047304 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921555554 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.997179148 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.575571384 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.006785794 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896152123 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130996559 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648825061 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123587769 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.933278831 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.848244076 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.895402125 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110868164 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896585899 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.845154784 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129708082 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.619345487 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.997845577 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222692986 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97367221 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.852093609 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948527541 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.993571649 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910774114 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980898704 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911380463 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.912094639 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911671738 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948545445 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861916627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.026926823 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.91534026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997777689 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049146764 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.45701557 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.906985334 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184241097 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264054497 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.22064719 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957087356 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898703589 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89965744 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831158053 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04558938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.124093045 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167149971 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025074511 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.009580787 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916299253 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.580357597 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195220134 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135233698 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163988153 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.784733365 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.490497781 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932440839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.885323346 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892003667 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.093363144 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087719324 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178058264 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032203717 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.053994775 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26155907 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153942034 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.877170094 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87758811 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464652282 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.022782931 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55745581 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.9200772 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814774944 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15904589 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888187954 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258193312 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900779292 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.034686575 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.649319579 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647907155 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165808649 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.868619748 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.935977991 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144836372 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256267693 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188075854 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939017149 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882731917 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.976595168 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019031661 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.750014782 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870038412 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870900651 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.084261036 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.580391386 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.875273757 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139912212 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181240995 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.861192927 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.752520029 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885506022 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.870216744 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084526608 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121874675 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113743307 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870755243 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867145145 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.677145531 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133361295 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920828792 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795272887 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.865020405 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959067796 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109269359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883693966 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.314329428 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.572188143 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129629884 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.861046282 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883942125 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103230795 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.228010478 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183302628 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.39904167 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065867231 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449077867 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530268122 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166898948 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.866848451 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.11012379 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169469588 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.866370333 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.027299835 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905949302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.128347515 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178756301 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.870033765 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714806728 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.835611124 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205745244 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425635974 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80440963 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875243139 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.924859946 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866153682 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.996809372 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87791301 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.762598197 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128606263 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.631972889 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157315843 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.871193898 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.857029445 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.623555027 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.246952651 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905096065 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009680153 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867583193 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.579042691 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.216619831 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123210575 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.159520423 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.878841136 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.871124775 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86778207 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853414566 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062779993 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.063727295 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136899138 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.076500922 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.909693851 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871933933 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.085960247 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07866283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.848999943 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01233609 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034706886 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914244435 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.773782211 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376365487 seconds)
  done (took 1688.598718939 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876276076 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.87828922 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.876571049 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.874705147 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872153691 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945161723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.876361513 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.887186561 seconds)
  done (took 56.894541324 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.867645669 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.088141638 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.876725878 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.867910395 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.876440705 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.868328087 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.041102327 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.881102276 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.878264688 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.878802127 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.86924297 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.869279752 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.177329903 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.895421022 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.882992601 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.85348457 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.877254009 seconds)
  done (took 74.359072379 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.869343221 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.086303961 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.897917252 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.883975006 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.877303764 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.883415391 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.663122007 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.896095654 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.872636466 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.002056141 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.502441695 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888178059 seconds)
  done (took 87.130794496 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.874117229 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.872285717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.871765219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.873195346 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.869479153 seconds)
  done (took 11.166984188 seconds)
done (took 2197.384704275 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.24905659 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.086042556 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.095884491 seconds)
  done (took 5.98404189 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.010578039 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.059314966 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.177386459 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.181288792 seconds)
  done (took 10.232024663 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.149254173 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.256146518 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.065942229 seconds)
  done (took 8.268333644 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.264492412 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.870584841 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.974396925 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.858310434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.859189424 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.857281184 seconds)
  done (took 22.370393456 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.861330094 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.864903656 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.861847051 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.863819527 seconds)
  done (took 9.247146296 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.842524293 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.577639587 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.84363906 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.863559352 seconds)
  done (took 20.923346728 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.610277063 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.619218519 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.603928159 seconds)
  done (took 9.629343702 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.58369601 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.793893917 seconds)
  done (took 9.173315739 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.119142878 seconds)
  done (took 3.914769642 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.992792729 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.124971569 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.343348927 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.37198089 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.424540114 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.770121607 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.176310629 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.117391938 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.258333714 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.309872372 seconds)
  done (took 24.685464194 seconds)
done (took 139.588588636 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.236223503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.87004733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.05838062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.232768376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.075077168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.0529864 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.276324875 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.210207797 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.693143743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.690828845 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.184170655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.069929459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.011041043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.084017545 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.011530092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.214307334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.13029869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.233329273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.918839204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.079660148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.279020919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.821343591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.029382618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.834704264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.126740398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.001621504 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.398009147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.215396001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.070805356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.407739155 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.001253949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.223850959 seconds)
  done (took 169.540511892 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.609650084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.840652309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.840092209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.839235601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.326195262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.840206744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.842500991 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.839451511 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.080506784 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.070638111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.839662094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.301960411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.839670343 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840248173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.840693532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.840101423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.221062884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.680472806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858422562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.86351147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.867673455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.23609066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.871094649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.298178512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.257410376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.870537073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.840354995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871396302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.848306767 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.863940186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86903116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.841135369 seconds)
  done (took 207.573204228 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.841326186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847668385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.843780085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.85059356 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.854481354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.841747089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.85239617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.841203886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.400578871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.381332185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.848398152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.850473184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.851441507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.842056955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.850625572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.842127656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.860561423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.852502639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.847198984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.850674385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.854753243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.639938988 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.843189449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.637429961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.846367471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.848904155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.843461959 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.850994407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.851855186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.85357227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.851582234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.842849942 seconds)
  done (took 219.629244573 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.044699954 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.848616628 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.848982188 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.802596816 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.849697186 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.847840765 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.842834085 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.04506136 seconds)
  done (took 18.92378803 seconds)
done (took 617.477325551 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.267900362 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.116078246 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.02856995 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.874199932 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.098189082 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.906282095 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.86899717 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.93336195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.594434463 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.936778661 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.523679087 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.888573721 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.610040057 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.89472899 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.999056658 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.927993745 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.451863861 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.543803475 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.050481284 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.920381165 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.039028749 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.817686341 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.946693068 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.628527571 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.623480637 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.854686097 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.051066619 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.457452027 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.883347185 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.035555087 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.57972294 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.248547556 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.882086165 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.867832604 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.921472456 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.903360204 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.201943642 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.880946557 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.994196015 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.620172679 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.922567272 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.486022644 seconds)
  done (took 102.063809531 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.839971161 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.838642843 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.837790342 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.838890522 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.839767797 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.838961637 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.838425699 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.838819234 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.839802468 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.839489976 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.838492278 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.840070096 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.839401341 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.840612868 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.839242884 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.839893356 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.839953451 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.841727864 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.83911704 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.838649763 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.840496789 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.839292163 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.840536313 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.839515517 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.840613755 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.839976031 seconds)
  done (took 49.620628803 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.852590783 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.993624796 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.078124304 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.872477687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.852662936 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.856234065 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.872043982 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.85785889 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.854997087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.854873255 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.942746591 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.859107716 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.871801709 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.075728909 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.868570226 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.854098576 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.853825796 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.852867912 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.001589088 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868520006 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.873590272 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.859068508 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.871896172 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.866437764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.855306684 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.854427568 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.856719975 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.283563477 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.861948072 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.943774601 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.897093275 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.875373332 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.240688541 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.087008619 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.907332161 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.863319727 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.854446544 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.948601539 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.8599795 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.855129589 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.873215568 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.859854894 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.077318057 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.359297946 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.869429492 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.8562595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.29529711 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.959216201 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.897211161 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.870284044 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.081254479 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.872811375 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.857180991 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.85687659 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.892608218 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.867650604 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.855766973 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.160971535 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.867958802 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.874064861 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.861456405 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.856704251 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.008348565 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.864597805 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.996602273 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.865141625 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.863307134 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.857239088 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.078826532 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.872107627 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.350389573 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.870698671 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.85721192 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.946985663 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.00373892 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.322907006 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.869028584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.013330645 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.260010889 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.881531521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.863499814 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.276188244 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.884933238 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.866622219 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.858874306 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.859504876 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.858160711 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.900454622 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.873399137 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.295318293 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.360261899 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.175105361 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.885659662 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.874649165 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.858215786 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.162952676 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.8667124 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.859773921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.076302275 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.368591152 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.87186438 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.865733991 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.338503022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.872750035 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.878008498 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.868399526 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.083758429 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.872856265 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.902653832 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.859160976 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.865031552 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.861943422 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.879073842 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.865601395 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.859424098 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.331965751 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.966620666 seconds)
  done (took 229.972362468 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.853379971 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.854409338 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.853608953 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.854319389 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.852625087 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.85895656 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.852271342 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.852516649 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.858041829 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.853544127 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.853920466 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.854453375 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.857217197 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.856798105 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.88951158 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.861182948 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.469115665 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.854680693 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.852736368 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.855149942 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.503147822 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.859348235 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.85347088 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.855921 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.854278197 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.856214026 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.85936218 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.882807681 seconds)
  done (took 167.067238963 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.861597235 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977070124 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.88096429 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.888549868 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.869476507 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.858921583 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.88563141 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.877776503 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.866419735 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.859287852 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.859525009 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.922455903 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.872419673 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.960594416 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.89272988 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.892734892 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.966221007 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.868514754 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.860539327 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.860019373 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.889284168 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.856124832 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.923636104 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.988205229 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.880450751 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.97825409 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.866721027 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.863710172 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.860733314 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.979054301 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.876392363 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.922483098 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.889271511 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.880519555 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982923027 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.980330665 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.968393974 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.891860851 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.865519159 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.86009681 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.861073551 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.851709465 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.979243406 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.882365601 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.863413965 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971962579 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.881601308 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.864527916 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.871051932 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.861412655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.875851925 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.880481135 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.930378685 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.994825684 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.895990949 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.887869635 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.888837143 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.143470283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.871710675 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.964064403 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.857183845 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.98272682 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.884755619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.851654058 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.86400595 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.868784774 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.892156633 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.893812452 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.969132135 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.870707404 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.964385875 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.898329395 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.869687101 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.862251133 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.865864595 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983321382 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.982817644 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.898773858 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.901722842 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.89483529 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.85969682 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.863711353 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.852835257 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.882144107 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.867582736 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.982871419 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.982897084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.872388595 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.865793618 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.866582578 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.866793936 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.890167547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.990946993 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.900297128 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.963720244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.93328504 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.940593132 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.878636701 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.879158928 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.868517454 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.929486795 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.880988922 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.876742122 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.192582847 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.934864668 seconds)
  done (took 201.885119675 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.958541208 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.353153654 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.917368662 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.921457078 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.149114293 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.283215089 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.64589221 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.909558733 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.915283446 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.939377931 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.076335366 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.970920708 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.928072753 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.901063257 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.308939486 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.902981613 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.916858014 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.934776687 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.917615296 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.483511669 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.224389005 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.03469756 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.912484541 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.033301082 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.895102479 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.213821171 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.230718498 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.302887115 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.948704458 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.25953335 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.235618054 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.594897076 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.129879373 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.1567778 seconds)
  done (took 74.312555113 seconds)
done (took 826.701776035 seconds)
SAVING RESULT...
DONE!
