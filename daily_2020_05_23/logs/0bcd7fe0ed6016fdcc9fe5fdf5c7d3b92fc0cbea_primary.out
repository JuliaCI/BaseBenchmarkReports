cset: moving following pidspec: 13293
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.202554667 seconds)
loading group "string"... done (took 0.561138405 seconds)
loading group "linalg"... done (took 8.079063479 seconds)
loading group "parallel"... done (took 0.168686715 seconds)
loading group "find"... done (took 1.250505109 seconds)
loading group "tuple"... done (took 1.893343935 seconds)
loading group "dates"... done (took 1.366837677 seconds)
loading group "micro"... done (took 0.200339436 seconds)
loading group "io"... done (took 0.933539226 seconds)
loading group "scalar"... done (took 39.179207957 seconds)
loading group "sparse"... done (took 12.383613535 seconds)
loading group "broadcast"... done (took 0.978773855 seconds)
loading group "union"... done (took 13.857852986 seconds)
loading group "simd"... done (took 4.788899561 seconds)
loading group "random"... done (took 9.262017415 seconds)
loading group "problem"... done (took 1.692899386 seconds)
loading group "array"... done (took 21.492264986 seconds)
loading group "misc"... done (took 1.618654544 seconds)
loading group "sort"... done (took 3.352732638 seconds)
loading group "collection"... done (took 18.078417997 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540403457 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123808834 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13755352 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119965203 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150534968 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116681106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124487427 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084599576 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.85337108 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148646161 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116034889 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41889236 seconds)
done (took 5.31900699 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175161947 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087577116 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079924618 seconds)
  done (took 1.22021301 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066306888 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128065674 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068038815 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069326819 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07192929 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068503478 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0688623 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06891956 seconds)
  done (took 1.596482667 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072985801 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06935094 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068119991 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069726559 seconds)
  done (took 1.334364487 seconds)
done (took 5.456107119 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.800040973 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21434673 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188748175 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410089032 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135247025 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178836188 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639406215 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312235407 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193312035 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093995117 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112982639 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391024932 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125188298 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641654744 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081215166 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098298629 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14347586 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446981521 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071334959 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085919957 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093402086 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131764976 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083263702 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077040198 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150190181 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070922723 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14347972 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084030008 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069263602 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255955557 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174880823 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668381021 seconds)
  done (took 10.457106054 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102494295 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10061648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069340734 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125468983 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101519051 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072295226 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078026116 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069631975 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093122712 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131118418 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094955457 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110698253 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066172473 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069964156 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08490408 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199663612 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080811567 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081987875 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07128214 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079004865 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107659593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078827951 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080425524 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08431068 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129223858 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170817775 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096457777 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098019479 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067014421 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081594542 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115881316 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130372185 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069101317 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068554409 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127676503 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096598856 seconds)
  done (took 4.577693861 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.010590285 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150858596 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091752291 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135599577 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066633633 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111991405 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067916379 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086105208 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239545193 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.439702381 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.62870426 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.148516975 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120156689 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107162353 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071029405 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071194694 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072392492 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279229528 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103357644 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108476522 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083691638 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071103178 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069987563 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065579727 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073779822 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066075485 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070745181 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089888953 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076867117 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.331107096 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125064055 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06859035 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.950485021 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170591149 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070209398 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108475858 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164661346 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097190174 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14172126 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068444582 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064811413 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.298929688 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067367765 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074161986 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06927399 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088133487 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112310393 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124493926 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068074065 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069191759 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173002345 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067669889 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085092873 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.250908926 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152909455 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06858216 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298642073 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095569399 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071825451 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066266426 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188835379 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119675218 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069258883 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067931498 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070398701 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071244252 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368760918 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06680049 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904758497 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071195651 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080448661 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07285457 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0715292 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079210878 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079363336 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091389754 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067412661 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073912182 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067163631 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06789209 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068870312 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095294126 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095772444 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.399289436 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067570371 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072275031 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065732535 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06482774 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092264707 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100452443 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069426692 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07049359 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104963433 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073669131 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068083014 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070288509 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065222615 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121982421 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07064387 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112555978 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067954896 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181224669 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098339414 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070917956 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065495267 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101928782 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079208713 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071723595 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.467857435 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065841361 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072841559 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067959277 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070179574 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069005214 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081054475 seconds)
  done (took 22.027692594 seconds)
done (took 39.126173139 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242882494 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08353291 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083968856 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083874455 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083643464 seconds)
  done (took 1.724090456 seconds)
done (took 2.852593363 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126680787 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0993472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064742517 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097472596 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065135435 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103559284 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103657986 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083149768 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099705057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064912065 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097603035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065080975 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066629303 seconds)
  done (took 2.282282297 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082079577 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083591548 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069869233 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082082629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062961914 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083734339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083244198 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090662373 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082412416 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073887835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064364255 seconds)
  done (took 1.976450888 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08239507 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083587191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069914656 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082342688 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064230003 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08334279 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082878989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087037553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083078236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075035993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064511239 seconds)
  done (took 1.973435879 seconds)
done (took 7.346814269 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076249444 seconds)
  done (took 1.180479871 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533392358 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.560602773 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078317727 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100545997 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19185051 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.10858153 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.234638379 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082302321 seconds)
  done (took 8.167418364 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095347712 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070550542 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071228533 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08224914 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069864137 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069374769 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068859746 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069313945 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070174785 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069041314 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07030202 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069663748 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070292755 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069981422 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069106555 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069349015 seconds)
  done (took 2.343489571 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097255581 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096658128 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073862356 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075490825 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072442257 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072016309 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074656742 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073879714 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071109037 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072771178 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075699895 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074022624 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073655585 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064655412 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074710096 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076722954 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071529227 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074450636 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074987256 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075690439 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075256341 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064157924 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07364743 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0743048 seconds)
  done (took 3.017648718 seconds)
done (took 15.823803518 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106497662 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068275652 seconds)
  done (took 1.28570533 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078991312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080106359 seconds)
  done (took 1.280970724 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077938169 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062748113 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084158042 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074081639 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063254222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063189723 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082572764 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06357328 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063453677 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064695083 seconds)
  done (took 1.821880482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065775482 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07316813 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069565919 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079331953 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07050476 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064700279 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069163874 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065498122 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073267413 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063734152 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06859157 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083311444 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068191216 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085078279 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068649731 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068256234 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070083261 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067291466 seconds)
  done (took 2.397696442 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063788822 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064027941 seconds)
  done (took 1.253990057 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066392394 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06446238 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066854947 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065832922 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063496925 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062959089 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063372136 seconds)
  done (took 1.575830502 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39826878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12283614 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329415471 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070826851 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080111122 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254858808 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064812866 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069800848 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069794654 seconds)
  done (took 2.625629394 seconds)
done (took 13.368430947 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081132237 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08678299 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097417024 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410861694 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092822162 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068406962 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113711905 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183978174 seconds)
done (took 2.272414404 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209116437 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.811386703 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.48171161 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206357103 seconds)
  done (took 2.62776528 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.459062219 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08106151 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076962592 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066617048 seconds)
  done (took 1.820006008 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067719806 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070480565 seconds)
  done (took 1.272612027 seconds)
done (took 7.06469886 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065293647 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065105307 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064905354 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089860851 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065926066 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066191794 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066764824 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065955488 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066113721 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066482363 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.066311453 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066488981 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06708141 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066505395 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066155957 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065923111 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066547772 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066061647 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066530023 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066211524 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066957622 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066292935 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066463406 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066464874 seconds)
  done (took 2.7825388 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081922006 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067240648 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068981733 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068547675 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069238516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068344286 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068572603 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06713628 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068654393 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066712041 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069085711 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069319447 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066437198 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069150699 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066625587 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071049548 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070433555 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069111488 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06853821 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071315402 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070439657 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068529331 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071306068 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070734088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070705782 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070465877 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068186607 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068421204 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070128915 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070718632 seconds)
  done (took 3.232112188 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065601783 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061169328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062043467 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070172211 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062035903 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061871154 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061361401 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061733024 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062560785 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061407904 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062354895 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061217615 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061181802 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061821703 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061826538 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065823622 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078747568 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061636701 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062296517 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06312122 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06661497 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062716766 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062645296 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062662794 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065801298 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062289235 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063085861 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062325079 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063620006 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062634821 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066280916 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067632059 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062674246 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071015052 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067237291 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062347047 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066408899 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062116554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063195866 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062817624 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062172664 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062584569 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062786777 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071819075 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062532296 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064042558 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062750185 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063389241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063022009 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064741178 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062321691 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062579353 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064774336 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064388919 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067580598 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062653336 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063385092 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06225024 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063379145 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062553643 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062322691 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06220573 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065677368 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063191693 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08027822 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071630931 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06232183 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064064708 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062807641 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0655462 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063877979 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078379227 seconds)
  done (took 5.781236733 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085240594 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088213193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066383302 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0663064 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062470405 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063160461 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072258828 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063229186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068525612 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082650107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06361682 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068153808 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068006532 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067675493 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063984014 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068297628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072040658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063777065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063438711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067783839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063695232 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07195127 seconds)
  done (took 2.682284367 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14723146 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068099238 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104981894 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072401073 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070470716 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072873949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068169936 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067710394 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069271622 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070201737 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069824598 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069530619 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072362702 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069949314 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069762402 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070382818 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07016588 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070185437 seconds)
  done (took 2.527162398 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078502705 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067808725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089168519 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069170144 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068809682 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068636998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073490111 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074198837 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068686497 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069193996 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074227922 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069093145 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068932151 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068983789 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068467976 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069056277 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068562608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069314599 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073452222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072709774 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072992629 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0740072 seconds)
  done (took 2.731754637 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087859831 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06695639 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082149102 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068810124 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061996685 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061860775 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067776829 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066733022 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069742147 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068076708 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068841496 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063677482 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070687568 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068131031 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070940286 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0681349 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067736173 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06845702 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067834377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06378527 seconds)
  done (took 2.535689823 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083907924 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065015194 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064972726 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072684533 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066333202 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066769401 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072985943 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066763737 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066643484 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087696033 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066736036 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067189319 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073361383 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070715739 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066533226 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07312888 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075707849 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073025303 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066691165 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066902793 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087360118 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066634116 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072763337 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066360585 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06665946 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066599888 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06651676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071217835 seconds)
  done (took 3.134188302 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064996441 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064459375 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065805698 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066700404 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067274126 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066515664 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06638122 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066412974 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066279659 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066526264 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066134934 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065872435 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066179818 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066164134 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066148345 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066187497 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065991399 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066398577 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066439046 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066213212 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066102132 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065854994 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065984843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066099847 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066281344 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065728421 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066514885 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065994481 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065852343 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066334805 seconds)
  done (took 3.144536319 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075428174 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074173055 seconds)
  done (took 1.310441813 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063550616 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078987881 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061543068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072227199 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071429292 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065901547 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071219233 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070662446 seconds)
  done (took 1.709899299 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085700658 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075548096 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064370873 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075770051 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074651637 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084811475 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125872483 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063823878 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074252533 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065406167 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084634586 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067369893 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07610321 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070381395 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07574109 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079180556 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063688471 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071272095 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06721284 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064086494 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065952128 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0791392 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075348294 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063736895 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070681855 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093652451 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082004258 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064547215 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073050118 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078223616 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075433659 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062334117 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06563488 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065534054 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063727408 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076333694 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084456261 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072619023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0783258 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066254933 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074285873 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063047203 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074158316 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076302169 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08110967 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065652635 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065430101 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062861759 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066478172 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072260257 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063316779 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069718835 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062590186 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077275445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07294056 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080972738 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064467574 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0712061 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072036053 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072416618 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076513568 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071470816 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074545344 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064631485 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080937791 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07471094 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077276706 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063289243 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062277534 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063376218 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079623483 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094203949 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075050205 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065881415 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066242375 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063192161 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072829961 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065727575 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074844113 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076979823 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065169129 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070237323 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077814104 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069655999 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071822596 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071801368 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063608363 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068532154 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065909215 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085083482 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064011259 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063033097 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066065088 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081112579 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074625846 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064538568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066029873 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077054216 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061830885 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065466698 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065800703 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070933602 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078778578 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06931897 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070028355 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078695707 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074208441 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070402622 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071859854 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061816239 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065242936 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066792867 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075792954 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061405222 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07168331 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067737707 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063467882 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073540195 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060956618 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062775927 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076211655 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074975365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062455929 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061385145 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071069472 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064284599 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066299473 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07743482 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062703289 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062373203 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061898177 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071812449 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064027789 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071226385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067571693 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070551434 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061736877 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.187695267 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069673822 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077417715 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068371218 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070279457 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076680658 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072207455 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065290963 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078587641 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072937579 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068111115 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075558978 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069749636 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063798835 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068118101 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072582677 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064196551 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073255554 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068028985 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072660721 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066495629 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064080058 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072017384 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066387914 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068385077 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070621996 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065406042 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081114027 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072390518 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06356698 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063086919 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073239829 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066749074 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065376603 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067918916 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0719982 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066001965 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064225865 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066177075 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071518374 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074647854 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069249264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066125175 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073872636 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081319846 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064662097 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072939005 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065399369 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067099068 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066229835 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080106724 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075863759 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069589439 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072337977 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062842633 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074943334 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077221217 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067326671 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06455522 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067570729 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069170589 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077305971 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06914101 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065799831 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064137414 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071894245 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06784348 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072317214 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064992061 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067852243 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070572676 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064030085 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071542113 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065832193 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080369056 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07298692 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063436075 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067611984 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064053308 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076439748 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063663514 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065116873 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066813697 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06602587 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064128537 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070399215 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062261162 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077492731 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078479142 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07105035 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067566763 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065032606 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077400719 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070953282 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073245699 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072118174 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075121345 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080245862 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067435961 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071642669 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080129075 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064625794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061951225 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074424761 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066064653 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064092699 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063924443 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063367156 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072339065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072190207 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075188655 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062344376 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072000248 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063263959 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066869937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062843876 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072780668 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071393275 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06835228 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076751589 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064869215 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064707362 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071984 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063607698 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064511754 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064542469 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071444294 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064117548 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070207432 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066463526 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06982386 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066372799 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061929795 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070000237 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063767594 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06903213 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072917895 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063288298 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069561461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070851172 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064508234 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070350075 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06784196 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.198201348 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072436289 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07287112 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071898275 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073271101 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064734113 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078296179 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065362761 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078671842 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071317464 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062898242 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071990365 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072828203 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07142021 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066692098 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065926753 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071058328 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06525128 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072025411 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077917253 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067041896 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082012271 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077358742 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071209846 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07267064 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070939468 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070961082 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067380649 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069698185 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066912167 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071144511 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065915099 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074499678 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072386958 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070438067 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071530924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06636518 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070946759 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066656969 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063743264 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068347275 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068071928 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065732871 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078611794 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066234545 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068692242 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064447947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066157834 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064532744 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062604633 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072939779 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073732235 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066286905 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076620829 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068242498 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071772109 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081907923 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06321455 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064190382 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063542876 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067180331 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078203777 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065964653 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079874982 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070528126 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067844478 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063007014 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066245904 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064222521 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062777586 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063686042 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074319204 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067829296 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064554445 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06517603 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072459556 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066201681 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07879806 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064852472 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070011653 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065893741 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063052976 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06767563 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068022947 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07240356 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066170772 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066640706 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063108275 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065392679 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069276057 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071493745 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065198591 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070950327 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077763217 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065255075 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072688287 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067503112 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062980081 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072468793 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065243376 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064972669 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067670728 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072692685 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072739646 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066235623 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079775788 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065124191 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073786747 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065073952 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063760983 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064615351 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065181536 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064851558 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067323083 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065823021 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078208631 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063130775 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071118078 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069988592 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06898836 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075688584 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065383878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07103662 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069809632 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066323362 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070756983 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077484665 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068021934 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07178105 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064478418 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069899557 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073512458 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0665499 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075653349 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06955928 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064778824 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069598384 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065586447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064270651 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063988147 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063742378 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071678713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062626032 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064270393 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064929872 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.195920141 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069705395 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067299375 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078234586 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071172069 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071917909 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064367572 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063683782 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066743891 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067556234 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071655257 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072551449 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075843418 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072447863 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069732802 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064970592 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080766496 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075755595 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07168195 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065572177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072601189 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065041812 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070873358 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069286941 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069142132 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065242361 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071475961 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070104885 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068728364 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077590177 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073643165 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066759284 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071588881 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071839762 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070464417 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064248225 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065596607 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072403164 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074175565 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072229508 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065801282 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081327703 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067007813 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07098865 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068633595 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063678122 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072561565 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062330098 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070243274 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064845635 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06421365 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06194496 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067155493 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066724544 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072924539 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068013352 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063480633 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08203376 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080366059 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071916822 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06453104 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063248402 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062138085 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062956265 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067680418 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065993433 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071629362 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081255584 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068161638 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067696251 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064151056 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06630162 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072995776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073484883 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062752554 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063733992 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068314057 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071685385 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077150655 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06443266 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065363494 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07314626 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072420251 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063868723 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068134724 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062905329 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073662465 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082251595 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064305594 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069767121 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073909153 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076363766 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0641066 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062130564 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064244743 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070282966 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069747409 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064904933 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064584777 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082991684 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071088436 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06612699 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06243446 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069975107 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06631177 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077341606 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064251951 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064136037 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072670942 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072570318 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070594528 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073590097 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074883996 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069672828 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069604347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062925705 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068391352 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062557964 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065466749 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064128628 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063401695 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067281158 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070680274 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065718649 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078116369 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076654927 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066050621 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062294441 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06723143 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067219524 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062676044 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065421336 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062903264 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063548023 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06283932 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063284419 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070562011 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073452489 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068646172 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064971966 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064235815 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06150478 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074112206 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070909103 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069888533 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061551132 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.19871028 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06583554 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073552262 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069753873 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068531307 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073194638 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072473533 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071941806 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06387733 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077934979 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065022253 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072273514 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068028154 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066330447 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066738737 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073544747 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070405739 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067042988 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073057182 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072956003 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06835823 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063980579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063514844 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076161158 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064250932 seconds)
  done (took 43.156435021 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100331497 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063487839 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062520374 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062469691 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072276764 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063141292 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062254822 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063114279 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064027964 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0651539 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062532802 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062321307 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069943426 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077350816 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072299828 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066633996 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063239593 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065696803 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064644829 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065840124 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071863096 seconds)
  done (took 2.672060631 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070711713 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077765195 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074607866 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079686652 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071225419 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067459869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074871267 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067502576 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075228264 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072299796 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075549072 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067193935 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074147652 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074801335 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074703644 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070003003 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077581539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073717315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069167902 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077603239 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069806573 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077459329 seconds)
  done (took 2.854429833 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064504814 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06337085 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070144191 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.077206514 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065075014 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063457383 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067665686 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063206334 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067246648 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067478106 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066970072 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066962168 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071630588 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063609168 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068567946 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062737069 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109301798 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068122874 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065107226 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065728011 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06343533 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072054098 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063532015 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063812975 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067020517 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067737945 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065147801 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063431393 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06467506 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066818962 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064576589 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063222475 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070997127 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070692046 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066852708 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066792137 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064527688 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064441584 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063004886 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063465839 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070526735 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063526136 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06768645 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071409618 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062948763 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062685251 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071481672 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064540278 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062944684 seconds)
  done (took 4.536297164 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075142116 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109856087 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069204401 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092286344 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078370241 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070738733 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069653246 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093772559 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065084222 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065758523 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079846191 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080336732 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067554392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068718562 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069722286 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066964272 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068403779 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066234559 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069960248 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066645515 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070628096 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071574854 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078260802 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079248909 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068247142 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066477726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066565493 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068300347 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078544648 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071425686 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068717166 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069589728 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078696383 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069945005 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066612056 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066733906 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079659166 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067296834 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067317804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065069778 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066131095 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06772667 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07169111 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08008589 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067538055 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072596945 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067536805 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064673587 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078814595 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066778212 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07142696 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080740791 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068504291 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06724654 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068907446 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078548956 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067236875 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065596224 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067619356 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078366195 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065060644 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067974065 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079848502 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066272196 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070951652 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079657158 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07192778 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067952295 seconds)
  done (took 6.298693684 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072543015 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094446826 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079648037 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079081478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073004501 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073391078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073700111 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073316392 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073501658 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077558132 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073604397 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114061928 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069319994 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076648043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075154213 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075063925 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074290155 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075311876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075371853 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075781476 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075689195 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081591033 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075431118 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081923474 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07820132 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070840338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075162532 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07479782 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081750039 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075060986 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078318229 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075180542 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075313702 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0814917 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079037314 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074937017 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064716413 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07514137 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07548393 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075630217 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070829694 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081668421 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07503072 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070717563 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074914718 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074760857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081367126 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078106157 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077276908 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079165624 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075107372 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081267873 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074911771 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074916876 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081899575 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085291675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081394722 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081427731 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075524422 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081287935 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081556715 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084550145 seconds)
  done (took 6.088485849 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078366129 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071260822 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081931438 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062258529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061899368 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072167121 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062152217 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061919249 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070429774 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073749837 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072776573 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072317954 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075061243 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072499268 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072416788 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075008074 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072639706 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072725068 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070455305 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072020695 seconds)
  done (took 2.709706393 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076734123 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081900524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068353216 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071799192 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068103248 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07221339 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067073481 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068269895 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068732403 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067830614 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073925027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07368657 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06891749 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072817002 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073739407 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072433753 seconds)
  done (took 2.41774335 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083967509 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071351762 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07777354 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064178352 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067720137 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062845643 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063923688 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061784856 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062884516 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076697102 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063373536 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075083019 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063692139 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06264618 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064437986 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069609784 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063377792 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064017516 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063776415 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078880987 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072681625 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066431859 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06939189 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065099218 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070632934 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072979717 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066781037 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069315598 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065372008 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065896294 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071272556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072899941 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064863143 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065882794 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06437134 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065086401 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065602789 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065432692 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071078868 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08351049 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064060775 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070341069 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064968381 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066411125 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064096168 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064737026 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06281392 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069601565 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064610792 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070655943 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06520649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067355103 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06563731 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073025016 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067990799 seconds)
  done (took 5.009764505 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079406953 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068344923 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062234245 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062422072 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068787148 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070263106 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069120854 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069398277 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070187302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063626194 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070153789 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068925384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070231311 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069700782 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069966411 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069382306 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063662396 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069774205 seconds)
  done (took 2.522925408 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073051494 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067344496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073728187 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069067202 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06889297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06831871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064045695 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063864113 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064123075 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068569478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068741564 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068470314 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063430876 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068088484 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068653874 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068783903 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068259449 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064052326 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069218354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063815629 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068464111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064424758 seconds)
  done (took 2.763848353 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095734227 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083805237 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143369201 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081890807 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088563466 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07423149 seconds)
  done (took 1.848064769 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092278083 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098076859 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067965682 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067560697 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073506863 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070296454 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071255257 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072342693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076005579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076970655 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072609905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077551437 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077203288 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08004571 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074142443 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073643046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070933586 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073140513 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067429203 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080420784 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070726909 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075517 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071099813 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070420257 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070498846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077100715 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075111901 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075235789 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07122332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075425929 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075075261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072742032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077022275 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075871959 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067607332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075231597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070797441 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080310162 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073216813 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076662408 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067357621 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073158469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075102327 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074408124 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075034754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07111194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074623874 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070598567 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070699496 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081230193 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072881536 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076128819 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073084005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074830416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074588654 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080988284 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075431389 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076171558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07261981 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075351119 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076697417 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072817973 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076778509 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075244086 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072740953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076492372 seconds)
  done (took 6.20981196 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103867364 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067696556 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07146008 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075492952 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076723087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070610969 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070811106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071264067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071365964 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067784646 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105502322 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070996934 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077681861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077242279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070791899 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071067792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070964433 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077094497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067896544 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081783331 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070880774 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076866128 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076813501 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077235568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075276022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073226653 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070643745 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071228079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070943792 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071109616 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074830594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071703021 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076526122 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068672605 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077560601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071379203 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072514752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074984475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070635388 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073230433 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077049013 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079777444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070415779 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070814329 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075331079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070483478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070359707 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067496854 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070547157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067642502 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075063996 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075145591 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074821129 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076203313 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0703151 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070478477 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070690021 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070633763 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07029832 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074266215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076273677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07024233 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081191795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070244887 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070441857 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077037697 seconds)
  done (took 6.178978973 seconds)
done (took 127.976388888 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209798659 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185299323 seconds)
  done (took 1.662749045 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074034746 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104558936 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083145071 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13468062 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071289995 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105393208 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104274908 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083595529 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071208171 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071244241 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071706718 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075841402 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139049602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071789604 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070850659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074164406 seconds)
  done (took 2.692510436 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105251255 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169092088 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109715539 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069202419 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103925375 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076588321 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068837066 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082497866 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075583761 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071034137 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077015807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075056366 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070971558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077605333 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076285167 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077509444 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071000705 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077133951 seconds)
  done (took 2.824157383 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10351265 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09400043 seconds)
  done (took 1.489263087 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172339508 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133374793 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202791262 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344632827 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15361176 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.41944995 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139173989 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139948291 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112414846 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136156902 seconds)
  done (took 3.242131882 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103457646 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168645016 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293361084 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119668999 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076068068 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090391938 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121466966 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081627199 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083496685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083517802 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083045255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07880289 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10276173 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076856342 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07584955 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078135807 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106329622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07477281 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076369601 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07964319 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105645455 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069889971 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076222661 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074993901 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080693918 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080916348 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072827203 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071379984 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080605476 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0776852 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081773745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090250839 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081665915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10678794 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074347578 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10687565 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078298696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076241711 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075477077 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076387114 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080275785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079905906 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078172199 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077717196 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070885664 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078353628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07104436 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06952033 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079656422 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070841182 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079921591 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079014515 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105447162 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071294437 seconds)
  done (took 6.100545556 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108838696 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107295543 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071330731 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112831761 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103441632 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070582193 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105749274 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099130362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107475916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070471483 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068919167 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071099109 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079699164 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080975464 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115000815 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108260131 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072552629 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070197486 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107926073 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107204716 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069523937 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102208666 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097686393 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107288147 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06891778 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070831555 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069288928 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070705461 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07595518 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077532683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069224514 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07901622 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083569453 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076945328 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068083371 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068899099 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069594541 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078160976 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078700246 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078047773 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076136204 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06789142 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068782808 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069769463 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069600249 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067818154 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077262299 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078488348 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076944328 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068870871 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070399609 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068908679 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069835165 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077915354 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07578597 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078609577 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077993366 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068787405 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068550107 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071468068 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079090394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077917526 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078019328 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069580315 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078250536 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068856708 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079139087 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0819904 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068770942 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072693093 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068894037 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0686341 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069795771 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07607715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076391622 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069991436 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06874628 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069014723 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078644878 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077054088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068621226 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075584246 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06771463 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068583916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070025825 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069998173 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075832751 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077976491 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070335856 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06871943 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068755287 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069148075 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067288997 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075590978 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077778323 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076993085 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076623283 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069728092 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077391837 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075624579 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069631888 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07617814 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068193889 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069725217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069425581 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075922264 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074692692 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076771246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067774734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067424052 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074748481 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077418645 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068705811 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074367245 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07671118 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075321542 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067176551 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078364754 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068176051 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076627436 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068465693 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077020448 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202751795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079055734 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070188254 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069453524 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07033501 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079960562 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071265772 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070139102 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070909204 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069684485 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077600674 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081126118 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071687298 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077800865 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077457681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071503397 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078245613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069347419 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079246289 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069798226 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071242956 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068809008 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081227868 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070049173 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069784975 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069768182 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07916346 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0700637 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079090728 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077030663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068491078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080929387 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079496952 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07741077 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079249888 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070806066 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069321697 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069376263 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069434462 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07615286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078304365 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070447989 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069349156 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076874523 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07845937 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068374022 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076938673 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076875771 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077562748 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069517254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06943012 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079822356 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079332775 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077611601 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077093931 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077431592 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069738478 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076981253 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077980412 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06933795 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083250794 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069380357 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081262311 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077683828 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075652981 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078405976 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078728497 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078787454 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079113104 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08130053 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068765359 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069065848 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077603442 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069507436 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069046895 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077272788 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070466214 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070605517 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081667736 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070284004 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079375299 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068400818 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077624236 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068584015 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07033711 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082070224 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069126374 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070780238 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076914857 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069338266 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076885355 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078978545 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076579424 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068791938 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072921633 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078022534 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077707148 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069127732 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068956497 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070361269 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076711621 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075733083 seconds)
  done (took 18.40583181 seconds)
done (took 37.719730573 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207116797 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154063415 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183747522 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115607421 seconds)
  done (took 2.054252547 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10837221 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09872517 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087914189 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065865874 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093697208 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065918171 seconds)
  done (took 1.847802045 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287927127 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19651758 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179110111 seconds)
  done (took 1.984568353 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20996294 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190425379 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461926911 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284756199 seconds)
  done (took 2.566560426 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142223746 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082861505 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065536061 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083221462 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12386306 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149484589 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093055931 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117896148 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076330976 seconds)
  done (took 2.310369805 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146918021 seconds)
done (took 12.264589778 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110590598 seconds)
    (2/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077682518 seconds)
    (3/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.214859238 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075314498 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.22685842 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07185315 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16857274 seconds)
    (8/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214125736 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078077931 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0684166 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11952407 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080036043 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076905159 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169593978 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09208322 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.104621376 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.346559328 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.126334622 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.21786953 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080001212 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077781763 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226082387 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087609596 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07925842 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177777405 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077103739 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09483637 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069087625 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107521116 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091271182 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219691076 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08747017 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.213191331 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107650261 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087585966 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.149783201 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090456427 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.211434663 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093191212 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071681322 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074850759 seconds)
    (42/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.164547868 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.206470195 seconds)
    (44/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.129005373 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066888463 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091501952 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16008496 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197500371 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076558826 seconds)
    (50/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.129270408 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10572894 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.144669916 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104265709 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065881909 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103922968 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090683774 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088455943 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074692795 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197276196 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121459129 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180966819 seconds)
    (62/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.175678182 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087273545 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 0.067348602 seconds)
    (65/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07149182 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083726907 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087734724 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065732093 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075047459 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077495937 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177279499 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070290919 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101569019 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064598235 seconds)
    (75/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.164761561 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074410248 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132254008 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065632535 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074449992 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076597758 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065999969 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116639867 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131210875 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161756841 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068154843 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221716529 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069689216 seconds)
    (88/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07589517 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119656506 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092815116 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107813467 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.075236283 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182997581 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167856139 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.324510759 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081416113 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080638094 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201677281 seconds)
    (99/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.139326838 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068651628 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076771286 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067783437 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078466474 seconds)
    (104/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.127864373 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073422805 seconds)
    (106/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074507276 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074305114 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066914338 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068082849 seconds)
    (110/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067799006 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088875151 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075325269 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068027557 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161766461 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066570521 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128588731 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.190921866 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075548939 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07597486 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066446639 seconds)
    (121/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.164484502 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080692868 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135363033 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067389086 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071146777 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073601996 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076395217 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078684499 seconds)
    (129/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069327977 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078859737 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.082226856 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078740082 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090190183 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070308892 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077686013 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076001157 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093687861 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07681068 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069816306 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081654736 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088476816 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.180367562 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075452184 seconds)
    (144/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.127633364 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074103057 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187559421 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067861851 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129536628 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067253365 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121966522 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162317591 seconds)
    (152/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068587914 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18137857 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074607307 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078243669 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.179478942 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215824176 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077187038 seconds)
    (159/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079239134 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075214673 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065065891 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065915126 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074968085 seconds)
    (164/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073150462 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071698885 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067993176 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06815631 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068005687 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067753895 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067273106 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14171755 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073929124 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072059977 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112179295 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185899677 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065502294 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066190337 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086137133 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068006561 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143582462 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065436721 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088316601 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193131304 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090021107 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065991393 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067172432 seconds)
    (187/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.171245428 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06630765 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069938194 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082286091 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130277189 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.180387845 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068351836 seconds)
    (194/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066706527 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.116902096 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072371904 seconds)
    (197/309) benchmarking ("sort", Float64, false)...
    done (took 0.130497635 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066231172 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205276289 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072836394 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075706807 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066772813 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074166354 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068377403 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068891875 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068046449 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.202956273 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07210622 seconds)
    (209/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189376123 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119898176 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078875271 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122046079 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085140895 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064666987 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077981881 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071570972 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068010092 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067023003 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.344789916 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101205841 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079357138 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07722357 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141437126 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139177394 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071015802 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067896241 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079105608 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140677859 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075332615 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.141642293 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068858994 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068490996 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070512208 seconds)
    (234/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068353681 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166783881 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067856022 seconds)
    (237/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067356227 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065891296 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066707208 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066793126 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158895911 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067824205 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135222399 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095776894 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06920836 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170120458 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075293516 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066771522 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068660761 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065942746 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 0.134501531 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067167318 seconds)
    (253/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068789872 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081055127 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066942752 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074372632 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067334255 seconds)
    (258/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079393971 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080110387 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070069045 seconds)
    (261/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.125474644 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068602818 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070530545 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069329321 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077036888 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091862422 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12635925 seconds)
    (268/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.078525419 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06652097 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066290862 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075069881 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075829206 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066732387 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066567131 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073822335 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066700844 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067280943 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066649072 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068681354 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079711447 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067350339 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067357566 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066874471 seconds)
    (284/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066442662 seconds)
    (285/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067146721 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078782512 seconds)
    (287/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067621157 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066876668 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066590019 seconds)
    (290/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090287333 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067285404 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172156087 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174379526 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066906223 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070825413 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074797265 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069260363 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 0.146133392 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066806059 seconds)
    (300/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093178246 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066378783 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067538185 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073124872 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066894548 seconds)
    (305/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120160789 seconds)
    (306/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06593156 seconds)
    (307/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09256406 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066622627 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065818365 seconds)
  done (took 33.006498579 seconds)
done (took 34.341413111 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084946694 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098704176 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074308398 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092955272 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081285793 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095761492 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074641588 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078949913 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081515331 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080385326 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079205274 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072496526 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075803056 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075657641 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0737965 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097481966 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080467921 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075181758 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075047882 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066414384 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075106128 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066508678 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065912136 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07258856 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077818453 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073675312 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075835798 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075649348 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066683456 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067094033 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071564182 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075073402 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066187608 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078727512 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075350412 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074446226 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075805898 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078844149 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066014243 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067092402 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076331896 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066897841 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074713644 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072583073 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071281134 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072782297 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075252649 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078827703 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09718377 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071038793 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076425756 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.0770378 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078228074 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072529248 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071953222 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074946716 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072515658 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096980754 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074973453 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070957039 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075839395 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075420731 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072426856 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074545832 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074572521 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078401281 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079594944 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07260835 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076511664 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073677528 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066242107 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074227931 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071243742 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06652872 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077543113 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079130145 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065990344 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071086841 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074327203 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074688124 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066144236 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073747263 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065893541 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071255832 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070626308 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072521652 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071209584 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073527346 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065723433 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074680322 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07363262 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074222745 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065915169 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07904845 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066300943 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072510849 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066946796 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066361865 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065582187 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071442717 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06615112 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07034174 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074728344 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065500026 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070822987 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078896849 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065733807 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073101175 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06561568 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06601619 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076832692 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076103966 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065656017 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070330902 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064998236 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07096622 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065501783 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065646135 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065721 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066361489 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070236437 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066187267 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070210499 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071267421 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078042646 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065645705 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070195718 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069967125 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066142115 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07194584 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065505321 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065373907 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064806479 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078937299 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069756788 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065687102 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071085284 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069679902 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073640698 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064685405 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073719135 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071283799 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069217358 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071203809 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064163452 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076066594 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069017247 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069329684 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064458195 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064669797 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063990078 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064756869 seconds)
done (took 12.506577124 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070487609 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118033167 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093419494 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093004431 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08289589 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067543204 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074330444 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09202348 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068334947 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09621915 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088389019 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087911499 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.10955583 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065549326 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06664114 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068978921 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07028346 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081378991 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.095088533 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088751171 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105940432 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066736642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086568569 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087688205 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083423228 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090577221 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067820124 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06813829 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070264723 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087433951 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091970601 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070075507 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067653227 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09043904 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084858016 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080032818 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068126408 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075216271 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068364555 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067257889 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068547826 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08754065 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075676616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078217708 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068022047 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074565423 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068000101 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08240496 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084800133 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075617485 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082456562 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090838816 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07071394 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082850528 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06624151 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082908448 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075803646 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067317495 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067503276 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072276182 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067469644 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070105146 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078731985 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076562491 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071547722 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081465403 seconds)
  done (took 6.615721982 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085770932 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094370796 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084463089 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083694853 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066527647 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067475495 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067001833 seconds)
  done (took 1.982521517 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067618344 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091019567 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090379725 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091075261 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08156965 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091204814 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075063216 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067966614 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095946333 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066255852 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087272123 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097424393 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071366216 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079023331 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091798177 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067052958 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091840093 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06748415 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068214072 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091890204 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07190388 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094394126 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078884285 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067898382 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079902752 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06767908 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099978751 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075741459 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068789789 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068652992 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06861497 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093589529 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079534369 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081556607 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068901484 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082501214 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080708186 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071315441 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078421552 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076975744 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080576229 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071885812 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066297303 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069142806 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070294739 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080609489 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068374846 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070531293 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070244689 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088964178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067972626 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081948447 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072253394 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074445838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072839652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072141432 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075374141 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068870148 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086321247 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068546667 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084526862 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083682631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080451429 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084763592 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067148371 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079855843 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080652352 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069698808 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071331375 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071449757 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08609116 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072589903 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07123562 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081349655 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06898636 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094290742 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093895922 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068655759 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083010327 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069847594 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070644627 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081302851 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093372494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074764727 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07024162 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073754384 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07121763 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071849114 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067708893 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072947554 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069724071 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074237132 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070107988 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073184546 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071564696 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085925519 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068121363 seconds)
  done (took 8.907015346 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070124022 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068921519 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069314745 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067795707 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068337066 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068446593 seconds)
  done (took 1.87260464 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091291863 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06905082 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081062855 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068269369 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103403604 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083133832 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083633728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07755033 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081952573 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.0797276 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083363936 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08745357 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088028819 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070491739 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082932435 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069226821 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083473854 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072295259 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079299292 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071172421 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081322745 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070512076 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070617956 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086447267 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07161909 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069419802 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077302418 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079491668 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079295372 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077411921 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07008573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072611044 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074666175 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077038963 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083605314 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07500751 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06820069 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075419616 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071525365 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0721755 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086898559 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071051725 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070484768 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074079645 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077265844 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077732204 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074555036 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076738425 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082800874 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074380262 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074024118 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069354425 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073724284 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076272439 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077355396 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080594446 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077136526 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085875024 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072445778 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077611958 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070218038 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074098137 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079765489 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074459568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078193952 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07714546 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077188409 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072531083 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072854573 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069917864 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07699384 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070663185 seconds)
  done (took 6.963330907 seconds)
done (took 27.791335541 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515051962 seconds)
  done (took 1.928050194 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.626263414 seconds)
  done (took 2.070318467 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.11898646 seconds)
  done (took 8.55783926 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383100313 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453186734 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.745508837 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135285728 seconds)
  done (took 3.1929091 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709764158 seconds)
  done (took 2.157812418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23594176 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22515141 seconds)
  done (took 1.919199777 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348952219 seconds)
  done (took 1.786402999 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081390855 seconds)
  done (took 2.52354782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235417445 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160130973 seconds)
  done (took 1.843124818 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445420218 seconds)
  done (took 1.885837636 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.214012812 seconds)
  done (took 5.656493553 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220853818 seconds)
  done (took 1.697114242 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235346801 seconds)
  done (took 1.677687572 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.734929233 seconds)
  done (took 3.179969445 seconds)
done (took 41.530361254 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083218307 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085857167 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08636351 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081690968 seconds)
  done (took 1.763817732 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075096916 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070982985 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07483444 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070667889 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074338066 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070660921 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071904878 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073067095 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07016629 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070856334 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071825997 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070535508 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073518766 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072284099 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069113852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073379828 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.073970588 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070452657 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073932108 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07273323 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071529413 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075755897 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075512039 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072099179 seconds)
  done (took 3.1855983 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078209452 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073804811 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076427561 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07199713 seconds)
  done (took 1.749848429 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076597765 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087916781 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086492551 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077057977 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088251173 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083475714 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067191473 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069238814 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069452326 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077100572 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067454945 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093422453 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086060671 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077442111 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079004591 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063868289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067157624 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086929671 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07837962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079553219 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069768507 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07776283 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066501931 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087455542 seconds)
  done (took 3.307579275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081502632 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066239449 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081066366 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091895757 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09354561 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067721275 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082576396 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095638469 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138345789 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068081879 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073698123 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06881335 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.1071431 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068200756 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083559548 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111657194 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114922597 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072623853 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101218795 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068615861 seconds)
  done (took 3.190222197 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083150277 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072485502 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070848392 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065549825 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076600163 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072513487 seconds)
  done (took 1.901761927 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068786937 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068595955 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067642136 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067164226 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072899087 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067474013 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066051253 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068011109 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067831293 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067374701 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066817437 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066094918 seconds)
  done (took 2.269822059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191074129 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068743571 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068933325 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066090774 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070081178 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066469726 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081382765 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06776623 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093668464 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066527042 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067064079 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070436097 seconds)
  done (took 2.433517582 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191978689 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073476867 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21931655 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143031215 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101453146 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108637352 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110460029 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106956807 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132273555 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096624587 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151602313 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158374113 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10243303 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127991704 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086648417 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119181217 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14241625 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154089677 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098493666 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152571601 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1331321 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122797526 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14043369 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096200574 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099874309 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11187077 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07172789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076868661 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157311939 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121373399 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1337991 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103844421 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088887845 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163462919 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158867324 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129723241 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140329425 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081249246 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116489348 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127596141 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18985317 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08617042 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147286314 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100717755 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076520318 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122254545 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107220345 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11285691 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097819274 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085312442 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273540324 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173144161 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128094519 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083720403 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117088691 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105357802 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108736069 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114326143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169875963 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150684011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12276385 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069745676 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107382051 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14254856 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127140582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107825976 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121521297 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092374739 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127184155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15111236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120473494 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136011997 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111802675 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08401239 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113353397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128947753 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120558204 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161218747 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116459537 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071000852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114509929 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09432825 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07706332 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142392107 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073167013 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162500468 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095158441 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120166886 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124702938 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103622805 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103898401 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147734394 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133126308 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100458158 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083189902 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098426572 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113316412 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134767323 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083935108 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101927729 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107193187 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07651466 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124709171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072052368 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113410733 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091450469 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112063337 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118014511 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075251565 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113253723 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244399007 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099240728 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121995909 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149209143 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086613906 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079517588 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156950011 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119855786 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104177359 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138412444 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151629738 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118406061 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096050811 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138099192 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163217835 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086639731 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152433512 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097941135 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08060889 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.101711219 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11666264 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105031027 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117529905 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078192517 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113659837 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152339206 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072145822 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093057497 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1260107 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078237673 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077429879 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100051938 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099475678 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092925891 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097101804 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099518602 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128630434 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116439448 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100950804 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116933751 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093330589 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15413282 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084010831 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100805046 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099487033 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06980941 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.124454092 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14514217 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076152338 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149253079 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115202243 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109086481 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111678742 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080162476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127853261 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075677849 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070123414 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130138049 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106502772 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102301907 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137808707 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105594085 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.112727006 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.110301079 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118793171 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116312632 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118062708 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099268735 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.083578811 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105899492 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118051962 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.069244644 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085661892 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077199589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095372721 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087340358 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078723574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12450207 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107845865 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100505066 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104035092 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088572735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131624212 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073192507 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109220459 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.108975227 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086938309 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134878497 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133808092 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118098917 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092134755 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120842179 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069850085 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070208072 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081761171 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110089056 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07753734 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077638211 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101532065 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131314998 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11117928 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120046363 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111726485 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104380838 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138852815 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068286915 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.110914189 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12471542 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109486534 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.093509287 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08482222 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.089825882 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125294138 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093359621 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1569576 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102882581 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110939888 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138203658 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.093809335 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073694345 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095283365 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115705418 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090590707 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.391635452 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098629011 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086853027 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106593369 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078920628 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099483095 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123254305 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114569511 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134133906 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110026236 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127661941 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077483257 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109538825 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119513041 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117087121 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082829228 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112763149 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158027495 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095643293 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112329427 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142412464 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077926847 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135534473 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162974482 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136042525 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083384699 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100531858 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11585044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120204134 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112540691 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131473633 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099749405 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13005585 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106851418 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082247175 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084155398 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092169031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100343797 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108750489 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100040693 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110402177 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092593111 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122887894 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099222363 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105909268 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111772904 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097265116 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092628107 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092774068 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16279521 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111903345 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157442649 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09560749 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132425626 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14783618 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075964468 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075452417 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077035659 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127873424 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08085566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121128006 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106023819 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108355316 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114043558 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126566847 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090982662 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068474659 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102812511 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122809996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113991715 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090986984 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096986297 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142801329 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111488708 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074288064 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104245082 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106992857 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096973264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154925243 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.077706909 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101434575 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072758934 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075212815 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115189028 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135191938 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077710362 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.097687862 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110350995 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102122403 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11500324 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090287694 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102714176 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12030161 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131680232 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114336187 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.083900644 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101343001 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115857282 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136437262 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095784172 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094118087 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155345622 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136145604 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.142101002 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082047216 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107795688 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10518324 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101376603 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123574748 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079108446 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143871993 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077188145 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121041759 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09334824 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083110132 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116029066 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.104377825 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082517313 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129975946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107364254 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077768713 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075547449 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.368689575 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11604139 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101669122 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07484721 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133449682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073887202 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129385588 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16168736 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080096124 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102659026 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093832971 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081557005 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100588393 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099115503 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084560057 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09786965 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16077212 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08586907 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139546262 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127312792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106926766 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129836302 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100639268 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639745731 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078743064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14282739 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111176897 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166120859 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095903183 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113179217 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106286504 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114465842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134124462 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098577176 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176111121 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122914496 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112740964 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076772102 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097942414 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099412572 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086051073 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102618976 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108334542 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107757529 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091644983 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111973499 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115416841 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079767125 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092516726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144829551 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109568141 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133186391 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130072032 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081726703 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111989134 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126925331 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076740803 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111031689 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139512502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256970453 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09815598 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082538512 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099234301 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164338653 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071310191 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147620069 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114072442 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10587775 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110480903 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105321196 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122837538 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099148359 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115059008 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08996244 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104703207 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144294474 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081038007 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076902697 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101506862 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105745022 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094266931 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094921777 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096044714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141386882 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070213871 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094207064 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109715062 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135017001 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16002314 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103540478 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084178068 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116688082 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116109251 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109883348 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115144089 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078606872 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078058089 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07843566 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097877891 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120002287 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108861222 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113274568 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10424598 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149987397 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082378658 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224011831 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091944196 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100714657 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086517921 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077731098 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094903662 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092358659 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099387606 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10631547 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162154279 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091909915 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086576539 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088694631 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072547647 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079939535 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118658336 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104916892 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111276714 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098849221 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078898009 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251972978 seconds)
  done (took 55.853334717 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120927903 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.099213497 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098547293 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146632731 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121497324 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200279217 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150825883 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18913506 seconds)
  done (took 2.744821107 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070405489 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094649981 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104479962 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084907793 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068093237 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070409572 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225073306 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083041371 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067375377 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091590306 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079787802 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070571138 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.441306193 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068916247 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069588992 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077941433 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068021461 seconds)
  done (took 3.431406181 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38318971 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.606525344 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348920423 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076476724 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.996985894 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093567864 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.204310734 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142060726 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082778698 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537362456 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368623755 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13382001 seconds)
  done (took 18.581737208 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082965382 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077596369 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091419182 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091032248 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078616177 seconds)
  done (took 2.026676344 seconds)
done (took 103.903978378 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082263024 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.43195271 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069403748 seconds)
  done (took 2.133987629 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091382465 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089716501 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089806369 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086943058 seconds)
  done (took 1.973388205 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075582691 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077649573 seconds)
  done (took 1.761942054 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228694488 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175106477 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096289407 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084296051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080388619 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081042449 seconds)
  done (took 1.855804811 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074572433 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07360702 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074165066 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075022994 seconds)
  done (took 1.902457057 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069051738 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067701442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069860838 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07238906 seconds)
  done (took 1.884991401 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085304568 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084743384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079759765 seconds)
  done (took 1.855948369 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102462885 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091398009 seconds)
  done (took 1.800495142 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081644946 seconds)
  done (took 1.689790948 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089093281 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099545827 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132402992 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114452153 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138685669 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114779567 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084847679 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085126816 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079611088 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086100684 seconds)
  done (took 2.630679494 seconds)
done (took 21.677471213 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079644011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370124569 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360400047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090421027 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668136351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357372968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97130899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092683747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140716775 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068441895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085204652 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648322545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960729105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322008023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945250764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32595494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649384939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069410095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068716149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068789337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955978099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068232945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068444119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069289507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648685007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372967172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068667211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326012637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069666072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071517059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35661812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070246105 seconds)
  done (took 16.077645524 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071237174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121706725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074410061 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084629214 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071491731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070697059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074138132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071633358 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12106947 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070387008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087941289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071893668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075515027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072294446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091952486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071778939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071640263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073681626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07305794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073406701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092786034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073005132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070357717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070426283 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069975539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084575306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075812541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072916235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073363993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075076983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075647656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073469647 seconds)
  done (took 4.125236743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117025128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125192486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074727243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106868277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112296973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071168329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148278658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096593524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129750524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071602617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088217302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069342571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103416881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070474691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092800597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072898381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073876907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072003315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07046973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070274339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091767806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071237735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07260669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073482377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073318644 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086895052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073276086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073438711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073150642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075401007 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07676615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073564575 seconds)
  done (took 4.372644524 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071387113 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074790664 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080983829 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082213955 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067994334 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070207572 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07168131 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06793965 seconds)
  done (took 2.211240265 seconds)
done (took 28.401852774 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078259225 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068737226 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072031865 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087318011 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074262743 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079654866 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065961505 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075278064 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072482587 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072325965 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074169274 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067931909 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070644019 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06592651 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073122743 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066903275 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081608359 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071373507 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080892708 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082760654 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06989573 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073877565 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075567335 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08119689 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081015677 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080941424 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076947132 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073531707 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06871461 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071009481 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070928988 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079831231 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081658014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082068413 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067880093 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067994215 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072268841 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070272641 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082167236 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078793099 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072314398 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079255973 seconds)
  done (took 4.734414825 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084809553 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090073259 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083104092 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080556288 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090666469 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083038803 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086827132 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077980349 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078263264 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086368982 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074819156 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081286201 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07894287 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073173945 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077539771 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075164523 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079696258 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074583227 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07729489 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077972946 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08738247 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07331434 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087936572 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079922359 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075370082 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080872553 seconds)
  done (took 3.732058891 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074084899 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085814509 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09365751 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14487676 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112547373 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080399638 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08202897 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092319273 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09720649 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069126164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073217735 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093422595 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093947296 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074423087 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06910864 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084466366 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084620917 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070760605 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075489019 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097210963 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09025634 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085852412 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094882446 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085442353 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068536594 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071279449 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073684484 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084538247 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071523094 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080325144 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071632588 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075291688 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070052194 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079379587 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071628672 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068145339 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092653297 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079726442 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081165942 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069070527 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077920634 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069690764 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09427549 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129091162 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067912156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073072606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072448303 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080070129 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068199127 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096073233 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080323193 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068371547 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069233607 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067813269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067921009 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070991128 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070738878 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071238588 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078694908 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075155708 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090612498 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073298287 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085759517 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068087534 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079380063 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067682284 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070129373 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067181161 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096996224 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069995248 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112099963 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069566015 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067465315 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07946389 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079072449 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074594717 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068024214 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085591491 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079485078 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072518559 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076711114 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071508661 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071921727 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098941972 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069043605 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06795674 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067077124 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072007167 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071876625 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068985391 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08019784 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068348474 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07193407 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085974927 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068284752 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069271995 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071997359 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070986895 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067883997 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078833952 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072186159 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06960307 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079100229 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069263847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071958332 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082227452 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075317286 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067628645 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070300564 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072052632 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069531456 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070104228 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072304717 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070739473 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077256618 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077133593 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073992393 seconds)
  done (took 10.768591568 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164874924 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157104797 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071088414 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148201949 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077416946 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081325918 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151305954 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095310943 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068461568 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070298997 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06926263 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109579883 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105816262 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116382453 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081302469 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070084128 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091591001 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114441199 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153607411 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147983914 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091849227 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077414396 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071822998 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071131405 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071151988 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07887015 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085902398 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07799714 seconds)
  done (took 4.440985914 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078831208 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104498667 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073794314 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092599676 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090826063 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071855519 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07360398 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.0731772 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087909985 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080793992 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072273401 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077566922 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075591153 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074951954 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072166965 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077137497 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076483622 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069493873 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072975444 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074540507 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079554799 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094451216 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075274601 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071605633 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074439929 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071446153 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080437753 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084276849 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071840635 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108725341 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069204332 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076484864 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088486526 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071907715 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071188441 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071812226 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071998936 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071700036 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073081499 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069947199 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070371628 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075315756 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070689292 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079662502 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084450117 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073468062 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073737574 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073839762 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072231161 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067566803 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07211416 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072353899 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071889597 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076336521 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073716757 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072028976 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070318044 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095631515 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07734078 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068666553 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068800942 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069435351 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074151607 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081737291 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087201503 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074106141 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070506681 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071604883 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084602788 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084712427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071176218 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075237169 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066993842 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070808144 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071742808 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07276497 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070361896 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067885804 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068873818 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072278196 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069837125 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068910932 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069457639 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073707407 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069554183 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070147279 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071781127 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073338633 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080181553 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07055847 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075115603 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072109572 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070536714 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074837941 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076977689 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074720975 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082733118 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082628111 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071748862 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070133601 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085973109 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074603889 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07147103 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077596818 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076249149 seconds)
  done (took 9.59844625 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091868454 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069630273 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087560115 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09567445 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080944324 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077772735 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081705773 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071441047 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088241501 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076183362 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079108486 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070142072 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083771673 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081094529 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071860921 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081977131 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074840743 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089645441 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086219739 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070513473 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080111998 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08442131 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08355263 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086573767 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084580969 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084855938 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081437806 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079607019 seconds)
  done (took 3.957705852 seconds)
done (took 38.85141213 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.729229693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.881118462 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.705300345 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.899748013 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.928392687 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.720906591 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.783427924 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.695505232 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.962246677 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.744071748 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.008929392 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.955455817 seconds)
done (took 64.793596258 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.718638367 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.850283492 seconds)
    (2/2) benchmarking "String"...
    done (took 1.947046515 seconds)
  done (took 5.508780419 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.919002713 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.430951222 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.927403269 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.694540921 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.700194599 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.948111096 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.45886063 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.136902 seconds)
  done (took 29.933437933 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.927531345 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.921897253 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.412906248 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.45141561 seconds)
  done (took 15.395549221 seconds)
done (took 62.204704352 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.715644835 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.734887016 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.699550507 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.688668079 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.778943093 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.697654434 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.864822004 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.718554322 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.689373765 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.696816021 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.68922903 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.166048012 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.689350712 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.838103746 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.686160477 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.684668513 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.737357559 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.206778586 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.836778719 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.692841976 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.693063174 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.736757171 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.67862233 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.680651122 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.717917921 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.678717082 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.071006159 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.679303221 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.278089285 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.681601742 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.712177639 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.951153157 seconds)
  done (took 200.706675492 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.675243082 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.558779282 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.621173357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.720618498 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.028299231 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.865536191 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.771383036 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.103325009 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.677148529 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.695946156 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.845956096 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.673713286 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.862743639 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.620410345 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.710171378 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.771819954 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.826388739 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.859093402 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.711601824 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.819416483 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.67380375 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.67263106 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.636903032 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.817605761 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.699336581 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.75126681 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.845551049 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.689762969 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.865491035 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.814371496 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.680179175 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.696128482 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.900075732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.549740103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.680305858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.681196258 seconds)
  done (took 165.691736512 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.856723264 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.676601562 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.676355861 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.676488751 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.68809827 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.675964733 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798821587 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.807434953 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349597139 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.394886452 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.734087703 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.674346699 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.472584762 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.677491644 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740505945 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.68652326 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.675517187 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.689991319 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.702729514 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.674617019 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.67571386 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796345872 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.691329908 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.675386884 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.683688412 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.675546084 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.679822845 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.061654105 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.674399647 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.735970407 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.678847541 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.678069837 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.92987725 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.673316192 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.675779123 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.502940163 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.35669319 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764856062 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.675267165 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.678410332 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.671962043 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.890283049 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.672715557 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.673674211 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.672764753 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.67493084 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.795853868 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.676285246 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800947416 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.675038937 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174817243 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.676109734 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.675237569 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.17325965 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.292754873 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.677306863 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.675427174 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.673135663 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674745564 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.679792682 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.030034154 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.749051954 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.676429833 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.674441272 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.67943917 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.674482574 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.809749084 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.674531035 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.324910272 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.692203259 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.905823059 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79680631 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.680907891 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740085666 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.767660717 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.675406336 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.675476822 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.674651101 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.672195196 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.754047405 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.674639742 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.675645195 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.76736807 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.685646577 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.676437615 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72868098 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.744806118 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.67520282 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.674749115 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.507304927 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.679053631 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.675291398 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958699923 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743592092 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.674862238 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.677081848 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.675126407 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.758105821 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803056208 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.402801396 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.679687612 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.992095365 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.762490181 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675677652 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.674957851 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.802627798 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.679768927 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754750882 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.682388973 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.677573832 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.710692035 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.676878409 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.687958664 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.67640728 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.049688475 seconds)
  done (took 390.02028158 seconds)
done (took 759.970047659 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.292628346 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.250586847 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.344819827 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.265911319 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.238266446 seconds)
  done (took 13.008989946 seconds)
done (took 14.626214659 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.753463553 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.758194692 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.693342399 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.756810922 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691157383 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.754928773 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.739849341 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.698149879 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.725144444 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.700303163 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.725483317 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698432241 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683734029 seconds)
  done (took 23.995953759 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.897132883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.904926079 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.741348959 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.903161774 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.721485063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.923645613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.831091142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.833986924 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.836649936 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.687507799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684356641 seconds)
  done (took 21.583697213 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.905764335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.909911271 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.748044265 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.904636542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.722370093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907484335 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835159883 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822341687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.819253076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.6886585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686270769 seconds)
  done (took 21.567633989 seconds)
done (took 68.763653822 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.681090839 seconds)
  done (took 3.300542671 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.700058536 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.852843774 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.681756834 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.681048762 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.680762265 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.682640232 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.682627765 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.682092485 seconds)
  done (took 15.26364508 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.680419254 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.680886095 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.681526866 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.680709633 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.681994974 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.683497953 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.680438751 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.68084423 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.681748755 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.680586673 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.681681909 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.681660327 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.68161162 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.680768785 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.680737882 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.681380503 seconds)
  done (took 28.52135658 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.683647193 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.68088516 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.681223873 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.680323945 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.680235021 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.682287144 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.682696754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.680491447 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.682169276 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680895632 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.681699107 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.682089678 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.681286259 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.681233132 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.681277621 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.682116383 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.681278379 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.682779098 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.686006579 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.68233505 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.68145518 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.68112038 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.682190616 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.683782294 seconds)
  done (took 41.987562054 seconds)
done (took 90.692651052 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.475646337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.309678987 seconds)
  done (took 9.406144941 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.686186822 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.682885742 seconds)
  done (took 5.058874858 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.68312357 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.682894744 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.682250479 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.6829544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.682894746 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.68131915 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.682859976 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.683469376 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.68318444 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.683149502 seconds)
  done (took 18.449157205 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.682808648 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.681961911 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.684368312 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.683228407 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.684083775 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.682687158 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.681888387 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.68333255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.684486958 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.683149512 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.682759831 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.683145919 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.683050765 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.683964126 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.683274649 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.683797366 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683619155 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.683032133 seconds)
  done (took 31.920821489 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.683834948 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.683196257 seconds)
  done (took 4.989243734 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.683329514 seconds)
    (2/7) benchmarking "second"...
    done (took 1.683075331 seconds)
    (3/7) benchmarking "month"...
    done (took 1.68321842 seconds)
    (4/7) benchmarking "year"...
    done (took 1.684561543 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.684225885 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.68420897 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.683290263 seconds)
  done (took 13.408745178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.684732621 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.841885444 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.907280822 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.306174424 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.685101824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.687177481 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.593493192 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.687399667 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.68879002 seconds)
  done (took 18.704165708 seconds)
done (took 103.55751905 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.54786908 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.685192541 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.936590572 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.747828305 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.714628588 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.021716102 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.698845612 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.983138175 seconds)
done (took 41.958673677 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.74552488 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.402530814 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.431607115 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.788590666 seconds)
  done (took 15.245820415 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.687388464 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.112463456 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.716091417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.542207649 seconds)
  done (took 21.89189086 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.050013447 seconds)
    (2/2) benchmarking "read"...
    done (took 2.041169184 seconds)
  done (took 5.723062523 seconds)
done (took 51.230353294 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689425343 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.689882272 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.690276827 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.689734226 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.690393514 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.691244375 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.690528998 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.691005663 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.690283513 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.690736759 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.690050842 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691720283 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689919545 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690511129 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.690500492 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691598192 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.691072302 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.691742244 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691438961 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.690884824 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.690628639 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.690690077 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.690876596 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.691762963 seconds)
  done (took 42.207110851 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.691523592 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.691546128 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.691059773 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.690611082 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.691882439 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.691238203 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.690697288 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.691182027 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.690534611 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.6917591 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692129192 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.690611211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.691146138 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.692649071 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690873025 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.690714167 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.693380186 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691361896 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691927569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.692192805 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.691831708 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691617283 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.69269944 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.692065695 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.692085022 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692695432 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.692033621 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.692207462 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693177112 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.692956357 seconds)
  done (took 52.382289453 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.691875833 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.692622415 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.692634584 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.694261547 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.693085946 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.692593178 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.692418825 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.693060638 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.693935352 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.692119889 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.693023437 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.692585113 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.692573675 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.692775858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.693244652 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.692376426 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.693635008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.693369656 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.692552562 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.694205669 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.694770913 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.692682036 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.694092932 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.693167091 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.693997104 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.694319876 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.695431627 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.694032553 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.694472296 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.696259723 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.694562011 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.693390322 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.694635746 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.693310894 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.69391486 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.69356273 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.693978213 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.693784088 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.695212371 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.69384516 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.695263441 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.693935889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.693923592 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.693185017 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.693072423 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.69319532 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.692000658 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.693400574 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.692221041 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.692816111 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.693228609 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.692821484 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.693552642 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.693190848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.693883921 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.693465374 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.694325009 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.69303917 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.693417689 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.693535003 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.693760305 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.693969825 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.694674894 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.69311552 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.693730754 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.693584799 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.693388231 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.693548563 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.694184585 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.693538208 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.693026655 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.693643721 seconds)
  done (took 123.566818611 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.693825131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.694822059 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.695309826 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.693971364 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695089808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.69366884 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.695423144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6947214 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694511759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.695096098 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69429134 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.694692781 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69528413 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.694090989 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694251024 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.694543787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.694872143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693864011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.696759528 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.695117446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69387476 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.694349079 seconds)
  done (took 38.915239339 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695521763 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.696085216 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.694267486 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695035858 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.695737777 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695753146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.694928957 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.69534833 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6960877 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695834334 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694796647 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695091432 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.696215533 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695049633 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695651845 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696142556 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.695268911 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695862426 seconds)
  done (took 32.151790106 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.698031066 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.694920924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.695332644 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.69564307 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.695734762 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.695727622 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.696872248 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696254196 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.696378099 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.695534257 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.695246501 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695598241 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.696917182 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696141202 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696860102 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.697245297 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.697212792 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696035034 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696291406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.695965174 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696557904 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696828585 seconds)
  done (took 38.952295154 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697349356 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.695873546 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.696851774 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.696202361 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.696159446 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.696811138 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.698206033 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.697273545 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.696704739 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.697059284 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697449611 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.697706763 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.697574465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.69722043 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.697352633 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69720853 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.697049782 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.6968556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697794143 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.69806125 seconds)
  done (took 35.577946795 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.69889368 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698369574 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.697336182 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69948687 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698510714 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.698408411 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699288656 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.699814867 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698572214 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.69928359 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.699254401 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698660578 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698788639 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.698554217 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.699658606 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699963524 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698635273 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.699412087 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.699845741 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699253232 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.699223058 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699184674 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698616154 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.699174746 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.699166376 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.699446002 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698911738 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.701337276 seconds)
  done (took 49.211656554 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698266181 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.699555749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.698786679 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.700490168 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.699878869 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.699664497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.698569072 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.698862523 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.700006447 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.700489792 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.700323666 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.699681826 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700401558 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.698828469 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700620215 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.701744727 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700436165 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.700043774 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701304855 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700262185 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.700855542 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701684201 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.700476781 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.700471519 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699972328 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.70019574 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700474128 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.701633612 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699614382 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.699806959 seconds)
  done (took 52.6415417 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.721840501 seconds)
    (2/2) benchmarking "in"...
    done (took 1.723646716 seconds)
  done (took 5.084050811 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.700058753 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700581037 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.700090872 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.700763991 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7012773 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.70203094 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.7001345 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.701219883 seconds)
  done (took 15.245811273 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.702771195 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.701723753 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.701856415 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.701440446 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.701639106 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.701527083 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.709116264 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.702006369 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.704561176 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.703080102 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.70960941 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.709065781 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.705491437 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.704815788 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.7029458 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.704996325 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.702016808 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.702439597 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.702909243 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.702703922 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.702156936 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.705650528 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.706650011 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.702325337 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.704977148 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.715028975 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.708678518 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.702423941 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.704440109 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.707791268 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.703667076 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.702955202 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.703399178 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.702473286 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.70167281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.703238793 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.711770915 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705052169 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.709080124 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702931294 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703516432 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.702471299 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.705942386 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.706863296 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.706034716 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.704053744 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.702813392 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.702538643 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.704337154 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.707783824 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.710898809 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703884026 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.703293298 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708116481 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.706431945 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711275251 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.7056059 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.70706726 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.713108399 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.71516809 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.716534912 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.712599037 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707487661 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.704762689 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714281986 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.728242083 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71200988 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.704215847 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.704476538 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.704323347 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.712854561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716838836 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.715509701 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.704935118 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704807383 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.704645801 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.707527248 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703985684 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.712967007 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.710452166 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.70601115 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704571343 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.714895884 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728209 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.707248067 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.70560746 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.706089063 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.706907115 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.707211771 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.717773714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.706979212 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.706308111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.706280028 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.707058674 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.707610096 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.706891175 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.706939063 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708091796 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.705592354 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.706195295 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705734634 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710011616 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.714854067 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.705774017 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.705524161 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.713969322 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.70656776 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.707567587 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.71417292 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.706546651 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706260902 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.707708229 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.714123104 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.706085835 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710070179 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.715668269 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.707391314 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.709444697 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.70691672 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.706470043 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716668254 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.732869959 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.706712032 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.706399178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.712625339 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.717420778 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.707163529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.711348878 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.707435945 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.706704265 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.707434578 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.711169976 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.708304467 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.710007303 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.708184679 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.71027137 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.707957422 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.707626277 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.708082327 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.70991232 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.710581242 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.710444504 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.712325769 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.710923236 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.707874568 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.711552553 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.715515553 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.709310525 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.712303205 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.710477187 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.708376514 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709534196 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.710470772 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.709896327 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.710380035 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.708826969 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.710167949 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.708909149 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710268554 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.709048142 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.709194049 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.710439567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.713631536 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.709076041 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.713833985 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.710485325 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.709741593 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.709399952 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.708872371 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.710781665 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.709119557 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.70839465 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.714219883 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.717337417 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.709371318 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.709454196 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.713158403 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.710304651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709568919 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709682712 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.714346609 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.718806576 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.709577718 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.71843615 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.710160645 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710298639 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.710258824 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.712136157 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.710579804 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710480887 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.715177041 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.717092759 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721500903 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720009073 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.712162076 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.714217419 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.713097238 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.715099288 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.715841993 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.710976514 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.709502061 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711006616 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.712151435 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711050291 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.714775969 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.710824103 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.7109024 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.710899066 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.711340155 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.7118251 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711395604 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.713605959 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.71402488 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.71160159 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712017581 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7116872 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.712794496 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.711106273 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.711328223 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.712285747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.712126954 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.712166229 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.719174582 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.712210946 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715086554 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.714595571 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.713373618 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.711668823 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.712684836 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715407651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.713476065 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.719852638 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.713898398 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.714934948 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.720324427 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.713009469 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.713613064 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.716899681 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.711870617 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.712925095 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.715459813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.720690542 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.714223109 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.712976411 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.712800613 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.71354558 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.713667463 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.721726714 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.713141805 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.713541139 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.713434612 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.71550012 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.712584993 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.716011085 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.715727647 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.714987555 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.717561058 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.714153612 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.71376305 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.716062519 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.714103416 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.714510782 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.71431666 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717483168 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.72128514 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.719429398 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.715599588 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.717574154 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.716506228 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.718367019 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.715435273 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.715011345 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.715612112 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72558466 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.722416192 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721624427 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.717336564 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.714349201 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.721399767 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.716267005 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.718621412 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.716421048 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.717364093 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.716315689 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.715186266 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.714431572 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.716497403 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.713847315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717979805 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.716783779 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.718884476 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.715459586 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.71750683 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.715059267 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.715355242 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.715787478 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.715763045 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.71508046 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.718939972 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718303094 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.716718139 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.717004782 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722178969 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717958014 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.71749176 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.717357314 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.717835399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.715623903 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.71762674 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.715747398 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.720024541 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.724478013 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.720728301 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.727685838 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.718314206 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72583359 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.716714245 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.720969743 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.725499563 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.717820704 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.717123136 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.718117012 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.716900147 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.725426375 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.716899829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.717765415 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.720487503 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.716802685 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.717492827 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.716614491 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.717050193 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717255417 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.716316954 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725372838 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.719113335 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.722982058 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.720564997 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.717233142 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.717388161 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.717700073 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.717050656 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721935434 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.717237008 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.718963886 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.718484331 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.718309881 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.717468691 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.718380723 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.717468465 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.717788512 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.717359179 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724789183 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.721088541 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.722721077 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.717702556 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.727376128 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.718756254 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726345831 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.719911855 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.719060747 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.71795987 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.717486169 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.720570777 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.719088255 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.720426583 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.718601322 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.71937068 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.722693311 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.719554105 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.721254859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.721079386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.719413418 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.72053544 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728529005 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741569962 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.722793341 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722340498 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.71964028 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.72109348 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.723977761 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.719047361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.719592219 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.722998074 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.729842349 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727325316 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.721281744 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.719156786 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72067463 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720981141 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.719545835 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.720060878 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.720301866 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.720403168 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.721010868 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.719783484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724203968 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.720478631 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.721412001 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.722442109 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.722282512 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.731009327 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.720839685 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.721907428 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720709014 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.721022543 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.722124937 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.722449199 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.72084261 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.722540898 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.720758235 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.723778204 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.72780611 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.72837813 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.724994104 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.722559295 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.72136016 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.723696978 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.721345423 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.721511282 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.720995191 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721262769 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.723563283 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.721767336 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.721695756 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.720989345 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.720659655 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.722116663 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722293996 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725606878 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.730063931 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.723736964 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.720960392 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.721647732 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.721777397 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.720733681 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.724165607 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.730367123 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726056772 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.733138133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.731383966 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.726137651 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.723803263 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726970772 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.732201749 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.722770172 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.724684562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.722564493 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.726225846 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.723375181 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.72720748 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.722320294 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.73127063 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.72371626 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.723408701 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731483261 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.72550496 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722812987 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.724489976 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.72793517 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.72511159 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.722009278 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.722141172 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.72413653 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730700613 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.726121286 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723006612 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726225718 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.722084776 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.726380863 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727637392 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.723521319 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.725740327 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.722891659 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.725835125 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.723850325 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72361195 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.722881715 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.723706507 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.724484223 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.727767854 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.73138028 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.723989686 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727325923 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.725280194 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.725801381 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723672702 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724888954 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.722271439 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.724485956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.726556813 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724731344 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.727294663 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.728350771 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.72549107 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.725820714 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.729943676 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724867648 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729056284 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.73536523 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.73189106 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.725444972 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.725698968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.725770843 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.73001796 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724950097 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.724479677 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.727751363 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.727978531 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.725276135 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.726436977 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.727460609 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.729393803 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741451367 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.7261066 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.727556555 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.727510913 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730239353 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.725066112 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.725451815 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.725727538 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.728875935 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.729372035 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.732950324 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.726174957 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73438091 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727230845 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.72718833 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.73042895 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.730735321 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.73434664 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.731020785 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726363469 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.726297728 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.731668531 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.743768502 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.726389917 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735822651 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755986479 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.728839292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.729257841 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.727209778 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727840553 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.726240569 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.728903941 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.726912641 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.726495159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726554121 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.727029154 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.728545841 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734828302 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.730829182 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.726394626 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.727297558 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.727783555 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.729782404 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.727679092 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.728455161 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.726779758 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.727152759 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.728268088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.727744081 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.730318777 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.73920111 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.738025062 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.727568266 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.728062648 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.728313675 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.732560715 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.730694288 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738580151 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.734192389 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.728151069 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.728689926 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.730688481 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727712742 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.728380343 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.729176195 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.729822621 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729458506 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.728330854 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.739738348 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.736698144 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.734078615 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.730929014 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.729919662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.728617412 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.731032298 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.728893339 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728003926 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.730980362 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.730523255 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.733446048 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.72838652 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.7288907 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.733545149 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.736309654 seconds)
  done (took 1025.562645153 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.730223862 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729549501 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730167447 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729942005 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729892962 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729160739 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730094485 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730462947 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.729317758 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730498784 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730366441 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730012449 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731015883 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730672757 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730905883 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730382028 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731685384 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.730413743 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.730383543 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73106461 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.730586746 seconds)
  done (took 38.003731631 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.730991574 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.731523938 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.731308831 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.731109942 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729951634 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.731151429 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.730548418 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730906721 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.730693956 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730858228 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.730817899 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731416827 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.729930906 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.730436351 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730826326 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730967046 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.731214452 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731794366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.730550165 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730992499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731555172 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.732424735 seconds)
  done (took 39.750231745 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.731388161 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.731694175 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.732156181 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.731427345 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.73191184 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.733602999 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.731751595 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.7320848 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.732266509 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.733037281 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.732900283 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.733595841 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.739003152 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.739022427 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.735043115 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.731978464 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.877371906 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.733211866 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.732372511 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.732960347 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.732657315 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.738862241 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.733315999 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.733990511 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.732802605 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.732973567 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.732973357 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.732798261 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.732828634 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.735576277 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.736572993 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.733006006 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.734405656 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.737252556 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.734470631 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.734222398 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.737247068 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.734303464 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.733300444 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.733040659 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.743463229 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.755630733 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.73316534 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.739346115 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.734020066 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.733849318 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.737317223 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.740841993 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.733151432 seconds)
  done (took 86.81562246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.734129572 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.733307846 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.733832053 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.732749857 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.734092497 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.733608756 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.733020366 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.735078289 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.734357362 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.732911454 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.733406942 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.734225838 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.734135617 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.735348422 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.734097653 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.734426619 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.735204719 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734840087 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.734827539 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734606435 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.734200178 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.735074097 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.734550774 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.735902357 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.73587216 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.736168636 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.736346507 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.735897303 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.73825814 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.738524739 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.737296498 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.735919924 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.737562856 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.736788917 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.737282037 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.736864811 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.73728418 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.736913401 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.736639961 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.737079233 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.737870353 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737285691 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.737264838 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.737284735 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.737975936 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.737629807 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.737834996 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.737238627 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.737903614 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.737188808 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.736721681 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.737897738 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.737680388 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.73863559 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.737533463 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.738261462 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.738241093 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.737559525 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.737292399 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.73846758 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.737415963 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.73641629 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.737835623 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.737931717 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.738277436 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.738787894 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.739639082 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.737834841 seconds)
  done (took 119.742686937 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739153491 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.739340132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74048717 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738737924 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738614876 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.739376716 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.738738089 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.739307498 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.739242523 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739425658 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739931774 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.738715966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.739341466 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.740074108 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.739248939 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.739104289 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.739557077 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739962751 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.73916883 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739922939 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.737808155 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.7411676 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.739565374 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.74007187 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739963513 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.740196105 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.739528328 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.738708966 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740901853 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.741226743 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74077366 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.741351322 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.740369436 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741213894 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.740121398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.740136411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.741547504 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73984709 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.740691975 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740499244 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.739822914 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74058627 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.740817204 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.740613574 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740242892 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.739981129 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.741648575 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.741755823 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741712199 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.740917573 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.740211129 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741125537 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741616576 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741483792 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.741445977 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.740861298 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741545288 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741585628 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740643521 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.742457431 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741830891 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.740265333 seconds)
  done (took 109.573004991 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741152898 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741406797 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.742224559 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.741249276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741717007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.74093278 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.741146327 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.740900533 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741498845 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.740935328 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741282113 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740805554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742429828 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741667927 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741818002 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742218414 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743477697 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741735992 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742299893 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742765304 seconds)
  done (took 36.512122916 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.741690385 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.742805734 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.742453931 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.742520209 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.742707379 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.743107941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.743495591 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741474063 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742520449 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743033023 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.742435346 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.743219669 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742582377 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.74227787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.743288312 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.742709939 seconds)
  done (took 29.561848599 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.74324454 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.742360996 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.743216452 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.742829339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.744118664 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.743031412 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.742952497 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.745111645 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.742790051 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.743893965 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.743118796 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.742968395 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.743180059 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.743302046 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.742684154 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.743062076 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.743709798 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.742655154 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.74374462 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.744099719 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.743998813 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.743430244 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.743911736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.743690545 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.744034401 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.743630353 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.742314593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.744270988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.744021972 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.74333292 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.7438393 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.744171221 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.745083979 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.744867339 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.745223702 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.745084833 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.744230591 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.744581456 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.745464604 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.744905725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.745183687 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.744060498 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.744964687 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.74400098 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.745815776 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.743935544 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.744447851 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.744814013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.745005246 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.746084849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.745340194 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.746101695 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.745521146 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.74509008 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.745170767 seconds)
  done (took 97.607123288 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745282918 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744324894 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.745492251 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.744920542 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.745760229 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.745175799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.746476291 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.745555733 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745364175 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.745656091 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.746142696 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.746378453 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745201592 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.745644662 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.747003221 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745718479 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745352118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.746135492 seconds)
  done (took 33.104351667 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746757967 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746744034 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.746195044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.747402277 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.746064802 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.746439074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746011602 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.746455517 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745860558 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750588752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746470222 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.747374047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746771331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.74609942 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747610787 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747010019 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.745892959 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745842129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.746645563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.746954443 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747256594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747304239 seconds)
  done (took 40.112335304 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.747883835 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.747935593 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.761478584 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.768488261 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.768631126 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.781488474 seconds)
  done (took 12.259430407 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747943585 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748113151 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748043493 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747218671 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747262357 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748379774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747485149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748153446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748043546 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747998771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747692548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748000921 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749436547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749492866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748275271 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74755752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748874705 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748804689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748224692 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748486937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749143927 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748178624 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747894331 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748189471 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748308739 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749254314 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748751209 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748704742 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748875674 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749015164 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74983983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749161381 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749220008 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74896041 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748775355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748921523 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749378313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748591591 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748853668 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749142043 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.749191756 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74927073 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749472256 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749234352 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749787154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749720913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750015878 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750649973 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750808098 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750729031 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751051856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75040671 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751066616 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75024731 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749342601 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750582547 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750991631 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750816058 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750063536 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751995853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750165377 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750914137 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750132812 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750767596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751393632 seconds)
  done (took 117.136273127 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75120384 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751138457 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751215928 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751699994 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750711978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750582481 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751981444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751160157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751077518 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750854127 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751435963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750805334 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752400901 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751544526 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751226991 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751652602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751160434 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752649607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75208549 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751678051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752427005 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75241359 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751209705 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751667067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752590409 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751737411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752597242 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753605866 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752916541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752568921 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752081881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751667992 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752717653 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.753278857 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752716578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752494397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753293304 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752282529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752026957 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75269813 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752284557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752523855 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752169074 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752950015 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752798155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753602788 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753286346 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75259514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753614197 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753953863 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75326764 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753167678 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754430941 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75328927 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753436471 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753450097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752977294 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753483364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754378504 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753284338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753617634 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754242947 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754512152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752794925 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753677307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754065137 seconds)
  done (took 117.354344843 seconds)
done (took 2390.664221932 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.809541824 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.864098936 seconds)
  done (took 15.36351585 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.917948303 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.868342782 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.755347234 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.775012271 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.755156781 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.778437428 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.780533798 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.754819216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.755953153 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.755702254 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.755788419 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.93857732 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.756724292 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.757147449 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.755446534 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.8478604 seconds)
  done (took 50.403334686 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.75869278 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.760500568 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.768638043 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.761475467 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.759317226 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.770733353 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.790327253 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.763255357 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.791303421 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.77008997 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.826680989 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.770230109 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.758396567 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.808300707 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.771412327 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.773550186 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.850929905 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.835603277 seconds)
  done (took 33.780360514 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.835362299 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.763539161 seconds)
  done (took 10.29693848 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.786911092 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.812210793 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.78375459 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.780094404 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.772064407 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.763512587 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.777072506 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.772367707 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.789812307 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.775772042 seconds)
  done (took 69.507219197 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.766512149 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.764867683 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.76182515 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.760916347 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.759047574 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.762943783 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.76078886 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.760599036 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.418987174 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.796808032 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.769511804 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.76563901 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.762222668 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.763796736 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.759828391 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.783754159 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.87842434 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.759420961 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.759404522 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.768790088 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.762050322 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.815271073 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.776499427 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.763622822 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.793142339 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.418924393 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.770243062 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.768227972 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.896992599 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.758877626 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.761882119 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.948640693 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.765775806 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.234937816 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.025911339 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.768860905 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.775578685 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.770600002 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.760915168 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.882720377 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.763635423 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.7689614 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.672399627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.006891889 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.855638141 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.806970304 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.07545749 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.780362637 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.76307159 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.792622438 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.76625513 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.765273976 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.775854379 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.267645438 seconds)
  done (took 126.863064903 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.760835161 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.107307918 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925534111 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.76392756 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041865413 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.965436484 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.763328667 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.807032162 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.763351879 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987319141 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016023687 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864800256 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.762636303 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.763209757 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.762467875 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.759770549 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.913524014 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.832674457 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.763374554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.760429097 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.787072548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000053199 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.88624907 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.763331315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.788993778 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.972918038 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.882353939 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.863220988 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.507840234 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.76178592 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821806194 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.763383072 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.760242851 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.760527305 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.915717905 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.854097408 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844901975 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.762524479 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.760874956 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.760624871 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.420159932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959011755 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.856025716 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.890101857 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012326555 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963924179 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.540230271 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.76148048 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.501471027 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.923525261 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.987946625 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988349853 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.881637363 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.763795109 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.099637398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.761654522 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.760470865 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009236153 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980930447 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.858943708 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.763327041 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.760414263 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.760602943 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997711896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.763199992 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.854858868 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764216422 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.76364392 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.855950295 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85769715 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.991459521 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973458428 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.789961002 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.101048994 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.264890714 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007230857 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.826299314 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010353917 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.764886755 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.761319098 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.839219379 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.606608224 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.013545424 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007571772 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006207884 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796255242 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.483254234 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.76197244 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.986456843 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.982135032 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.021470888 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011343496 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.999956232 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.110371011 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.762110604 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.761668052 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.041877975 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.885170042 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.768494677 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.101752093 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990638646 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.292242768 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.787916628 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063246641 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.893294366 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.769654922 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.388422455 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.762087771 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.989566206 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.800995051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.763957527 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764371262 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.981148616 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.748019501 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764965924 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.417532221 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.822653052 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.767267334 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993725423 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.767243728 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033408932 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.765418402 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994178417 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.211393976 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793617289 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.936245151 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.010037139 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.769964934 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.000731124 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.004901559 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.878299791 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.988103217 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.468516216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.76438829 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047477674 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.765385179 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.763447657 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.932770289 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.765563105 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.90493207 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.772136642 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.055787957 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.785032768 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99363107 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772247589 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016766352 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.796229238 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.814808099 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.766901633 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.888166091 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764642305 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.134874512 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.920191571 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769366266 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.765530548 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.314051028 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.763808246 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911990188 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.990312493 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.785621445 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835889486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.425701297 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.764670257 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850988855 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.787533381 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.149661424 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.765645413 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.016048722 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.771743783 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.765094834 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.765219317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.001093247 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.948451134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.766928047 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.766409991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.670321988 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.765028275 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.765677113 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.945346777 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.168521377 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.765519313 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969234277 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.770407594 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.893928424 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.772384409 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.836992896 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.096852575 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.766633314 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.767668292 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.766742796 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.768322594 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.767873095 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974263745 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.791275205 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.259708179 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.902325116 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037670045 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.075917855 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.005961413 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.808749982 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.769916138 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020183483 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.769387832 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.828580433 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.768946373 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.786649634 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992752457 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.768903823 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028694474 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038673432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.780671273 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815537182 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.770009362 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768323369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.767916433 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.913553407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855075014 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.769722344 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.767924853 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.88225982 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.889581212 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980341723 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.769752473 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.869022957 seconds)
  done (took 879.488136566 seconds)
done (took 1187.392801115 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.768681349 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.771615472 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.772712964 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.773157742 seconds)
  done (took 28.791832124 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.777624114 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.769360334 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.770107611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.76967172 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.770766129 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.770192615 seconds)
  done (took 12.332470884 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.772169439 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.772712695 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.7716737 seconds)
  done (took 21.02278212 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.84203532 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.15388335 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.903967473 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.189327552 seconds)
  done (took 9.795807806 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.771915228 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.772217836 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.771554788 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.771265996 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.779364508 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.77836819 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.771537855 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.771400992 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.780035716 seconds)
  done (took 17.676231061 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.872270317 seconds)
done (took 95.196007189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.156916245 seconds)
    (2/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.791305609 seconds)
    (3/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.971971669 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.84213319 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.074551811 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.879879425 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.009572885 seconds)
    (8/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.779124159 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.820889852 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.14129068 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.536969437 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.77480376 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.893474038 seconds)
    (14/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.869749809 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.776834229 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.89219681 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.775432177 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.228425018 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.771535016 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.872080537 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.054395151 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.774076111 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.002810945 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.775654361 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.306853164 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.795592204 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.088995941 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.775548627 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.17617704 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.163137848 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.116979699 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.860009454 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.776443646 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.390405375 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.102159751 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.776276121 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.884581142 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.964583123 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.545125153 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.795072654 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.94030869 seconds)
    (42/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.868768651 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.214580699 seconds)
    (44/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.865006369 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.879710414 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.774522561 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.780954258 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.140391955 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.8759789 seconds)
    (50/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.848439307 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.574569685 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.995522945 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.773419997 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.316963829 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.395088907 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.785607458 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.821097561 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.914787513 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.51153549 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.773721648 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.036583913 seconds)
    (62/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.926835377 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.08681032 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 5.455185696 seconds)
    (65/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.85355259 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.021593747 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.163188812 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.930415853 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.795327725 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.029840488 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.777825842 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.229561082 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.68505122 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.872321686 seconds)
    (75/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.870614749 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.797767312 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.806501299 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.084769046 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.78084117 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.164615902 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.125462308 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.777588584 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.006857854 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.661785977 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.779217978 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.884284416 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.882829686 seconds)
    (88/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892307851 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.905705705 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.639300619 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.904955768 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.903239719 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.133370066 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.778712838 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.992893497 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.776880126 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.857399069 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.086701684 seconds)
    (99/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.296332486 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.06031298 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.910565717 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.957426831 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.78550503 seconds)
    (104/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.229580688 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.793160319 seconds)
    (106/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.776838875 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.909262788 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.126355807 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.860924336 seconds)
    (110/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.117129246 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.044065574 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.916213874 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.77470986 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.980199028 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.097715949 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.914761002 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.989886178 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.971004287 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.798337473 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.959648948 seconds)
    (121/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.966136604 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.335343339 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.785487361 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.993778181 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.840100506 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.793180638 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.774577501 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.316808086 seconds)
    (129/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.883428658 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.913786669 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.039063937 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.809442853 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.161166193 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.779532328 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.0103509 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.093440399 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.39766882 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.029119775 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.159841655 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.439483106 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.657355788 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.779646857 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.333018217 seconds)
    (144/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.881974192 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.031254068 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.139504716 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.780525533 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.335244162 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.797131868 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.039370495 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.985564353 seconds)
    (152/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.784914163 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.898237671 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.802427485 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.778464575 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.887674184 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.199636826 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.244638779 seconds)
    (159/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.041929835 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.786633377 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.795678174 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.111451984 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.86669311 seconds)
    (164/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.854422834 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.936610674 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.098221811 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.704504027 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.450032106 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.458488 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.859024985 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.77629019 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.874885155 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.78054634 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.910200348 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.105871918 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.87796401 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.165930464 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.66427764 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.781608687 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.874396047 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.936845763 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.899471891 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.126560141 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.458404009 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.036929378 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.80846992 seconds)
    (187/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.082104962 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.780818362 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.182849759 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.601553254 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.911068529 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.281710126 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.877710125 seconds)
    (194/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.971974601 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.743964206 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.795198919 seconds)
    (197/309) benchmarking ("sort", Float64, false)...
    done (took 5.50254848 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.781046649 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.109197547 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.044039032 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.844771101 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.858396131 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.791881174 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.513384963 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.781129451 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.961478162 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.551851782 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.00828369 seconds)
    (209/309) benchmarking ("sort", BigInt, false)...
    done (took 6.781593457 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.911443113 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.014573352 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.910860661 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.748303209 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045602941 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.275057009 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.017254797 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.84331351 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.780987775 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.240141031 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.756130896 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.543174321 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.982033882 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.91503168 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.780064821 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.946771976 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.16561575 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.78858946 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.780769984 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.810537749 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.025180416 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.183967364 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.169473112 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.847768687 seconds)
    (234/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.860019227 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.950197532 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.567015647 seconds)
    (237/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.967518516 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.864451345 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.136122256 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.091593783 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.903876235 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.936018746 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.7872718 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.783360033 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.889652906 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.463405583 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.810905357 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.102596362 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.79062856 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.025042241 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 5.479701748 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.93783355 seconds)
    (253/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.792509773 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.372839477 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.967686912 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.808664932 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.124167474 seconds)
    (258/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.977823162 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.288752122 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.051590411 seconds)
    (261/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.862328689 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.893777557 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.787749809 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.443041136 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.870517964 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.670604575 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.923676961 seconds)
    (268/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.916402271 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.143892692 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.005258355 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.810601274 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.112276562 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.035513436 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185951693 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.802987903 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.117541492 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.78718893 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.801996779 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.111724289 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.965440287 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.784847862 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.512793624 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.039299576 seconds)
    (284/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.976718007 seconds)
    (285/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.923758799 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.477622606 seconds)
    (287/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.921256003 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.896522493 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.983090245 seconds)
    (290/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.804730869 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.914112459 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.931412143 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.792393616 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.057442755 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.871086139 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.536734437 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.919144025 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 4.79025627 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.232496524 seconds)
    (300/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.821469969 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.090523849 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.088598025 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.818177381 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.953645119 seconds)
    (305/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.786796169 seconds)
    (306/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.86578992 seconds)
    (307/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.821982401 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.78498935 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.485714622 seconds)
  done (took 977.421950091 seconds)
done (took 979.195481569 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.814645481 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807807086 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.788965303 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.81067516 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.901635461 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.835962071 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.802525974 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.794373611 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.840414007 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.839589477 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.788940135 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.834541549 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.790479695 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.790718582 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.788928021 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.806696711 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.094513401 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.81983514 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.809142709 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.801370979 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.808326762 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.788172785 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.841207217 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.835096469 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.794190936 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.795936166 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.793954445 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.809888978 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.903165672 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.794131351 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.79486957 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.803505184 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.095095981 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.818791677 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.789136873 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.810316702 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.803100137 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.802067947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.794568341 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.823667685 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.181010423 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.828724711 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.791460168 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.791123467 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.792034414 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.798543871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.791967279 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.799894094 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.806734195 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807022013 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.173571134 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.845473917 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.795677824 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.792877729 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.804904828 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.792803596 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.796530495 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.808425716 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.812246793 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809154656 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.081863625 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.828134832 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.796563589 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.81053424 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.802332966 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.211101283 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.826759417 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.798080499 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.180674501 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.838590721 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.211385741 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.83955948 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.794975788 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.807518498 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.825356736 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.096134725 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.818790266 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.792049188 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.802415049 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.791253536 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.805646774 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807572602 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.797206357 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.792554267 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809130531 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.839784251 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.805599515 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.793857587 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.805196348 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.813307207 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.803428317 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.805963137 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.798111615 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.792495221 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.806050388 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.798345147 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.796754247 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.796908259 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.798556021 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.807312689 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.180574779 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.848871579 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.791285582 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.792030033 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.793660407 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.810518159 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.186758053 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.834800762 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.818259618 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.844736436 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.795905229 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.082855211 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.827793897 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.813158525 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.806830593 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.798052685 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.79274316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.083462501 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.206925168 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848426386 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.7953756 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.793658402 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812831846 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.797049501 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.792414705 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.099290252 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.827339003 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.812785225 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.917433073 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.809056339 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.827688918 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.79355004 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.79903121 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.846127958 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.813308997 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.82856557 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.798031983 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.813050409 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.81306813 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.793989168 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.80856053 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.808895162 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.795899163 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.804585224 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.793159503 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.8464833 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810802392 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.810082108 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.816226898 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.919188337 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.793857958 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.085990509 seconds)
done (took 282.273426024 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.876881215 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.793411222 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.886772493 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.793422868 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.884107356 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.869097848 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.793559493 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.794622835 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.795070958 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.279534361 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.793983645 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.800050561 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.794456223 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.794445765 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.865874723 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.797096696 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.794368803 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.227898009 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.795500152 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.874040416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.794291612 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.794651797 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.795185084 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.295244951 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.793206906 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.792887968 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.873523282 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.794577768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.233398184 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.794245228 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.794109105 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.247937547 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.874084933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.822018838 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.803606307 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.802276369 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.885507528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.804100538 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.862546455 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.864487276 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.890818559 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.82889946 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.794115262 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.795587522 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.79878852 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.797494706 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.796408015 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.826008377 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.794112541 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.802721931 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.230319372 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.800921141 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.801429637 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.797337972 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.796516677 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.826695137 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.796293577 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.797576809 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.875754981 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.797779633 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.864387365 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.286213115 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.282559558 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.796984147 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.795851417 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.797094665 seconds)
  done (took 180.225088698 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.862517172 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.875559716 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.863120252 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.802932144 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.847997018 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.866744498 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.802014147 seconds)
  done (took 14.650918979 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.804572332 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.796871144 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.846525863 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.847086203 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.797649956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.953891297 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.797027004 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.809047348 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.801643671 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.824579647 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.798903027 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.797358934 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.804033873 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.796488864 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.845778742 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.806791721 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.911753464 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.797778085 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.797312971 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.943577592 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.801293701 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.803112726 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.821505575 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.808118214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.797861346 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.801968203 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.357502925 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.796072904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.794460345 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.796190674 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.795094157 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.836403584 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.795130025 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.795183949 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.794108713 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.908649603 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.794415704 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.794642869 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.795328089 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.792825574 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.79433932 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.794118239 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.79421678 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.793130751 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.793243832 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.817067873 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.794545588 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.793365283 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.793967029 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.79271516 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.818283683 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.793569556 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.793248705 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.798847243 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.836051047 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.800562403 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.793327127 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.793523442 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.792984335 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.793278247 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.940718394 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.843428959 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.793781696 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.844213008 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.793382437 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.793992456 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.793046831 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.793154076 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88230235 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.791595549 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.842044029 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.79346683 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.951057566 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.816433335 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.793706691 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.796391275 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.795990285 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.792975839 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.7910865 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.799338457 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.79308117 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.79716381 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.801567223 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.79791688 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.791167168 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.913983753 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932431584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.792895418 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.792430828 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.799570687 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.792507095 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.836396456 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.791607156 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.793814573 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848537281 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.906853746 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.819557504 seconds)
  done (took 198.410479293 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.800871129 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.799190681 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.793544588 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.808589243 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.793838653 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.792910373 seconds)
  done (took 12.516782644 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.795425225 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.794833329 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.791272779 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.792319376 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.791890204 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.793738178 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.791476239 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.794172698 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.795652971 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.792237776 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.794102477 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.793736583 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.793944324 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.793410265 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.792888705 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.792733987 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.793999835 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.792346792 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.793298464 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.793588249 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.042203342 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.793714246 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.792867897 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.796353173 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.797667009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.79155786 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806357087 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.792747725 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.791937713 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.800891479 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.797690728 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.793289472 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.796436289 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.800063339 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.796857377 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.796619329 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.796545333 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.794758052 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.793466174 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.794402561 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.79380536 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.793004805 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.792991123 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.79453226 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.794512884 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.800009827 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.797966858 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.805110801 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.793785091 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.792916343 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.793405042 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.792515169 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.793488104 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.795093817 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.798893772 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.798943711 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.797317791 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.792134147 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.792496286 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.796425675 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.797408687 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.792650843 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.795519801 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.796974216 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.800061587 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.795197056 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.797644686 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.796304832 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.793357288 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.792500152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.793743369 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.794368522 seconds)
  done (took 132.218871079 seconds)
done (took 539.764997516 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.94120086 seconds)
  done (took 8.668358849 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.991425392 seconds)
  done (took 8.791365851 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.209148547 seconds)
  done (took 9.950975133 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.844190398 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.815270976 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.821465332 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.806534126 seconds)
  done (took 29.051497862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.06764636 seconds)
  done (took 8.808009888 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.828067389 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.803110446 seconds)
  done (took 15.442748218 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.926027673 seconds)
  done (took 8.665146512 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.830867331 seconds)
  done (took 8.582454544 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.819466378 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.82586871 seconds)
  done (took 15.409307824 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.808280447 seconds)
  done (took 8.546397929 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.97608182 seconds)
  done (took 9.817955565 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.821828624 seconds)
  done (took 8.629710914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.860951378 seconds)
  done (took 8.599301509 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.814748178 seconds)
  done (took 8.552626268 seconds)
done (took 159.243261454 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.807772459 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.803048996 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.80677949 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.803218933 seconds)
  done (took 28.958831159 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.836942549 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.837129298 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.83940906 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.849008123 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.838870041 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.835995843 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.829991028 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.828460421 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.848205701 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.840580189 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.838656777 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.839025931 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.835964944 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.829671807 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.840100397 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.840319496 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.84869276 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.839041035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.829776734 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.839539552 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.805923578 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.847895803 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.840005318 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.805214934 seconds)
  done (took 45.80427074 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.996208646 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.874982477 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.958169143 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.857748892 seconds)
  done (took 9.425490234 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.856252578 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.85664296 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.868508645 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.905940546 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.931961192 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.865563499 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.829927416 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.824597576 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.811640616 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.855872317 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.93314823 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.85239884 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.943953487 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.803718066 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.991493995 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.804716963 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.805455141 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.856242258 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.907248458 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.920856729 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.803925457 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.855644522 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.860744756 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.852390596 seconds)
  done (took 46.538343415 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.805283201 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.813377571 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.813692074 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.805361494 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.806119925 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.806186908 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.812976668 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.80744871 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.829321566 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.807396417 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.805410156 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.805675432 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.812501498 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.80561536 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.805547779 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.819125255 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.819343022 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.805086721 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.809075602 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.813554874 seconds)
  done (took 37.947168545 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.803046228 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.650708721 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.147357924 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.054271186 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.803342923 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.806044138 seconds)
  done (took 31.002823386 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.815379467 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.808870913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.80385202 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.858469568 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.943231772 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.811074848 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.803213781 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.813580101 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.84846881 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.868797967 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.82580364 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.830905407 seconds)
  done (took 23.769519709 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.801937315 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.804739563 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.804849332 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.822529064 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.813458371 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.813304067 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.810834761 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.802107285 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.817274819 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.821136144 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.811599097 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.81478063 seconds)
  done (took 43.478976522 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879987 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.676886416 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240513401 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262312039 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326031988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003856887 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.802617294 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885728675 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.80372664 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074124614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.102975726 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306453398 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056921725 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812934841 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907423183 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277410127 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097905419 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01766759 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83482115 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420828968 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920198058 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396614991 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.487886395 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920790649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015361371 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.932969407 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.069022987 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.756196758 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86032854 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81240948 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814229138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808652196 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078433445 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926231758 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87762314 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812201514 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224066898 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.514564554 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.810273533 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.494128804 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.369224041 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934351187 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816414078 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814045525 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.739411885 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394397242 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904411274 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.815321153 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.512310671 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.815171757 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817006941 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887587787 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.813659149 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.620617491 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496704952 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07960454 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.813088223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814313971 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372455732 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819385802 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.502856171 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.755523846 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.900399339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.498908405 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268683546 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.969785646 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.818292631 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81926447 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743380964 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.501026797 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929652367 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953292721 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.833921161 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45771155 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119861076 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.236178184 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87168197 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083809361 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.747818796 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.755163153 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034986513 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772589039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745538373 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.66934632 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743865956 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023502867 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847065663 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.402472217 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848596815 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.90122793 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823666538 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831896559 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82096797 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.032768484 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.713610729 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818512907 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.121098213 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077594552 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835343734 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903422166 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745279517 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.82069887 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06393121 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.02310457 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.143513068 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.305119542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905968267 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820223344 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.834873023 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.813846432 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.832677507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.086465743 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877628172 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821702939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935688318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.770086924 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058318508 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846512898 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.923851988 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.184041779 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059263898 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.15138396 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.062570962 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881711138 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.825711468 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.819559617 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.512794597 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429255186 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.036314516 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.834517743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383204268 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833572897 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.821296107 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756655714 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.677788361 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.173522054 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.897418671 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035850405 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.823200501 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096499316 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747268165 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957530379 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.832294269 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.035339547 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.455464177 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.90046671 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069178683 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.143589375 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.146938968 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835785337 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834886752 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912983719 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837947813 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.328108678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073557408 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.822674955 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.823495788 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.500899762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875272804 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822387265 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.824808075 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.373726135 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089645925 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.841669611 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.826768404 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.697286749 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.834421512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883961735 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824853187 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824737729 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.381888383 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325899142 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.825539637 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.50285027 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037587731 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821813851 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.429362151 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994545935 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.836279569 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086148642 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884718655 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.747907401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.523376963 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.522060396 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820663194 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747336286 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.820542001 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821328439 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824558828 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.009317748 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08849739 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866798595 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.465080842 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.925821647 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829574043 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.826436733 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825980442 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.316579035 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823095109 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.514051951 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.837147585 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951357075 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.833723697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748803097 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.826269681 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822764012 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.819603006 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.770104883 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865837046 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.486287961 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026957456 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070800507 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.226044956 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831248276 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.495564705 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.936569527 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.837971785 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.118103163 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.541635721 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.838673888 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904205774 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.829851155 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.495123181 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.55566391 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389175808 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118513254 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13651123 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164147133 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.397761169 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.046356812 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90981389 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051258024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345690369 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881000142 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913301935 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760608649 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839503439 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.461708828 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241385262 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834186879 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040775845 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104437946 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.162475543 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957221548 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029084963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855067202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.826650465 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750160762 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.362714927 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841241072 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.266388262 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02753334 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90659189 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.110559968 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.903154957 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.82567458 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154927877 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861846354 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.527958657 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180565795 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418199881 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.185790267 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047753488 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829844955 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266927976 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171597847 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.205803986 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.844253923 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754079595 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.832224266 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.833049014 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.841479933 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.802852683 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.781306671 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.072963809 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834279896 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055026517 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.153349632 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084025422 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.774278942 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.831613795 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82978838 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068684082 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.760976828 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880821172 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.339400807 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.301504344 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836962542 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.750225183 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75015742 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.52115231 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.823758935 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.786250203 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020352969 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.918660712 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.497892718 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377796006 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024226144 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058558034 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.826146578 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080204119 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087681256 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.304995412 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83387979 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.910357036 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100594933 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.539555645 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.046321881 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.057408633 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388327627 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047093233 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267089191 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.799904863 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.835842981 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04060203 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.045385297 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.176933955 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002653202 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.542248233 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.843478652 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20398986 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891083285 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.184109287 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016412105 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.923927502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841041529 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914177277 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833550064 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.832148388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.833114093 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835646761 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.183422626 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946944731 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.843670908 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907247942 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848130891 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.406031473 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.844956153 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097802157 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17309796 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156669585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891984323 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830698411 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84009573 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757139317 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963410169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271775729 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103403336 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.952532912 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.965683667 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851362571 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.158278916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.168635563 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157073374 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107572022 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.719584711 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.528379441 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960810309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.04419393 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835334235 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.032563544 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034337135 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116876024 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388110965 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.019987262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033339698 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105355606 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193087659 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831181325 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411292292 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.83959432 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240117716 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.858740863 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.186308417 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094220884 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842317018 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961696206 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.844790463 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.039990794 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.286347034 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454513497 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184418365 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.692845174 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.843168274 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105222763 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.159011056 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140267821 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91572133 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84527165 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.539147461 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975472943 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.725559438 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.054529578 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.84385133 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039832648 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.549683689 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842194475 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108845123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141791594 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.843671702 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.735076816 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868829546 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.846147015 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055243249 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049195162 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086352083 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848586936 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.844400024 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.650851864 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107652895 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901805497 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767929235 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.843480432 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888782551 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071662932 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852115824 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.349555804 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.532798235 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106431263 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.734243992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847222268 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290864163 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.215246148 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158216501 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.357601536 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045926033 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.383000391 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.721040962 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216050843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.826431375 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272931633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222422839 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.832746079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381289345 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950449977 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.092731849 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157104838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.841904074 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526467757 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.873914293 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061688528 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193415395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77243273 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848351494 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.891096249 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839899221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.85603032 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858270523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.809383115 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30090537 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.696417427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396776158 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.850839644 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.854396132 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.192851484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429003089 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954233879 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851892125 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83236145 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.549850132 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.124091384 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08038854 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398867113 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.932135915 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.828023891 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829284267 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.749554376 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006073197 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.017660133 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100034162 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.236950143 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.945520487 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824552162 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.033031397 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026387507 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.197014789 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953309559 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004876913 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947944913 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.762682573 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.52999824 seconds)
  done (took 1642.730745473 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.830405403 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.848971518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.869692565 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.873623758 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.886367852 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.910114094 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.941688545 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879402177 seconds)
  done (took 56.790404167 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.826484303 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.985765406 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.829510845 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.828294304 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.855258612 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.864255703 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.983348045 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.837875988 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.826210964 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.833222129 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.826805822 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.822862835 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.102635014 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.84532972 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.827724252 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.827596886 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.828705413 seconds)
  done (took 73.562290521 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.826901617 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.080399431 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.856898273 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.828722601 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.813804402 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.829505075 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.885573028 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.859984601 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.829838333 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.085551867 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.119593298 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.849342428 seconds)
  done (took 89.620205593 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.840887666 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.829511997 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.830067991 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.830683363 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.830249089 seconds)
  done (took 10.924698987 seconds)
done (took 2142.316272008 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.058343231 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.021912549 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.074926189 seconds)
  done (took 5.850547325 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.97374108 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.024859022 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.136096036 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.143487847 seconds)
  done (took 10.040797892 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.13697239 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.202746498 seconds)
  done (took 6.096756092 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.151141707 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.846439821 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.202135119 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.831528431 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.835309908 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.830990371 seconds)
  done (took 22.26220118 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.831200947 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.83449021 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.832454792 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.831559737 seconds)
  done (took 9.089741371 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.832720532 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.546232699 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.833091891 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.843302071 seconds)
  done (took 20.813777659 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.980328953 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.947343257 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.978285539 seconds)
  done (took 7.663574293 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.054229113 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.63827441 seconds)
  done (took 6.449626518 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.996006248 seconds)
  done (took 3.753593402 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.86107384 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.10499348 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.31944324 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.34701748 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.415421644 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.664480452 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.143192824 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.055821166 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.269421372 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.279175513 seconds)
  done (took 24.220285666 seconds)
done (took 131.251220308 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.173446639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.859240052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.035677332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.180597295 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.061583808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.036730015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.049943032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.174733743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.862945593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.852418387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.18952196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.062199288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.997640012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.861628467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.00197085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862459016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.06084661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.195178313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.868941526 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.089177021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.056611398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.835141048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.027856042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.846623309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.06023727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.986326734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.378405467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.864499157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.016190932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.390274464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.010818547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.231955199 seconds)
  done (took 166.939964167 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.834887052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.832397374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.831656861 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.829269494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.372777962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.833537774 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.831684683 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.830125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.242543386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.226947857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.834385154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.358971754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.832845029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.829059657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.834247001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.829484317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.381949684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.834583825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.833576633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.831609056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.834081748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.211732548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.832350057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.219108122 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.385837396 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.834764462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.832807327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.83347798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.831451581 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.830291151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.832170913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.834798943 seconds)
  done (took 208.143146497 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.83810952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.835219495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.836809806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.832101313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.834171953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.836811666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.834531503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.832691375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.475529236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454064407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.834810909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.834570122 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.836408506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.829841047 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.835676578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.832572123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.832614617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.834352964 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.835296647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.83395405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.835059363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.57138069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.840097534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.595861527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.835055357 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.833304429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.835361562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.833701032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.83467491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.834604222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.835373853 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.83332158 seconds)
  done (took 219.234071675 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.087200407 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.840855541 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.840681202 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.751306702 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.838336321 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.840178575 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.815698135 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.11102523 seconds)
  done (took 18.895148023 seconds)
done (took 614.978994648 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.187252336 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.031813512 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.01622595 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.860726108 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.110872967 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.903086598 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.858828719 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.920004852 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.675535529 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.934207763 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.496830703 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.879687427 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.602137207 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.887651918 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.985941924 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.911876303 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.462307916 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.564463347 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.032215852 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.932530647 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.033927488 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.767665162 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.940155866 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.703467536 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.626783191 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.816305107 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.90136231 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.475801101 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.868006248 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.016947179 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.500807776 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.120891618 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.872366374 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.853495651 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.907280084 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.893644204 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.087297633 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.869413509 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.981352985 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.562569709 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.933452838 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.586506999 seconds)
  done (took 101.339119828 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.851839418 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.8458346 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.850613741 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.848355862 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.855922156 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.848254398 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.846902603 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.845984772 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.846257197 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.849615683 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.847614132 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.856647778 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.84731644 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.856232548 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.849050224 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.849130946 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.848567447 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.855780133 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.846886176 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.84934466 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.849590924 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.847581949 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.841904068 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.850602872 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.848428421 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.851287488 seconds)
  done (took 49.866029071 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.840444883 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.01355536 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.082461419 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.857863539 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.841975549 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.847410509 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.859656337 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.843715987 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.845594529 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.843911713 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.950058585 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.845361508 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.859855673 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.082911122 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.855469681 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.844318304 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.844122203 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.84244365 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.023626587 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.856429993 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.8586976 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.843826713 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.863364344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.852486025 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.844356713 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.843713146 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.847025043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.340952015 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.851342263 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.947026241 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.883285091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.864152642 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.288751146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.092071381 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.8954509 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.850291712 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.842459495 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952551193 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.8488504 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.844169428 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.860536369 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.847071951 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.088769062 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.357153156 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.855914533 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.84223191 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.353985441 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.959379343 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.881536158 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.848833285 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087068431 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.857701823 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.845580789 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.845663551 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.87960036 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.852334339 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.846848551 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.210826069 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.856207492 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.86286094 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.84683605 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.848079697 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032385506 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.851214 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.018659239 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.848588406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.850191604 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.842039301 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.094223643 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858546475 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.373490153 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.858951412 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.847543635 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.949470468 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.020271544 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.373788493 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.857191516 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.02958693 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.304437093 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.8658275 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.851317433 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.332546428 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.870018703 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.847552856 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.848549294 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.843827934 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.84567561 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.891522561 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.861086971 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.286591899 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.368256014 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.222311185 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.87053575 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.856815066 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.846101006 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.205657764 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.8497835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.842090521 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.081367049 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.379816458 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.855693806 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.852254652 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.347481742 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.855958806 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.863486461 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.852544907 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.095293763 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.862456666 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.890522681 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.845599652 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.853720696 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.84920677 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.865701757 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.85120569 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.848968272 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.342517457 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.968717408 seconds)
  done (took 229.621452219 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.848721143 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.846466014 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.845569417 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.845295899 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.845850106 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.845756943 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.847530043 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.843105901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.846397282 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.846271352 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.845219731 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.848685911 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.847597816 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.856378348 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.848399595 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.849956604 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.450367028 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.846958708 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.846299259 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.846092856 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.483807092 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.84633697 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.848696449 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.843074323 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.848355206 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.84745811 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.868392082 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.847277925 seconds)
  done (took 166.757825058 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.84894533 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.96076137 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.865962564 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.87766642 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.852341671 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.84897257 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.948120968 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.866407039 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.855184652 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.849122185 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.847757371 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.908876577 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.8567764 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.947272587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.881604372 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.955574292 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.95383332 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.854671589 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.847373754 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.849338028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.878265575 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.855540007 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.909848495 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.970668383 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.8713374 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.960531637 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.870006142 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.851000482 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.85263947 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.95967827 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.868097934 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.912282937 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.876029749 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.866220157 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.967460954 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.966862921 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.952808083 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.957440108 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.857882875 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.847782778 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.850863236 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.850736724 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.961681278 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.870433828 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.849354394 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96673877 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.86929697 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.851067229 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.852599014 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.848813029 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.864965348 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.867623312 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.914737189 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.976127506 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.885182303 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.869643313 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.948753673 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.988087565 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.850477738 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.948578031 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.860453908 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.963276637 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.874325941 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.852179523 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.850487336 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.857326371 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.878772406 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.955161823 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.954058105 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.860069492 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.948371407 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.885416772 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.856162338 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.850502151 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.850937574 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.963947308 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.967163649 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.888525463 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.885373075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.878853288 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.856177987 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.848159905 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.853663944 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.870301218 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.853862309 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.962806313 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.971210946 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.857536343 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.852273611 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.852981935 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.85389001 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.874887832 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.969675278 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.887809243 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.953539158 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.916398013 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.925951595 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.86654674 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.863676441 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.854209438 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.91392434 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.863540466 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.862706469 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.155327699 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.909828755 seconds)
  done (took 200.723992883 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.223275076 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.902787212 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.906144865 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.161909901 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.209933993 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.890366474 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.895741996 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.897792859 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.922400535 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.084683763 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.973093687 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.919652619 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.886927005 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.874212303 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.896730855 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.921975294 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905015533 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.233037715 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.122302169 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.04066797 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.889508289 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.199522264 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.216752275 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.515105937 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.949013546 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.28274354 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.45676656 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.03333402 seconds)
  done (took 61.198890305 seconds)
done (took 811.270363906 seconds)
SAVING RESULT...
DONE!
