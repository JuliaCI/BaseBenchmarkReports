cset: moving following pidspec: 31019
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.573385172 seconds)
loading group "shootout"... done (took 1.157565654 seconds)
loading group "string"... done (took 0.41872005 seconds)
loading group "linalg"... done (took 7.751989415 seconds)
loading group "parallel"... done (took 0.149735451 seconds)
loading group "find"... done (took 1.361274333 seconds)
loading group "tuple"... done (took 1.894978374 seconds)
loading group "union"... done (took 12.471481901 seconds)
loading group "dates"... done (took 1.310561119 seconds)
loading group "micro"... done (took 0.223394891 seconds)
loading group "simd"... done (took 4.241584515 seconds)
loading group "io"... done (took 0.970688255 seconds)
loading group "random"... done (took 8.652891414 seconds)
loading group "problem"... done (took 1.481065006 seconds)
loading group "array"... done (took 18.932100131 seconds)
loading group "misc"... done (took 1.579824896 seconds)
loading group "scalar"... done (took 39.277189429 seconds)
loading group "sort"... done (took 2.975681053 seconds)
loading group "sparse"... done (took 11.641295871 seconds)
loading group "collection"... done (took 16.507679578 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523808439 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122857323 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132587845 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118000346 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152105912 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115829242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121840597 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084382056 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.870129872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145712181 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111461944 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434719876 seconds)
done (took 5.37338648 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171641559 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085924888 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077701839 seconds)
  done (took 1.29272939 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064234845 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126593987 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065520177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066487231 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067483755 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067294418 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066237801 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066717183 seconds)
  done (took 1.655732505 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071513743 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070633405 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065104421 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066568944 seconds)
  done (took 1.40690505 seconds)
done (took 5.737648961 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238386297 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.10666757 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.300726611 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.322223698 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.415406872 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090773396 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074567896 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070525228 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130367209 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326220849 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114496722 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.189505358 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099585486 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184669194 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.9959104 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.128219114 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084338643 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121965279 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091996205 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13081582 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.363135219 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075184634 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.082749816 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.071851083 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068363746 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641876517 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659428699 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138612087 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083088653 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.07957821 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11768591 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.641000292 seconds)
  done (took 10.397481149 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099159969 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095820527 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068014705 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123043748 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094942882 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068588838 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073694155 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067878333 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089433389 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12687564 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088412229 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10507929 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067356578 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06955627 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084027912 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197732104 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081110202 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081988151 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069229084 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079173116 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107980421 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079520051 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080040343 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079589644 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130353733 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169801896 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095512103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096475487 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065434298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079321704 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11403754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124523515 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065410452 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067941029 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123768056 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094787952 seconds)
  done (took 4.578581931 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.112014072 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091333486 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.106373448 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.612459133 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065402971 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147125153 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233106069 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072787145 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.421991184 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091273118 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.152549044 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.119578548 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.14149071 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.119883793 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068155642 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.261828589 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095513378 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.122264083 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064989985 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06790944 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.264131178 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066897997 seconds)
    (22/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065632307 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075303247 seconds)
    (24/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067651299 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063979565 seconds)
    (26/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076511182 seconds)
    (27/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09149309 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088054096 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.204509607 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.98173331 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.292952215 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068490815 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167931789 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085963919 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.364688517 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070461815 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090169377 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.4052684 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.125199779 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066525844 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163401081 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131479966 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064982928 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.115310955 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078325828 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069988199 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.071729234 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069114863 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07841427 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078807789 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102177173 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068795407 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064260267 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166732763 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063592405 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065637692 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068439081 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14946774 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06585207 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.148404549 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065298607 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069427641 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099219338 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071867846 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088744806 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113875319 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.332750683 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.037085866 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067263558 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.928072206 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078739486 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066787091 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.083635844 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065338338 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067292895 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068846687 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067526675 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074931284 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069061996 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0671614 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107287341 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065698479 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068826047 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064911123 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070645864 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096507649 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064667383 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.463647469 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098067787 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065246811 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.077923021 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105896196 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066967044 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071846721 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068797282 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073151554 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067339676 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071040462 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070484643 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092640217 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070216735 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113519044 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.143973404 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070389433 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065880472 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070479903 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068835963 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068941955 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065216363 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069061767 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067457752 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064387668 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.114998257 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065069552 seconds)
  done (took 21.672616965 seconds)
done (took 38.888015565 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236872324 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080342296 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080848782 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082350978 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083276224 seconds)
  done (took 1.782511202 seconds)
done (took 2.991857559 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107053812 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.067926274 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101953135 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.10173088 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064805751 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06494413 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.101387654 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064902783 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.10133492 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.102519546 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.104810832 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.104379182 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.067471207 seconds)
  done (took 2.373119608 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068714712 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078901719 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081551937 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062274488 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071409562 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079653342 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062420799 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080358557 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088439998 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081250605 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081224976 seconds)
  done (took 2.042856698 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068077799 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079481995 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083490433 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063298691 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073387866 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081480291 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062903071 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081156257 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085626705 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081915903 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081138622 seconds)
  done (took 2.039281844 seconds)
done (took 7.65423587 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074036965 seconds)
  done (took 1.254138676 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526711195 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.509378359 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076273912 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097453457 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189500124 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.104961931 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.227602212 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.079823096 seconds)
  done (took 8.172001817 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094771074 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067958441 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08028056 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069668637 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069475265 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069750797 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070585217 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069805114 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070543473 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069481871 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070763598 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069061347 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070165062 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07040279 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069116763 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071022299 seconds)
  done (took 2.429201807 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09582048 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093844097 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071981021 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073112652 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071494951 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070642203 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074298068 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074610037 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0719404 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073614772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076030117 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074099943 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073586265 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064693846 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074188473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076146669 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071813927 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074762569 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075019873 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076198415 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07541784 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064546926 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073481586 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074229844 seconds)
  done (took 3.101928382 seconds)
done (took 16.152906106 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112067562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075317326 seconds)
  done (took 1.37834939 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076548377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078075129 seconds)
  done (took 1.359603913 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075518391 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060788348 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081054769 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071593438 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061668026 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062288986 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081169718 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063243821 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062875907 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062921873 seconds)
  done (took 1.891065626 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06331358 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069858443 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066935381 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.076130697 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06799923 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064125868 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067213693 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064832555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072018439 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063212581 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067976327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082906499 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068104725 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083297628 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06617872 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067185711 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0696852 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066982303 seconds)
  done (took 2.460051037 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060921347 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061746453 seconds)
  done (took 1.338559069 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06464939 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061937267 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065240783 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064978396 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061912237 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061919409 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063483339 seconds)
  done (took 1.650581087 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.360487565 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121396105 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333509652 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070107133 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079799567 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256112659 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063806828 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069001197 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068793879 seconds)
  done (took 2.673754507 seconds)
done (took 13.971165116 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078812923 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08579884 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097319325 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.405117363 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093118015 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067994873 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11386949 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.175465111 seconds)
done (took 2.340381387 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20788268 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.301734002 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.865542207 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065931036 seconds)
  done (took 3.44543193 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333597751 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085492151 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07606116 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067507408 seconds)
  done (took 1.789171725 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065569141 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069238737 seconds)
  done (took 1.356350859 seconds)
done (took 8.021364727 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06354181 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088653854 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06422468 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063586809 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063222895 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063347839 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064336604 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064482035 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064357346 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064793803 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064434693 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064843496 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064699285 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064744817 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06520609 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064870159 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065297327 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064705011 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065207882 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064936237 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065043396 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064405277 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064757287 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064516476 seconds)
  done (took 2.819097263 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079542605 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065265304 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067138483 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066628066 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068458798 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069258514 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068465312 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066978642 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068442352 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066982108 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068977302 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068789234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066201101 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069336835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066761668 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06903122 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068071253 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066835462 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066447697 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06848773 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06842508 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067186789 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068937317 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068029803 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069157213 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06854734 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066579752 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067444668 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06833711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069241688 seconds)
  done (took 3.280223454 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064020209 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.05994264 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060311253 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068490293 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059669554 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060317847 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060856996 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060481193 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061855886 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.062620488 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061592461 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060809015 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06217305 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060802424 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061496795 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061804755 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0659667 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078814296 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061050199 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061390039 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06562967 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.061454393 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061414642 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061585289 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061596793 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061468265 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063793795 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061544017 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060900749 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.062461295 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060997546 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065234582 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065084957 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059654326 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068912348 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06424448 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059781777 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063440306 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061046293 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059555104 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059975731 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059470334 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059891913 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05995064 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069050106 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.061408974 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062410711 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.061817112 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061643242 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.061348829 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061223282 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.063313028 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066289392 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062618007 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060780498 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062634206 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060785712 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06191991 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.061114777 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060812983 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061385048 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064237691 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.062401926 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060681016 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0786201 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062443426 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069560791 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060704314 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061905513 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064421265 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061850814 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077073171 seconds)
  done (took 5.758290336 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082922661 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086039595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065940797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065047322 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060631844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060383302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068295152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060704592 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065723039 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081154166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061210154 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065991081 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066207378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065332238 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061274353 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065282901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068956155 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06073751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060732878 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064565316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06112136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067956769 seconds)
  done (took 2.712453946 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145863027 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066712804 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103002176 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070662725 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068913538 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070302927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066491594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066285976 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067078912 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067041007 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066566856 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066510031 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068242741 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066993916 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066553048 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067029474 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06617976 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067034727 seconds)
  done (took 2.564685932 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076669818 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066069549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084814472 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065253588 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066965458 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065218689 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069876723 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070219992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065487404 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065652141 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070124012 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065960848 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065729675 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065804676 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065522201 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066030458 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066218868 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065840935 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070251448 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070043367 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069526594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070504063 seconds)
  done (took 2.746354512 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077002645 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06444279 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079732656 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066613927 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060260027 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061177089 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066266585 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065333433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06641187 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064639419 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064930066 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0605528 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067758053 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067126043 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069406176 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065648361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064879103 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065011507 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065060433 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060581038 seconds)
  done (took 2.561668118 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081558927 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072605042 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063319464 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069023377 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063885677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063348406 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069559717 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063370046 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063547106 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083546529 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063442994 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064193283 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069439401 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066900735 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063158584 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069393507 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069714137 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072013276 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063782618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063838083 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08406448 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063716144 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069525846 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064039209 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063538867 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063573998 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064130126 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067748269 seconds)
  done (took 3.140123892 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06374226 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062824584 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063979481 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063399332 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063218436 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064305955 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065255516 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065085483 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06446293 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064960584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064215969 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064768404 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06450163 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064122001 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064476672 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064595596 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064469434 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064630236 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064534095 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065135735 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064074311 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064114366 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064399305 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065466163 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06512194 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064174415 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065006415 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06451297 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064539474 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064889096 seconds)
  done (took 3.177568828 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073241381 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071207345 seconds)
  done (took 1.391112381 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062368259 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077860018 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060621744 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071257042 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070156095 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06495252 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070837821 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070670593 seconds)
  done (took 1.789317181 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.074041271 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.095860512 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.06249587 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06225296 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.072537596 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121216472 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083513305 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072901803 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07560408 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065623888 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.064027345 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082507359 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063111736 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074397977 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063800658 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069109541 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06727657 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07619667 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072734622 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060280736 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071616031 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062858845 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060423794 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063413201 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061705533 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067504709 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075260595 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072508319 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069385614 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059383354 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078166338 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060933421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062051052 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069101965 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072297858 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060882178 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094340632 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061185643 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066532561 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060232629 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072726805 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078335317 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073098244 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077034461 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062528901 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062422494 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060337161 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062408758 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063619132 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068264651 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060161311 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066630215 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05956427 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06226762 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070223518 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060946132 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067046204 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068480723 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071832711 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06972767 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069822275 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075148605 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068963817 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069973673 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061429549 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078023373 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.064352429 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07379112 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074795913 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063086894 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075656432 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061415041 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060945516 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060927854 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090960627 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062413577 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061960597 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.0605102 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060217595 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061955101 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069917787 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.069203791 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06763067 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064549127 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074326335 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068225367 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060924871 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068686479 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076965217 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063086272 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060765399 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075400105 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063591465 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061260296 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080807781 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069147517 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062194833 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061832349 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063510793 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074913142 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0622163 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05948891 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067986439 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062566596 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07025764 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065474741 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06695735 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.06035183 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069197971 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06479979 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061421271 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058323173 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063178035 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061313505 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058406086 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067560893 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059831521 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072911259 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064625492 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071698768 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071712137 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068881485 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07286668 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059340349 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058521029 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074846382 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067799834 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060830315 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075175826 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059233471 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068770593 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059031371 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06078997 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067573257 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0586843 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061769672 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059499907 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064857556 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061072689 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061315405 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064553253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067176307 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070246578 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060360831 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066911842 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060001916 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072716759 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068212509 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06406038 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063210759 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059970818 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069678157 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064651493 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06711019 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059352357 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060001567 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059722956 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067800758 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067687249 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060630613 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068074188 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06394442 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060121223 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060270815 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.06075459 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062939218 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063173786 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060984141 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066320197 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06761398 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072409014 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068058067 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067500055 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058752191 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059503722 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061493284 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059583001 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063154248 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067420067 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072825224 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070451829 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077717544 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059972965 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068292797 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061406018 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074490928 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071471927 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060333755 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06461504 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059128157 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061407496 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067614006 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069788112 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071854687 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072541829 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063882016 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063755212 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059145348 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072000627 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.06022646 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066303924 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066435692 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062578698 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059412199 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060050169 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067160094 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062549067 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059042512 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071080684 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064774634 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058243398 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071468058 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05898424 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068522601 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058412821 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061562475 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062776251 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060399682 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066368915 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071614376 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058733684 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059622427 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072270821 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060589894 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060500991 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066404007 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071565062 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063568748 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065614043 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069276408 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067420263 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06267099 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066645484 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059703288 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066735518 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061486869 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068502674 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058369092 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074618027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058155523 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074187524 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058996555 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068389441 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059702097 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067130003 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060068363 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07313608 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060506455 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059740962 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068903516 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057828321 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066696076 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.05827768 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063801322 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06510656 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066700969 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061178116 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067822154 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059788308 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065760815 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063183472 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066157196 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066561582 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062268622 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058265037 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065981233 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067962103 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066144691 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059884379 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060358169 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059845675 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066585339 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060395633 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060412247 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065994741 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06300677 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063895003 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060423104 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060679478 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060556164 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065921592 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.307406616 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079508718 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070434839 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069256288 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070984071 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062742578 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07694216 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.062828358 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069818721 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061980861 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070201434 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071667983 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.063420887 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081633463 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065468393 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070540684 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075761099 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071676425 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066585861 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081273754 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.066446467 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069766739 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070006657 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066956739 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068677999 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064229235 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069727857 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070915852 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072253782 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06339707 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068882043 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070052008 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064977553 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071067036 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063621866 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068710122 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06431411 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061163473 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065710791 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072866784 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066652442 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065951512 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062068674 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060328995 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062306121 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069243097 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065367421 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069244882 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074992967 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060530058 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.06236202 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06117596 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064434167 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078119991 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069880326 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068593884 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06634158 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060784336 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063385335 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062665433 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061512336 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06550949 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060307585 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060969074 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071104773 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063076318 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064905755 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062137132 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063213496 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070157071 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066953167 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062281862 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067084594 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060928555 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066491442 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060802842 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063370351 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065331388 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06090745 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064550245 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071390753 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077852858 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069113646 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070358959 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064024539 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070467374 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075861495 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071628464 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063661836 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071929271 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062148866 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077927611 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069584367 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068978175 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070014021 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062488548 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077195828 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065092009 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070987924 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075265563 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062866657 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068901715 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061592322 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075935831 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068112467 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060751469 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069052144 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067707889 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066628312 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072214809 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061960795 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068792565 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067045408 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064159372 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063042402 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062952972 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068819866 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075294843 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062012899 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066173653 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068102937 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068765904 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065999452 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072341082 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068864667 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063267826 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063531563 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064943515 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064032528 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073817859 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062807645 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066435593 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066409445 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061994238 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067552343 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07674716 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070205783 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070624069 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060862276 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060445735 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076924221 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063272142 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063573084 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067156082 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.208640141 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072321566 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068914285 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076556814 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061254893 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066351251 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072677189 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062127673 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060484634 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064435697 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063148769 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069777235 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07032393 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069125045 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064520049 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069159563 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075140676 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.064483921 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066839255 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06811276 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.063797827 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07164001 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070170617 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069832255 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064636797 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06229022 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065483094 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070668614 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069033212 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070906431 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063602198 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.069748692 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074203388 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067896383 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066233557 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061909064 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06567115 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070000589 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067061112 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060529316 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065076453 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065285051 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069699973 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069395179 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066979891 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062133217 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077655907 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069262146 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070179672 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.064136643 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063528356 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061984481 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060915855 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071032882 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060829336 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063492712 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065332963 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063370075 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076673824 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069165236 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075178556 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062913453 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065100011 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061687787 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069808943 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064977333 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061395152 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07033661 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06012363 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074361406 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072076436 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067206377 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060866774 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064780062 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068247299 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073794521 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069493574 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068908125 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06496717 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070329919 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062891189 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072028926 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062108814 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061032874 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071984839 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068260621 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072708612 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060923636 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070030856 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063699788 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068369502 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068146723 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062782797 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063320907 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063222632 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069614461 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065113643 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069880625 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066124982 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075303528 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.06241262 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071007598 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068620292 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070823133 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072788424 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072946454 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071098789 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061821345 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067522988 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068316945 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062016417 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064847188 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064465628 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081324993 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063189353 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062320654 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074270143 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068133219 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061372428 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068898275 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065239855 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069969739 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.064983276 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070159367 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065367727 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061950762 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065294264 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064976028 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059880678 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060468726 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060240715 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068906301 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06464538 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061024534 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077267328 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061982478 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06743385 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070089334 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065757454 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061694735 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059730825 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061059939 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.215047186 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075464393 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064145323 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068759296 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062827469 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06864479 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059541021 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068524129 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068220352 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068533871 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060645539 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061752669 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073953808 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075179674 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065805035 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069151208 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069966265 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062655326 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081520401 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068656159 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062555581 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071294763 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063810206 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060555769 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060121257 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062697437 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071306437 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060934048 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063741258 seconds)
  done (took 41.495576723 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098320918 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062722147 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060803717 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061127479 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070450256 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061691701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061133446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062379933 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062557865 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064567832 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061820815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061751485 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068286674 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07570804 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07138864 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065186436 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062031388 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06241089 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061297355 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062867755 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069256064 seconds)
  done (took 2.792434852 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06832969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075514294 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07250491 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078042838 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070544452 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06597824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073498375 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066090476 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073662119 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071290169 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073784883 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066464846 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071612554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071572354 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071297402 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06667705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074435025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070222321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066036533 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073523953 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066231207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07336893 seconds)
  done (took 2.941469492 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062733364 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06266746 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069109278 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0607248 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.061190831 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064402014 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060776138 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064668632 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064569381 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.065066192 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068838912 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062084616 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060546408 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066232144 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060946525 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.062199844 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10490317 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061870888 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061944921 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060738704 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064414017 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068984645 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06060104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061179305 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064459238 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064813169 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060638663 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.064147699 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061720236 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064458892 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061940668 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060858092 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068787575 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06799822 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064518985 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064348057 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062687204 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064364229 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060654846 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060763427 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068055606 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062343655 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060917394 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062782755 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069169413 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060850165 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060591825 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068677301 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061322334 seconds)
  done (took 4.538021825 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072574688 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108253645 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067060738 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090122199 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075360999 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068109151 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066654619 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091142066 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062182556 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063149425 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076397604 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076104847 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064417111 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066220603 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068851204 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064637929 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065846462 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06391259 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06703417 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063641869 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067313315 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068401848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075285819 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075111056 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065535411 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063544396 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064279642 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065504912 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075088257 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068262793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065976305 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066413267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075310578 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069177248 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063717699 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063741847 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076522012 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064875169 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064086891 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062419077 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064716036 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065791038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068449443 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076049455 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064553586 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069240493 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06471999 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061965274 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075219286 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065113398 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069798844 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07637248 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065226272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064916612 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066089526 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075777683 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064512568 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063522457 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065237631 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074605259 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062487877 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065457486 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075725858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063893054 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067772071 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076024513 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069093795 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065362435 seconds)
  done (took 6.234180685 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071173072 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093226637 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078374805 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077866383 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072598816 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072892188 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072103329 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072367774 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071972554 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076341727 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072678618 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112373301 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068458636 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074237698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072071595 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072278827 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072578526 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072772701 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071818528 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072305253 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072025152 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077850749 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072112791 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078254188 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074972985 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067859076 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072383401 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072377963 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078027689 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071809789 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075043914 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071722926 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072215166 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078006448 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074869711 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072453372 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062580594 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072124409 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072202365 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071731221 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068253475 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077754473 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071698219 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068853091 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072281395 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071798941 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078258849 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074776705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073867266 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076200469 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071951836 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078285268 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071955261 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072446326 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078031924 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08072831 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078447014 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078044052 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071805393 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078283233 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078099428 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080952651 seconds)
  done (took 6.051442988 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076505404 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068398649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08054468 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064260441 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06146669 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071128289 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061845593 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062427514 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069874135 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069128207 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070740522 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071588176 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073575089 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071215859 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070756216 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073631327 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071598081 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071512368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068815698 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070508273 seconds)
  done (took 2.815461155 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074676956 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079531524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06601748 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070349819 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066770121 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070172486 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065492717 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066743239 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066730309 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066681704 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072343627 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072310545 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06692513 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071545708 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072268539 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070838515 seconds)
  done (took 2.522528619 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082143158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06894963 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.074945589 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062167261 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066454537 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061779975 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061811818 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060997464 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061513281 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074721113 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062114971 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073316244 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062778696 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060963613 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061647042 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068099368 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061448195 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062230426 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062327066 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07422843 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068926354 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063206077 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066125649 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062177389 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.0674489 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069221657 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063823386 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06640627 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062957813 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062535901 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068097013 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068950731 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061968971 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062825243 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061367978 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062568057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062158463 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062798974 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067913304 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062277889 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061115003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067556864 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062451975 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063382129 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061418281 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062767484 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061486366 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068011609 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062775112 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067757071 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06272097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064981142 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063118602 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069478557 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065060539 seconds)
  done (took 4.987250513 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077324143 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066708618 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060863488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061122758 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066247172 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.084935488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067162679 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067361694 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067274784 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062006317 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067087769 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065916105 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067361402 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067324808 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067457504 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066633322 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060703758 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067141884 seconds)
  done (took 2.628267599 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071626773 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066714403 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070664484 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065673925 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065621464 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065357853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061006251 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061291094 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062012166 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065762828 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066112268 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065805192 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061405401 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065763663 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066283382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065850688 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067328051 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063290119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067726412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062748462 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067322577 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06256549 seconds)
  done (took 2.849174071 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094051623 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082683293 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138304142 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078904623 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086458747 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070954166 seconds)
  done (took 1.965047092 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091410645 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096802977 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066313009 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066772905 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071363348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06931866 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069348081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06946141 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073913014 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073979155 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072216161 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074410051 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073724562 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075736647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071810844 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07211196 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070289342 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069673738 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066519573 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078499894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070094993 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074323472 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069653622 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069306639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070172312 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07554794 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073509678 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074201097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069508487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074562334 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072092903 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069664529 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074454367 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074425004 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066745217 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073597557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0698151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078533427 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071753278 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076063839 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066301667 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072631648 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074346373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073360986 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073784616 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069836277 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073499131 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069794413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069782651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083939946 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0722057 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075732397 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072267454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074600921 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074328296 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080181745 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074463191 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075830467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07248458 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075005235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075841685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07157856 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075767326 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074460606 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071903246 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075877357 seconds)
  done (took 6.256770776 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103214199 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067262685 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069567288 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075015215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075673944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06978612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069872063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070181457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069671058 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067446631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104144365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070739509 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076206044 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075882094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070472588 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070340687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07032377 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076246481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066882007 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080346353 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069443807 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075811525 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075508002 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075398694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074290684 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071555072 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069707679 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069755361 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069615908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069511609 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073194849 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070068983 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07556681 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066710671 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075862434 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069770396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069427721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073083715 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069545541 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07252626 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075748631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078277981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069319329 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069495992 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07462496 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069335164 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069619655 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067049237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069394135 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066837813 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07435291 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074157157 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074193614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075678431 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069694062 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069702092 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069935909 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069943806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069633684 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071929878 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075590601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069405036 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079960607 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069923888 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070062201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075491201 seconds)
  done (took 6.239774614 seconds)
done (took 127.47927322 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211211891 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183706394 seconds)
  done (took 1.794728856 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072484061 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102482197 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080155758 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133085629 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069922836 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10453454 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10285377 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081006492 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070073493 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069671848 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069778938 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072979791 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1352308 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072419985 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070111577 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072609691 seconds)
  done (took 2.802001041 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103178192 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214553908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107646013 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068234351 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103076057 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075547242 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071101964 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081158503 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074989397 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070400909 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07556579 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074164435 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069850602 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073878781 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074044233 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07574123 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069988666 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075553498 seconds)
  done (took 2.983715076 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101253736 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091910066 seconds)
  done (took 1.62230542 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177582713 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135020713 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204274279 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.335169797 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.145667426 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.417254501 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137867671 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.136623743 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114553881 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13219533 seconds)
  done (took 3.356451273 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102118225 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193634654 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294961657 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119668802 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075031058 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.106026779 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120890918 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081099029 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079659852 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079286062 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079279571 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076691154 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099229365 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075129043 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075153824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076216814 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101775903 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073765318 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075039565 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075180103 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103178873 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068953682 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074913534 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073762073 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076985587 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077752731 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070595895 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068659017 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074826141 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074473854 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077315069 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.103210267 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076601155 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102166368 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072911783 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102651924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07619824 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072850285 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075009707 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072959997 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076575302 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076286667 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076879904 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075931661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070343252 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075998132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06973056 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068536549 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077693157 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069308408 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077970798 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077068803 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101218857 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069817527 seconds)
  done (took 6.171295508 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106672288 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105559197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069836823 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111551587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103715157 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07001998 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104354141 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099008793 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105889923 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068964216 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068428208 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06949323 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077514878 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079645763 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113751945 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107343696 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071305955 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069771669 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107003023 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1060187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067975674 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100884473 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097379583 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105324544 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068252555 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069726383 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069128479 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069580234 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074684908 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075528215 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068836395 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076899542 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081216247 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075823935 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067767939 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068267906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06807164 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076640612 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076928367 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077028643 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074925245 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067611367 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06800509 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068486519 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068638481 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067327793 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07552241 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076334339 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075428732 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068640035 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069244583 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067946999 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068898278 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076139542 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074540267 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076945383 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076324138 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067810751 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06796203 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069952649 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076727163 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076537117 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075921471 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068491003 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078562698 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067626736 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079040519 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08022844 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068335683 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069618185 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068114926 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068473029 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068930314 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07475845 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07470788 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068803307 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068046048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068174605 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076513757 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075009334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068152508 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074480324 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067301927 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068277891 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069132595 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0690094 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074927395 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076382623 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068993671 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067896713 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06880412 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068194733 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067497488 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074399591 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076199038 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076135217 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075209367 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068852176 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075741586 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075195184 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069094792 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076066222 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067811133 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06933976 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068966392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075334805 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074493087 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0765249 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068420905 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067271111 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074299725 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077078221 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066780662 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073510072 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075604928 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074257106 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066673003 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07656812 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067341135 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075497263 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068077451 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208784835 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068876758 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076537897 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068879204 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067775606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068656364 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076460417 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0699687 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068237688 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069081891 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068595392 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075647803 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079486989 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070273824 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075523068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075748889 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06981184 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075907017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068705407 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076451593 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069111215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068788941 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067672834 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078852375 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068562326 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068077789 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069203064 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077153095 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068354034 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077331808 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074882326 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067904783 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078978394 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077446189 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074148013 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077526996 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069312715 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068329758 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068274178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068467556 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075030888 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076157435 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069273843 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068781228 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074770139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077607035 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06740043 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075973703 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075548114 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075916305 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069096998 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069564226 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079344771 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077345976 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075871163 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075403288 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075687222 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068788706 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074955964 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075555852 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068615933 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081632265 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068711669 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079565101 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076076303 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074672783 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076271458 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076820818 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077220983 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077575729 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079546607 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070012959 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068401475 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076388103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068442646 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068316998 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075173597 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06969213 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069907158 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080046304 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068718708 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077848377 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06761624 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076223346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067666287 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070584495 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081232958 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068754399 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069343965 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07839933 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068525528 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075365537 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077534632 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075490071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0683787 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069659174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076688451 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076242345 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068204204 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067912894 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069798285 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074988126 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074587536 seconds)
  done (took 18.279726016 seconds)
done (took 38.447866595 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210415611 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159201613 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188129932 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118864415 seconds)
  done (took 2.205067834 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107348416 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10062493 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086748672 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065062709 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.092909515 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064700838 seconds)
  done (took 1.991699072 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304057941 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208923486 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184787819 seconds)
  done (took 2.165365994 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209186623 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.198907768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463587357 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287220785 seconds)
  done (took 2.726081242 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138767475 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081556061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063697634 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08132567 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122041494 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147849285 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092220725 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116963667 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074566092 seconds)
  done (took 2.444542413 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146460286 seconds)
done (took 13.159890627 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.24101472 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109536066 seconds)
    (3/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096684424 seconds)
    (4/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.211561192 seconds)
    (5/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075725132 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071605121 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155103041 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068084411 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.125844108 seconds)
    (10/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.179789717 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085515167 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192269234 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165198951 seconds)
    (14/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.200761627 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075396716 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.216203762 seconds)
    (17/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175029967 seconds)
    (18/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.074548194 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138946371 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089005857 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073872782 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083439374 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.210137051 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072340224 seconds)
    (25/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.074037628 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073927443 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076551184 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.0773974 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.195146842 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194557317 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06621374 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.097839297 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106942384 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071817747 seconds)
    (35/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07010622 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104207625 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233646181 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158756113 seconds)
    (39/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.075113952 seconds)
    (40/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.137066956 seconds)
    (41/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.118921501 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.187595685 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176301449 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073237164 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073496873 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133083561 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.197165879 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063856476 seconds)
    (49/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.172673504 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073997798 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073301158 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073080795 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.085497588 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.171865702 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.149004854 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.098526029 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.187572435 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087961831 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.065746977 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.193134237 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100386635 seconds)
    (62/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067497974 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064585713 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072745585 seconds)
    (65/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.182772061 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064596403 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119119247 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073396416 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156648588 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12574386 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064373425 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08812121 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065119756 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071893087 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140821171 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063968072 seconds)
    (77/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.085291525 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071264391 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115815788 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065532095 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075258399 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065060464 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067130223 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188337524 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06356742 seconds)
    (86/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.191505943 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074900671 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08665203 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073085869 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063398086 seconds)
    (91/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.091497788 seconds)
    (92/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063288322 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065062565 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092697464 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.342309879 seconds)
    (96/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.075548958 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076136554 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090897396 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171217469 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064977096 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074626896 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064920275 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.137062042 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089118011 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092694883 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069318981 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069055855 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164331749 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089603567 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065509677 seconds)
    (111/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073932885 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172464898 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131255163 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.195997449 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091780122 seconds)
    (116/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076373081 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072243501 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108346327 seconds)
    (119/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195712144 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065591563 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117592771 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065421987 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245633088 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066466766 seconds)
    (125/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.185241259 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075495013 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169332239 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065872503 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.105392442 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064244203 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07412104 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074837159 seconds)
    (133/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067828657 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.095545456 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073459411 seconds)
    (136/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138683083 seconds)
    (137/309) benchmarking ("sort", Float64, false)...
    done (took 0.133214152 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068259792 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.165226482 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071949283 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0669306 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193563947 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192209502 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065981975 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0748235 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064973045 seconds)
    (147/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069492487 seconds)
    (148/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064116933 seconds)
    (149/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.134838141 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06563927 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073031215 seconds)
    (152/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.137157113 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073494213 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179796978 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07191528 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092314472 seconds)
    (157/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065150815 seconds)
    (158/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.166747297 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091380899 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072884339 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06529328 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078332953 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136813223 seconds)
    (164/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065645221 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07285375 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.136813424 seconds)
    (167/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.160740569 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15666889 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074849934 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06463317 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064085807 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073493808 seconds)
    (173/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065113095 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 0.167003967 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064090213 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064241417 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065479993 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064272929 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119348015 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07767513 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13937917 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072620757 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137295894 seconds)
    (184/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.07855484 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140264462 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065847847 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067836948 seconds)
    (188/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.203756497 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065618796 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066088636 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064878489 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064767053 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064490725 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064211974 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130873211 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065852769 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072469568 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065271884 seconds)
    (199/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136298432 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110715055 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065271906 seconds)
    (202/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065403283 seconds)
    (203/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06540356 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064783409 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065849244 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120415512 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072846246 seconds)
    (208/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.064923035 seconds)
    (209/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063486186 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064240244 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087379531 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066513183 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085554486 seconds)
    (214/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066251977 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.228693517 seconds)
    (216/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.068753794 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067358225 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074297144 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075022272 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093355323 seconds)
    (221/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068083622 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07513919 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066808396 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172810305 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076928131 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06644806 seconds)
    (227/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066175108 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06731929 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067575885 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 0.134574959 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158744794 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075727224 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074265448 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090821864 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065091886 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138036263 seconds)
    (237/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.078413571 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068808557 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091362118 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064626713 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073345844 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066887745 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065639259 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144326423 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093507022 seconds)
    (246/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066539743 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067543748 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068181583 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140026371 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067354016 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094805325 seconds)
    (252/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066110943 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067928938 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065975836 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066157324 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066062289 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068474501 seconds)
    (258/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067680532 seconds)
    (259/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121985276 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069234016 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077817973 seconds)
    (262/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.067544598 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066955271 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073447045 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181494898 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065944455 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065457903 seconds)
    (268/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.065258294 seconds)
    (269/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064756505 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079446206 seconds)
    (271/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065811879 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065746357 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173710892 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126376533 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118653096 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071720693 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078278718 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06764816 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071924155 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065763686 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085939708 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128095569 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.130879927 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065750393 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065670898 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064978127 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156461104 seconds)
    (288/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067535722 seconds)
    (289/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.071865716 seconds)
    (290/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077580193 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065887772 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066555122 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064460361 seconds)
    (294/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.066447017 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065045332 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076536277 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065394221 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071313301 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065215918 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064813004 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071764032 seconds)
    (302/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091281414 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064622837 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064394028 seconds)
    (305/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065801087 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064595042 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12171524 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077400758 seconds)
    (309/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069189277 seconds)
  done (took 32.676589398 seconds)
done (took 34.15919869 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085029137 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097111867 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073368885 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091552113 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08002975 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093506279 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072926786 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078020761 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079977667 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079347316 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078056427 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071203371 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07455627 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074537063 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072323442 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095115 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078873544 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073382655 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073001823 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064675809 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073076893 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065309676 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064963215 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071262916 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076359179 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071875173 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07470361 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074054498 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065535319 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065306651 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069715857 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073744441 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064955737 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077577957 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074764946 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073318494 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074626451 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077419495 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065324315 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065873992 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07507345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065017652 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073031081 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071540944 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070223981 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071623606 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073344686 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077141569 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095264959 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069539501 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075210045 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075806827 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076434108 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070598102 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070265267 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073079509 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071122269 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094884454 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07367598 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069708221 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074531438 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07394473 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071393213 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073131464 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072995137 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075755928 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077107707 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071767 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075082215 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071929266 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064699884 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073487209 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07240231 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06508287 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076064356 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077971125 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064712426 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069460021 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073026852 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073120136 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064849187 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068625944 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064442742 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069966557 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068735259 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071487511 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070111973 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072652738 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064519332 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073493419 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072276605 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073126493 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064883087 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077458671 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06505959 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071544859 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065261082 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065402684 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064564018 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070167596 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064910324 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068879151 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073666839 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064021888 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06987524 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078188647 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065378977 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071989464 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064366587 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064723706 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075931878 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074943481 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065066401 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069517754 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064568087 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07027724 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064708684 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064714894 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064935603 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064693864 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068898887 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064787154 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06819977 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069813149 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076918589 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064458287 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069188402 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06862814 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06457079 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071034076 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065103649 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064949289 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064168367 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07822339 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068531972 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065251349 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070239202 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068585485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072721611 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063422259 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072919958 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070545782 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068543393 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070501075 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063718871 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075365554 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068381442 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067715192 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06364084 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064480355 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063410839 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064085882 seconds)
done (took 12.483011647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068847441 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.113978898 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.088564594 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.090602057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080837331 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066482297 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07192929 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.087070408 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067156251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.091982082 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085122493 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08651278 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105763404 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064752394 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066022579 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067062798 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066930025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.075450488 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.090203456 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087466945 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.102279818 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065518805 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.083163281 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.084513488 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080999022 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088189945 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066795346 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066710372 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068898586 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084753496 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089692926 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068780721 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066454559 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08591429 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.08183685 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.076863351 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066610311 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.073036043 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066423865 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065397407 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067492183 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083770862 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07294505 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07533874 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067085955 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074067304 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067604029 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081089014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.082113561 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073019159 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.079163933 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.087562347 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068258853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081120554 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064859495 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079778801 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.072900748 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066430941 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066736758 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071031836 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066454988 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06878101 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.075656743 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.073069671 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069453414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081347119 seconds)
  done (took 6.61413989 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082570301 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093132655 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082536659 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081937769 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065633976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066014371 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065922707 seconds)
  done (took 2.124877706 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066623834 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087349653 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089438626 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089673863 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081778207 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090411638 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066035628 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097830118 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064942887 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085926236 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.117744193 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09298185 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069779642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077159866 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066166571 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.080885496 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066084085 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07486407 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.082177522 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090407053 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069958277 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092192225 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079228087 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066873621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.098962121 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078348594 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065775365 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067144924 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067341785 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067418974 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067049736 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106686217 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078251899 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080748625 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067674596 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066352718 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078910823 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069508625 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.076204676 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075733374 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078907658 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067962616 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065325358 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067370397 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069281383 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07673315 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065636816 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067512248 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067079673 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085614959 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.0651918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078469691 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070253888 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071286671 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071991101 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070631053 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074632693 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067653845 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086236323 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073690179 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067540675 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082664239 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08200307 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078505651 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081691942 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070710774 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078276659 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078723465 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067804944 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068498859 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067897374 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082058335 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066582611 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068178707 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069464676 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068154752 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077061527 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090412833 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090476481 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078813364 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066647384 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067840185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07706463 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089710437 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070734548 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067384581 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069712726 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065053452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070020964 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067559037 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071325101 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06740193 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074340747 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068554835 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069835129 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082594187 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065473515 seconds)
  done (took 8.898556123 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068113552 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066850573 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068269873 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067291095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066915211 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066841545 seconds)
  done (took 2.026113071 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088616159 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066772874 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079873066 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067192316 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104936043 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080881895 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081007249 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074976643 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079212614 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078952198 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082028542 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085386378 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.084306866 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068647769 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081372171 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068363501 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081385449 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070692652 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078117006 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069373126 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078845657 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068823006 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069129412 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08524993 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070350043 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068352631 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075253361 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078247328 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078248094 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075153936 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068558065 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069563056 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074141465 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074821058 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083570363 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074391478 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066762603 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073306674 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069136841 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070257103 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083394462 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068902878 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069850481 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07275718 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.0752856 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074172373 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072943591 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074842314 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.0808225 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07279255 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072698861 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068022144 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069613104 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072659159 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074213206 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074769926 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072911835 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080873563 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068757267 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074278476 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067102305 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069840592 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075090039 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069689853 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073208602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072322437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074454394 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069392593 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0690032 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067555489 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07347522 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067039948 seconds)
  done (took 6.956202395 seconds)
done (took 28.224331999 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513202078 seconds)
  done (took 2.079430781 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615361904 seconds)
  done (took 2.218485712 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.568535959 seconds)
  done (took 8.172157912 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40158901 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472906465 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743315496 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13210461 seconds)
  done (took 3.380110244 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.692277837 seconds)
  done (took 2.309023822 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2265885 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215912264 seconds)
  done (took 2.062691863 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343578924 seconds)
  done (took 1.950582238 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.047744586 seconds)
  done (took 2.653550885 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.249663623 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158618804 seconds)
  done (took 2.023287055 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.434869011 seconds)
  done (took 2.0444189 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.303378926 seconds)
  done (took 5.920791519 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236502806 seconds)
  done (took 1.882242953 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230236037 seconds)
  done (took 1.843035739 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.729264708 seconds)
  done (took 3.335932046 seconds)
done (took 43.486041636 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081564342 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084028362 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084649497 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079664782 seconds)
  done (took 1.9146628 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.074631577 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070094013 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074104842 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073398425 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071911753 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072488102 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073413904 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069782627 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072369133 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070243898 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06909215 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069898815 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07254967 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069935653 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073463161 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074292333 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070596042 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070079715 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073369761 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069998523 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072959408 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070202643 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068265039 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069187383 seconds)
  done (took 3.32422183 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077726633 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072562313 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074936059 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070858211 seconds)
  done (took 1.91225208 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076026545 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085500876 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086716168 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092774397 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075800543 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076371323 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084046744 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085383755 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065041609 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088106511 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067990615 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066984052 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06621279 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085107779 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083808582 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062577371 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064494575 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076322436 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07538538 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07773137 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067508842 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065503617 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075691705 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075528348 seconds)
  done (took 3.441960275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083248871 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065391023 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082399068 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090854753 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091746229 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065344754 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082494155 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091742773 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135880003 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065509826 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071004941 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065157287 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103378213 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065269288 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082368903 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107233204 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111299601 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068874395 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097866551 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065779216 seconds)
  done (took 3.317203745 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082273088 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068809557 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06957558 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065268085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075085112 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072833095 seconds)
  done (took 2.059803597 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067652294 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067168076 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066783949 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069816789 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071711587 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067184555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065966792 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067443405 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067186269 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067070377 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06694846 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065763977 seconds)
  done (took 2.428863442 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15754733 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069145754 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069957826 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065463563 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071599452 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066195116 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081168311 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068013734 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084638735 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066187745 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066246992 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068284131 seconds)
  done (took 2.554091925 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107870715 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183855031 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101552145 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073015941 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215196301 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098518696 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090215748 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.129182086 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093491611 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069931352 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107205014 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13894283 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106586498 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.12980188 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09303782 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148771019 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15285184 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101556393 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121085537 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086092982 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071358585 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150628926 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070560396 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097471593 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130189659 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.105067075 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117719092 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136177317 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094733565 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.093819905 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097221744 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075092532 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153304008 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.089485491 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.110103022 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119288105 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129751121 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085577083 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086450699 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161665798 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150950677 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126962459 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126441615 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137494749 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079418434 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111140984 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085676277 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109030843 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145095412 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101086884 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077155315 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107957791 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.111015016 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133926526 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.242025442 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087329154 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166907474 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.124286859 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119446214 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081522813 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108254745 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.104637961 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110022606 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163785166 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142950931 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103139889 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137190963 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122434993 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100011771 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.100344968 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.113259219 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085889023 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118155178 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121042759 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14271917 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12098643 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123666488 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.110468036 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082452769 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110869791 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126937367 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095248987 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114783257 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154925727 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114542194 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093160378 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111012325 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.14233112 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072670502 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158746187 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094191248 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125109902 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101303995 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142363881 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103371299 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086003742 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107842848 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140306076 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101912464 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1288382 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098023206 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116931686 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097409621 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127651276 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081479104 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101347689 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102883641 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097775014 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074114962 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103669392 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302597746 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116968065 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076550311 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113560016 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097818023 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078598354 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119598348 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142668281 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083098082 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076405863 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150242938 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.096845109 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116905551 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110135746 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.095426273 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133691618 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145581064 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095065766 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089981327 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076025832 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185147964 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076224834 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143499448 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085804095 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124918727 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106228731 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131677215 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139803027 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095559532 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079247083 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106699873 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.114646836 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103036936 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114414578 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076846277 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10907716 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149498899 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.10582715 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091445524 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096674364 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.07030694 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121046818 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077859989 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097354422 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096926856 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095470473 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.094554655 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147013346 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096237528 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111731008 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098309935 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068858391 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090995805 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149682209 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082476483 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108249764 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128268146 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096749714 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068749066 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.118723941 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073435959 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297568178 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114464088 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108066816 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079425313 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128719284 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069724619 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075346495 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128595794 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105520829 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102007786 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137863863 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107363618 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.113000347 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.109422371 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.105511305 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100830857 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106934071 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.110044984 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11820199 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086008756 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150079432 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097256592 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078734471 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087957207 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079392371 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078760866 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127241811 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15444971 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11320226 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103861855 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107180051 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116291384 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108966586 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091488998 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080486058 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136931817 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076941994 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075433337 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115153148 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113335859 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089975846 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.138991467 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080007102 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137482834 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123528883 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094758534 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125463134 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070171127 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071239307 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081675297 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114033501 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119974613 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079747498 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079415193 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136950478 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13564656 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116241588 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102670901 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069133032 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108144587 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141553615 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113319837 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080258286 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260753099 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085802833 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130162561 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096701046 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164155388 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105500104 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113951294 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091923752 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080572002 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076109344 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099561199 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130023406 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09351868 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081826363 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069409645 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075183045 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12015448 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091762794 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117163008 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106309116 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135602654 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07457924 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103130103 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112642178 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110343347 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110371436 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110463327 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096394643 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091703886 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109003635 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122310232 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074486694 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156237356 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131718255 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082601009 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102311182 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098139434 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110444782 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10865035 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114895799 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109694581 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128529852 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12599891 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103239074 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091209369 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098063551 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.096400159 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.095390764 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08155974 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10430342 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119924431 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103231833 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108810963 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.096436244 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092414979 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110349195 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112255224 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090855004 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115912148 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155759905 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099648999 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303368737 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104933543 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107491709 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105258224 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114804522 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.12901037 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146841648 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072242457 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076413689 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072619725 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128407541 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080286599 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117652728 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078037703 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108650864 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124899338 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090804577 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0685645 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101877214 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090302556 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.095106752 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144512647 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.111112385 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074144954 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105744683 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108914872 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098507361 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157000387 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101266531 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103274118 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073447181 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120246668 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075804544 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116289483 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13939228 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08328069 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.084887002 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071998314 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111260081 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102208977 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116296992 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09240274 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104865199 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121216871 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133010124 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103288919 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120354343 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140734835 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114835158 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094777689 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155976655 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137313102 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144956939 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081363457 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.088903729 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105949639 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105972088 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101377957 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077057148 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079558603 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145288494 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119720628 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068669283 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25533714 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084166364 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.089479933 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116491967 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117019077 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083226887 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131461055 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076542611 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108119941 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09543144 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126517872 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122925107 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153920855 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097529741 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08963061 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07851227 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153751302 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08237517 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13448206 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12237638 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104735378 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070183465 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098100171 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125458206 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.637037639 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108748009 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076187817 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136589384 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106634577 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161137148 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093612249 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119140165 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108424701 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102502549 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095183701 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128926069 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094844168 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109235118 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.176537914 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119914916 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107431597 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076114591 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086551617 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075010847 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.091251694 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083039127 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10081103 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108423704 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103185202 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105213678 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088822766 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107236044 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117369851 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114073298 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105334456 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089835461 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137349554 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105153502 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282521985 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128617193 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080646824 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076408213 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.108731606 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13855375 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097863354 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094336897 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079042405 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.091470286 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156452324 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140642056 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103139754 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102699005 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092587968 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101142189 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113891195 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11747664 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110254696 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085855547 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.103052186 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104789214 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080243595 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07569632 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098157239 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071279195 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090613642 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128434361 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109094084 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091418587 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104187002 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080040335 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108415045 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146045283 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104451381 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077554587 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077377259 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077198458 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.08483307 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104296141 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109891286 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113742262 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147246898 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102703878 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095757004 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.080452126 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.223157886 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090264022 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09824039 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.11112137 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076939164 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131486843 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091286405 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090437417 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097128158 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104267378 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156188169 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08609747 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109306909 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113043154 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115681926 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102454915 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105566427 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094718076 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09148245 seconds)
  done (took 54.986241326 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103190365 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.142416037 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150797185 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081451598 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.095050911 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120672399 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198000494 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188312113 seconds)
  done (took 2.855233952 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067561452 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094610716 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100542413 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0820914 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066294669 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068320986 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226916914 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080285783 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065936475 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090740536 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076381411 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067865389 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419985324 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065562215 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066731788 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074314663 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066662104 seconds)
  done (took 3.515991071 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377123497 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621212862 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.362939848 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074450897 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.760613361 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088103233 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.265531712 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138015434 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080307173 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.503853859 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366533859 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12976637 seconds)
  done (took 18.515433908 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080500563 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077707687 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088363378 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088096287 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077221979 seconds)
  done (took 2.149452199 seconds)
done (took 104.622433069 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08016206 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.193699186 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066988614 seconds)
  done (took 2.02924491 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.088777918 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087457891 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087855537 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.084878054 seconds)
  done (took 2.093258835 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073611475 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075580881 seconds)
  done (took 1.887293045 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231306361 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172684802 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094731622 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083279495 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080359354 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081006477 seconds)
  done (took 1.998207432 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07137215 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07191018 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074347823 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076213435 seconds)
  done (took 2.036874152 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067791373 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065755685 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067824637 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070980383 seconds)
  done (took 2.016154955 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08351721 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083432147 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078014764 seconds)
  done (took 1.988982205 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100560644 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092368417 seconds)
  done (took 1.936108533 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079666256 seconds)
  done (took 1.827085419 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092021208 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098868309 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129117273 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111466702 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138196286 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115692791 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081951816 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085979739 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076658827 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.082916057 seconds)
  done (took 2.757419952 seconds)
done (took 22.888019758 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078057973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372647887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359968037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089856662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66938092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356232054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98210296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092186117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106997777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067806081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085195109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648039225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972259408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3304821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961148786 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325491269 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651735554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068518952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06743219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068189795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967444648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067739639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068189021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068235121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676375089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37206929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068923608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319712249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068366454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072464865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35789193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06984298 seconds)
  done (took 16.252007035 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070594051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121143446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072584592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084253989 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069473917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069567401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071070074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068368496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116622475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068536835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085307049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067229215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071795794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069714289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087977766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06781137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07049207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069489393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068597201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069839281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087962771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068464365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069371536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069382156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069504806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082884157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069781469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068576429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069355763 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072461036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074294146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07059326 seconds)
  done (took 4.174795799 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115686878 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124652215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073982914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10518562 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115918299 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06972808 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145011914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092227714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119432752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069441668 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085455839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06834238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101931821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069843364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089337393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069208297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071371339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069247693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068582934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069940065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088235806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068750549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069214474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069404194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069678649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083942014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070309518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068645837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069495792 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072867061 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074174898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07049781 seconds)
  done (took 4.432923355 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069722263 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072244549 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079874596 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080195972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066999455 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068930216 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070712714 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067592462 seconds)
  done (took 2.342102578 seconds)
done (took 28.959102119 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077815236 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067440741 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071013638 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087038457 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073354977 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078343427 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065906504 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074231554 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074054784 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071279748 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072790974 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067129609 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070139688 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06521246 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071603449 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065902175 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081448915 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073042176 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080343965 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080645342 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0715104 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073964164 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075334976 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080203583 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079149581 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078803776 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076237342 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072011831 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067849178 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069992909 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069339417 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076558925 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080223774 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080891806 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06744102 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066779087 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071167167 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069194348 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079741358 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075422888 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068666083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076389703 seconds)
  done (took 4.827215441 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082630688 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087950425 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080877654 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078756705 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096039999 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082003326 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084305529 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076633901 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076375467 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084210254 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07275666 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079477005 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078156208 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071487626 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076350565 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073601242 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079642404 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073107538 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076350937 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077385256 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086022222 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071827605 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085526887 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078556325 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073951142 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080263652 seconds)
  done (took 3.834211637 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072429828 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085080679 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09145112 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142967621 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109240349 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085064444 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081287212 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093423057 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096272116 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067755771 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071897249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091437776 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091817863 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073057169 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109372221 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083307794 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079632735 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06963225 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074633205 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096039421 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087576037 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085458396 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094012167 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083519276 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06724892 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069601122 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072250146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081982758 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069427098 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078055727 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069907709 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07080878 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068433935 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077100926 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069195928 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066849136 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087614373 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078595804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080021295 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104532917 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076858263 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068733018 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092256351 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126807042 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066397294 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070199314 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070446666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078494149 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066660875 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095137997 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079058008 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066927221 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067951558 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066800825 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066714111 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.069647512 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069276643 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069085032 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07695572 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073394141 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085941937 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072502362 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085934553 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066559094 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077153517 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066305846 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068887767 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066273118 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095964671 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068646826 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110212659 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068645726 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065870172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078612415 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07743443 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073163662 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067145995 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085913176 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07815516 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071470766 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075818661 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07020005 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070506295 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097509257 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067637347 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069853151 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065989431 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.0705117 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070528458 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068133775 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079008653 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066274984 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070324875 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086897633 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066875239 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067658033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070027314 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069408894 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067162389 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077683868 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070886689 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068600342 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077797782 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068120899 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070718327 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080552311 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073866994 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065941582 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068920539 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070054127 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068722787 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068588561 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070326959 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069049863 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073535031 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073566103 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07274933 seconds)
  done (took 10.808085475 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162009375 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151521302 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069835175 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146700486 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075841366 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079532052 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148201771 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095119385 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06897228 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068809498 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067771909 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107230466 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102943244 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113876228 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079176308 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068560276 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093673259 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112526749 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150132022 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145786218 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090565129 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075459107 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070462635 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069108952 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069356618 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077225761 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084681146 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076109029 seconds)
  done (took 4.524318399 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077208931 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103160414 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072422787 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090320296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086831412 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068558 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07054283 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070392212 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084231704 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076914593 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067870919 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073947214 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07159613 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071309327 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068757228 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074594815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0748202 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067030932 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072077359 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073082911 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078291388 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092161579 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073013831 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068075843 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07087076 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067925692 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075807105 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079453746 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068212111 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1031913 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065875355 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072508249 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082019422 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068610531 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067524831 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068039519 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067833236 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067739033 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068595099 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066592199 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06646588 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072135316 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066898552 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07551242 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081147849 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074755516 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070105942 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070943882 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070921888 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065539891 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070912827 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070518296 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070002588 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075137396 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072042664 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070949537 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068986397 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093970848 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074077429 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06726223 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067003006 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066876799 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070798088 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077567367 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083244722 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070284769 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066704436 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068086981 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079793392 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080775624 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067110225 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072666905 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065794893 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068626576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070588445 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070217024 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068849817 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066672148 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067382396 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067932996 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068264139 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067918713 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067176093 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070323801 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066072456 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06964629 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068173895 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069447843 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07658637 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067580919 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071329753 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068670598 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066905981 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070824072 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072589983 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07070588 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078620407 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078393893 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068481674 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06610173 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084649319 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070583481 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067326338 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073114374 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072342637 seconds)
  done (took 9.429050247 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089282245 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068056444 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083873868 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091184232 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077084794 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072393918 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078015128 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06816427 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083753387 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072497666 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075676396 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066659243 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078219915 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077639857 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068048399 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078617337 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070087777 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084906861 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082035907 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066301368 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076581678 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080009492 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080401767 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082606956 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081377994 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082405271 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07971909 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077073227 seconds)
  done (took 3.993479783 seconds)
done (took 39.17283681 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.857543623 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.100625707 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.840358645 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.071582456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.898117954 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.053920352 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.963205876 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.839991376 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.851421453 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.884128695 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.152360648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.343753305 seconds)
done (took 66.752847454 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.866361235 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.986900628 seconds)
    (2/2) benchmarking "String"...
    done (took 2.080807513 seconds)
  done (took 5.838644027 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.049393094 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.534961524 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.103166653 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.83732538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.843640401 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.266243299 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.614145569 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283425351 seconds)
  done (took 31.255348768 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.017348287 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.057484244 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.570410703 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.580819098 seconds)
  done (took 16.042666687 seconds)
done (took 64.914291715 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.882922078 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.839072337 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.860164793 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.871676502 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.840909414 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.839687167 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.838063724 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.841839501 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.882975514 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.094433141 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.838503897 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.853755559 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.84018327 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.88797676 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.310453393 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.888517207 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.84669823 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.843669671 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.862604935 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.876046474 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.840426038 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.993962146 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.29618063 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.037651102 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.454007442 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.077287737 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.182465614 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.302930073 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.838179774 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.83838756 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.912440806 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.987746204 seconds)
  done (took 207.374932087 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.840081817 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.006282117 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.036005923 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.873297398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.476780068 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.015908956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.942607478 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.501760519 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.842571722 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.867387217 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.991349815 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.841071565 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.019392325 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.806250651 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.875482133 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.879667984 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.099075306 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.01105766 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.878757907 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.005419434 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.861429879 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.875495152 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.835467245 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.964332748 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.870233624 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.934723371 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.841711459 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.844888523 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.027889645 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.079047881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.849047857 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.889654701 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.01574158 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.710746357 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.852092906 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.86903781 seconds)
  done (took 172.907188544 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.027389038 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.849550198 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.84239402 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.896999487 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.96453162 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.844912235 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.515376993 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.853038516 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.077405843 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.845611527 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.841833056 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.841770103 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.841080065 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.84193952 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.855020853 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.923794812 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.843378137 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.843214338 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.842471512 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.843752864 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.856912913 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.868918177 seconds)
    (22/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.846791688 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.842341021 seconds)
    (24/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.842283292 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.84185392 seconds)
    (26/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.843469875 seconds)
    (27/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.841977444 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.842924174 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.196276966 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.08235811 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.846472943 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.844342087 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.464494962 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.856258956 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.907953559 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.843675594 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.934831841 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.899013486 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.94936053 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.843601825 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.060306746 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.920487565 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.844519622 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.843882921 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.907844273 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.856430552 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.844307691 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.844038894 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850318263 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.910612234 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.078399714 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.845201091 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.965586742 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.318935011 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.844721 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.844477042 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.845517054 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.400612478 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.847831109 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.845791598 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.851421276 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.850431913 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.845566911 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.844597977 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.22888368 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.916235902 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.006997161 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.106296274 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.84693461 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.292781561 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.00560481 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.845618107 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.84545622 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.846146302 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.846079871 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.847502977 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.846453018 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.848845324 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.965619899 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.854286555 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.95719271 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.930187726 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.966899711 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.850206586 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.857221501 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.655942493 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.917484347 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.884160726 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.659725238 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.849189318 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.219221444 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.607571318 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.848825292 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.846741769 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.859560674 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.848322685 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.846844697 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.847536047 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.92597437 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.846731728 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.966987354 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.564214002 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.090332603 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.849567762 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.846857918 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.855342089 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.92704812 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.967892748 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.850508537 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.912494573 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.853355611 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.848955347 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.927105298 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.849050637 seconds)
  done (took 408.094647487 seconds)
done (took 792.23346323 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.474454801 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.445848947 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.542556427 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.458950261 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.437994309 seconds)
  done (took 14.139413583 seconds)
done (took 15.920346104 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.863823703 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.852911925 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.90617044 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.929740387 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.863364521 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.868246308 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.929989757 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.867549977 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.898653572 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.901884286 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.935176061 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.932451233 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.875230481 seconds)
  done (took 26.405316301 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.855640969 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.998002666 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.118388916 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.884756145 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.855255785 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.083946692 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.910467872 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.988925661 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.992599729 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.078851961 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.084127996 seconds)
  done (took 23.635668729 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.855819499 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.997114145 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.081552624 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.890147921 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.855776523 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.081563053 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.911193351 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.991262807 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.998489984 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.076253149 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.080315368 seconds)
  done (took 23.608677885 seconds)
done (took 75.430238555 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.845258829 seconds)
  done (took 3.62265436 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.862997692 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.017855074 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.845695854 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.848408076 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.844753627 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.846602831 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.847947367 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.846844997 seconds)
  done (took 16.741200684 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.8449022 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.845479004 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.845147225 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.844527458 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.84451645 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.845150587 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.845055224 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.844840541 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.845398915 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.845606105 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.845903031 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.846243762 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.845705643 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.846047376 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.846166112 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.845856683 seconds)
  done (took 31.3047494 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.848016369 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.845624682 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.846306417 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.847345386 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.846296142 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.846454296 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.847350654 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.846867529 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.844793631 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.847261027 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.847795706 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.846633965 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.84680641 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.84739069 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.847251892 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.847632539 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.847013028 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.847752848 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.851089364 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.848199128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.847129648 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.846802205 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.847291875 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.847348769 seconds)
  done (took 46.117097954 seconds)
done (took 99.569257528 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.591639606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.436137708 seconds)
  done (took 9.806214227 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.850696434 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.847999168 seconds)
  done (took 5.546051918 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.847560082 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.846830372 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.84776232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.847607728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.848537455 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.847455278 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.848317117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.847883956 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.848147505 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.847357068 seconds)
  done (took 20.257819156 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.847330863 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.847148803 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.847257007 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.847784504 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.847748937 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.848348424 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.848037056 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.848219987 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.848417923 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.847817442 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.847939792 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.84873601 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.848681867 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.849580851 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.849383573 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.847999793 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.849021403 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.849048906 seconds)
  done (took 35.048615 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.848632206 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.847744651 seconds)
  done (took 5.476644994 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.848929029 seconds)
    (2/7) benchmarking "second"...
    done (took 1.849185662 seconds)
    (3/7) benchmarking "month"...
    done (took 1.84895867 seconds)
    (4/7) benchmarking "year"...
    done (took 1.84904717 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.848832217 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.849299563 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.849351504 seconds)
  done (took 14.725441659 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.850197251 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.013388746 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.073865209 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.495029585 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.850798993 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.852115138 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.733486377 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.851851125 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.853829928 seconds)
  done (took 20.356715982 seconds)
done (took 112.996146517 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.585606846 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.854717023 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.158871875 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.904383806 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.870779052 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.186515129 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.888569135 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.164877889 seconds)
done (took 43.396190243 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.939331774 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.847035325 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.87652294 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.876504997 seconds)
  done (took 22.382586597 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.849649729 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.312350229 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.877367334 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.730412967 seconds)
  done (took 22.746304482 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.214316969 seconds)
    (2/2) benchmarking "read"...
    done (took 2.240859689 seconds)
  done (took 6.241502013 seconds)
done (took 60.095070757 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850692423 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.849752139 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.851331135 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.851516867 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.851203932 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.851383615 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.851639983 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.851578976 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.851613295 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.850640062 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.851273164 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.852849302 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853054496 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85256986 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851757885 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852229165 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.851263979 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.85242945 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852859631 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.852747805 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853409582 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852443739 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.852003826 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.852034208 seconds)
  done (took 46.227993262 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.852323138 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.852903621 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.85311713 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.852516175 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.85616399 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.85309975 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.853065637 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.85175916 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.851756007 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.852870055 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85268699 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.852003097 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.852137155 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.852394855 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851957211 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.852796539 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.852991827 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852384043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853012952 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.852665055 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.855234145 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853951099 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.853345051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853320361 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.852699004 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853767059 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.853848237 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.853951312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853398904 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.85317279 seconds)
  done (took 57.37546462 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.853717983 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.853273658 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.854105622 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.853954593 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.853587085 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.853829605 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.856233775 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.853629034 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.854555755 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.853634284 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.854728889 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.853412535 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.854444636 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.855165704 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.854427638 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.853494214 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.853807103 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.854380994 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.854115009 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.853642789 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.854582897 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.85523754 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.855598456 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.853944533 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.855282757 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.854245142 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.854919164 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.854579169 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.855093152 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.854975836 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.854053313 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.85542364 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.856068013 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.854867196 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.855341334 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.855725885 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.854561285 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.855540786 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.85926587 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.854249736 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.854859569 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.855323477 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.855467076 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.855201645 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.856689382 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.85734354 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.856249977 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.856201294 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.857104659 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.857408844 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.85792597 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.857492768 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.857744311 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.857526233 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.858906229 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.858695857 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.857303505 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.858282982 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.858446473 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.857943123 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.857811222 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.858142772 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.858295492 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.859679679 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.860131697 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.858794593 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.859076078 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.858532806 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.858494502 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.857510104 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.860127792 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.86051733 seconds)
  done (took 135.422174172 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.859324319 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.858245551 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858906334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.859492782 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.858905952 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.858413996 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.859692311 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859409829 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85931565 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.858487295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8595074 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.860355037 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859221721 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.859822945 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861411736 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.85898867 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.859298845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860090313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.859513727 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.859893184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.859827907 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.860563312 seconds)
  done (took 42.69927848 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860398656 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.860337082 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.860916489 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.860661216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.860307817 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.860644131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.860682104 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.8625031 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860741978 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.860649161 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860348665 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860766646 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.86152641 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86045919 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861169177 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.861842395 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.860595653 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.861142267 seconds)
  done (took 35.287401731 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.862194713 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.86070977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.861044677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.861838602 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.862833823 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.861002764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.861795927 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.861153265 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.860899775 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.861968303 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.861892522 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861203297 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.861077925 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861157869 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862143271 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.86128652 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.861764455 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861785202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861928878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.862504261 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.864473772 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862916614 seconds)
  done (took 42.752931494 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862368309 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862337379 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.862226534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.862441592 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.862408518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.86330761 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.862534129 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.863292454 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.863215363 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.862335654 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863470627 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863893013 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.863375338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.866160194 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.862499732 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862855654 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863301685 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863792956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863229069 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.866340226 seconds)
  done (took 39.059178939 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.863639791 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862762688 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.863388984 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864062059 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863327537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.863927967 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863970786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.864000761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864300131 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864500803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.86422043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.86484376 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863799584 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.86516062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.86482889 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863993473 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864882879 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864838963 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.864674373 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865480184 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.864701261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864814616 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864275185 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864359806 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.864655008 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864633683 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864801801 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.865289726 seconds)
  done (took 53.997328862 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865326552 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.86457516 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.864484269 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.864565433 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.864434562 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.864950862 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.866257278 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.864523137 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.865457874 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.864753621 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.865128474 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.865279374 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.865501302 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.865454945 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.86568035 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.864938054 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865433672 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.866157603 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865691266 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865311663 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.866295783 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865414239 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.865613641 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.865821731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865786838 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.866128728 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.866691453 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867107065 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.87001683 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.866407198 seconds)
  done (took 57.766133961 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.88672176 seconds)
    (2/2) benchmarking "in"...
    done (took 1.888011441 seconds)
  done (took 5.571744824 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.8672497 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867632071 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.866232774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.866273508 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.867767264 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.867013505 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.867391872 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866914595 seconds)
  done (took 16.735415663 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.86749915 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.871358908 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.867186368 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.867372779 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.867075286 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.875681135 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.872300699 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.869047825 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.870049512 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.871226614 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.871762587 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.872039248 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.876113709 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.871716079 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.868064967 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.869707478 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869580979 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873366512 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.869562239 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.867952925 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.871416511 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.868278136 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.868170479 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.868537906 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.868027249 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.871724477 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.878004753 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.87000427 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870159923 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.869271707 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.877427442 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.869457684 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.868670034 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.872449358 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.868854743 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.8687468 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.876209669 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.870620761 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.869335313 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.868987915 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.871794421 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.873408578 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.872669265 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.878689042 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.871212564 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.871021244 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.869938339 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.870902913 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.87199541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.876832181 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.877758943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871624213 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.870506776 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.870332499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.872744424 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.870735757 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.87091467 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.872336197 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.8789857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.879725553 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.875833379 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.890645674 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.880353505 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.871018781 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.871364175 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.88216139 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.895396618 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.872648616 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.873431839 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.870967217 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.878609048 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.872713726 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.871023699 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.870773097 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.883738159 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.880452773 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.87154426 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.871909208 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.871003868 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.871294288 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873530439 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.872578355 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872184044 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.871327346 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881693009 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.897283872 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.873095876 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.874528661 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.875017927 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.875741249 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.878023041 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.875956084 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.875416105 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.873183767 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.874358212 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.876712227 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.872178492 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.874119626 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.874200978 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.882481522 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.874939276 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.873535069 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.877068898 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.882312625 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.873334838 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.87361686 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.875382298 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.874157691 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.881766618 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.874618842 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.873406604 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.873418866 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.876177338 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.88008635 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.873730594 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.877627378 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.88193724 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.882037997 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.877681649 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.876592704 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.878676664 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.877256765 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.884400655 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.897930008 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.874333831 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.878324911 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.879308429 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.886060251 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.879597072 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.876849913 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.877456293 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.874386008 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.87415763 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.87815434 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.875107425 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.874697802 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.875436761 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.875246995 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.874549473 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.874709785 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.878253518 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.877410415 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.877888204 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.87592836 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.879305847 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.878685315 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.879419959 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.884731728 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.878310803 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.875758876 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.874862394 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.878201682 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.879703121 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.876045093 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.875075711 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.875373541 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.876568814 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.878142299 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.878025912 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.87602489 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.875660784 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.878298186 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.880980064 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.876822843 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.876551848 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.877414008 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.876808496 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.876962866 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.878161838 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.876822766 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.880031603 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877446111 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.881067052 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.875891319 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.876996826 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.876899628 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.876629033 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.878361391 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.881142782 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.888876469 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.881096922 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.886856089 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.878342058 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.885690106 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.879020474 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.88006809 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.877749982 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.878397306 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.877760133 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.877111598 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.877522662 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.881519315 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.897358746 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.890004977 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.881112901 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.881777976 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.885051107 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.882149876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.884179721 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.879015272 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879657372 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.880914623 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.879283872 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.879066146 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.87860853 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.881780565 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.879857711 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.878038493 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.884038032 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.881492032 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.879095077 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.879445024 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.878443614 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.880312307 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.878868747 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.880636569 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.880724665 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.879338456 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.887197932 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883060355 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.878475414 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.879412176 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.882899082 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.879975708 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.879215234 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.882919598 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.883377456 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.881444231 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.881485493 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.887938998 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.882467484 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.881825471 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.88136591 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.880227979 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.882167291 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.880096021 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.883858057 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.888284616 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.883875726 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.87969437 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.886175792 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.882025248 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.884034332 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.880779512 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882495973 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.880968844 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.88371957 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.880776118 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.881105765 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.888629597 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.880679967 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.88303038 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.880785177 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.885359893 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.884155417 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.883942142 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.881649811 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.886931315 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.88902684 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.88797726 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.88571931 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.886210511 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.885237423 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.884776969 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.885647124 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.884083596 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.893970688 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.892748325 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.881047954 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.881153201 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.88192221 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.884872948 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.882465539 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.884661481 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891995773 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.886244723 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.885913509 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.886558689 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.882990016 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.885177413 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.888442022 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.885554379 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.887021118 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.885421226 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.885633598 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.883596875 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.882464446 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.88712459 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.883153205 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.888214025 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.886941554 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.883022216 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.884383513 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.883347795 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.89263292 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.88471043 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.884809114 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.891143011 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.886455951 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.884952804 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.885694946 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.883213011 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.885976372 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.885542567 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.885263884 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.889485579 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.884497913 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.888491939 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.895462213 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.889324295 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.893053578 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.887036667 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.895877444 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.886006578 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.885265848 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.884935702 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.88971801 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.89348024 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.884834223 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.886657564 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.893422791 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.889690338 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.888502849 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.889297783 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.884195475 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.885401652 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.886205428 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.888101926 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.89112965 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.889094595 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.885254386 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.88619379 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.885444024 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.886537567 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.889367004 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.888009459 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.886531619 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.89004343 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.885663373 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.885691103 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.886781002 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.886088694 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.886059108 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.886173081 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.88607088 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.894133903 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.887419254 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.888983766 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890501852 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.885474659 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.895502436 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.887291145 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.88697759 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.891596439 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.886306069 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.891216224 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.885942855 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.886467615 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.88925749 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.886533236 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.889229686 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.89902073 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.895044203 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.892148181 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.889214417 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.88798107 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.889155814 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.897548256 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.91224349 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.889405861 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.889953043 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.892985855 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.896345007 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.891216604 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.894203274 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.891800497 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.895927297 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.889656563 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.889139401 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.891293525 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.900790685 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888356827 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.887625117 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.888136541 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.89265351 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.893379538 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.887873059 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.889722972 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.890756241 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.891127238 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.900042176 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.887826182 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.891465238 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888375183 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.88774956 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.888983513 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.88913818 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.890893734 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.890127769 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.888644025 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.889105586 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.892023897 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.894677503 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.889726069 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.892818189 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.899541018 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888930051 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.888772337 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.891660217 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.890572254 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.892331369 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890357921 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.891235822 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.892128568 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.889497344 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.892585389 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.894190112 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.90056685 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.891133678 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.888673023 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.889622853 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.895582115 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.890238073 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.889260461 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.891746519 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.900471946 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.895480785 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.902214913 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.899956092 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.89061846 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.893208899 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.898466406 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.900039844 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.890850263 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.892373403 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.889919548 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.894746408 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.893366681 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.892520629 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.891009768 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.893631609 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.897253073 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.890737671 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.893144485 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.891628084 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.891982344 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.894162781 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.894091348 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.897581216 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.890848091 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.891492828 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.89336776 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.8935817 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.89255747 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.894786637 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.891701021 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.891956797 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.894395612 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.894090232 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.896617466 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.893035549 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8929784 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.894327852 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.891601662 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.894117517 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.894833343 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.893962417 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.893143072 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.897285814 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.90239851 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.894175116 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.894706349 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.89560467 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.895282353 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.893394348 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.89417291 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.893279177 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.892982672 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.901565012 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.896123861 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.896542842 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.89540997 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.893508148 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.897561161 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.895717071 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.898459894 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.894258202 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.895466427 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.893683656 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.897693609 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.90633075 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.898000279 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.897270154 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.901398609 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.898887342 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.896342108 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.894737424 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.892708088 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.895253706 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.896425276 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.898308556 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.896324411 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.896825581 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.894153863 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.897319267 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.894870668 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.897389403 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.894591625 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.894353041 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.898545958 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.904214923 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.904305089 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.896441382 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.896459754 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.895194409 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.900550198 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.907716446 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.894672849 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.896566652 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.895866334 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.89702041 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.898327795 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.903047789 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.90659105 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.89999879 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.89608646 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.901363913 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.914572002 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.898550723 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.907050939 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.927395699 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.899913799 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.895538755 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.897204821 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.898918817 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.895883809 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.899460547 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.896114551 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.903534947 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.897657937 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.897235409 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.905431403 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.896400788 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.898691156 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.897058193 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.90069154 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.903743425 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.896533571 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.903727682 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.897356062 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.896650913 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.898453006 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.900063457 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.896705015 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.896972838 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.897425292 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.899875415 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.897553874 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.89867385 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.907798456 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.898955316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.899561289 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.909197106 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.910464382 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.897886267 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.897731961 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.898620621 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.903864589 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.9005812 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.898018847 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902348368 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.906820658 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.902784545 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.906517142 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.901440453 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.900647413 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.900267042 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.898092241 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.897964379 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.912864453 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.911888634 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.901343926 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.901187607 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.908028287 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.899724793 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.907098755 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.907365986 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.898414444 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.900652957 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.898600893 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.898253207 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.899621309 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.899546792 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.903405515 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.908269541 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.900172046 seconds)
  done (took 1126.224825152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.899295305 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899443576 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.900321861 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.899290661 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899723614 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89994074 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899724834 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.900117685 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.899034805 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.900630864 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.900630163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.899554148 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.900495309 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.90095374 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899872694 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.900578267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.900033742 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900573177 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.899601337 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.900352623 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.900443375 seconds)
  done (took 41.729561634 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.900364636 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.901083817 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.900893529 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.901850955 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.900915335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.90120051 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.900236184 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.90019116 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.90128293 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.90096742 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.905346618 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900141071 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.901047383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.900975313 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901122927 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.900989128 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.90132819 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.901382966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.901178037 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.903627255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.899937941 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.90072153 seconds)
  done (took 43.657180831 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.901178342 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.901408197 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.90397658 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.900783264 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.901770205 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.900952624 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.901731824 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.904823082 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.903710686 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.905007819 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.909646474 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.909607992 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.902235476 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.906946272 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.901758257 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.902823012 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.048433387 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.902376426 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.902862314 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.90236627 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.902931066 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.911090003 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.904305985 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.902673474 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.904917858 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.902815727 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.902786259 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.902938603 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.904540864 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.906509457 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.908285202 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.903642975 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.90532962 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.908754524 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.906962884 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.906483969 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.907626444 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.903271006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.904614876 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.903476123 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.91397788 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.927314088 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.904034995 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.904510665 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.911786124 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.904088975 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.905286373 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.908270749 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.912523579 seconds)
  done (took 95.342712393 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.903581473 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.903886292 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.903441023 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.903782056 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.904021032 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.904856812 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.90542943 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.903596127 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.904633819 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.904775908 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.904513303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.905491947 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.903993382 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.904938248 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.905081611 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.90523916 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.904557394 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.904599325 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.90479114 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.904299184 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.90432915 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.905060248 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.905530729 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.905460422 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.905898643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.906131267 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.905216594 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.905952885 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.905194891 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.904811237 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.904957662 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.905227641 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.906377905 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.906930017 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.905815835 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.906121078 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.906323115 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.906042762 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.905415474 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.906016289 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.90614399 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.906500384 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.906443596 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.906478477 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.907216048 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.906394905 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.90674219 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.905992767 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.906506798 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.907170325 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.906473534 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.906640861 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.905577905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.90693118 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.906055894 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.906189849 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.906863324 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.90788974 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.906536243 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.907956668 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.907377547 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.908077589 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.907098856 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.907317018 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.907591908 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.907273579 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.907894786 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.906716294 seconds)
  done (took 131.430516458 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.906762813 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.908032453 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.907946448 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.908367522 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.908460208 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.9082475 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.909755061 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.908232529 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.908293689 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.908155521 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.908767332 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.908753281 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.908683168 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.90818269 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.909045475 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.908593629 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.908668527 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.908725462 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.909740052 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910618463 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.909301543 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.910901498 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.909825069 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.909817459 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.910410152 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.909369823 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910128187 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.910386268 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909683324 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.909528679 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.9097166 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.909848683 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.909918684 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.91029182 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.910255309 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.911607537 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.910058506 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.909919777 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.910005637 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.9098091 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.910476769 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.910738592 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.909905478 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.909419412 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.911052088 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.910708422 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.910006343 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.91109894 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.90999421 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.910323774 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.910606279 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.912736581 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910370086 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.910739918 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.911527077 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.911102908 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.91029774 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.910798257 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.911732662 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.911166337 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.911002639 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.911392908 seconds)
  done (took 120.249070418 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.910292104 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.910826649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.91137745 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.912055847 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.912022953 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.91174516 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.91069003 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.911760297 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.91056693 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.910639257 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911056363 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.911456162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.912412961 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.912404866 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.911033543 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912208254 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.911977985 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.912229124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.912555522 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.913400948 seconds)
  done (took 40.072703587 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.912379646 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.91343856 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.912722922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.91234213 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.911564855 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.913344411 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.912889307 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.912053556 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.911114439 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.912453374 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.912582057 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.911645218 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912073599 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.912577934 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.914341864 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.913207209 seconds)
  done (took 32.44268659 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.913183379 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.912754817 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.912580213 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.91345921 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.912194566 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.912018576 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.912422427 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.91326982 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.913593231 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.913974563 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.912022005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.913671963 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.91354955 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.914620409 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.912612322 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.91426921 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.914451603 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.914082509 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.913599206 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.913454448 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.915186007 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.91440358 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.914476187 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.915498515 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.915652388 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.915424706 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.915820577 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.914607358 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.915707613 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.915555678 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.914970537 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.915175981 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.915239538 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.914687197 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.914538294 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.914646471 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.915152092 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.915408192 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.914998387 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.914901039 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.914117906 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.916291149 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.914628749 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.916694323 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.916223173 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.914860455 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.914826791 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.91475711 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.915799792 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.914929525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.915761082 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.915110035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.915389666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.915648046 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.915911827 seconds)
  done (took 107.142593101 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.915411789 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.91653651 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.915595371 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.915798048 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.916962377 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.915370988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.915558487 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.915780935 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.916763126 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.916699237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.915653114 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.916667787 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.91602382 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.915966233 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.917035592 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.915926226 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.916144773 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.916107508 seconds)
  done (took 36.33633732 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.916855822 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.918750106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.916948534 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.917714697 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.916746672 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.917215166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.916929678 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.915833631 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916948154 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.917276394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.916663692 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.917101813 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917341497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.918428545 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.918413164 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917945574 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.920844204 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.917072451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.921739074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.916883856 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.917697333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.919000401 seconds)
  done (took 44.036462497 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.91816875 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.9184289 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.933549158 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.941637718 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.940879542 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.957481043 seconds)
  done (took 13.457216883 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917862991 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918711323 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.918826455 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917222226 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918509954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91731367 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918000729 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91860596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916338429 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917232963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91620443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917099128 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917090146 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917273279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916584191 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916836568 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917695296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918176801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91761683 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917206114 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916651639 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919985921 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91856719 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918435539 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916943944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917644015 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916819958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917379055 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918312322 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918665988 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918162074 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917587158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917614426 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92003953 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918121735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918051805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917736438 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91755857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91712351 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918802053 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.917347316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920688628 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916443364 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916952031 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919138433 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917112937 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920790434 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919589987 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916244185 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914312877 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909766878 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.913955736 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913650963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913142248 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912186681 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910850443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90865531 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908464383 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909405891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.910699956 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90853711 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909425767 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90942667 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911078988 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912059582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.910914497 seconds)
  done (took 128.30836 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910926464 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.910142436 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910512871 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909116903 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908144398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909253187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909711441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.910865842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909945081 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911395152 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911079363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910823459 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912105786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912962483 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911654262 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91111579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907097115 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907332437 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910409326 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905984082 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908311561 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909261515 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908567074 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909183301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909097021 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907322117 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906700759 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90919854 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903984029 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907596677 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905142593 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907026477 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908325045 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.905103354 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907885421 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907569536 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907103691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906273088 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905785071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90820935 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907455623 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904332904 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907424126 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908172404 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907813272 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908067134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906504869 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910302606 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907146987 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908148742 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909094036 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90798101 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906137165 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906942183 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908137511 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909972652 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909065133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909234065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909901078 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90783577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90854938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906560677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905913632 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907414347 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906675204 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907777681 seconds)
  done (took 127.790501792 seconds)
done (took 2622.904400644 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.999780377 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.953944149 seconds)
  done (took 15.784921524 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.078928999 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.02722671 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.916740816 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.946269542 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.914333046 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.915594407 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.934870602 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.910998463 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.914431375 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.910334703 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.915096634 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.095177625 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.971616297 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.908363583 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.911887592 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.004516102 seconds)
  done (took 53.117457554 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.909526867 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.908801286 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.919774853 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.910128169 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.910194578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.918039571 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.937352169 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.910680753 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.942398217 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.916835014 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.974654681 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.917835133 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.904971822 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.953744357 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.918451977 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.917747904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.99609578 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.982185341 seconds)
  done (took 36.580612138 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.98231871 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.914961942 seconds)
  done (took 10.733633607 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.929121725 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.947389172 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.905775294 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.905454025 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.911520654 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.926352564 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.905152819 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.94609538 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.894811879 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.929336425 seconds)
  done (took 71.031576503 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.902707163 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.898034093 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.896831437 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.89452289 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.89435854 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.895955519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.892356231 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.89635924 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.567298737 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.931655519 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.904697025 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.901727305 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.895550877 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8968279 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.891638312 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.917096764 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.004121407 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.893684573 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.89072907 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.898835676 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.893035691 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.94656837 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.907013628 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.89217049 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.926813296 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.564530067 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.901697461 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.901043872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.00371779 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.890435344 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.892469665 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.079284426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.898070909 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.364620684 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.206220318 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.896350473 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.90307731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.896977709 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.888403487 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.012964246 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.890931868 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.899781952 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.794044498 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.18673166 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.005849724 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.932606245 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.229409914 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.909242276 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.889951156 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.918857108 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.890635562 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.88893768 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.908323438 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.393786189 seconds)
  done (took 134.192346992 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.885621371 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.247606269 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.051801001 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.889738381 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171608395 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091261589 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.888436188 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932806612 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.888235185 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.129729203 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.051660316 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993051917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887436431 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.884897226 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.886995642 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.883863 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038245256 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.954313637 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.88698296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.885400686 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910366121 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12866239 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.023904054 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.886550227 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.901726518 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095486635 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.004687168 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.985516852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.114500928 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.882909476 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.942631151 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.884065537 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.88278135 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.879801999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.047007836 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.973624415 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962234286 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.880362379 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879712363 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.878192893 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.542418609 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078702589 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.975880822 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.010244664 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.076775978 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084999863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.662538151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.880364167 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.624649685 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.04155072 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.109116551 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.124662983 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.000224742 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.8839776 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.221370864 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.878132294 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878018044 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.127937141 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028479303 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.978160355 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.884293679 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.880188578 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.877892487 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119918051 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.882206713 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.974590373 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883292406 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.882089066 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.978554549 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.981453542 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.021716022 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09263206 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.912444166 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.864641216 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.428071535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.126488918 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.945943997 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131310577 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.88362603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881580878 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962184958 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.733038083 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039812235 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.126703485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.137803161 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.335714936 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.617058786 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.882378072 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.106261341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100491732 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.13182291 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085982774 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.03731836 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.054398939 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.881153461 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.885187935 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.099003655 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006256643 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8850792 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.225005208 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114233769 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.442953721 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.900823949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187273296 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01271722 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.884628491 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.517701434 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.884837115 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.105083564 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.924694681 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.88419375 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884548306 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.101371868 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.855790269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.887740639 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.536880557 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.945097576 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.887170428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116603767 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.887013904 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144581335 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88890204 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115749555 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.449853944 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912818281 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.055694549 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.08320381 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.886468336 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127068502 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12607128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99720815 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103473255 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.517675626 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.887207776 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.170423178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.887801171 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.884936322 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.054898638 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.888812355 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03060438 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.887011893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.167383658 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904011748 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043583026 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887094109 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.152960249 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.915044646 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934599956 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.888272833 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.014973314 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.887222567 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716164479 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.041917137 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885951187 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.883191344 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.434974837 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.88501588 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032936186 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.113032162 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90759435 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.955043693 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.547232583 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.88376971 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966778339 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907316773 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.281308405 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.885416707 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.046072187 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.887237338 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.884820821 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.883487635 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.12156619 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.083163577 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.887536126 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.88606865 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.781007094 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.8869987 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.885920014 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.065830205 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.804909511 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.883243958 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08908952 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888562218 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014237871 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.890198575 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.960988529 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.218790828 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.885022122 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.885626375 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.88660309 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.884565182 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.889857961 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092278417 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.91624144 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.414872276 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.024660945 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154302169 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.194324748 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.139032543 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.928744099 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.889089963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.1400198 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.888817863 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.948887361 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.887667107 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.905191222 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118246627 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.890289075 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098101349 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.167892743 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.758779836 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933427624 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.889202489 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.888394085 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.886483708 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054889526 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.971487753 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.888800935 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.885940383 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002479387 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025932459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.096200305 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.88789599 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.010296011 seconds)
  done (took 905.321270628 seconds)
done (took 1228.596069946 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.889022637 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.888885793 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.893601904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.892099809 seconds)
  done (took 29.382184066 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.891784325 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.889311013 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.89038835 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.889234991 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.890862313 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.888939317 seconds)
  done (took 13.156138124 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.903837041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.887188737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.892222525 seconds)
  done (took 21.501266234 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.960419425 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.272470443 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.02747343 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.301619674 seconds)
  done (took 10.37874303 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.892128564 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.890535964 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.888948289 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.892464532 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.891273004 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.889720342 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.890900946 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.892686248 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.893280911 seconds)
  done (took 18.839120097 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.010344817 seconds)
done (took 99.084770051 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.898182698 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.520977071 seconds)
    (3/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.120499817 seconds)
    (4/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.07866839 seconds)
    (5/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.912941938 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.957416358 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.020521166 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.990216309 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.865705152 seconds)
    (10/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.116790907 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198754933 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.899901251 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.18803763 seconds)
    (14/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.980466908 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.908336253 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.889527417 seconds)
    (17/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.192590612 seconds)
    (18/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.971878976 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.342901941 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.236974153 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.054730218 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.114635563 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.892189706 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.123463157 seconds)
    (25/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.979113058 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.916282169 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.890340923 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.246048622 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.441026593 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.108361028 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.307034168 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.817712687 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.726000658 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.984159476 seconds)
    (35/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.033253194 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.503423884 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.328127259 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.13448178 seconds)
    (39/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.030544431 seconds)
    (40/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.804394882 seconds)
    (41/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.933853946 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.02410992 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.896740131 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.065455486 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.894186889 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.209038039 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.115984059 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.00637399 seconds)
    (49/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.021118369 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.976413594 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.915818337 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.917619809 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.311372897 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.327088171 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.140549389 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.977200717 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.197973379 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.977679346 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.541492601 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.41075273 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.13621383 seconds)
    (62/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.971551692 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.29852645 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.14506651 seconds)
    (65/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.394107761 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.047316977 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.029423668 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.913529467 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.126758051 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.994470359 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.990134481 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.276479745 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.183437577 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.159937648 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.899049282 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.033452127 seconds)
    (77/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.895675254 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.072927926 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.899418053 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.095865819 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.97037663 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.049364637 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.983692128 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.230402563 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.307610871 seconds)
    (86/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.261688202 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.913157213 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.836210878 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.917483292 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.252229424 seconds)
    (91/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.514191391 seconds)
    (92/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.632600569 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.215264916 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.897429118 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.358370241 seconds)
    (96/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.929024101 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.915513436 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.135801039 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.010524818 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.034103009 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.900366076 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.743412024 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.037710725 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.907604885 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.560342522 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.973719888 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.95895061 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.650218513 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.296086223 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.902370199 seconds)
    (111/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.023204288 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.897008397 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.02872919 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.360543456 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.908557465 seconds)
    (116/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.985225133 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.009000979 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.022236079 seconds)
    (119/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.21044203 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.147266969 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.906616042 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.978052093 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 7.547848969 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.044517194 seconds)
    (125/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.902689829 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.64112452 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.108655197 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.223239261 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.871759934 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.030736373 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.196513749 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.922822678 seconds)
    (133/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.330472841 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.739364835 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.991296002 seconds)
    (136/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.997142008 seconds)
    (137/309) benchmarking ("sort", Float64, false)...
    done (took 5.680370246 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.902631114 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.121882277 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.922153982 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.898712588 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.35488754 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.936893398 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.903390979 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.035105161 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.106183932 seconds)
    (147/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.031154924 seconds)
    (148/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.980512151 seconds)
    (149/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.986714459 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.901345598 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.085017384 seconds)
    (152/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.055911551 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.159577383 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.259331023 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.910133316 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.680111051 seconds)
    (157/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.088643752 seconds)
    (158/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.379339555 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.515049962 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.160047673 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.89983413 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.552503269 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.169721231 seconds)
    (164/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204746447 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.926115699 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.009004791 seconds)
    (167/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.833566101 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.012921316 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.905025504 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.143315805 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.922245857 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.923256566 seconds)
    (173/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.566433374 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 4.78888386 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.263950014 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.064676821 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.206864239 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.905375876 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.169017889 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.903257938 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.959651364 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.125666815 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.903518306 seconds)
    (184/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 4.138808617 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.904786969 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.901788479 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.48738691 seconds)
    (188/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.379278667 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.907523659 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.765756834 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.213217889 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.21939569 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.037603099 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.051451394 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.909387744 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.942354726 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.903838495 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.131998236 seconds)
    (199/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.06652021 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.043665964 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.187423063 seconds)
    (202/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.859336937 seconds)
    (203/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.408806311 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.099598293 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.459544882 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.909477832 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.187517769 seconds)
    (208/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.05281049 seconds)
    (209/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.08180103 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.001394383 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.789390691 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.90452085 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.901670629 seconds)
    (214/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.905169418 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.438476789 seconds)
    (216/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.687722895 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286031695 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.965946905 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.92653186 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.900642352 seconds)
    (221/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.481910595 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.131652688 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.160478426 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.905090319 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.926610023 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.238513307 seconds)
    (227/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.69283153 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.204270353 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.909782612 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 5.702943505 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.024824974 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.563054165 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.202546021 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.810039204 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.040215859 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.90251802 seconds)
    (237/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.042500198 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.962257172 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.209174827 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.273028814 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.936664319 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.314554766 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.258416384 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.905953719 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.922489577 seconds)
    (246/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.054257109 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.91237641 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.259155706 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.907611677 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.238702847 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.686193361 seconds)
    (252/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.361989183 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.17616047 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.342318562 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.009092397 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.091047761 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.129537658 seconds)
    (258/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.072130446 seconds)
    (259/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.912023818 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.072953045 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.005644344 seconds)
    (262/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.073635452 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.905104109 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.904646871 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.903441818 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.904756356 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.839245689 seconds)
    (268/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.788104699 seconds)
    (269/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.641326616 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.396097283 seconds)
    (271/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.580637715 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.994687463 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.906381258 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.04863841 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.90402562 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.015219879 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.564161343 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.955879145 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.059847555 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.197227939 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.802449396 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.946819564 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.930867726 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.00341355 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.90794865 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.881853174 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.032345696 seconds)
    (288/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.090460656 seconds)
    (289/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.37854724 seconds)
    (290/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.583819424 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.951655463 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.991340003 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.719661796 seconds)
    (294/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.286460022 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.067427532 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.753160692 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.095748038 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.919803473 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.01942196 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.311727747 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.94112387 seconds)
    (302/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.930494496 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.244135521 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.031883141 seconds)
    (305/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.036981252 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.129876653 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.036629376 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.395833994 seconds)
    (309/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.06576104 seconds)
  done (took 1016.830853354 seconds)
done (took 1018.711457316 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.934750407 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93102447 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.911347085 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.934402342 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.026843981 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.959206699 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.927677769 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.915820882 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.961722176 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.962005932 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.913089034 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.956324139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.913915428 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.914513905 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.911738255 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.931023055 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.210690916 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.937008839 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.930784317 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.92337373 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.930203077 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.911528031 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.962246038 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.956494665 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.917318708 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.915769257 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.91972326 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.932133014 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.024852072 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.91726585 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.919528082 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.926420429 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.208543526 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.937030537 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.908535106 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.934381148 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.927801212 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.924254055 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.918382183 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.949038005 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.300287389 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.947013175 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.914167097 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.914333373 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.914963444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.922053408 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.916190085 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.922586661 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.930555051 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.930927594 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.295148017 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.964556262 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.920122717 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.917456428 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.92737043 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.919322729 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.918818156 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.933260338 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.936275667 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.931378989 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.201722826 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.943078708 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.917889803 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.934927909 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.92740619 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.331574277 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.94488259 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.920689554 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.298499943 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.954522427 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.331265187 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.958391104 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.916265868 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.931279218 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.949522419 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.210130443 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.937668904 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.912940879 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.924360044 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.916979559 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.929425908 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.932278516 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.921387001 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.915097922 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.933259854 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.96485074 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.931949492 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.919228871 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.929298715 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.93832322 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.92735002 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.9299688 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.92500631 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.914599443 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.930273229 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.922324533 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.922823326 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.923006171 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.9198561 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.930927576 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.301368128 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.965663443 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.914728956 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.913808836 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.915865888 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.933047766 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.301357703 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.950666893 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.938394778 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.96688269 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.919306846 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.205196267 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.946503881 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.933425967 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.9304328 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.920826234 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.917252113 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.20462418 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321082318 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.96559563 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.918541236 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.919033084 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935444241 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.918806942 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.913933645 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.213498817 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.942869018 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93355248 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.040777606 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.933049336 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.952580196 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.920050267 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.923763916 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.966278259 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937093878 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.952384843 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.921760604 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.935271312 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.939814103 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.916537151 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.934418305 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.931842301 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.915386116 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.927012967 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.913964475 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.965773165 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.937347567 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935139483 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.941411649 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.041475134 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.916150778 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.204550346 seconds)
done (took 300.958739477 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.994159326 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.916480565 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.008987368 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.916572272 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.005144732 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.988969554 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.917361209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.921236444 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.917341676 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.420294747 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.91876403 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.926880877 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.91812362 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.919417828 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.986815411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.917477814 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.918006417 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.368382454 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.919692254 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.999182486 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.918653101 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.918386335 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.919107048 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.422621821 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.918530669 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.919928206 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.9974193 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.918290612 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.37273831 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.9167077 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.920597238 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.373712285 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.996712029 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.946155025 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.926136059 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.92460351 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.00641354 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.930198913 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.985005012 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.986595634 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.010579748 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.95114657 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.918513317 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.919108123 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.922617968 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.920822709 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.916486582 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.95105728 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.918946813 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.924482336 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.366280216 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.926024042 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.923648418 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.919759402 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.918599817 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.947976752 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.917065923 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.920487166 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.998780791 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.91981882 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.988800859 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.424607525 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.424200879 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.922043471 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.920753538 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.92116286 seconds)
  done (took 188.576315052 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.984415851 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.997361396 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.983206806 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.924308979 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.968823061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.989298393 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.921778403 seconds)
  done (took 15.612096451 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.928355257 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.920106171 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.972359904 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.970785197 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.920128652 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.10070418 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.931695005 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.92811618 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.948229925 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.921903726 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.557563696 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.971255436 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.92913062 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.923339402 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.934153389 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.97999234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.924137613 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.922891607 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.039181679 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.070920684 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.924206346 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.929465465 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.949063118 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.934806536 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.925742048 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.924058708 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.921832625 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.92860235 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.924406631 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.921675254 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.925926721 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.972311405 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.922792845 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.922381268 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.922290818 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.923967848 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.924459634 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.922255447 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.924299502 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.921701936 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.921341648 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.922464408 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.924349264 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.922341137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.92363008 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.945647147 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.924448019 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.927643948 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.923462167 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.924739687 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.948954326 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.926052531 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.925373992 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.928137219 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.966222078 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.932089686 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.927382154 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.923869827 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.924764318 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.924056889 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.924445444 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.073593698 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.974037491 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.922218565 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.973564158 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.078367844 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.924308663 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.922260037 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.923694041 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.010407957 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.922269372 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.971790115 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.922886481 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.036123142 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.922817399 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.102582017 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.946812556 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.926319539 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.926131754 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.921324943 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.931224391 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.923684914 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.926802248 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.931357432 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.932281525 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.924592234 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.927007703 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.92605947 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.933429577 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.926372161 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.971188937 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.92370615 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.92461209 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.065465436 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.925776803 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.040062947 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.950702418 seconds)
  done (took 211.205780251 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.932001405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.934235758 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.925495826 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.939120818 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.925695385 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.925219427 seconds)
  done (took 13.432296824 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.930569706 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.928802161 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.925976001 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.926487677 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.926199141 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.926550517 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.924928923 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.927014859 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.927447536 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.924789105 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.926144125 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.925049113 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.925693023 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.927415776 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.926766103 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.929149325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.928708804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.927992017 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.926459329 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.927371376 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.13369355 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.930946395 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.928240551 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.927994106 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.929912942 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.928171096 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.938821158 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.92680702 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.926241467 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.932338353 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.930029105 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.927625625 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.931978907 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.931952074 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.933548907 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.933629513 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933271858 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.927059401 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.927925504 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.926528278 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.926967177 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.929362293 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.929274296 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.926497839 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.929698549 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.932959482 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.934772207 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.941117669 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.928238383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.927820172 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.930884832 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.932532648 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.929264768 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.928851433 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.931073036 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935261221 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.934496223 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.931587526 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.928799054 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.930058634 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.931244573 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.93173911 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.929103603 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.931585226 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.935870901 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.929584789 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.9323146 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.936313053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.930061575 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.929188855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.929060965 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.930061038 seconds)
  done (took 141.997194962 seconds)
done (took 572.678648889 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.215672965 seconds)
  done (took 9.070887787 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.082334363 seconds)
  done (took 8.999242689 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.20482432 seconds)
  done (took 10.063544485 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.960764172 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.959010169 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.942600637 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.926024976 seconds)
  done (took 29.658901502 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.292303788 seconds)
  done (took 9.147511414 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.950271335 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.926982636 seconds)
  done (took 15.800688479 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.989788536 seconds)
  done (took 8.849650904 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.230221262 seconds)
  done (took 9.088447533 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.930539806 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.933802643 seconds)
  done (took 15.735702328 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.933466056 seconds)
  done (took 8.785064192 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.238170022 seconds)
  done (took 10.115793709 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.950634779 seconds)
  done (took 8.869263964 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.966885616 seconds)
  done (took 8.818957585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.826322842 seconds)
  done (took 9.677577254 seconds)
done (took 164.539846462 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.940385471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.926881907 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.922171009 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.92450784 seconds)
  done (took 29.565162431 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.964778313 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.964718156 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.972443122 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.962124675 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.955219374 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.954024214 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.964587253 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.962944849 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.955152461 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.963892249 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.963460853 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.966808038 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.963722916 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.972449742 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.973899984 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.96378055 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.964356138 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.965713248 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.954650002 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.972881323 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.961289397 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.966275159 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.929155069 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.930582305 seconds)
  done (took 48.921359441 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.145819892 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.015650006 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.097081581 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.005194201 seconds)
  done (took 10.11585675 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.932315739 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.007025991 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.998526384 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.986304266 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.989603118 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.045043558 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.999854497 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.079509607 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.057604489 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.064278539 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.939074616 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.955663205 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.956036446 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.986908661 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.046561467 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.932318487 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.930512747 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.05739231 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.008470648 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.231615542 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.931880627 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.99888077 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.991485696 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.00058413 seconds)
  done (took 49.98026031 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.932448657 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.940328453 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.939646567 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.93155185 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.932379012 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.934806386 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.941049258 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.933879987 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.95575237 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.93409896 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.93360438 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.935147936 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.939694329 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.932848234 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.933961263 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.945584041 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.947683725 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.932638735 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.937016878 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.939742524 seconds)
  done (took 40.608293537 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.933155912 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.191586794 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.276125193 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.181895066 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.931691357 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.931193115 seconds)
  done (took 32.299754238 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.943087881 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.93579317 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.929496981 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.983567194 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.067613506 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.935138755 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.933955951 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.941818578 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.972112211 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991311796 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.95640401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.955332835 seconds)
  done (took 25.403107433 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.930339604 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.933375947 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.934015921 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.943428719 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.942713014 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.936883813 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.939859536 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.931376784 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.945906547 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.949671319 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.937786988 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.945878171 seconds)
  done (took 45.129772798 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.63942377 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008298773 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93400868 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.961220741 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371834793 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484938662 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.824855832 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.602049985 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.782454802 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.876791891 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150981365 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.945671687 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034716336 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.949244717 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222479958 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.4210472 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16870699 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19364378 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947956694 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.043886838 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.151492001 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160549772 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.242089341 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949787023 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951300625 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.963580131 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.606940755 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.615891248 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063166476 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.258779609 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151631858 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900603765 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000220718 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.953553397 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.964811593 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951840759 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954350528 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224386992 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.966012677 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150648078 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023611115 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199496971 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955787848 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.374997978 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.654662394 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.264231273 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.073697162 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.952500376 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957407116 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951758728 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.880308888 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042076067 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.958158625 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959879507 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.653377897 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.951257064 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026162303 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.953682686 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155747633 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.760692756 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634250629 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.953636893 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956361528 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508769749 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951796593 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.147706328 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621100954 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404662193 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367492522 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.049563226 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.95368026 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955428121 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.142942688 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995628154 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.627824103 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069672619 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.091626908 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.968984391 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593789055 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249519386 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.378705083 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524677689 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873154943 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218835931 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69255922 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016500994 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16867085 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.782869315 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.879576659 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159254813 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988181806 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956019053 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218822493 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630925083 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14476161 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.967386135 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38670117 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970519206 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959858755 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954138672 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168171865 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382064925 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053936162 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073630668 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970565154 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049626881 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881720604 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.965681387 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.955917347 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.838496645 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958740329 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846319815 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.079841105 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.810354285 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071948132 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.89400667 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959722534 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960422861 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077790216 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.908220892 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19864436 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.254314638 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.604251835 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879714595 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.163586095 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.317666995 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197238075 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959172865 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169881764 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493248258 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.347924649 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.017832216 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235391701 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.014958855 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239780658 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374235412 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018742763 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.640180232 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.565714218 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.172715027 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968885224 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.959578491 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960649241 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960235205 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892241562 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.7648481 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.316664561 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.131971041 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169877156 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.371489329 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.018930318 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.852781537 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34039757 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092925259 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.946942953 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.594259537 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.216222437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.744198428 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.044908115 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138011373 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.248857326 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.994396158 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969971652 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049579567 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976973546 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.964285827 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.26568368 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324329685 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.958691244 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.959160749 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.906170567 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962674454 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.957647261 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.510744876 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925436079 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.96569162 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.971648657 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.83442748 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02035914 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963853472 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963724838 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.509903314 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.472585767 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.96405219 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.618330524 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.965705556 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10912037 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221512204 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.308092254 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093856721 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.660811242 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.35495591 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.070102935 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.660081926 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88610322 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.959102993 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.899933176 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963230264 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959655047 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964512787 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.145746046 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227312093 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25806647 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.415877684 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.022708452 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163595387 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.574591399 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987076812 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.962593327 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965498852 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.962839323 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960026484 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.459519296 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.504017007 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960778736 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065399396 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965922276 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093605902 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.970439297 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888926594 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.96049513 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966936514 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452052024 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.058410137 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.910835432 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.268897982 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.704065676 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157629561 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007682307 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.97311519 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969163419 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.626273094 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.076827485 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889405991 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422722246 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076003327 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.578646883 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.708838011 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514080076 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246997456 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276251659 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.275627787 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.027329124 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175718838 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.044641026 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020274544 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052934436 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899784776 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.886560735 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.595877145 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287935717 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280921938 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970962143 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176982083 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579479628 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263878377 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991793655 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.822662237 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338245844 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937494906 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980685209 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.384309871 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151698241 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04619419 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970158706 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.913689718 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300802049 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00781612 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.666637067 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97758225 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321057336 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398619178 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.19467769 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.335587849 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182129742 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.971791278 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30926718 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.194758248 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084023724 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970458688 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.939551286 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.185669197 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547767815 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.863748202 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97140824 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.131382183 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.32667576 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.867016951 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.966033108 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1333072 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302561523 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965607823 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.304863674 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333550699 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.065688007 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016038963 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192708825 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.655686643 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339978396 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.513520019 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.438983263 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977303584 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.890811075 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.665435279 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.174822408 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.96563338 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934581037 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170133076 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198088966 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641927406 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190674653 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209479892 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.976918828 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227241222 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035951628 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.066534112 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.274925804 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.415611593 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216601179 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194304777 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495587575 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.186552301 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406068436 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.114384477 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.967455215 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172997193 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181676552 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.181968429 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.343965168 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136676431 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.679194429 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.971630436 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.174320176 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256052669 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02740821 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.335731506 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147105464 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.054641229 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973818924 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045388217 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975444599 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974728881 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.336885103 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.503544675 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.983126061 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043077536 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975326895 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.538511528 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.976004561 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.973326083 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232403432 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310091861 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294463012 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950095873 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.968504219 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971714016 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10228366 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.896159501 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97522153 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241925659 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.973294879 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389081468 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200350693 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986481255 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.274282015 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.371876445 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.649248253 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.086538392 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974424411 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178731668 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272029116 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.199961595 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172427621 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241164706 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304132009 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.007496226 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.345341514 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219372568 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973080255 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.993749442 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973140165 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089142499 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.168043191 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234079565 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.479855847 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651432034 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310599067 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.827560013 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972546668 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.588426793 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316998484 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231499426 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.019389025 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04605414 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974536305 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456331726 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.779366207 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106552634 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.862826795 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900833278 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.976818947 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.254998569 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.213947223 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.68465208 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977090167 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239791903 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274300294 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238661238 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.023229886 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.883316271 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218880774 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975365392 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.977823714 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195180553 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182990929 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217810716 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980052044 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.975180628 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.781647904 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90520342 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.974987493 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02038106 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200486933 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992050912 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.487139721 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.673861271 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246734396 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026648065 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976897127 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24127446 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.481595575 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.516303083 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985657145 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181841302 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.920657546 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35704844 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.977278498 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420685948 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.362624656 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.977064647 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.528643614 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.306164904 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252285676 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908754471 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989671028 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190790341 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.914834007 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.017272371 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975344615 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427186339 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290953048 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.712475483 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533755987 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.978334295 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.980356554 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.461900008 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090761851 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438373232 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.078265913 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99370603 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.497575397 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.677947751 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.261748687 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219580598 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.533518331 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.675052354 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.979131951 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.976967612 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980252583 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894838031 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.16250313 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.162157502 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252419792 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009232409 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439264812 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096405753 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.359854071 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103519427 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.146512915 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099019563 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496984863 seconds)
  done (took 1712.135478519 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974703644 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.022518354 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.022999905 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.992521705 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.989789274 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.00471924 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.984381233 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.062382081 seconds)
  done (took 57.954972476 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.97706872 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.081370658 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.980372551 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.988355244 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.978103423 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.977879256 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.135534245 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.990598262 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.97890713 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.981423369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.975378071 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.974651317 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.278972861 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.996785758 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.976040504 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.975694632 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.979059385 seconds)
  done (took 76.136156373 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.976371674 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.303832469 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.025796008 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.975551737 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.431436053 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.983458849 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.123033587 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.02504604 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.035115674 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.196427268 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.268026973 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.019649825 seconds)
  done (took 91.264739906 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.988383583 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.978263561 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.979981701 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.977783454 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.97765223 seconds)
  done (took 11.813559591 seconds)
done (took 2233.267288235 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.208637772 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.035991572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.081056088 seconds)
  done (took 6.017873042 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.123175313 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.168872409 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.281958631 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.046449906 seconds)
  done (took 10.530619876 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.285209048 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.356826928 seconds)
  done (took 6.54456382 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.295636803 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.004384132 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.355462261 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.979868108 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.982462763 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.983487419 seconds)
  done (took 22.854015786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.979348055 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.980339638 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.978998712 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.979256983 seconds)
  done (took 9.821218001 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.977435247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.697409687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.982136927 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.994629963 seconds)
  done (took 21.554677121 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.127192936 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.10924085 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.121898333 seconds)
  done (took 8.263232442 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.167211003 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.201392096 seconds)
  done (took 7.273065616 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.126532204 seconds)
  done (took 4.031166281 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.006830474 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.249290206 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.464394182 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.00867824 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.600440578 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.230464174 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.314680704 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.208140237 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.421461374 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.46317289 seconds)
  done (took 26.871940162 seconds)
done (took 139.529399714 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.553079633 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.010423473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.18357805 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.342823025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.219946622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.188132165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.192985916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.330577295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.024308601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.010291776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.349501787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.21825703 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.1494424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.997934498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.150077251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.983764749 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.212446234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.369057751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.075883763 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.308099701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.208438478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.982609226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.182558743 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.000042016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.21461576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.134638023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.52697881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.988691621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.194459794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.540193713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.13927695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.454398455 seconds)
  done (took 172.347303236 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.9835562 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.984552067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.983243377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.982940894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.501735272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.984597452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.986312437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.982737063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.421340681 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.414984157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.983490274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.488974834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983614741 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.982578932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.98332526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.983428902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.584202745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.98319048 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.982788381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.982345263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.98447989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.332876231 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.982726469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.359103719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.587562655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.984188375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.98346143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.983734355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.982706745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.985277158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.984168636 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.983811082 seconds)
  done (took 213.208105832 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.984327603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.987175454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.984654119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.984497493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.986354881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.984698158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.983994083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.984331884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.582912047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.575110967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.986310014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.98680889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.988893808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.985773554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.988936389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.984879341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.985463002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.970391927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.986713075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985649498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986915033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.752984063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.986762323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.781424168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985119499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.986495275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.985696953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.988268135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.984653241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.986786224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98630874 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.985758201 seconds)
  done (took 224.195543614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.23282157 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.986241617 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.987613032 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.895788774 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.98687732 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.985914626 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.964397893 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.232476523 seconds)
  done (took 20.184530972 seconds)
done (took 631.84989688 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.369696094 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.212184032 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.144998415 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.011227321 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.274342143 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.055443523 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.006108429 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.074315531 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.841286356 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.084176716 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.649974054 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.033862986 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.748216372 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.037844159 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.113928985 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.066311813 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.598161246 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.702581164 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.138102563 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.087738898 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.168204659 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.960912733 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.089433112 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.882600762 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.682442988 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.012106204 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.038862253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.602971728 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.021748733 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.14428571 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.695254007 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303511787 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.022667264 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.006242419 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.060510672 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.039970446 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.233634354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.021463489 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.110953588 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.751563286 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.083178383 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.755359302 seconds)
  done (took 107.850727303 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.999266343 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.99570848 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.995262116 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.995817877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.002473018 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.994775641 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.995389655 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.996197362 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.995104613 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.995252255 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.996050852 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.003884325 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.995493082 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.004403508 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.995744145 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.994947557 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.99583756 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.005038915 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.99559857 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.995213314 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.99556339 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.994642795 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.990327391 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.995502112 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.995240587 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.995403427 seconds)
  done (took 53.844607588 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.990710158 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.160299744 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.23492547 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.011427773 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.990678419 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.994711631 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.00901716 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.99647913 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.994152721 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.993139799 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.095770989 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.999659225 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.010450681 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.234744082 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.009219146 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.991096277 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.99257269 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.992194104 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.169946683 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.008061276 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.013844389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.998338103 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.01103517 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.00779416 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.996626875 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.992376908 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.996054562 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.443987873 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.003094027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.097595066 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.058226054 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.020984321 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.374305372 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.244441103 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.051131349 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.007406364 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.993022905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.100952559 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.999392067 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.9961407 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.011889792 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.99963345 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.237075994 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.518931731 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.009150317 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.99440851 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.454027153 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.110986336 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.035347143 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008783673 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.238940891 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.010716955 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.993955414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.998014786 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.032785074 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.005402191 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.993640386 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.30889458 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.007861567 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.0116214 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.999841248 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.994486901 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.177089104 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.004246427 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.16190188 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.00450865 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.001929418 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.995888872 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.24186724 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.013312838 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.533232784 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.009037295 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.994576719 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.099409515 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.168617889 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.477325562 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.008931664 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.1755458 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.385875368 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.020341752 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.003740847 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.437696072 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.024659563 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.002712184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.997065168 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.99828747 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.997482761 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.039343272 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.0116581 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.440929063 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.53343911 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.32814847 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.022539486 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.012671981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.996973852 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.309367447 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.005654159 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.996783273 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.229984141 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.538532998 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.011055396 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.002103048 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.512312869 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.012808425 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.013224377 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.004578534 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.242845033 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.012156261 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.040385577 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.996328428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.004792889 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.999563097 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.014864918 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.002789374 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.996769679 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.505789678 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.12194001 seconds)
  done (took 247.07808609 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.998876671 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.997332605 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.997036622 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.996200721 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.995415471 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.996081764 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.995208818 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.995463447 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.997660666 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.995115696 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.994154354 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.997590766 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.000490719 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.999417367 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.004202468 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.998662677 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.59801853 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.998291483 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.001685396 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.998299207 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.63934343 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.001389834 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.996772408 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.998771965 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.997089607 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.999482346 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.000463513 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.003121469 seconds)
  done (took 171.11635366 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.998920854 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.109906436 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.0176388 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.027289603 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.005216395 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.999141151 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.095351187 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.017789634 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.002734398 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.997962803 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.001213438 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.057944331 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.012750957 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.098929689 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.032090133 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.106466202 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.105162682 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.006624237 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.001240577 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.00096855 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.02979933 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.008639633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.058448734 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.128744029 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.025002348 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.11215773 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.027743248 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.999662484 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.000398557 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113602807 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.02324701 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.061289497 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.033220783 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.019734091 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.115817811 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.117806944 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.106420497 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.105165266 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.006652991 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.001129239 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.002176329 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.003068696 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.112744968 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.024748665 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.001501693 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118848544 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.024151692 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.000215373 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.003034072 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.003622323 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.016394144 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.019309688 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.063688447 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.135464274 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.042921505 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.025195841 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.099327967 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.131802752 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.002966235 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.097727488 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.009536613 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.114731119 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.025699619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.004510236 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.003822613 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.006463018 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.033388529 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.106607578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.108190407 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.011508984 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.100994486 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.039333289 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.01111294 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.00301421 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.004484658 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.114245723 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.122636388 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.039331713 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.038733009 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.033893295 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.014344917 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.003790317 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.005762048 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.02012483 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.008817188 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115852564 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.124651159 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.012946032 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.00480371 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.004423647 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.003844869 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.028455559 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.124355829 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.042636507 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.11063162 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.073660021 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.082571046 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.022089082 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.01797123 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.010463746 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.065046472 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.022493869 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.015222473 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.307719884 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.064192883 seconds)
  done (took 216.884962705 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.382095593 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.053697111 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.059923123 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.315540399 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.397293383 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.092811119 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.050375762 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.051784526 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.07426963 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.238728874 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.121710741 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.069733564 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.03846346 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.025870227 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.051593435 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.072629074 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.06097407 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.404424439 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.260764274 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.237590039 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.043430849 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.353754441 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.382851484 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.638251231 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.100314948 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.459364899 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.657220297 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.185927288 seconds)
  done (took 65.815571548 seconds)
done (took 864.502409827 seconds)
SAVING RESULT...
DONE!
